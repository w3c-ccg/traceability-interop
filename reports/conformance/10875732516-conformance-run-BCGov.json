{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "51ffab41-5012-4623-bbec-2bff72964ab3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "21b39d76-5be2-4fab-aced-8bb0c61a8a86",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3c616a2-0474-42c5-91b0-dd19eea4ed80",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a8e660b6-0e17-4898-8478-b9749ddd02b6"
                }
              }
            ]
          },
          {
            "id": "79718f7f-f45e-4847-b3a1-27e757e4eb17",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64365eef-23a4-4231-8c8d-1669692dee99",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "98cc937c-ae6c-4a89-a345-27b8790bc96f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dd219220-bea8-4afc-881b-c66b1f2bcc72",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "115e63e6-f7d4-41ff-bfa4-db66ad7e7f63",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96f8ce00-0812-409c-85b9-9148d54c208d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a33c1f07-096d-4037-8244-f595dad60a77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5aee369b-7d5c-407f-bb7b-7b7e03f9c82a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "92660538-20ea-41b8-a976-8a4ed8062896",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cdf29459-06b8-4cf4-ae22-3098c3fe1e57"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cf44b871-5591-4bb6-bd39-1e8a4645c40b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54c96591-6282-4a73-9884-9ebee6449a79"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5160ce7-c4de-4818-8eea-360cc5288768",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fd28e85c-e6fb-4c41-814d-63396a442f48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7238103-2c16-43ac-94d8-98df9c4e6ba3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c12a347-104d-43d9-a2f7-64b2f6d4aa91"
            }
          }
        ]
      },
      {
        "id": "dbe9ce5d-272d-452d-9e05-a8379370ba77",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "85e5c87a-de8f-4ded-a168-44b16fa0e6b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0617d546-3a91-437b-953d-c222e7cc79c6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d4d1b4be-d4be-4baa-84ed-460f42578348",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3662c2-78da-4569-a27d-8094383dbc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7900412b-2086-4fde-8a48-c85dd20cd84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827c7ca3-171b-41a4-a994-44848a6b3c1c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cadb76-f880-48fb-812c-b38e0d43f483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7b8a57a-f245-45e9-ba8e-999d0d367c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4791f9f-cea5-4ab9-b5df-1878db7f8efe",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486f56d5-0825-4ca9-85ad-780d39d2ba5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2bd9a8c-efb7-4950-866f-3fac37e4888b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0a9c8c54-c630-437d-8374-a4d7af56e5bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca0af0ab-9edc-45a0-8ea2-81e284d3b3fc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c621500-42da-4e67-855f-74d9c088bfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1944fd8c-9ad4-4828-904c-1fb5f5d0cf32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55495571-2590-47ee-83bf-72ba77b3afff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8931ff8-7403-419b-b8f8-9692e7bd3bf5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6bc532e9-7b2a-49b2-b4f4-7378a5db3a25",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2dd73505-57f5-4ba2-8a59-e6281696113f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1666810-575e-40f3-8396-f4878810659a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c4ec7bdb-8d77-4da4-a426-5fafa0cdd350"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fed649c5-ca16-4805-86ce-9189376bf9e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d74630aa-8d25-46f7-b41c-9cde4cda49ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6edd769b-b297-4ed8-93a2-1876f7fd3c28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2440466c-c2de-465e-8e92-3956cf350b85"
            }
          }
        ]
      },
      {
        "id": "f11eb1ee-b411-40c0-9046-9ee2bbef9c84",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "85302c6f-b473-4164-9d4d-1b6b861ca78c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3eea163d-9cbe-4f55-bc7b-3e46a46f8d90",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e8227efd-aba5-4886-a9b7-436d65ec96d4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b226ac6-3bee-4ffb-9ac5-b9eadbd5f760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64565ad6-3204-40d8-aba7-4d999d6c1e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce026d51-0fd7-4a41-84bd-32519298d851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1565b48-86cc-42d6-bfb0-1c842d92291f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f0317d-49ae-40a3-b07a-dd7364de618d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973e0ff2-8bc7-4be2-8097-d98531c5ed0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9559455f-507b-4489-ba4e-62a0e610e39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629af1d8-3ee1-462f-9194-dfa7012ef19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "890daf82-0575-48d3-9387-3b31ef630071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584aeaf1-1eb7-49e1-be4e-9f55364946f8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743131ac-639b-44fc-8f77-5d865086ce14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1942c0bd-c3f7-477b-9ea6-06142b69a78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50d776c-dcae-4a14-81a0-26f9c817b77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d784dcd5-53bc-4314-ab4a-5ff51a66d393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de1c2a8-9f7e-4be7-98c6-cb7d9ec90280",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d164c7-85d2-4556-897e-d67e2133244d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ede8057-9f28-47ba-bed6-632824bfba7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062412bf-c8dc-46e9-babe-9b8af7fe124a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "050bcb30-e929-4c23-b0df-0f5239f63b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1caf8faf-f8d2-4fe2-9316-4f00fdb6516d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785ff342-3f57-4875-8f84-6592aa109250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9949814c-b2ba-4d38-a3fc-4cfe45602ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2869729b-272a-47c6-b41b-609a38c9da5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3d3f97a-f328-4e48-b343-c8891a0e9924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad20a15-5082-4191-811d-48d3d2baa2ac",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a02f36-88d4-4462-a935-6e8caee8da36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2985a6c5-bc42-4b85-82ba-ebf8e27d3273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6fe6c5-5f32-4a29-b83a-409012f4734e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f292ed3-a26b-48cf-8660-b4c9121c0b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf9e5f3-6eec-4a03-bc86-56e933bd7d9b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389f688d-81cf-4235-b3c9-b4719709a812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd782f7c-b3f3-405d-804f-e222606dbda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd4a65d-47a1-4f20-bd67-cdd0e98917df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4718d1e1-068c-4491-9804-3b7fa54a32df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b66425-d763-4384-a306-385145380e18",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dacd7ae-816e-4517-ac0b-9bbaebcd5f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcdb7b7-244d-4d64-9b96-26b2018db03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198c7d8b-bb06-4dd4-8c30-8e2b73e78bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cede0148-ba4a-4e0c-888f-d911d3aa3497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfd99aa-e2ff-4741-b0c4-f46165ba960d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321bbdb0-78fd-4cf8-8fdb-c8a1d6b516ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9271f0-1678-4821-9519-30580e130139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e60f7d0-560c-488b-9ce3-93313997a5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70290179-5eb2-4094-8fb5-623a3fc02a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c050a7aa-5e75-4ad8-8322-da70a319a37c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306bc86d-e1a4-45e2-972b-4b29ba6d0474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c09cce4-a71b-4590-b01f-df93d9976a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862f377d-e5d7-4588-ba4d-09a451289063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc7c86d9-9eb7-4b95-ae81-1a5becfbb183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed3f28a-f23b-4b5a-90d1-7e45aec3feae",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb167b2-ef39-4c63-be0c-af8de0fcf7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e84f88a-d1f3-43eb-b285-451a4c9d3595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f816aa-7153-49a4-826d-11b683b25fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46406b0d-d175-469b-be5a-1a54df961eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ca4669-0792-42ad-b7bc-8e5aa8700e72",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe270ace-1fcf-47bf-9ff8-48d149233b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a6661d-b4ec-4343-bb52-f02b45ca3070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c25429-d178-4771-8f37-38152ca35892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98dd4e43-0354-4bf5-910b-7ff0654b6276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c475ed6-1352-44f3-9e7c-12713f36128b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b98d7c4-d345-4be9-a472-1b66095682c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df930e1-0bc9-48cb-8171-a27e96a17da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6e4135-5b30-48bc-8125-f33c51ffb1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9acffb3-b213-4fb1-a455-ccb17b3788c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2d6437-3727-4992-a74a-838ada3df323",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfec7dc-ccc8-4787-995d-0477fa4d4867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63693a7-e28a-4c2b-aa69-7e8abfbd7036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37e99fc-f37c-4575-8d8e-ada0f76a5be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adf36a46-4abb-4e8f-b07f-65f3b814ae6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97aced32-e5f6-4c8f-adff-aa1fdea3fef0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e9abb7-0898-4bb6-8e2d-80660210f01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91e86fd-5d1d-44c5-b6cf-b977e3a1fa34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a33ec6f-188a-40c4-bf6a-3ed3b9d5c7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf62652b-62d1-47f2-9b0b-b0146129265d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d58b96f-2091-4c85-9975-b7c0e6d4c98a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c55eac-57b6-46c1-a9a9-c9d2ebd28f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf4852a-bc0a-4ee2-a126-d2e08ec5811d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713c480e-4474-4afa-b014-dedee1a064c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fa6acc2-22df-49fe-bee2-7566b96b658a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cd302b-c6b4-4b47-af26-1bfb5951b3ab",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f4cb2b-759b-4a5d-95d2-60ebbef0de89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7433fe63-2f9c-406c-96bc-1b1d3518db2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0565ad98-468a-403f-9b29-d3f149ba23ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53472147-3985-46ee-90f5-ab4bb919f28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d621d143-6678-4b64-8e11-4b4c2906e614",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16286f5-6858-4730-9864-5b95f0f5ab50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f44721-5efb-4195-bd3c-74210dd1cee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51e171c-e95c-4f30-9d21-53ab8b9bd9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "249e9909-6cd4-4264-93c2-5ad046fbc0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08623c8f-a6b1-4f4a-9991-6530b2a9cae6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5741f84a-94bc-4b86-93ed-4a7bb4862426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f56d1d-1623-4fad-88e8-d7d9b71bc706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ec9309-5108-4a0c-bf88-abc3e02ac200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "377aa3a7-19fa-46e8-8fd3-ae0b459229b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf4e3ff-295f-4152-a5c7-62545ee673e6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47db28c4-210a-45c1-9067-e5e67094e9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39ecdd0-6a45-437c-9368-2913dfc85ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7816f4-45ff-400b-af75-035e8cce2e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54358074-1366-47a0-ba4a-68c2226eb778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a9421f-d7dd-46f0-86a7-dd52e01e1868",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c15fbd0-d8e7-4ede-bc94-dd87866abd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7d954f-d865-46d9-9d10-c40a95d69407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136925da-5b37-49b1-a26c-9e22ae8cc1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d880cd2-4838-4aeb-a2ed-ae4f2515c252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8ec73e-909b-47e6-90b6-75c660bbe01f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c52c8d0-3c3b-492f-b050-f7ac9bbff4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a932d0-4942-43e6-8e4f-4c43deef55b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b257ae-9639-4655-b669-9556083a47ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cce03d8e-62ff-4f41-9fc6-c27d53fa02ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf64be6-7740-42d2-99e7-6cb6e6df92da",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60f338d-ce34-4acd-be1a-1dcdf5e9c521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029765a4-79be-4333-8751-6cdd2dd7712a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcea9cc1-261c-4342-9a62-382498b68922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb468bd-ccc5-4814-9274-da0a8deaed61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7d5f54-f9f8-46ce-a741-fefdcbe5a61e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83766410-539e-4558-a855-f17f608d42f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37275b7b-31ec-4188-8092-3da7edead8ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d10dd5-9e7d-48e5-a5d0-2973f72cd981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad54934-4689-4c37-921f-0540aa65cc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5e0386-cf05-47a7-ade8-0a00edcbe13e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea16d7e-9c06-41bb-adb1-19fff95e6cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9642484-436d-4c49-9066-7cc8429ab18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d05532b-a959-4c2d-ba2c-b1e424efeb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61ab916e-57e4-4c0f-9b24-d4b7cdcd3833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec1878b-ecbb-49c8-8f93-3b2be90236b8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d69f92c-96ed-4d34-afd3-6a3912714f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec202bc-1b0e-48fe-9327-2405f1a4efbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ca5f96-5bd6-416a-a0dc-1f511b6af277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2024eb-0bb7-4713-8066-8da433ba7216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f200504-156b-44cd-97ee-0389609e707b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e74769-cf4f-4b77-b73f-b8f6bd88bf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd6ba50-6fd5-4f7e-ba59-8dfc78b2e84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c7dffd-0946-4527-adff-7005e83cff6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7cc44f-8117-404c-aff8-279e0b34b2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef4bf2a-4d0c-4301-9fa8-870d9da33e8b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75110093-1c92-447c-94ed-72dc50979d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613f83b8-6851-4dcb-8a7e-2ff9ee977ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ef8f1a-bc7d-4899-b026-a555c74babb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a609e7da-2076-433e-b3fb-5c7018d031d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d57900f-0b3b-45c9-bf28-711dae98a403",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23981e0e-c9e1-482b-8628-6431e5d00375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf62b5d-9ff4-4e02-99a6-c3876fac4a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37418de4-8c0f-4b7f-b4a3-4887b5def4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8112ddb0-a73f-4288-a878-e6fb52c9e943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396e5587-dab9-401d-9cd7-5c56b63bc83c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79f43e2-83f4-440f-8e62-21c18da9f3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4058df76-8f68-4443-bead-eccdcc625b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e31537-73d3-4b5a-829a-467c3ec009ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "89093222-6cee-4ffc-9b4c-13f188ae79ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3913c889-b736-4666-9760-c2fae4043220",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16756e9-1d28-4b42-986e-1f7816571a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3d723d-ed8c-4b81-8afe-c7a50ce66ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787adf4f-26e0-4dd4-a9d0-4366df10998a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf561847-12b9-47f7-a59e-29714adcdd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2fd580-7469-4350-b70d-7957adca1b40",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcf2196-2c82-4e7a-a0bd-78ec9b9c08fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c42394f-a95e-4a7c-a0cf-ddb6d183ebb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffc1675-3cba-48e3-a244-f63c8f42faab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3178d3-e008-4841-b83e-c38ed7147d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94e2f4b-3800-4ec1-969e-7c0c866173c8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a0ff6d-4da2-4785-a1be-b8cc123c96e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b025ea-e670-49d0-8dbe-0bcf191d79e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0345ad-bc80-4609-a9c1-76772b8d53d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "892f3199-c04e-44e7-b3c5-dee8406f99cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcbbcfb-fdd6-452c-b8a1-443bf9a9078c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368b5207-4bad-4668-95db-0b26e7fc6b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753421d5-9f00-49b9-b0f5-916c0a920dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927b1f9b-36a8-48f1-b18c-a98e6c818783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7560b3-f3ad-4d2f-afc6-5aa6f536b357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955f7c87-e1ed-4a89-a8fe-ba793fcc3709",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf5e5e0-5cf3-41b1-8d5e-07f3d765bfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada2ec8f-fcb3-4404-9275-67025181664d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc21e22-e8a4-46ad-9ed9-068900812075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "604d5fd6-c665-47f1-bf40-7ed3ef8f9f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035cccc5-ef74-4a7b-b7f0-b0613eca0fd0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578d9ae6-2879-45fc-b494-ec507416265b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e2cdd05-fe15-4d08-b3ca-b55ac669bcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000a0710-4232-49e3-b06a-9c2cafebb093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74d503b2-c72f-4423-bfc7-b0170139ed61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192e207c-f4c4-4699-8b56-a91a6ebe38f7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5438343e-b0a0-484a-9045-f8b33170b2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf6ac9f-ab90-499f-aead-1e6d59874e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25eafe36-ca44-4884-bb04-304b869f0775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c482f3df-c5f9-405c-8108-37520d550039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bf548b-137a-44d4-9c77-03b03eb36a6a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1dca85-aee3-4c84-83e1-b6babe076742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a100a5-fc02-443f-88bd-54491368e5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4ab92f-44e2-4000-82c8-448d84e2299c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "baa9bd9f-5a03-4b9a-868e-4fa4e7185e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680b3424-aa12-4c63-b2fd-0eafeef52eb5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a55c64-06c8-40ef-8833-69bb27d034ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198002b7-544b-4d39-b1bf-9aedceacc778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130c2d03-d64c-4c09-ad70-d56ece042d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b86c1630-4268-4903-a0a3-782bed3b543e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c247c3-429a-4b42-b625-5ea960bf4520",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f2e550-feb2-47ff-bb96-9779a4e4a393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935f4a5c-8373-4d21-84a6-cd5734990e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d438371a-7fb5-4953-931d-0d68cfd8cf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "245c125b-2b52-4ef5-a994-8b71c7af56f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65d7a60-1a8c-4a29-bab0-b927dccdc3ea",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0194df3d-a297-4a10-b180-b3234e665a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32598448-de51-48c0-81bf-2afc5224c1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfa281f-85b4-469e-9631-2c96f0855ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a863e1-182c-4fd0-9f64-cba64b86f002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1643a64b-f2a0-455f-b067-a59e9dbd662c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf0cdad-db45-41d6-904b-c2b03216453a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae0c219-497d-4493-a875-17a876379671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e87af53-b50e-4d85-be5b-325dbe1c9d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3f81b4b9-0f11-4e86-97bd-0d49ca97acd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16978e30-2418-40d3-8707-f572efc6f0c1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da6fc16-9ecf-4252-847d-e6fc4480d3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79274cd3-69a2-4a56-a4bf-cd7c0864dcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03438d87-679c-4269-a0bc-a3bd9e63c817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b968aba3-6f34-431e-8c7a-80f636b9a72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e21805-e585-4054-be65-d371a3346fbe",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c215788c-6cac-4d60-bfb2-c46624b61eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfb6e2d-1fb8-4f05-a2c0-12779d8c4336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c8b8fc-a37f-4c07-bd28-fbfc0ce40fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "41849dc6-706d-4085-94e1-2f2e0703fc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696ae2a0-9a7f-410f-9fbf-e0929a244965",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f439aa8-f8b3-4676-96ea-d7297918b695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce2798a-6693-4859-937c-a5b300dbec05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53af67c-b1f0-47b0-bd3f-d211356a69a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a399ce-0be6-43d3-a44f-77241a848c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1467c96c-976c-424b-9b0f-636cbc1c90ea",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195dae6f-c126-4476-bc76-613814cd692a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee528e6-3b98-48f8-8520-d04404245ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9ac163-e23e-4020-97d9-168e9b12589e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "481a8fa0-b6c3-4554-8fee-cbb81fb2d00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d054cd0a-ffb4-4ac3-aa66-82a0a715e4c0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731d9adf-00d6-42e0-bebe-dd9f2f9c28c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88afaaec-a1a4-4448-bb85-b6c6568c8b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44ee972-72d8-4b9b-8b73-e239c6e89858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "458a7a0b-419b-4e2c-b44b-bff7804bb164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020335dd-0c13-4bea-8042-f5e15d1680e8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815e78e3-2f58-4643-8782-c2eec9cc3d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35853596-126d-4021-a92d-57f6e37cfd6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610eb205-73ce-434e-bc6b-e6e47aa9b6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "562b11f6-4a8e-41bb-9e5f-2437ba105f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bf1863-e977-450b-b3ef-6ae0918312a3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a492d59a-a6f4-437a-94a3-6ce65a1b22e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734e949c-bfa7-4c49-860b-16613be48ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af022d64-2883-48a5-a218-452d1360ce16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6257d0f-f9af-42eb-963b-5dc2f13b76cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5df994-5f98-4028-92de-e9f76f0d7646",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f854782e-fc29-4977-9acb-6d8682b0958e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd4d9f6-db28-4b9f-b72c-9a9899a081de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec7cbd9-0451-4c34-afc4-b9033e4cee8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58e5e919-29c7-4519-8784-0c86412fa80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f89985-f0a7-4998-8eb4-8594d4aebe39",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7a389b-b008-4f71-ad2c-91a6b5b67f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de092d8-e4da-44cf-95eb-400e61093feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c365b5e-2ffd-42c3-b568-f9bb1faf245a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "10f3a2cb-a805-4f7c-8ebc-f36dd16cbb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629332dc-221d-4eab-baf3-3459f1b3a96c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9ed60f-d364-4974-acce-b1ceab0a1d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f57377f-5486-4bf1-bd0f-6175a4cfd178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffc72cc-31df-4d95-bd4c-da2a815a8c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea0e6d5-9bbb-42b9-9df5-2625699be236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de7a2d0-3a8e-4f6b-bd7f-9bfb78dcea2d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20212af-fffb-48d3-899a-73d73829116d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147bd078-ad85-495c-9596-17479950fdc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0449c8db-7d2d-41a6-bcbf-aca8557cdc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecfd423d-108f-4dc9-b4f8-99171e33beb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6deee11-5211-459c-8d37-540d3ba0a239",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d542e83-2e22-4312-acd4-36c02f7e3232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb80a60d-b4ae-4ace-b957-b2823813c5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889c7ea8-a03d-4782-8ce4-ac7e5cbb9ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53f551de-c8b0-4278-a5c7-0325544f087d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e34ce8-f502-470d-af46-3b97e17ddf5c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cc4614-564d-40ef-bf9c-e16a6a077983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73cfa26-bd94-4d84-9789-b11731451ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefc7d8e-8b32-496a-bd1e-031179134c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b25dc31-7b46-4e1b-b53d-020c4e4a8e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7214b13a-f776-4b74-9f15-c2e3bb93aaac",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7667bba5-2a59-4cd2-99a5-3980baad1c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccaf1ad2-47f3-41f6-99d6-a761e17bb732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892dde11-f082-41cd-aa0b-21e9ec67314e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "69d9f1fc-3290-400e-8471-ad83bea0039c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0117c99d-83bd-4191-8a69-5529bb926ebf",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291ade77-9c8e-4949-bf86-7b4e50044ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61332a67-bfdd-4546-954c-76af003e7283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533b8729-c285-4d6b-a7d3-fea0f720859b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "885dd068-7ec6-4e1e-8cd6-7dfd896829d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3fd0eb-877d-436a-88cf-d1c9425fa546",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4283dc65-1f21-47b2-bffa-12845bbf30a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc18d40-5e9e-470f-a50e-3649c464c06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa24a3e-711e-44c3-a4e5-f165db2b4e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cd028d-d3ab-465b-8989-7bc61aff9e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e385d67-b12d-43fb-8844-2f844713d2a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c501538f-2b3d-43b4-96b2-70856be43a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a760e461-a5cd-4853-a444-7d15d524b314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c023e7-252e-464f-a146-08bbd0b3b909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd2edfd-864d-4adf-883a-36c867eab32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2da6e9d-7174-4f9b-a100-74658a5a599c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd633642-9054-4624-88c8-c9e30e08cf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5083ad3-566a-4ec5-8002-10838778e1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abcb0a2-c3e1-4543-b2b6-db10d2315c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9912577a-c4f3-4572-b14c-701bd444e8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428ef687-e85e-485a-9260-6b9bcc17d31f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6f5332-fdca-4b39-845d-5da6215add5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e536cf-9574-4395-8ffe-f42a6f16388a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397722d3-7fe8-478f-8f43-dc1bd9012140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f049a1f-9d82-472d-aac3-9f07b2262291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc3c197-46f0-481b-a7e1-36fd8e6f202f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22b78d2-310b-4609-b0fa-6bfdfca565ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fec7e75-71da-4a69-afe7-ee45b864fca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de89f12-c3ca-451d-9fda-17a365ca2917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3844be3d-5732-4917-be93-39fd764fb47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33585a94-08db-4147-8a00-306ee20fd953",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8423b9cb-753f-4dfd-90ae-ec33e0654d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02340ab-c785-4177-8df8-b25a2ff0762d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5df68a2-1e83-409d-8104-d48835d9af22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "91bcb0e5-0700-40d0-a750-ad0a05cb763a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223b3e96-f510-4ab3-a130-933a6ead272a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55fd93c-999e-4579-9aea-5011f9c3f4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010e8b9a-5f0e-4962-a47e-ffd82a1acb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203d117f-b5d5-439f-8e8f-8302e46e5ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "caba6f86-d728-4c5a-b42b-577ba8d2634d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624e68e9-3bf0-4c9a-bdf5-767fdadd6e64",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03befa62-77dc-4f7b-9e88-ac2ea136d357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458afc25-d663-4b95-8c3d-4fd3c90b386a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3897a99d-85e4-4fc8-8c2c-3f237db93ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c86c314a-5176-46b3-8e91-fa8e43f3a2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071b0b41-2346-4836-91aa-149111590856",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc410902-458b-4ce5-b884-358f6441f36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17ffefb-eaab-45bf-86f0-cb23cd4d8f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ad1af8-0479-46b3-a7d6-28720ee68b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93a872e5-8db8-40ea-8bfa-e85cc2fc3bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbc5691-7afc-4fa6-a7f1-93439f2032a2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2382023-4f8d-4249-83b7-642a016dd814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e24234b-0524-4d80-b9f8-f16246541a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbd732e-16a1-4519-8cb3-01ef27a5dc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de0ef197-c024-4c3a-b708-2b4c31921793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3aa331-a6ba-418b-8bfd-9e9cc4d932a3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686df127-198c-413a-b248-1310e443d872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0031c624-90e4-4712-af6b-bd20b47a879c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656b98c7-0e7a-494a-8ddf-d391e59d62ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d0fffd-c330-4ddf-8f13-c044f506c3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95edfd34-1f39-4b24-8926-aeba3d9e883b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af234f5-0063-4ee2-a621-9cad4d88e351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75c894c-4cba-42e3-8a7c-9b62ffbfa91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bd309f-d64d-4ba0-a7fa-6a46ead4ce17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43968c20-a4db-429e-9fff-499ec38db34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79e1114-fe66-4dba-97a3-7d55337798f8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5366fc9c-b657-4743-a3d8-6e78dca3c47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25fed17-5a0c-43df-b8a2-77bbf225cdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d7b980-a162-42fe-8e93-a85493033c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3984209-397e-4b35-a03d-7a06f2812e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e39926e-c4cd-455e-a190-8744bf0cfc3a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7513bc9a-087c-40f0-a803-9286d36b46b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8dc3135-2647-43f5-acd9-ba53fd0281d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630e91a9-e8e4-4b13-b934-c4b8a3d94fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d012705a-6724-44d9-a8d5-d13bb2fc9aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f0cf8b-4d5a-4c7b-bb14-db00e44e37ca",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd074292-fea0-4370-aa37-a50cd3ae83d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aeada02-69d3-44f7-96dd-b41ea2a2e711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1a9ca2-fecf-4d27-8ae2-be5a3c9397f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7562aa6-742d-4803-a98c-aad151b54652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bc1d3d-207f-478c-b469-69edf5e5d895",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1925f7b0-4cb7-4bcf-b595-9d48f3289ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4ea924-415b-47af-9f67-92f5004afc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2522867b-e5af-4e37-aa04-d93bdf65e5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "708deb3a-c4d9-45d5-90cf-0035644e59c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9238762f-d47d-4c58-8c2a-fcd1fa977e62",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdb1ee4-9a86-4eb8-9049-9836c4a57cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6854e3a6-36a8-40ff-976d-313f135654fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be6f12f-cee6-476c-8af0-cf401e3f34f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48485930-1682-450c-9a18-c3e61dc189e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4666da4-fcfb-48ca-a53f-681b45575bd5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b33ccfa-e138-4112-b6da-f42b7a8ce0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de49652b-d262-4662-baaf-225f2ec84dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08240a02-b4e3-4a3e-940c-fbab010521cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "beaed291-8823-42d4-96ff-30b439779494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8568a0bf-40e3-48f6-85f6-c82839a85482",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae6c4b9-2e1d-48a2-bffe-f3d3be6e5a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f48b26-b5c5-4e07-8d86-04b226eb3e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70be259-c25e-491e-819d-8e1ac2a318d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1e8664-1e63-4a37-a8b9-e5b4d9e2343b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8811784-8df0-4bc4-8c4c-121f1b5c3d57",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c78211-3ddb-4fef-8927-0f3060192bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80749e5a-2f34-4725-8cac-542fe36c506a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb7752c-f065-4cef-bf6d-e007755bf52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00d58ccf-8cea-4ba2-8728-9bc87a47bc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffc44d3-6842-4f59-918f-2b9262f74828",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583b5d78-b2ad-4c38-89e9-243f67e66cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beeb58ff-4732-49f2-bef4-39990a252613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2b019c-0f5b-42ed-a7e6-1701146df0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1e1d80-3f21-4cd9-b3d5-f6ff76d7b11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4517f9a2-f062-44fb-98e2-cb535e08e154",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456b1a23-fe28-4e1d-a8d0-4c232ec77c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a889e106-1ef6-4d38-b44c-00415f529576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed0f379-1032-4081-803c-ebfd58989bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4a2ad1-9a6f-4e37-978f-9b4daef08842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2464b984-c19e-4dd0-8e70-e28c889e70e0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40727e8-8678-4635-abe0-b208b450708f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850ac6f1-4485-4a2c-b149-deebeaf4db6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df17b6f1-aa09-4ce6-8401-a212183383a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e39b7493-43dc-4ecc-80d1-a21443cbf5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa2d619-4334-4229-8bde-2fedb0229b07",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e653d671-cfdf-40b2-a7ba-b3831b4f9f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2189489e-006d-499f-930a-9487dc67f33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b809800-550e-4f15-baa1-c26fa8e12933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d90b9a66-6553-4bed-8a79-03f680ccc2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf95abab-19fc-44c6-975d-afa26e7ae67f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915192f4-fc11-4e05-a029-60e81be75aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ce49e1-61b9-47df-a436-1679d81eaab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6184db1-0b28-4670-853e-965bcba4b454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a44bfa-f126-43cf-b827-684e680992d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe66a95-2bf4-4595-bdaf-16e776d4aec6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d203ad4-e744-4215-b878-e5677ced1c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0e362e-b528-4794-83c0-90212492ae5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77bb4a9-e846-4f92-aa68-abbf18cdcac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab1e918-1bd3-4550-bff7-2048177351f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c67844-bbae-41d4-ad32-bb908219cc3b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be826fda-43ad-4d77-8a36-a0c70c149ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81781630-fd4a-4466-8937-f12fc4740edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11926f06-25e0-4a1d-85bb-22df2c733ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff168b7-a4f6-4f75-863d-820aca4a8686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dc399d-47f8-4c32-8082-e2754af2e0d0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a620bd-8064-4ca6-ba9b-88b3f510b0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453b3429-5c11-4df2-ba25-6513cc648bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49bf3cc-6efa-450a-8cf6-169d67593f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a200c67d-298e-4c05-9eb7-8ca80fe4e831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2117f4a-29ef-44f1-81ec-a64319ce1b2c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30581a16-159d-4534-b257-44b99c86e935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ed0751-fd44-40aa-9aef-14619d56aa77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cebab8e-bc98-43dc-ad7a-4ac5aa7387c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7748cd2-bf33-4e2e-a01e-f74b1005b7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bdad66-d5b8-423f-b2fa-9105d1b2494b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6bcb76-36cb-42fc-9b74-f9929ff087a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6a8ffd-bfe9-44a1-b934-d76f38c0fa53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076f4fef-49b4-45d3-b90c-029ddf97ceff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9c62f9-23b6-4a3c-8baf-57ef08994b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eaed3e-d465-419b-80c0-420a1483a0b5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274c4af3-a777-4d1f-acf1-816bd3b0df0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727fb603-a64e-4b40-b25c-6dd60bba548f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e196b78-5b5d-4fe2-9406-8cd7bf629053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1708a1ad-0bc5-4d80-9483-095cd7441de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ec3bff-e7f7-458a-9a8b-e2aeb7739633",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d242f313-7857-46be-8988-62b284240d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745d5fa6-807d-43b0-83cb-bcb32c870b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de3a495-f880-4e1e-bb16-ee103a082d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a69db1c2-50e3-4ed9-9124-61aae7f53e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6084e61b-d22e-4072-b4b4-f66358e509a2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6260f4fe-b19d-402e-8b1b-aa7f5fa9fb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4484135-d992-4514-9625-e42fc5db800a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c9a45e-c097-4c8b-9065-74763cfadad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad66680-3a12-4d06-a65d-9997ea57f6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a6ec83-88bc-4e31-8867-ae1e45814e7b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b754f32-5037-40b5-8dec-e7b7e3d644c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a018339-d13b-4223-ae25-de7159fd1341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e909f8d-cd6d-446f-a79f-898e6a1f8837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "320de0bb-0430-4f93-8b98-3ce0a2b7da90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb48f66-f3ed-4334-b520-c2f6d4446fc3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713a2209-1727-4635-bdaf-a387f76cb698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c739dba2-a594-473d-ae95-4804971625ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b32be6-cbf6-46c7-b1e4-b1da200ae29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf948cda-ae0b-4ba2-ba93-df35f747fa24"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99bac18a-6be1-42cc-a78a-ac6614b59806",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8525e49c-6cfe-4edb-ae9c-e5cf248658ba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba97e70-2d53-4b63-a6ad-6baae4e3e962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc077eae-ac5d-4ed8-8bc4-420faa17a7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ed4393-cecf-47aa-a8d9-9fcb8809b0de",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32f84357-8a91-4a5f-9d8b-eb4e38d30c95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "763b157e-baba-43ca-823a-5246edbc16f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24bc5b7d-2d7d-42ad-a460-f6ea0bdbe68c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c06ff65b-ef68-476a-b7c1-659dd848a0b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea2f550c-5616-44ec-a562-4a643c70319a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "429d2b5c-844b-4d9c-b09b-cb07b0f2dcb6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62d90969-da6c-457e-aa2a-4d362aa4db06"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "179bda10-4098-4829-b43f-8ee4394dc23f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e605b506-fd4a-4c97-a18b-798e8be541b1"
                }
              }
            ]
          },
          {
            "id": "2e5111df-95e3-4f4c-91fb-d72a077ff14d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6c1705af-8dde-4f9d-849a-3c863299b0e7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bddad73d-fbb4-478d-a44e-1165f8fbea03",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2691c84c-22b4-4486-a41f-4a3a2cd02cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e154cb5b-1f0c-4961-8a43-1b1900e0b348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4d6ce0-1e6e-45c9-b652-9041f1ac9b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d36136-739f-4518-8a23-a62585b59a57"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51d73ccc-a7b7-46f1-8591-1f3d9d5a5752",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c8c66f5-e5be-4516-9235-3a666662883e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5944de2-3144-4b41-89e5-10662f2af799"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "652d91f3-15fc-4527-9625-0ffc9bbd3bd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a16588f2-a3d4-4bf5-9ca3-08651749c20c"
                    }
                  }
                ]
              },
              {
                "id": "23644866-c6f0-4793-a808-32d45a9405a9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "421b31aa-2cf9-4031-bb02-af9db4c7ebca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8da8c677-dd83-44b9-90e9-13049594b0ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "045ee772-e4e3-436a-a791-227f09407a28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4146fc7a-dd60-45b7-95d8-f8c6728465fa"
                    }
                  }
                ]
              },
              {
                "id": "27cfb12e-5f54-4f10-b88e-a758b4d20d5a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9fe8725-d82f-4fca-9409-8f263459a6e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "605bbcd0-f45b-48e5-aaab-79f1c1ea35c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6510b36c-e384-46f4-a2e6-d5ed34fbc37c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b2f7cc83-c52e-495d-8e2d-19c37afb26f5"
                    }
                  }
                ]
              },
              {
                "id": "ad53d7bf-6d3d-45d9-8884-eaea8eedb351",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9edca009-3ce8-497c-a182-1195a3df7009",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32303876-71f0-4eab-bde6-3e3719d5423f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90a323b8-6746-43af-aa26-f1fe66c3e1df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e2fe4350-4774-48bf-a027-896d8af5e63b"
                    }
                  }
                ]
              },
              {
                "id": "50217e5e-b14e-4825-9a16-31243694356f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91a7fba4-b5b5-468a-88a1-ff03ae6fc6b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df68e886-8588-4531-b1cc-3cbbf67e11e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9a7e5fd-680c-4ef4-83fa-9ba3bd87925c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f8ebb10d-c127-4f8b-8da4-4c3c4375812e"
                    }
                  }
                ]
              },
              {
                "id": "953b4476-2b7d-4011-9c50-f8de94c49e3b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c17abf83-c313-41da-9313-c65d0e03b950",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "815b0845-0efb-48b6-bf17-1f713afc4c08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "598540e2-321f-4016-8eb0-f2ecdb8b6a0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1dfe728a-fc95-49ee-a620-c1cdbf347ddc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f1a5273f-d862-4388-b44a-54f0eb69981d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8cd32241-f0c3-4412-8680-a950c5b22461"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bbbd486f-1227-4524-b5e7-732c39be1f7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "26142955-f211-4526-8038-7df516570c85"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fa15b00-a28a-4fd9-80a5-ffbafe2c1bd3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9f9349aa-26e2-4b5c-8c79-6401b76967c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59bf70f4-50f4-4070-bb76-ef8ea440ccea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17647e83-8c7c-4036-8712-c00f10dbe9e9"
            }
          }
        ]
      },
      {
        "id": "23b21e9e-0256-4e80-904b-213e28387476",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "50c60532-78a9-467f-946d-747c85eb8733",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6584f2b6-038d-4c7e-8233-8fb243580451",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "df0482c4-d392-4e33-9c9f-33f723f79edc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d8dbd4-de49-451e-b1d9-b01c8ecb6641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d4faf9-70fd-4ca3-8dbb-393b8c771acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d363adc6-b080-4167-ba4d-01daea1077c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d9e5be-e701-4a6e-9d5d-7b158c46608d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c987a7-ba13-4062-9807-46a697d07e94",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86caca89-526a-46be-b94d-a9d538f57993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68aa9607-ea02-41f4-8029-4851b6b90e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e23d796-d5c9-414b-bfc8-aa93f3d7c907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b89d85a-4efb-42d5-9a24-323a1477d11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be64a402-9724-4ebd-892f-b145df8f900f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de6f03b-109b-4130-988b-4b45082d6a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9a46b6-05fe-4d43-bf40-51bbdc53174a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6d82d8-7e06-4365-a7a2-633414eadc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81a8d8de-ff4e-463d-affd-e4fcd76f7286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4494fd85-11bc-44b5-9390-4e4cba80a6a0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9741cfb8-363f-4400-b791-043cd15efa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c257ff03-6755-49e4-aef5-45f209cde8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c46b30-4dd4-4835-a408-de34692004eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "787898f1-3984-4632-a15a-f88e3700bcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea23961f-4baf-48b2-bb21-689f3cbf8bb2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488ebf20-afb7-4e5e-af7c-7c11be3db7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7168cc2-670a-41c3-8bc8-490218f153f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e55a1f-1953-41f6-b27f-5afc51933938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af2a5028-69ae-4f8d-bd40-85866daf1ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fd98f3-4691-40cc-829c-d23fc3458c7f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d84db06-0bfd-4b46-b9c0-98a78659eebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e558d6-8f29-4e22-ba8f-542f9b0809c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a4b804-d695-4135-8168-4b363542e9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3feb0c-37e7-4315-9f46-739d039c3e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd37d17-0ca1-4c94-8975-df1b3ffd8fdf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3d38d8-549c-4239-928d-33def5cd5ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19899fd8-ba00-4d2f-8e8f-6d6469efd705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b61643f-2b29-422a-845b-dbf418e417fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aba176e-0b68-4bf1-b3df-afbad413b35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa29a8c-d78e-4c7e-80e9-d0765f34f200",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea63b7c-be63-4371-958d-0dfceee66295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8109f606-ff4e-4db7-88e5-b2a99e8db244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c673279b-46bb-4a83-9a9a-26894d52df3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3206fbb2-3a2f-4525-8561-ffc9a7c8fdd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f334ccf7-160f-4ce2-b6b8-adf48b39616d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9300c6-5abf-47db-b44e-282c60f77aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc06bd4-a0b9-409f-bf54-5bde1be2bb25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb468d57-f899-4d78-a981-9da83ba131b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "142690ea-1bb1-413e-be65-233c22007596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f8e9b8-c311-4ff9-8533-2b7865769828",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7967ce67-8f59-4478-9c09-8ef48631ef67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2079ee-5da5-43fc-b52b-32689e489b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77971e7b-2b86-4d06-b71b-2de1de3b6097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e11862b-1633-467e-9624-ac38bfa183ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a09206-34d9-4611-b5e3-5a4fdb32a7e1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb40908-9913-4279-8011-ccd6c69c2236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d01483b-6ced-4bc5-922d-d20b5393303a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d64d7c-4704-40b5-9fc2-2e09ea4ff2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dedffa54-378d-4c43-8ab4-877372bc7ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c3084f-5527-4186-9438-d72b3fcace45",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29077013-7d68-4437-868b-ca989d668bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5cd210-dd5b-4abd-832c-90565bacf0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a376d4-f804-4013-b033-f828f75e57aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f35b0b5-26d1-4865-a2f2-e53f71bbb471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5c40be-945c-4db8-bed3-47c46274d189",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d38cb59-4f67-4bac-9133-ba61798e28e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95d030f-d717-4611-bc04-0601ed962277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405e2ea0-a4fd-44ca-8484-762702f75102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19245735-ab17-4117-9585-731eb6a7a54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3375ab9-63c2-4769-87eb-df0c52fd1f27",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6969e4b4-82fc-4080-ac34-28af5079253a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de423e59-8a75-4987-92e4-67c2a043c379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25ea0ca-9db2-4141-bd98-c18fb8bb483e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "603acbe1-b42e-4788-843e-19b2cbfd515a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa20eca8-cbaf-436d-9b6a-ee33616df49b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc461920-7738-4a62-8124-6e344bee91ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac8d891-d831-44d6-9c17-9b8fe9a1c223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2053aa4-d729-4c77-a0d2-b7fe077345dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8859be4b-2b05-443c-9fba-3656613048ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae6b4e2-39dd-4e12-8c70-ba2efbf68475",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da6b082-9b64-43ea-9394-f35388d3fa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d6ec0b-07e4-4c21-9356-7e7a050ff397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0994a19b-9295-4bbc-a16e-a8648ae1745f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a20689ac-aa21-445a-a899-c93e6255e505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3374fef9-f251-42b1-bb26-0cd29841f445",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61076ba6-f7d0-42b2-b73c-3cda81e301b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59fb256-7eab-4796-a665-8c375e3d0af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c55016-5b62-439b-814c-62c989f6c01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4196809a-7881-4dc7-ac41-e7a5d09ff45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec5c68e-487f-4ec1-ad6d-110da4d8b688",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66473906-2565-4c9e-8441-eb876f7ea328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce1897a-4ee1-42ac-ba5d-77eda0b5ea21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc84978-ad2c-49a4-8bab-1306c9914a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3adc6796-bba0-457f-b9fd-e547d0cd4bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a5a3a0-0a63-4576-a47f-34de88e0b208",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20c6d39-2023-4431-8e1a-6f60b8668d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f67bba-2cb0-406f-8695-80b3f8b51eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868ab40c-0ee3-47b5-a5ea-99c6570c6543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89ff65b3-9536-4158-b50e-2bdd5dcb8e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2bd2b7-f414-4383-b7e1-421f7cef1e79",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bd05da-71d5-4ea5-8bc9-a9983b051111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbffcde6-8276-4a4f-8e2d-eefe2fba7e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decc429e-2421-40e6-9f05-21f7aafba81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da04951c-3b40-48e9-b53d-a5394a44fd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc4a5ca-e71d-450e-9519-0ad3d0149f7a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82a2839-2d05-4b58-82d9-9829471dff90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e4c815-53e6-4a1e-a624-a2fa08fbeeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd468d76-0791-4b99-93b5-f3d6b59bb5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4810082-fc47-4d14-9d96-a9cb112fa49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d8d591-9975-4a0f-8c2e-609a7f96909b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094e676d-be01-461f-96a2-48abe641cf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad02cc8-b134-4170-a5a6-d712c48c3706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268d95d7-2a6f-4783-a920-16919c9d29f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e95eaa50-e295-43c5-a478-338c61800d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e361ab33-39db-41c5-bc0b-7f5ebd209843",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a493c4-1818-4ce2-a516-9489c8f30776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265160d7-2b90-48c8-b442-71464ece0818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4755e7d5-9633-4edc-91d2-f615f07fc5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5771089-5cff-41f4-b6e8-db6359c51346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f270aa2-3610-483a-a9b6-4de28bbb9134",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83bd483-9294-4f3b-82c6-b59e920525df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528ee7f6-20f7-473b-ab3b-559e8f5a8271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bb5179-2923-47e9-904d-85fd74ce4f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fdded60-c46e-4a3f-a934-22087eee7055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00105f97-ceef-45ce-991e-cbad18588523",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a19ee06-a7c6-40c9-987f-6fc7c9f6b11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082e4519-cc8b-4bbc-9eba-67790e51f6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247e5c26-53cb-427f-a321-9e830d04aa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26961933-7d99-4d5a-8666-f3c48e8610cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d309b7-566d-4fa7-a6b6-0322090fb423",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa2cd80-10ad-450c-bddb-e3679591c339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ffba3f-34fc-4ecd-a2a6-553d5d9244c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f75ff8-b079-4e2b-9373-96634437313b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6b27cd-699c-4b7e-9b16-7de389111d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc00d723-7eae-48b4-a5df-4a6151dbb0b0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d253d1c-4811-4fff-8c13-dc70ce84047b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b317de5d-6374-46b1-949b-14a4e32f9b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de67932-d1cb-4773-b5b3-6023c61c46a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd391e19-dd8e-418f-91cc-92d53381f1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b03358a-3a57-4a5f-b324-80286d0af27e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a980896-e5d0-4766-8ccb-d74a177bc3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881b34d0-fd06-4a66-b3c0-9799e8be42d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71eaf369-bb9c-4086-ac9a-81295ea1d188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a50333c2-689f-470a-a68b-1aec0025ae28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9702eaed-89af-4c48-a6f4-0d8d214141de",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200d88b7-4cf9-478a-beb8-c40cb8bf3225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a046987e-5f70-4343-9051-c213cdbaf0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e5345d-8caf-461c-9b09-1b2388439856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa6b969-3536-4f00-98dc-6c58bd67a0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d8e6b5-db69-47aa-879e-4b0f95d24f33",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0a36bb-feca-458b-ae5f-e4b2923b02f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bddfa03-a3c1-412c-b2bd-e94f12a1a9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302c8513-95c5-4d9d-9a72-5226a572b3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb5d9e8-577d-4d43-a2c9-9f631b94001a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260903fb-a027-41e5-9119-7a37ac0244c8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eada9cff-1b01-4b05-836e-c6b1e6d1523a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d310edc1-5aeb-482a-b18c-39e8c503d0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2d4541-ce51-4eac-9d7e-4c05db66e0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78b19a9a-80e7-4c85-9716-403fcd482b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16f4b0f-8058-4e8c-8840-451831e10fe5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc4271e-ad1b-4506-93dd-42692f67e85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a520a70-f173-4a14-b271-8094211ffe9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f1b7b3-ada9-4bc0-ae52-4129172a46c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3d8fb8-a5de-4015-8ea0-1a3f1c04359d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b1d7ab-7f12-48b2-914f-3b7bf1f131e5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da96542-655e-4c8d-a0de-1cac7c5049a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54bf9dee-5da5-499a-9e27-f3a9acccae69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fded0f-0735-4b3b-9754-c230c9fb05ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "061d3cf2-78e5-4e7a-b3d3-0344b672b076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39319cb7-1dc3-47dd-856d-1f7a88f33424",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20713e4-abd3-425e-b6b0-9c09269c85cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c27c34-bf1c-4cf6-885a-688ae5739ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3234bd8c-8166-4576-b39b-192dadc36e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93cb0303-a68c-43da-a9f1-c4934aa009b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa77452b-4ad4-4881-8529-d35f20b7abb0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a65831-dff9-4afd-94a6-88fb9d0d90c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab17a30e-9830-4a1a-a6a5-dfaa8f894198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94b7ff6-668d-4212-b70d-c9b2b7fbffd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "679f6116-1dfd-456e-9289-ae2d5928ac66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36641e6d-4c02-41a4-afa4-8cd1e3540390",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0cb2e4-cc31-4cf7-b4e5-0829915f4c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec42255-ab33-445b-bff2-2d972019d8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbebbd62-189a-4ba5-addf-4b589b827557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fc2e0e-5f20-43e5-ba17-73d77dd3ddd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcec0592-bdc4-49c5-9368-46a33efaceba",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24687614-b5ec-4e32-a924-d0a8b08216c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d14f9b-74e7-46df-ac48-74ef0cc9f011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0be4ee4-8df0-4953-916b-0b6cc35e5219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8f27e4-f53a-4159-bebd-e8087188e20d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98d32174-9f88-4ea5-96f4-91c547f1e300",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f32a484f-68ed-4f9f-8f71-1d5e2d80dca0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814fb9dd-11f2-44b8-b6e0-7cd28fa7d756",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "37c85c7e-2128-471f-9c92-11e08df55d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626c8ffd-9012-4f09-b39e-fcb7d40423e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "550a8b8c-143b-423c-8d7d-a34b8b6154a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1ec94a4-2f13-4987-adeb-18e7dc231558",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5ccbf11-c919-4058-82d0-f3a1579800c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9f8c38d-dff2-45e5-b8d2-0c4a2e37e1c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "557559c3-9d7e-4664-b4e6-210bb963cab5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fd5cad6-ac2a-41b6-afab-66834a6896bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f9caeeb3-68bc-4e43-abdf-3c6835c35c5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e023954e-212e-42a3-b652-00b95a74b2a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20e2b4e4-b1dc-49b4-b131-6b13cf4dad5b"
            }
          }
        ]
      },
      {
        "id": "b3bcdaad-9124-465c-a171-a6beacfa53c5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9fb23a77-a0b6-4efc-ba4c-e9c3e5949b23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5f4362e-79c8-4e4a-94b9-9649ebe99a3f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a264c5b5-4c9e-4d5d-a4d6-27e94022dd56",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06de8591-1168-45bf-9333-c15cfeff3629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99b8d46-f2a5-406e-87de-3d8de06774f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4b5822-e7b5-4943-8cc2-8494acdf1af2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a6b773-dae8-48f9-a55e-073f963536a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0969bff-dcc5-4ba0-8c05-d4f180b225f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada1d619-877a-4e20-8d13-44cd789569f3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd67daa8-afed-489a-bd9c-f2dcea5135ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4263f4-281b-4eb8-8bef-ce348e7a6b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e797296-68a2-4620-bb0c-2d7a5739a1d3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d831d71c-ccb2-4659-a94d-c64905c84d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656fbceb-1cde-401e-8e5e-984785f59ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9611e9-188e-400c-85f2-69b71272d242",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3142543e-7aef-4339-8e53-b640dac730f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ca0ce9-0971-4a13-8f42-0b2b41f1843b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ef4ac6-fc9b-484f-9e6f-6b9dd73e4724",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daf045b-de85-4284-a5a8-3771f5142189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362b29ec-9754-41b4-b229-291b944aa40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de273f4c-4f45-4aad-9b72-256df4c84911",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2065805e-ca29-4030-af95-c715851d5df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df4be2a-fc9d-4d00-9fcc-0545a605796f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727bc827-4584-4bcd-99d8-02ff4321f6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a41563a-5706-4ae2-92f8-f039a8680fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ea2e0a-af74-45ae-86e9-03f097cae2e4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef709528-ef87-4af7-a1ba-d92904a9d12d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8864e49e-a4aa-4596-9ce3-c0c182b10575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3917baa2-4a52-479b-b781-49ade37d393e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867f41a1-7159-4f18-8e00-1b79fec63539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316c1fa9-a41e-4bb9-8f02-e78f5a46a76a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20054d19-682a-40e4-b05a-2f4bc5fbdf3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a0b0ce4-ec17-4696-b950-60bca13df46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17c4bdc-d823-48eb-8480-5ac885ca768f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9f5d8b-19bc-4a65-9988-0c0528f1a2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e40e8a-79d8-4939-877a-9c5b81d0c793",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8950787e-e2d8-4f7f-a7fb-2dea6f18cb58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "453bf9fd-d667-4b3e-8224-225e8fe01ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636adb92-198d-4e9b-b172-55ebe5730cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05e942d-bc05-408a-bbf2-55e1b0322dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38c94bc-d57a-48e1-bfc7-c09855ac0189",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eeef09-7f39-4c9d-8992-d3910b3e0de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9274aa2-e837-4a69-87a4-f88b1d62fbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da78f3c-05e4-4d91-9846-d9c088ebb5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102361df-1149-4eec-9b66-47686eee9a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ddad60-1db1-42f9-84c2-cd2a3bf3fd82",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39cf2e7-4bf9-4882-8227-9e61f885d4e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea24450-1fe7-4d1b-9e1f-fdbfac97751c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55d2472-bb62-4542-a330-eb9c365999e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b475231-d0db-486b-a237-b8d05b134edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e12aad6-7cd8-41a6-ac9b-866d4fcb3a44",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112795a9-f8b0-4d46-9845-f455ef1a383f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "455c466a-d0c3-49d0-8893-00d5c3b09b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e03fbb4-ad1c-4c2a-9d74-37f49854c268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ae147b-6060-403b-a7be-9fda836d7349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f932338e-60af-4e6c-9863-4a59df5bf35f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fb2131-2301-4b7d-9685-a63894334d50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0e75dca-cb7c-4adf-b47d-198b51cc83ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77aa495-f6e0-46f5-b693-de10d67f6710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50080419-94df-47f1-9f88-14e653a23eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff9d6af-0b62-4615-afb5-cb01a3e9de0a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d25daa-3baa-4fc4-8eb0-9750eee28243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f43ab2a4-be71-41c4-b4b4-dad451e0d8f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6cca2b-3135-4ee7-ae5c-ec004743601d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0976c6-54b2-450c-93cb-0a3ea20bc5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1df99be-c688-4089-86df-b46a13528929",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6a6773-591d-481d-a636-13e4ff196dd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec0606a7-0953-4b58-abba-2c5938a425b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5b9513-2492-4f90-b19f-5834458d6bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c5891c-82c3-4304-8258-157779a9a906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032210b9-2ec1-4fa1-ae80-6a47279dd80c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fc3247-40b0-4e55-8bac-873f421ea95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2154227-3cd5-4af6-abba-6f9cd38ff2b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06ad362-e67f-467e-aa6a-dff1123cff3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ceedcf9-eed2-43cc-9796-0f8bac923dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2d21f3-ea49-423c-9251-09835edb51b8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07903831-6e68-49c8-89e7-57d7b3ea189e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca11c819-37be-4712-967c-658399c63458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b73efb-0274-496d-a57a-912735689cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71b9708-097e-441b-a61d-65c66ebcab46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb5107f-3421-4c74-b379-9de2ff8a4dc1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916d9b9d-7ab4-47c2-826a-5d28b1f16bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e895b3-8173-4c31-9d9f-c98046af2573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75727285-0166-4f9e-ac30-a61485a882ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479db69e-06fb-41b3-aa2e-2819c7b8f9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2f84a1-ae4c-4917-917b-1f5cf5f5fd67",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c51d10-503f-4e22-8bf9-8055a66fde8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cba5a4a-ffaf-4e78-9f59-8c3010d4fbc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ec877d-fa15-4998-9ad7-45d17c3c5b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ce96e5-1ca7-4fbb-ba64-130157095f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e537bbf6-4423-445d-a608-17296fc4cc15",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc8b8c3-be39-4d99-b13e-22e26a476626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7f7044-f05b-46f9-a8e2-985e3d916005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068c43fa-cac8-4eab-ae66-341f600580c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125a2858-4005-4e7f-9cfb-f2185da81155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6b3b96-19b6-477f-8b44-11aafeb53d7a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fe9bfa-5b6d-4260-84be-1f124a86935d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8101277-6641-4a19-b0a9-7fec35b43060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde687a4-9b9b-4452-8451-11fb7b6af73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0e6eb6-9f3a-4f12-98c9-2aeeb0b03a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c50247-89de-46bc-b4e9-9c4f333e8424",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecedce6-744f-4c4b-93fb-cc35d79393ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29936edf-d7e6-4171-9104-d9de80cca3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a732a9-408e-4c0f-8905-bf2a4e1497be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42378c64-30a0-4f3b-aa3f-0cd0dc2a4f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e396553-292a-453f-813f-79b50c0d53e7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21de7ac7-a055-4b7f-b38b-47b8bb8657bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef631f9-cfa1-433e-8963-b142d0dd8c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8703808-9398-4bff-bdb9-6a0344ce64e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee286872-329a-4a15-9caa-0da90ccec17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdbdb72-ac71-4404-a470-c19987246023",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de79731b-f7b0-4ce2-9d66-d11f6a9b67a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ab6310b-248a-48ee-a890-7cb779b3b8d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf84bcf8-1c87-4664-9be6-7b03247bee7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47331c71-c34f-4c8a-8d6c-d1fa261a2d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d3897a-1e05-4aab-b476-da227ea9e487",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db78c2d-955f-49ab-b768-9ca775b65804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e1dfefc-e053-4195-84a3-5c98c2fa5f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6286ddb3-1429-4d89-bc13-13da919579c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc5fd29-729a-45e6-acc0-3e3c8b18ffa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4df5d3-9325-425a-98df-698955207dc2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a861fd4f-64d7-4d77-b784-c4f704915ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "385b93d7-48f8-4482-bfe3-153f05ae4eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccc74fd-6a86-4023-ba62-9b754fc88a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da23dc06-a40a-4fd5-a3a8-b32f50ba6bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128563c3-5058-472e-9866-d96f5be60518",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a196c60-985b-4b39-90bc-cc42dc248488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec53a55f-a895-4f7b-a3a5-4947a396324e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c43253-879a-440c-bbbf-88f8e3f765ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0156fa64-713a-4065-92d9-22532c246f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578da5c2-ce79-4298-91ae-4d9a9b9c233b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1f4626-f8fb-41d7-af30-c24524d8150b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a579e125-d641-454b-81b9-a76cad55f545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d973741f-85d7-4d62-927b-ace5f1708b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4304f59-5534-4826-b7ca-1f30b103f2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e20a97-0198-4bfe-afee-4a9385e97d94",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f6f1a2-8d1e-4eba-9b61-df2fd81bd35e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3cc2bb3-a4e8-4f3b-916c-09c7c47ecd1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4611420b-0a59-43b0-8504-f4dba38c409e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ceb76c-2a2f-4fd1-8feb-b948f2b9f5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd3dc4f-8463-4186-b0cc-53473f89aefa",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbfe2db-2663-46d2-9309-5c1334e7934e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aee666d1-9343-4738-9a2c-4ef85d94e802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a459b94f-8e3e-4b92-b884-642b2ef13962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c42348-c922-4c82-b626-408a8500ddd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e66b57-20a4-4ce4-bc5d-0b468f11eff3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8b976e-62d8-44c1-9d40-193135eb8e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c758840-1616-4b09-83fb-fe853a2191c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d812acbb-57f9-4974-9d04-3223621c13e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14f4e5c-72b9-4d82-8391-f8288033e43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78de3ee1-b173-4d51-8f1c-74b40213fee7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5afc96-96f6-4d35-9983-e4d5603eabc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5019a8f-7802-4963-b584-2afe59f9698e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bfaf65-4c57-498d-b632-4bd48a13a503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc16300-1918-4774-b242-9c6683fb113f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6628e668-f15e-4732-b72c-6df8c3e56531",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55966bfe-537f-4b9d-a3f3-7f4795642f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e46f561e-8006-41c7-b1e5-1eadb0f137d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30078df0-cda3-45fc-8bc1-b8b310e622f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a84d25-bbc7-4af7-8fc3-01818358139b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652d2c72-aa25-4f4b-bd71-7d4bac10fdd9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1f1f8e-6e35-4c17-ac4b-3f395ea50161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b0b4d1-62f0-4f74-835a-e1cd437996ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f32748-54fd-409c-b2dd-536ec5a1ab2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5e12ff-3b41-44d3-9d5a-5276288fa7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a1d2fe-2804-44d9-b804-feb966d000f4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c07be0d-44f6-41f7-b8f4-3a4a88be710e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1c0fb6-644d-42cb-9066-cdab84949e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ebc88d-31fc-4002-8886-0f88a4598c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31222ac-83e4-4906-86fa-b79836751927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6fd413-2259-4382-a98c-79f3cfb65e50",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee63d1e7-e9fd-47da-9d60-c8c08490239e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320d6a45-6d3a-4e34-9508-be90728a498e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b0d604-b476-4f57-ac9b-c29c326ea356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc8bcf5-18d9-4e9f-9d28-bb1658b752a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c602650b-e130-4ace-9cd7-ce9f8cf64caf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacd07f6-72f2-451d-a4d6-2550ed865de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ff2cf0-5a8d-4738-8cfa-e30add60ba73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79cdfe2-046d-4e67-978d-d3c0dbe9a0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef828d5c-953c-4c3d-b87d-5b750f6d550c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac71728a-d344-4c12-b159-bfd9b72ceafe",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531fce81-4ea8-4c3c-9c83-eb5159704787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a955837-9d60-411c-99a5-884b23b90ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995aff1c-3340-4325-847e-bf6a1b1c165e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32aed391-e9c1-44a9-a1fd-d182be5bf9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f8a06c-0799-4e7b-8c19-785390cebdbc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bd42bc-adb8-47ad-a2fd-a9da3d68e808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e187252-e409-48ad-96cd-606bd25909ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a38fd2-6dc4-40de-a2ee-31ab915d4e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e331a2-19c8-43ce-8def-b451101dbe27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b03c7cb-93f9-413a-8cdd-ebf2d46f91d9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bc52a1-d221-4f60-b2e2-6a83694c34ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4dff7d3-bdde-4593-9770-93a751a65730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f65f889-9dfe-4d0f-baa6-d22cfc3bfb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1a472a-8733-446f-ba56-fb98bf7f96b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6183b569-2ffa-490d-8de1-9a3b90f8708f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc50951-f0f6-4416-88a6-abb7f4c0bbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591aad74-0d5c-43f2-aca4-0603f0fc6ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d19f1ba-3515-4852-ae0a-68edb0dcd671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d81d8c-c44d-4e0b-bfc0-e5983ee28a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df41baf8-c2a5-4b86-8033-8c25654e69b0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323df7b5-e887-4d95-811e-53558330df06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66fce94-9f51-4c03-8789-c7116dfef3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2065cfb1-f7dd-43cb-8bff-0b46a95b3e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3075c4-ffc1-42e9-acab-251595da5b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6677933-4bc3-468f-b60d-ecf926f15678",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dbad9d-63b4-448b-9a01-9dcb42075133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a470161-dde5-4058-91f2-cf669fa3fd53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063942a3-ab9f-4d46-a115-b705c98487ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef5fcc6-ece2-45ff-9eb8-068186256601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f490bed3-53de-49cd-bb19-d990fbb47c47",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b737639-3241-4ece-b8a9-5fa21740dd46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3861fb79-0837-41f8-8188-743eddf299d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb1b927-6403-4227-90a5-ba887835e69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05cddaf-f535-4a9e-83af-e2ceff2c72ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5ea08d-5e8f-4f12-bb1c-50eee6fbabd4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ba067a-60b6-437a-831c-42a8c30ec653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df687ddf-bcbd-4479-8c9b-1f02e5a49fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af29661c-5640-4c26-ac18-e23f6452fe80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8703f2ea-9242-4626-9283-a8343c505d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1441635f-dd73-4c92-87be-880efb19126c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ea2500-a565-4fe2-acc6-b9b24cafbeb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238e09ac-60f3-4e4a-a657-75aba1afe571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca310f7c-c668-421e-a2d6-d46de074d319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e1ec4a-103f-4beb-bbb6-61c25d939ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b814fd-2bdc-4080-bcea-d27b5b3f8c0c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f94413-b9db-4969-9a09-3be8a3d3d57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617d0b48-43ff-4489-b6f4-9dcc536c7d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbe14d0-bf54-4e2a-9194-5c0cd70e9906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38e59ba-06ed-4a3f-b7f8-7da951f1dc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558b73ba-6f09-4d1b-9cb8-ba48ab668d3e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c710f8a6-c426-411d-b734-1c7c402f4613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13ee3c0-924d-4a5c-83e2-433b3c73a2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ca85d5-f7b4-4936-bcac-73886261f08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ce729a-fded-42d0-83fa-6a99b773448a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6c8b5c-ea6e-49ce-b1dd-9988ef4b0bf9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52427c62-7c84-436c-91c2-8d5d7ed0b20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892a370b-dfe3-414d-9dfa-cb5c3789f6f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e079b151-5a8b-465d-bc45-035ba1e4b5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d886f7e9-227d-4758-be1f-071b144a770f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9bfc98-a6ee-4f47-be47-248414bc2686",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9521bb36-7c64-4bec-8226-864e29db6588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3aa343-15ad-4a0e-aee5-275a2ec65abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bb6506-fb9b-4b85-ac5d-a742a8755dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d44c62-3092-4dfb-b1d7-4088a361dba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a4ce1a-bc12-465c-a546-1828109c00d4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9874ecbf-77c0-40c1-bc2d-7df1d271fd7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b441688a-cf5e-4c24-9390-4a729d3f87cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6939bb1d-508b-4b11-9e2c-32d837c9bae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d3df4f-4c2b-4f96-9a8e-1d369a70d2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83001559-51b5-4922-a303-ad11a77c0b24",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b32aad-aa49-4925-9eca-d75233ea3983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3721421-1c24-4071-9a4d-9bf660889c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b323b06-6af5-430c-a2e3-6a6b04c68dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76814e33-6c14-40d1-9d7a-4122a8a4ecd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b588246b-27d8-4c57-8152-00528de46ca7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66423b70-0077-4363-87e1-70fada4b8ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8e83b0-c08a-474f-a0a8-9ec71001489f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce27dd3c-6494-431e-8727-dc4f99873bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106aa0b1-8087-4ff0-b638-a7b5bd96d62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38248eab-e714-4be4-8cbb-721ae2d34e60",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47152c9d-7daf-48d7-9eb7-a662dd28bbec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cf2eb8-a50b-4852-aeee-ba3ca5d6452a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659d4d5f-f798-47d1-a72f-6ec7fe7e35cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9e9345-0930-43c5-896a-5cd82e632c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5b52d1-12ed-4e5b-b19f-ce290b387c5c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107d42c8-f14b-4ecc-b6af-79ca1889f5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac88cf48-1609-43a6-be2a-7ffbd621d3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912a478c-cb0c-404e-babc-a9390e8b668d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f3ac17-210f-4fbf-a009-31c8bde8a1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4daef24-05eb-4270-9e2d-7172d702b907",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc97a17-a461-426f-ac11-34c9c269bead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c7f1a0-f6de-44e7-9687-05dc6136cda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c6e7a6-f1e5-47f0-8ea2-4d07cdef3093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f4cd41-dbd3-4628-86d9-58afcd865268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cebe9b0-5807-4999-aea0-55462289bf99",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25283ecf-7388-41dc-90db-a40bd01305f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15ce5f5-7f0a-4d46-ad04-35d9c742269b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06463b9b-f7a8-4652-8095-3a140b5c9b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f602a4bd-1cff-49df-8857-baa83e68f2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fecfa1-2b38-4c3c-a227-3678fc2c7e24",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201d0e6d-2bb7-49cb-b3ad-4efbb6cc4650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2f1c03-4cf3-4a77-a709-782ebf33943d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c37732-66b1-4fb7-881d-1218e8f88375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34f8798-ed95-470f-82ab-8fa09a04ee6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597823e6-303b-4e8c-9367-24fc6ce7ca8e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730bab18-b512-4b99-9390-b59e823ce54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c18d60d-5bfc-4c74-bf08-06985b0869c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6babba03-6cae-44bb-9cfa-2948df7752ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0000ece0-7f89-4c88-98ff-46b354daa0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140513f5-ac46-4efd-a230-387597fd02b4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1478f1c4-734e-4f5d-be1e-3d51a75da420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0a910d-e758-4b64-957a-306d9538651f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476b8416-4274-448e-81c8-e431b8c50c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81e5975-1952-4e25-838a-a96d0119486b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc6f51c-e4ec-4705-b3c9-1403d49eb2a9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8925f734-65e1-4b91-973c-8297beb581f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b48adc-612f-4fa4-b8a8-1ddd6552d513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f29944-e532-493a-a5fd-bb72f200d409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b482c50e-b9ea-465d-837d-f12652f41620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4594486a-b8a6-4bc0-ae5d-141f25617340",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71dd47f2-57bc-4872-9088-8d973062a69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e959c5d1-903d-4736-81cb-d8cbc1489ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a4f1c0-ab66-4fa5-8af4-5729243aaab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e339e348-b548-4548-81a7-36d6bfa33b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382cec4f-5d51-4bb1-9779-5c184af2941a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2511cb60-537e-4402-a91d-1372239879bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ebcd919-2114-4630-9ed6-7b5731060c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab32552-8b8e-493a-9a73-62275ef2549f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b307c1-c8c3-44ad-a65f-2dafd33c0ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b32db8-37df-4760-9b05-e46e2df4c861",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23564c26-13fe-4164-a52c-89d18c4c43b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c1b5fa8-0622-4481-9756-0ed74b832a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61f10ca-eeef-4e87-9c03-2272f66b0a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7c7299-4f05-4b94-889f-31164e6440e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75a8500-61ca-4027-98e4-3ba8ac4948a0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdddb38-e3ab-400e-94ab-ae5489ef6b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e2d4de-41e8-44c3-ad6a-16d95b8c2666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be078a65-64c6-47b4-baa4-e8d27695584e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a45152-9576-4260-a65a-8d2ca26e7e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e7c51f-b260-4ee1-99d8-cfca04e42aa2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1d63a0-81b0-428a-b77d-086885394f60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1217b8d-071c-47f3-9276-8e44bd8c7ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021e0107-da13-43d0-9811-155cccf17336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5fb0d47-0107-4e55-865f-59017bcc33c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e23f5a-6112-4e02-a27f-40ce2a25dafb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08ddd13-9864-4844-9425-38755e736c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f47adab5-3f75-44e8-86fc-9dcdb5557387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b227ca-dc96-411d-9a93-a61b76052a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3b4158-d142-41c5-ae7f-582534bdea2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc34e5b-d705-4534-ad49-4afd75804f5b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2357e9-9b9d-4886-a9e6-d85d57d47e02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73844022-77bf-408d-9679-7ccf6420c4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc6ef17-758a-45cc-8b0d-9eda062ca4ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e3ee95-dccd-427f-ae0f-483406ef7644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7595348b-0fd7-48d0-a1f8-159f657f85a5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a51c05-1750-460b-adf8-bc66e2352ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a3e813b-c1d5-4692-98f9-ec514926b79f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5730d639-1d4e-451a-a77e-b5af09c7f852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2367404-9e68-4782-a7fb-eba883ceea87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c1b7dc-7655-4467-bdba-2143745e7dbc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f8ecd7-433b-4f0c-ac97-78185dddbc96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea3c8d47-a1b9-4cd0-b9cc-d704a7bfc88f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15445b3d-de39-4362-be8d-2e875e480da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625a7896-dfeb-45f9-be92-42fe82952dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312f037b-20d3-4118-9d10-58fcc6ca69ce",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462b96df-84ef-403a-a895-501bb48a3c56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "823f3f8c-e015-4575-adce-02baac3ec801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaea8db1-ece9-47d9-be05-a9c4215a2cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409d9aed-0917-4448-9875-35470f1419f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5c9d3c-db38-42c3-b48e-cddc44e19aab",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12be1246-ca88-4610-b660-df21c4805be4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5b8d3a-d9fb-49d7-85ac-9c7fe9f99e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c23375-7e0e-425e-be10-96ac06e74a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7509eb28-6f80-456b-9bf4-8a6c3506cf8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b3fa89-2da3-46b3-b3f4-33b617966f16",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b501afb8-d890-436a-8b39-0d3a34b96187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4679feca-a7a2-48d4-a356-ebd52bdc3a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c801df-ea86-4eeb-b18f-105f66061d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff7fa81-5bbe-462f-a3a4-d4c184734f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95eee97-eb7f-442d-81b4-84a2c5259a56",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb06b75-12ac-4656-bb8a-be1b7285fc6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed2caee7-cb86-4f83-8729-1536b9053294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d026a97-4afd-4dec-8103-483a5eee5a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef99cc6b-b8a1-4688-a582-885275f34a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97670669-9a24-4aaf-9f98-b326a9068cf3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15840f7c-7deb-4ed1-9fcd-ccaee828f1ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ecfa965-f982-4a80-b936-803eea56756a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548c094c-dd4f-4696-89e1-cbc17687dd40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05aa707f-5b62-4279-95ef-46aa79215405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1158fd-f8b9-4014-80d5-43a5fd6a3471",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a68fc5-3892-417b-8425-8d962f049aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b24b4c2-8a61-4b39-b625-4f7853fdcf80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b62e117-d049-4116-a99b-437f1e9169d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da39c5cd-e016-4ec6-88a7-fab29d001d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29e616e-840c-488c-bf70-d791c41cb8b5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d443b8c2-b463-44e0-be87-ddcd17f9f837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eca761c-0d31-4263-892e-e0672e125aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060b217c-c896-4701-b23e-5cee02864a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d39f54-0b07-43a0-a1f9-2284a0a41c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d83fc0-023b-43ab-b621-54a62d958e94",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48cfef9-ed1e-48bd-bfe5-6b696b6944a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39b263f3-ac18-462c-8eee-2a74c1a89716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb07b4e0-dbe4-4990-826d-d07c31bda2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb0b034-464c-4dae-a22c-1b5c53f28667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871a0049-2c1e-46be-b0b0-cc24773c25c7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd23e92-8a8b-48e7-addf-d4235f21abf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96bc005c-2fc0-400c-a57c-ab144083698b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909d4fe5-66bc-419d-9055-e3eaf0f475a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8295b67-4d80-4d1f-b5f5-d8dee3a2fc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f7e13c-05b4-459d-a6a9-f93a712765f2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a319ebc-42d5-4a88-bf82-1faf78af16ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e700a47-7764-467e-80d5-8c8321851739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0253d1e5-dce2-4d8e-a651-d92ade6245c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e20d14-08c3-425b-ba8c-0eba0cd5ab1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9fb949-4ae4-418f-968d-c1480fcbc653",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d27a3ff-b827-42e8-a55c-d177f0500810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f6cb28-4f35-4ec5-8d2c-f60909064a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0cd9c1-aed7-437b-a7c3-f0630c2700f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8c1460-07af-4605-904a-335639ac229e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1464a1a6-fce3-42be-934c-3d4d2e508e2a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84997c4d-7fd8-41bb-b5a5-ef2fbccb3e26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b42da9c5-e42c-4982-a2d3-94846840df82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f192bf-6af0-47ff-a68e-1e5d9f9b5e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206d8755-1c9b-4ab2-996a-39e58e4c4ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a05aff3-ae0e-40a2-b775-358f3821317e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35f8df7-4dac-47ed-a331-da1b3f64ba08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42cc4135-d4e8-41ad-8164-6dcde662baa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9692a57e-8aff-4cce-82de-5b00d91c2baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0367c7e5-23ca-4daa-a97e-2f6e103a1457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fdec98-f2a5-4b0a-87c6-8fb80b73cea2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb97dc28-5fc1-483a-a887-f72fbad46b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7273d38a-e71c-45ea-8594-9853ba9b0f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6debdb-f800-40c6-b6f6-ea0c0d008b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f875e8e1-f45c-4237-a353-bdb1864077e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9bc0bf-9303-4664-97bd-f2463a62deee",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e544b833-8241-4f8b-9b96-8bc62dd6819c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a4f3ec-cc2f-4ac2-8374-4cc7b84513cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b991bb7-ecd6-4862-a535-05eb754dfe1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e781a5-65e3-4cc8-8ce6-d4ccfa1b6fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d597313a-dd7e-4a60-8f8e-95046e1089f9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9ee83b-fdfe-421d-b7d9-e48abef9a07e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2779b63d-5fc7-4146-931a-227cbe9b716e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae02820a-373a-4e89-8b99-dcc7217539e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52a6ca8-21bf-4e77-8352-a4d61a8c8a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877cc8c3-9a66-41e8-b114-ada322bdcecb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d53d16-8122-4136-bf7a-bda343efce42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "587cd12e-0bed-4c64-b747-06e26efe4b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabe1472-eca9-4242-8817-f3a048feed6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd9038f-c8e1-4ec5-91ad-e2892403a2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7654556-d6aa-44de-a86c-9dbfdc0c5b97",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411e9b05-ffd7-4fc6-a3fa-0d6ae7334deb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d4cb8f-fb5e-4673-8627-b617978bcae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcffbcb2-58e5-4d83-bab8-ae5d73742f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacf74ee-59b6-4775-bf38-c6dcc140b78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4595fece-09b9-4570-8e8f-3b88991811e8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d90aee-414f-4295-af25-9e7b17e71989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c6afbe-33ba-4ef1-b737-4755595a0ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aeb4965-2752-4994-8010-ab2b09ac3ddd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbce469e-8d25-445b-8174-c40120eb6f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cf9b77-4dc2-44f9-bbcd-5026f01cc425",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43dd051-1139-46ec-94d0-204d23057491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aabf2590-040d-43ae-bcf8-c2bbc77ed75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212f4a59-d016-41e8-959d-3508ffd9b59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba58854-7271-4a51-b3c2-5b3328626e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6bb10c-0476-4cba-9c6e-c407ca0f5c0d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad05898d-22ff-476d-a9fc-fe816fa3d0dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f55fc121-7576-4c42-bffc-8bf101fcd16f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503a1b27-a089-4d70-b406-8e61921c6a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39956bb3-bba9-4ec7-90c7-a55710f4926a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a81584-ffb9-4f22-b7d9-f77247b053b3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13147cf-e4a3-4adc-b034-b9d5d5f31481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a1524c-fa99-486d-908e-015a2dafd140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b61a9d1-375e-41f1-bd22-eb5fbd4415b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eacd0689-74ca-4ced-b264-6ab73ec499d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc46c58-330f-4a0a-a18c-f77afc926118",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c116add9-aa29-4ae8-8a8c-8b698d405c57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485c2926-c25c-4771-ab00-9ce0700f277d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753a6158-bf29-44f8-b617-ca2851877df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3cbbc0-9842-42a7-9b61-21cf777a245c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bedf22-4dd0-457f-86dc-ca3622ab12c8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d93f90b-c384-444c-ae02-a5be02160987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f46af19-dae5-475b-9ee4-ca6a18226879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5425efbc-623c-438b-8e44-261114fd3774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f87f39-d221-44e5-ba48-952077225fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b41a93-75d2-4311-b049-297e5e54ccb4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94436a74-f085-4b96-8ad6-00d3a57b0c5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "307b117d-1f26-46c9-bf24-fe42cf3b3a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c10e654-9095-4b58-a5c1-34e3b3f1598b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c11b52c-47ac-4466-a912-b8dc62f50111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81de16d-8210-4f6a-ae70-3c99a5ff0245",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abb9b79-fad9-483f-911f-3e413a6c3bec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db0ac531-e95a-4bde-9473-24cca993ee1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca191947-6902-4300-848d-f319b7a85501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660f9a12-d3a9-470f-926a-11fc475c37bf"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3930a0e5-ec0f-42d4-9b57-8f1ae6d4b6b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9a796ed-a73d-48f7-af7f-7b6f4e948e78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91a91c06-9095-4910-9581-28b96f44f1b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7292bf83-7741-4bf9-a056-ee15019b6f9a"
                    }
                  }
                ]
              },
              {
                "id": "808045c7-7d76-4d44-ab9d-0d7ba0a9b3a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1d111eb-cbcb-40a5-b2f3-8c1582067484",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfa0fbb-ac91-4280-b914-90c4bf3d7448",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bfdb2006-b1ef-4787-ad6e-04692ae4ae8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c4294f-bfc5-4b26-8bdf-b45447ee7ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1afca64c-249e-4f11-bf58-85bf3722088c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b58be435-59d5-4fcd-aa2b-f13ccd0a781e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38840734-002b-469d-8402-4c162a8ad096"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed0554ce-2385-48e0-9673-6d86051401f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8508a787-7998-4820-9067-f6f0ca1263b1"
                    }
                  }
                ]
              },
              {
                "id": "a101191c-c581-417e-aac0-3620e9d5d950",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6e191fad-9999-4e1a-97a5-846d3ab8c219",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9273cc-b5fa-417f-9c54-a3b7f00a3e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "529522dd-2faf-43b9-a5d3-020b1374d6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619fd82c-275b-4cb9-98aa-618e66d46c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41f9958-1d5a-4ba0-80bf-726ed4d29edb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "445a2906-37a3-41d1-a085-18b8ea4bbfe6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9f06b65b-d69d-49c3-a0c2-ac8536b59921",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55316941-7fa8-459c-9b31-b24f8013225e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "46aa8761-7bb0-4c4a-8555-d3ee78c3a6b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95213d64-3453-4052-8452-277153ee06b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85d463f6-78bd-4b4e-ab02-d87aa8592513"
                    }
                  }
                ]
              },
              {
                "id": "923fb0e5-3ac1-4cc2-9dcf-28fe24e2b2da",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "407c2d37-10a5-463a-9088-7a35d1d58ea6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e04880fe-2359-451b-8046-4e228fb1982e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eae71a76-ee3b-414d-9721-6c91d28e8b83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41ff450b-5a60-42a4-b8b6-01870d9679fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed4e5064-3bfa-4396-b024-d95a46b7c671",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "996e0b60-1829-48f3-94be-1634be59bc61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddf14ae1-1e84-4e16-aeb5-ef63d5a8c60b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adcfef56-b70b-4880-8afb-0549896067d7"
            }
          }
        ]
      },
      {
        "id": "5e41cebc-6634-4ac3-9cc5-595eefe0b0b2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2b714472-8988-4ecc-ada3-ddb51688f967",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8e74bf0-63e8-457f-895f-c4cdc457e362",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90b28e0f-ce27-4352-b41e-7886da24b980",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a2e8eb-3302-4684-9dfc-22cc48048495",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c0f33730-d2d2-4486-9665-1630a1ec6e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be2efa8-576b-40ed-8d2d-c4fef9cf55cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d16a695-6d11-47c7-ae32-ee42a19c8f6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3885a0ca-c23f-4768-b3f2-efbefef7dd4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7d1d74b-bca6-4bb5-81cb-653a4ffa2b10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af9f3e5a-0563-4fcf-80a8-ff70205181a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd957c89-f7ac-41a9-8ace-e4738294023f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06f681d7-3008-4b3a-8583-a947c1b4bbaf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9723ad65-94e9-4070-b936-27b060a35587"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75d56f21-f0aa-4b47-8809-54fdc94da43a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c58aa67-6f3c-445d-a650-6ba64a14dcb0"
            }
          }
        ]
      },
      {
        "id": "a6bb87fb-d686-43fd-8e09-9f330da67b65",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "827ab620-a3b0-4c70-8540-c7e21c5c1392",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80ac4adb-6db5-4ecd-9161-45d906b17a82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "374522af-c4da-41e3-9ae9-992c6f7935ed",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fd1a1d-4f24-4a75-acd6-5ec5522d8d38",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44d194c1-765e-44a2-a36a-2f5f3c59de18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24d3f54-c463-4a74-8a8a-094443c0cdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f4788f8-f9b8-4365-8765-469d571416d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff3221af-2735-4582-a85f-5f8e3fc014f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "658ccfec-2f0c-4df6-8cf4-3fe7680beb02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7449a15e-b4f7-4934-8609-a88166c1c381",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3eb6d44-48d3-4eec-a45c-e7386aa711f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "159871d9-0258-4516-9916-d238533c3eab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74712978-a92f-47ab-bf75-3bc952423a7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6572265-40de-479f-88a9-2a9fdfc79776",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3f8e0be-9793-49db-aaa3-d8003f9ed27c"
            }
          }
        ]
      },
      {
        "id": "f33cf890-ece9-4e5a-ba68-41e88289e835",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c8efcbdd-3f69-468f-a895-9f77b8b5b0c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea1def35-5c79-4aa1-9277-16a567746f75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e45de781-70d4-49a9-9ae1-d8837312fb3f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b64dc5-f5f6-49fd-8960-899fe6b3f3ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4792021e-93a8-4f94-845a-9483bbac18f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42f2346-84b8-459d-8de0-52ccb826deaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb2a6024-ec71-416e-9353-8c1ecaee560b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d7e602c-22d3-4c7c-95ed-f37bfb80bacd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9fc582b-3036-48e1-9c68-bd028e2af423"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e824bef8-c9d4-4dd7-a322-42297259124b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07bcceb0-320e-46d0-ad21-7b4e40dffe38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7171eee5-1a04-4777-9133-50f8f8b3ea0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4f07a221-7f42-4cfe-9989-0e33bc0a5e69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f93856af-ded9-4264-b5e7-aef35b225e5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2734f062-5ed5-44f0-8cb9-909c9bf3bf09"
            }
          }
        ]
      },
      {
        "id": "9e39d357-72a2-43be-96f6-83f99fddb69b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "243a078a-de71-45ff-89e0-73e987c0bfe2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a4e093f-bef2-4c42-ad8f-745fb4f62a7f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d86ba427-5a79-4a0e-94e8-45bb229a045a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a947501b-cd7e-475b-a1c9-53c4c82f0ca6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8bf7657d-705e-4642-b5c6-bd56efc9442c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 527.0515873015869,
      "responseMin": 7,
      "responseMax": 19976,
      "responseSd": 2461.2060119081934,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726447591922,
      "completed": 1726447732792
    },
    "executions": [
      {
        "id": "21b39d76-5be2-4fab-aced-8bb0c61a8a86",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fd296625-7053-4cff-95ac-26ba6a310e07",
          "httpRequestId": "7842fe74-f5e1-4901-9716-5172a44b857a"
        },
        "item": {
          "id": "21b39d76-5be2-4fab-aced-8bb0c61a8a86",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ff33ecd3-c835-4881-94b5-3c3f879fa22c",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "79718f7f-f45e-4847-b3a1-27e757e4eb17",
        "cursor": {
          "ref": "bdbe1060-2114-4821-b056-fb5dcdf503dc",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9f069bcf-331e-43a1-887d-96c4777eb84e"
        },
        "item": {
          "id": "79718f7f-f45e-4847-b3a1-27e757e4eb17",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b311ba23-c0a2-4ef4-9311-be60a718f489",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "96f8ce00-0812-409c-85b9-9148d54c208d",
        "cursor": {
          "ref": "f9ba5b41-3dd2-4ac3-94be-ef457c2f7b7c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d0cdecfa-0477-4f84-8c45-abb00fc968ce"
        },
        "item": {
          "id": "96f8ce00-0812-409c-85b9-9148d54c208d",
          "name": "did_json"
        },
        "response": {
          "id": "78a218ac-715a-40b4-a636-5f9f3b52da0b",
          "status": "OK",
          "code": 200,
          "responseTime": 326,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d1b4be-d4be-4baa-84ed-460f42578348",
        "cursor": {
          "ref": "308119ac-d201-4a34-bd63-e7bbd517ffeb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85b2e694-59eb-40f6-bf42-2694e1773b39"
        },
        "item": {
          "id": "d4d1b4be-d4be-4baa-84ed-460f42578348",
          "name": "did:invalid"
        },
        "response": {
          "id": "5b76f566-1056-49cc-ae6d-6335c02bab8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2449,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d1b4be-d4be-4baa-84ed-460f42578348",
        "cursor": {
          "ref": "308119ac-d201-4a34-bd63-e7bbd517ffeb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85b2e694-59eb-40f6-bf42-2694e1773b39"
        },
        "item": {
          "id": "d4d1b4be-d4be-4baa-84ed-460f42578348",
          "name": "did:invalid"
        },
        "response": {
          "id": "5b76f566-1056-49cc-ae6d-6335c02bab8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2449,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827c7ca3-171b-41a4-a994-44848a6b3c1c",
        "cursor": {
          "ref": "b1b5b354-4731-4b3e-a11e-788bc5eebf0a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d047c141-709a-4015-9276-e2671ff2525a"
        },
        "item": {
          "id": "827c7ca3-171b-41a4-a994-44848a6b3c1c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d43ad71e-884e-46e9-9dd6-61c8befbca64",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2585,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4791f9f-cea5-4ab9-b5df-1878db7f8efe",
        "cursor": {
          "ref": "5d5b773e-dbbb-42c7-912e-b6b611ab4d61",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b38da036-35a7-4bd0-983c-cad82191a7f9"
        },
        "item": {
          "id": "d4791f9f-cea5-4ab9-b5df-1878db7f8efe",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5c635ba7-9733-44d1-8272-e42a13f1114f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1976,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0af0ab-9edc-45a0-8ea2-81e284d3b3fc",
        "cursor": {
          "ref": "f0e5d95a-7db6-4329-8d64-7938976bc395",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "88ecd46e-212f-41d1-afe7-623800ba7164"
        },
        "item": {
          "id": "ca0af0ab-9edc-45a0-8ea2-81e284d3b3fc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c25dd5ad-7c81-4891-9983-d2c351120c87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 231,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd73505-57f5-4ba2-8a59-e6281696113f",
        "cursor": {
          "ref": "85acf5fe-9c67-48fe-b45d-6f4e37f68090",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7d98a0d7-0006-4b3a-90f6-3bcce7787bdb"
        },
        "item": {
          "id": "2dd73505-57f5-4ba2-8a59-e6281696113f",
          "name": "identifiers"
        },
        "response": {
          "id": "2b0729cc-ee52-4590-9b9f-2d876af0c805",
          "status": "OK",
          "code": 200,
          "responseTime": 2540,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8227efd-aba5-4886-a9b7-436d65ec96d4",
        "cursor": {
          "ref": "8473d2c9-61e6-4d7d-82d4-57a417147dd4",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6c4c27f1-645f-47c7-8c07-d86c6520886c"
        },
        "item": {
          "id": "e8227efd-aba5-4886-a9b7-436d65ec96d4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "85c0f1e9-44b5-4969-9ba9-d06f9bb8f38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f0317d-49ae-40a3-b07a-dd7364de618d",
        "cursor": {
          "ref": "a6ef4e95-0920-496e-8172-c2c35da07b68",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e5116afd-6f71-4083-849d-93f65f1a14af"
        },
        "item": {
          "id": "06f0317d-49ae-40a3-b07a-dd7364de618d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2aac0e28-f341-4370-9c80-c7bc80af6a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584aeaf1-1eb7-49e1-be4e-9f55364946f8",
        "cursor": {
          "ref": "cbcfbe10-f184-40f0-b41f-73822269df62",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1fa897e1-7329-4af8-ba84-6619633481ce"
        },
        "item": {
          "id": "584aeaf1-1eb7-49e1-be4e-9f55364946f8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8ac36a4d-19e4-4ae6-80e0-8af524131920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de1c2a8-9f7e-4be7-98c6-cb7d9ec90280",
        "cursor": {
          "ref": "f432ec08-376b-44e4-b0d7-5cd888f33195",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ed675f16-d121-4167-a8c8-53a9a5d44a84"
        },
        "item": {
          "id": "9de1c2a8-9f7e-4be7-98c6-cb7d9ec90280",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bbb727cf-7fbd-4df9-816f-d536ce384f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1caf8faf-f8d2-4fe2-9316-4f00fdb6516d",
        "cursor": {
          "ref": "be5b0115-c6b7-4e71-bbb6-52b79c0c8b04",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "55d3ba6f-df50-403f-a501-c1979a433ae6"
        },
        "item": {
          "id": "1caf8faf-f8d2-4fe2-9316-4f00fdb6516d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f6a947fa-5632-445d-89e9-c92f0695e370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad20a15-5082-4191-811d-48d3d2baa2ac",
        "cursor": {
          "ref": "6cb4d592-40df-4aef-8a5f-5b82a5f77faf",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "19bdf8c1-f9d1-41ba-b579-b5795d7fd2ba"
        },
        "item": {
          "id": "3ad20a15-5082-4191-811d-48d3d2baa2ac",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ace88bc2-97ae-4915-9ba8-2b2031c575df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf9e5f3-6eec-4a03-bc86-56e933bd7d9b",
        "cursor": {
          "ref": "11fbd68b-2660-49d0-a999-a31087fc9ce7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8f123971-0925-4214-91c6-6e1ffc3ec659"
        },
        "item": {
          "id": "9bf9e5f3-6eec-4a03-bc86-56e933bd7d9b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2e22befa-6542-4d50-917b-73316ba4a544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b66425-d763-4384-a306-385145380e18",
        "cursor": {
          "ref": "ebdfdabf-0cc8-4932-9a1c-53d45f7ffdc1",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8550a7cc-6879-4563-8095-471c56b13dff"
        },
        "item": {
          "id": "b1b66425-d763-4384-a306-385145380e18",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9c42e056-7d2e-4903-9bf0-26cabf32ee03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfd99aa-e2ff-4741-b0c4-f46165ba960d",
        "cursor": {
          "ref": "733fe625-3129-4690-810d-72619a39ca2b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "824a3d85-0269-468f-bb29-f61e34731c21"
        },
        "item": {
          "id": "8dfd99aa-e2ff-4741-b0c4-f46165ba960d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "83fce5cb-1555-43f7-ae99-7b4d0b6d76d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c050a7aa-5e75-4ad8-8322-da70a319a37c",
        "cursor": {
          "ref": "e5e0203e-bf94-4be1-847c-35d61c2454b2",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ebbda631-2c67-4d52-944c-9e22e2689c94"
        },
        "item": {
          "id": "c050a7aa-5e75-4ad8-8322-da70a319a37c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3ed010e4-17ff-422c-a480-5b2c3c441fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed3f28a-f23b-4b5a-90d1-7e45aec3feae",
        "cursor": {
          "ref": "5b53ab23-22cf-4e24-85aa-ad408d3d9933",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9df6e3bd-08bf-44ec-a0dc-f8c82ed1978f"
        },
        "item": {
          "id": "9ed3f28a-f23b-4b5a-90d1-7e45aec3feae",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ebd3020a-9e23-4df1-af4a-3dfa3f2f8f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ca4669-0792-42ad-b7bc-8e5aa8700e72",
        "cursor": {
          "ref": "0dc17fd5-686b-45bc-bd25-9814978f6bb6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bb802486-9143-46f4-a21f-145e094052c0"
        },
        "item": {
          "id": "a1ca4669-0792-42ad-b7bc-8e5aa8700e72",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "efafac8d-3047-4cc3-b32c-7acf569fbcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c475ed6-1352-44f3-9e7c-12713f36128b",
        "cursor": {
          "ref": "a2055304-ee83-4c84-84b5-d33523b59313",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2417e561-6b51-4563-adaa-388596648417"
        },
        "item": {
          "id": "2c475ed6-1352-44f3-9e7c-12713f36128b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c4d8c4e9-1870-4e06-9f40-1c1056120335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2d6437-3727-4992-a74a-838ada3df323",
        "cursor": {
          "ref": "716895ae-2664-41a6-922e-4273fcc68107",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4f83bdde-7aeb-4d45-b577-3b77572c2bde"
        },
        "item": {
          "id": "be2d6437-3727-4992-a74a-838ada3df323",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "28c96c30-825c-4c5c-9591-7edde2d260f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97aced32-e5f6-4c8f-adff-aa1fdea3fef0",
        "cursor": {
          "ref": "81dc039a-0df8-416d-96ae-3fa24e1f92f3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "933059b6-0db0-4078-985a-fdaa2ea22e94"
        },
        "item": {
          "id": "97aced32-e5f6-4c8f-adff-aa1fdea3fef0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f57f6fa4-4765-4cab-a894-b9b6077477e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d58b96f-2091-4c85-9975-b7c0e6d4c98a",
        "cursor": {
          "ref": "ec09ffb9-26e2-461c-a6f6-e97159a68d27",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9d82ca06-5b42-4fb8-bd7f-bed9824e55bc"
        },
        "item": {
          "id": "7d58b96f-2091-4c85-9975-b7c0e6d4c98a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "202c3bf1-aa6c-41fe-8ca3-31126cdea959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cd302b-c6b4-4b47-af26-1bfb5951b3ab",
        "cursor": {
          "ref": "fdd4ff4d-b087-4c98-ba22-d601903547c2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3e6db6c7-3d71-4e3e-bbf7-c6b280b53f0f"
        },
        "item": {
          "id": "27cd302b-c6b4-4b47-af26-1bfb5951b3ab",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e4c6411f-69a7-4ac0-ad45-0cd59bb7cb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d621d143-6678-4b64-8e11-4b4c2906e614",
        "cursor": {
          "ref": "2c1d37dc-ca2d-4cfa-a070-fff5f454899f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "731f08f7-be48-4522-9ed0-251fcad06a51"
        },
        "item": {
          "id": "d621d143-6678-4b64-8e11-4b4c2906e614",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dc238fb4-bf4f-45a9-b637-802b1fb2a43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08623c8f-a6b1-4f4a-9991-6530b2a9cae6",
        "cursor": {
          "ref": "c0be7c0e-19f8-4e87-af16-5455a4c40d09",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a9641cb2-2811-4bde-8aab-5f3d3630f9e7"
        },
        "item": {
          "id": "08623c8f-a6b1-4f4a-9991-6530b2a9cae6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f2cb2377-cd22-4212-8892-51e466973cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf4e3ff-295f-4152-a5c7-62545ee673e6",
        "cursor": {
          "ref": "591220d7-7d1f-4e5b-aa44-7c362d6c0911",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6c379372-a8de-4a02-a7f7-33e37e9dabdb"
        },
        "item": {
          "id": "fcf4e3ff-295f-4152-a5c7-62545ee673e6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ad0318f8-a453-4009-92d3-e9ae126631ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a9421f-d7dd-46f0-86a7-dd52e01e1868",
        "cursor": {
          "ref": "90986b02-fe4e-4946-a17d-13d7c5947621",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "945ee8ac-bc23-42d9-a757-c05550ecef78"
        },
        "item": {
          "id": "23a9421f-d7dd-46f0-86a7-dd52e01e1868",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "49a1ac86-ee62-47b8-b7ce-b28b3c5b6f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8ec73e-909b-47e6-90b6-75c660bbe01f",
        "cursor": {
          "ref": "9ab6971e-9dd4-46de-a3fb-09235d6b2f2d",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2db05239-f2ed-42b5-974d-761a15f9e905"
        },
        "item": {
          "id": "4c8ec73e-909b-47e6-90b6-75c660bbe01f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "043a3440-ba7b-4776-a088-37e9c01da23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf64be6-7740-42d2-99e7-6cb6e6df92da",
        "cursor": {
          "ref": "b8df7c72-1ba2-4582-9e93-213daeeff2a6",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7f22a979-a74f-43f9-9363-44a1035b01ad"
        },
        "item": {
          "id": "8cf64be6-7740-42d2-99e7-6cb6e6df92da",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "06591e5e-54fd-4c1a-a00b-c6e3bc4532c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7d5f54-f9f8-46ce-a741-fefdcbe5a61e",
        "cursor": {
          "ref": "7c09e0c7-155c-4aa7-bc0c-dc0c54a773d5",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2b0a6079-3827-40f3-a03c-2d93fe2e3e4c"
        },
        "item": {
          "id": "ed7d5f54-f9f8-46ce-a741-fefdcbe5a61e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "64e25a43-2e2a-4ffb-b503-ccebe744f0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5e0386-cf05-47a7-ade8-0a00edcbe13e",
        "cursor": {
          "ref": "94a920ce-0f97-4966-be73-6cda779fc426",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "06fe6103-f149-4c64-a126-dbad88df5753"
        },
        "item": {
          "id": "2d5e0386-cf05-47a7-ade8-0a00edcbe13e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "37772a5f-004e-4635-a71f-cefb3403197c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec1878b-ecbb-49c8-8f93-3b2be90236b8",
        "cursor": {
          "ref": "856323af-db4c-4425-936e-1a694b1c92c8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9caac314-6f18-49f7-ad8b-02d2aa8227f7"
        },
        "item": {
          "id": "1ec1878b-ecbb-49c8-8f93-3b2be90236b8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "249fb3c6-28e7-4f4f-83b6-7638cb9cdb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f200504-156b-44cd-97ee-0389609e707b",
        "cursor": {
          "ref": "3022139b-42c7-4205-b20c-1b59ac811826",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cf47e01f-7b4b-4106-bcc4-42add9f802d4"
        },
        "item": {
          "id": "5f200504-156b-44cd-97ee-0389609e707b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f6b64390-f15d-49ba-829a-056efd92d46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef4bf2a-4d0c-4301-9fa8-870d9da33e8b",
        "cursor": {
          "ref": "3f43fbc2-cd9c-4824-ab8d-5f0e8df869e3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d4da6593-c9d7-4437-b5d0-e48fbe02a0fb"
        },
        "item": {
          "id": "4ef4bf2a-4d0c-4301-9fa8-870d9da33e8b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dc69b104-432a-4b9d-bab0-8c8b454f061f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d57900f-0b3b-45c9-bf28-711dae98a403",
        "cursor": {
          "ref": "fe32e2d5-2a89-4978-827b-fbd81296b455",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f9548c25-5797-4a7a-9cad-bddd19e68acf"
        },
        "item": {
          "id": "9d57900f-0b3b-45c9-bf28-711dae98a403",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b902e700-dd72-43d9-9ea4-9f7ceb2e8402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396e5587-dab9-401d-9cd7-5c56b63bc83c",
        "cursor": {
          "ref": "a5d325b1-47b0-4570-b038-d135f8cd3b55",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "eb4c036b-3b64-438f-8448-8515cef56089"
        },
        "item": {
          "id": "396e5587-dab9-401d-9cd7-5c56b63bc83c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e153ddb5-f7c4-4fa6-908e-bf7f31f3d6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3913c889-b736-4666-9760-c2fae4043220",
        "cursor": {
          "ref": "da18a7ac-8bac-4dfb-83e6-4f09b240b0d5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1d70346f-63e9-4a8e-b000-67fdc0f04cf8"
        },
        "item": {
          "id": "3913c889-b736-4666-9760-c2fae4043220",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ffb9fec5-4555-4820-9dc7-97bb79551951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2fd580-7469-4350-b70d-7957adca1b40",
        "cursor": {
          "ref": "20d04b27-614f-4030-af16-60e3fb1470ff",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ad61800a-7643-443c-9c4d-5936704cd043"
        },
        "item": {
          "id": "3f2fd580-7469-4350-b70d-7957adca1b40",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6bf19aeb-f8ec-4411-a9da-1e296127d08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94e2f4b-3800-4ec1-969e-7c0c866173c8",
        "cursor": {
          "ref": "20bbd4d9-a430-485c-905b-ccd8b6349acc",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bf4442bf-1337-4012-9080-53b09b3128b5"
        },
        "item": {
          "id": "d94e2f4b-3800-4ec1-969e-7c0c866173c8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "826f182b-55c7-49d9-bf3a-c08c378f39ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcbbcfb-fdd6-452c-b8a1-443bf9a9078c",
        "cursor": {
          "ref": "89f61981-68fe-4950-974a-e96acc9e75d9",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d7fbc68d-8094-412e-b7e6-3ab4e11fa418"
        },
        "item": {
          "id": "0bcbbcfb-fdd6-452c-b8a1-443bf9a9078c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2f28f319-7904-4d2e-a384-24f4241d1b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955f7c87-e1ed-4a89-a8fe-ba793fcc3709",
        "cursor": {
          "ref": "c92c2eda-e48c-4439-bbaf-8345a9d7ce01",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "005fbcf9-8563-4f2a-9bff-8227a954e01f"
        },
        "item": {
          "id": "955f7c87-e1ed-4a89-a8fe-ba793fcc3709",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "64dc3955-2717-4278-abdb-e94cfd199025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035cccc5-ef74-4a7b-b7f0-b0613eca0fd0",
        "cursor": {
          "ref": "fdd03021-9956-4a23-a1d8-efb0d925e487",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8801ff72-ec15-4242-99a6-732efe01f2d4"
        },
        "item": {
          "id": "035cccc5-ef74-4a7b-b7f0-b0613eca0fd0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "036ac755-5d18-4d5e-983c-4dcabc7672ec",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 66,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192e207c-f4c4-4699-8b56-a91a6ebe38f7",
        "cursor": {
          "ref": "acf8edac-5adc-40f6-b4d0-546beed8edfd",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b344f9a7-dfa6-4826-83d2-1cac81d74aeb"
        },
        "item": {
          "id": "192e207c-f4c4-4699-8b56-a91a6ebe38f7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3f5d1d1f-6979-4518-81b3-a0f089c03c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bf548b-137a-44d4-9c77-03b03eb36a6a",
        "cursor": {
          "ref": "997d5a19-82b1-4c87-ab5a-4c55381ad7f0",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "92f3cb56-dee1-4dad-8deb-c98427582388"
        },
        "item": {
          "id": "84bf548b-137a-44d4-9c77-03b03eb36a6a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "205c17b4-8c07-4ddc-8aaa-9dbc086dad91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680b3424-aa12-4c63-b2fd-0eafeef52eb5",
        "cursor": {
          "ref": "9117d20a-ff0e-4292-8ce0-d46f6cef70bc",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2e50a43d-f3c1-436e-b969-ecdd7c76edc2"
        },
        "item": {
          "id": "680b3424-aa12-4c63-b2fd-0eafeef52eb5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c7cd10ea-33a4-4312-b5bc-f63bcaeb4cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c247c3-429a-4b42-b625-5ea960bf4520",
        "cursor": {
          "ref": "45fa9259-825f-4079-b4da-7cce6ac5e540",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5c3736c1-ffc9-486a-b2bd-31c137a20e65"
        },
        "item": {
          "id": "81c247c3-429a-4b42-b625-5ea960bf4520",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0ccd4e1a-0de9-450a-95e5-eda3bfbd8f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65d7a60-1a8c-4a29-bab0-b927dccdc3ea",
        "cursor": {
          "ref": "76ec6f51-553f-45d5-a6ce-f7eb7bb29749",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b385d664-7229-4d2c-99b4-1ba2bbb08a3f"
        },
        "item": {
          "id": "f65d7a60-1a8c-4a29-bab0-b927dccdc3ea",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "907352ce-aae8-4332-bc80-4e28c13472a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1643a64b-f2a0-455f-b067-a59e9dbd662c",
        "cursor": {
          "ref": "5c3d2422-8418-4aa2-b2be-12f32af35f0b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "87652a0e-de19-4d31-8e95-85d4e6b4c314"
        },
        "item": {
          "id": "1643a64b-f2a0-455f-b067-a59e9dbd662c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "aa8e7110-4988-43b2-8656-8b1e5e8a070f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16978e30-2418-40d3-8707-f572efc6f0c1",
        "cursor": {
          "ref": "674479b4-cf0b-4840-834a-4b9fd13d2341",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "203d7f38-bc5f-41a4-99d0-820730991f03"
        },
        "item": {
          "id": "16978e30-2418-40d3-8707-f572efc6f0c1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "85f93aca-9078-4e3f-88e5-4bd9aa6b8501",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 64,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e21805-e585-4054-be65-d371a3346fbe",
        "cursor": {
          "ref": "9095b3c1-2646-4da3-a81b-2cec5816ffa0",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f9ea7069-92a6-4724-a88f-26529899cdf4"
        },
        "item": {
          "id": "e3e21805-e585-4054-be65-d371a3346fbe",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "00c33952-3b50-4144-a4c3-eb1642d75d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696ae2a0-9a7f-410f-9fbf-e0929a244965",
        "cursor": {
          "ref": "ae5e978d-e0ad-4bbe-ba18-ec6cb798f6d5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a36e9c9e-6f81-4bf2-b750-32b6395e7547"
        },
        "item": {
          "id": "696ae2a0-9a7f-410f-9fbf-e0929a244965",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "af5db378-e900-499c-a739-62684a614057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1467c96c-976c-424b-9b0f-636cbc1c90ea",
        "cursor": {
          "ref": "01d0a4aa-52b7-49f1-bdba-cc655aa1df67",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1b76501e-7d9b-4ea9-a4a4-4bb238a724f8"
        },
        "item": {
          "id": "1467c96c-976c-424b-9b0f-636cbc1c90ea",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "13520e87-3191-4e4a-9c93-835db5216090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d054cd0a-ffb4-4ac3-aa66-82a0a715e4c0",
        "cursor": {
          "ref": "aced67b7-f458-4b38-bf5e-acfb12623f2e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4a102473-da2c-4cc1-a234-24bdd7b839ff"
        },
        "item": {
          "id": "d054cd0a-ffb4-4ac3-aa66-82a0a715e4c0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "61585f57-7a51-4362-9350-ac069059dc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020335dd-0c13-4bea-8042-f5e15d1680e8",
        "cursor": {
          "ref": "28534fc7-f546-4184-a1c8-82be0668c0d4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1182b5e2-408b-425e-839a-52a368631f61"
        },
        "item": {
          "id": "020335dd-0c13-4bea-8042-f5e15d1680e8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7a35c570-de91-406d-b6dc-bd5897bfc17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bf1863-e977-450b-b3ef-6ae0918312a3",
        "cursor": {
          "ref": "5f0944df-c986-4b51-90db-38e39ff56878",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "496d5d33-7d52-441e-a14d-0a61d378e6ff"
        },
        "item": {
          "id": "05bf1863-e977-450b-b3ef-6ae0918312a3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "07241b27-1c29-442e-a4f9-8a52fcd2b39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5df994-5f98-4028-92de-e9f76f0d7646",
        "cursor": {
          "ref": "aac36d23-e5f9-45cc-be83-7f6f94c488e1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1c6f6f29-e525-4592-b3b6-3ea5e2e9d0c6"
        },
        "item": {
          "id": "8a5df994-5f98-4028-92de-e9f76f0d7646",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "922d76f5-3e93-4a08-a686-a3e91fd0eb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f89985-f0a7-4998-8eb4-8594d4aebe39",
        "cursor": {
          "ref": "c661daf9-762e-4370-b4a1-da3b50d9ef48",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4492bd5c-5d1f-415b-98e6-dae3021f0fed"
        },
        "item": {
          "id": "f8f89985-f0a7-4998-8eb4-8594d4aebe39",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "623b998c-22be-4100-a9b0-6bb63a57a455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629332dc-221d-4eab-baf3-3459f1b3a96c",
        "cursor": {
          "ref": "fce8cd57-a75b-4349-9ad7-8c1b48088bb6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e03a48d5-c080-465f-a3c2-d17a883fa108"
        },
        "item": {
          "id": "629332dc-221d-4eab-baf3-3459f1b3a96c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "67ef9176-c8d7-4f4b-9447-79ad99312365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de7a2d0-3a8e-4f6b-bd7f-9bfb78dcea2d",
        "cursor": {
          "ref": "77d8a373-6598-468f-9b02-f690d2f938e5",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "16aa6a7b-9244-49da-b436-035187b06ecb"
        },
        "item": {
          "id": "1de7a2d0-3a8e-4f6b-bd7f-9bfb78dcea2d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "404f895e-88dd-4ac3-8420-e3d57cbb1128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6deee11-5211-459c-8d37-540d3ba0a239",
        "cursor": {
          "ref": "01e4e864-c3b5-42ab-972c-90e067312e96",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "995352b0-9495-49d9-9479-7e21e42796e7"
        },
        "item": {
          "id": "c6deee11-5211-459c-8d37-540d3ba0a239",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d4c2163f-5aba-492a-ac1b-5e5bb8e57f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e34ce8-f502-470d-af46-3b97e17ddf5c",
        "cursor": {
          "ref": "fa50b922-200f-4120-81a5-1c7b35c09322",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c019156e-7ecf-435d-80a5-7fd319f11712"
        },
        "item": {
          "id": "90e34ce8-f502-470d-af46-3b97e17ddf5c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6cc171b1-6714-4f85-90ec-f135620fca7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7214b13a-f776-4b74-9f15-c2e3bb93aaac",
        "cursor": {
          "ref": "1f0e61a1-0cc6-43e6-ba43-c413def17338",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8eb441f8-d18a-4f26-a484-48d1cf591d39"
        },
        "item": {
          "id": "7214b13a-f776-4b74-9f15-c2e3bb93aaac",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "846009b2-9815-45c6-852b-fa5df1e1251d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0117c99d-83bd-4191-8a69-5529bb926ebf",
        "cursor": {
          "ref": "338cdd27-3464-42c7-bf62-eb7944d5965b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4bd2c952-425f-43e0-8719-6c0985b9aabc"
        },
        "item": {
          "id": "0117c99d-83bd-4191-8a69-5529bb926ebf",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8e9171db-c3a6-4add-99da-496443f543da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3fd0eb-877d-436a-88cf-d1c9425fa546",
        "cursor": {
          "ref": "172a870e-0d8a-47b8-98f8-aadb97d7a3be",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dd366b9b-f787-40e2-bb99-1e3dd99ff076"
        },
        "item": {
          "id": "9a3fd0eb-877d-436a-88cf-d1c9425fa546",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "eda28d6a-cbaa-45d7-837d-57447e06caa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e385d67-b12d-43fb-8844-2f844713d2a1",
        "cursor": {
          "ref": "abbdf6b8-68c5-4b28-b6b0-e00bab67912c",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "067958e5-23c4-4882-98f5-45c346621687"
        },
        "item": {
          "id": "2e385d67-b12d-43fb-8844-2f844713d2a1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1cf5155b-e259-405f-83b8-8903d8cba367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2da6e9d-7174-4f9b-a100-74658a5a599c",
        "cursor": {
          "ref": "fe6c9c5b-b819-4c40-af43-4860014fdab9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "36cb58ce-1c39-4fef-961e-faf83bc01f75"
        },
        "item": {
          "id": "d2da6e9d-7174-4f9b-a100-74658a5a599c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2b7500ed-feb2-4bc8-affd-f474bcf777f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428ef687-e85e-485a-9260-6b9bcc17d31f",
        "cursor": {
          "ref": "65f63c0e-bb9f-4751-a45b-d7c3d9f6d846",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6cc77c71-43aa-4382-9fd7-9b8ab3f85451"
        },
        "item": {
          "id": "428ef687-e85e-485a-9260-6b9bcc17d31f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cb69328d-a186-437a-8b60-6225860db633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc3c197-46f0-481b-a7e1-36fd8e6f202f",
        "cursor": {
          "ref": "9db55dbf-5a63-49f2-9518-1d19f94a0094",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0bc2b50a-8bb8-462d-be9f-e97240c9d567"
        },
        "item": {
          "id": "7bc3c197-46f0-481b-a7e1-36fd8e6f202f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "49e74561-41e7-470e-93a1-91cb7ebdc50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33585a94-08db-4147-8a00-306ee20fd953",
        "cursor": {
          "ref": "7d2454a0-8582-4dc3-a171-48dd64ecdd1d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "52e4a8ab-7a47-48e3-ad56-6a36615fdf4d"
        },
        "item": {
          "id": "33585a94-08db-4147-8a00-306ee20fd953",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "efb29f9c-ba5f-47ee-bae6-8c7d8bfdd14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223b3e96-f510-4ab3-a130-933a6ead272a",
        "cursor": {
          "ref": "7894c2cc-a2f6-4d39-874d-5d563813643d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8bd09c61-6b9c-4953-8725-060dab20cb5c"
        },
        "item": {
          "id": "223b3e96-f510-4ab3-a130-933a6ead272a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2b5b3adc-59a6-4b3b-9632-1268516041f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624e68e9-3bf0-4c9a-bdf5-767fdadd6e64",
        "cursor": {
          "ref": "9f855569-acae-4d99-a807-f810f511de30",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "85572518-6626-4ad1-a07d-9e33f14fa776"
        },
        "item": {
          "id": "624e68e9-3bf0-4c9a-bdf5-767fdadd6e64",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b471f252-77f2-4086-a175-d13204d01cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071b0b41-2346-4836-91aa-149111590856",
        "cursor": {
          "ref": "8e312fbf-e651-466a-aa68-415220b5f3f4",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "55aa841d-c17c-4f7f-824a-0751af6e485e"
        },
        "item": {
          "id": "071b0b41-2346-4836-91aa-149111590856",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b94043b5-1ccd-4a89-94c0-ef91a1f0f3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbc5691-7afc-4fa6-a7f1-93439f2032a2",
        "cursor": {
          "ref": "9cf77145-fc19-4923-909a-761906eaf5dd",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "69cf9256-da25-4628-88a0-78160724e92b"
        },
        "item": {
          "id": "9bbc5691-7afc-4fa6-a7f1-93439f2032a2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a9c7e941-03e7-451b-b7cc-2be6d82bb7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3aa331-a6ba-418b-8bfd-9e9cc4d932a3",
        "cursor": {
          "ref": "08df135f-a341-423a-af47-6dddbc06e645",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7765a9a6-e271-460b-a4e9-4fc6a400c0a2"
        },
        "item": {
          "id": "7f3aa331-a6ba-418b-8bfd-9e9cc4d932a3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b80910fb-4de7-4ad2-89e9-72e3060c016f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95edfd34-1f39-4b24-8926-aeba3d9e883b",
        "cursor": {
          "ref": "89e1386a-e893-4b97-8ddb-6d34c0c8d5df",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e386d488-78fe-4d10-af20-495c0a8cf4db"
        },
        "item": {
          "id": "95edfd34-1f39-4b24-8926-aeba3d9e883b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5af52007-29e5-4a40-b1d6-153281fd531a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79e1114-fe66-4dba-97a3-7d55337798f8",
        "cursor": {
          "ref": "e2cd5d4b-b59a-4227-8cfc-decf0136dbab",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5475a2f5-ae44-486d-81a8-632cd1d8c35b"
        },
        "item": {
          "id": "c79e1114-fe66-4dba-97a3-7d55337798f8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a9af5bfc-be0b-44a8-90ad-01b6952e73f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e39926e-c4cd-455e-a190-8744bf0cfc3a",
        "cursor": {
          "ref": "49a18a34-7892-4318-a804-8e5aaec43e30",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "acf880fe-c6ef-42cd-94f8-6629e35c9b8f"
        },
        "item": {
          "id": "2e39926e-c4cd-455e-a190-8744bf0cfc3a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "84925907-9391-4fad-ae7f-bf3e136b2df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f0cf8b-4d5a-4c7b-bb14-db00e44e37ca",
        "cursor": {
          "ref": "5ed9ae06-531d-4afb-a25b-17d5dd34340e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bdd88598-8fe2-4c63-9fb0-0e3f8de5d7ba"
        },
        "item": {
          "id": "23f0cf8b-4d5a-4c7b-bb14-db00e44e37ca",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e1a6397f-4ba7-48b9-beed-53258c140fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bc1d3d-207f-478c-b469-69edf5e5d895",
        "cursor": {
          "ref": "98a7dbf0-1480-422b-9f73-6c16f2572579",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ada1a9ea-7495-440c-a267-8991bca6dc5f"
        },
        "item": {
          "id": "d9bc1d3d-207f-478c-b469-69edf5e5d895",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f816aede-1829-4857-8222-54e153e46c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9238762f-d47d-4c58-8c2a-fcd1fa977e62",
        "cursor": {
          "ref": "7a153347-1a2f-4672-be76-c5443c97546a",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "04674855-fbf6-425d-9d46-c3d1ba83b8d9"
        },
        "item": {
          "id": "9238762f-d47d-4c58-8c2a-fcd1fa977e62",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f1b9fd23-0e6f-4bcd-8f0c-a6a2aa505508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4666da4-fcfb-48ca-a53f-681b45575bd5",
        "cursor": {
          "ref": "9c71f767-fabb-42d4-9a2f-02f270486327",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d8a67251-c929-4ac9-8c27-0f75bdac3df0"
        },
        "item": {
          "id": "d4666da4-fcfb-48ca-a53f-681b45575bd5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1d61f941-84d1-4dae-8674-fa98e91c3c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8568a0bf-40e3-48f6-85f6-c82839a85482",
        "cursor": {
          "ref": "af64b16d-98f8-47a7-bd8a-f9f13faff3ac",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fb9f0d46-8513-41c4-b2da-fa2ccaae07c7"
        },
        "item": {
          "id": "8568a0bf-40e3-48f6-85f6-c82839a85482",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "51e4ca66-27da-4c4d-91d4-0c2c27e9158c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8811784-8df0-4bc4-8c4c-121f1b5c3d57",
        "cursor": {
          "ref": "7696d7db-37d7-4039-b382-ead5677c2bb0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8493b5a7-df34-4f76-a366-ea3192e82e6d"
        },
        "item": {
          "id": "c8811784-8df0-4bc4-8c4c-121f1b5c3d57",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "394b6d9e-246d-475f-bcb6-d2974b018e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffc44d3-6842-4f59-918f-2b9262f74828",
        "cursor": {
          "ref": "af94a951-5c9f-48e9-9c1f-842d2bc6db5d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "493ead85-dfba-48e9-9ebe-ebf510d24701"
        },
        "item": {
          "id": "0ffc44d3-6842-4f59-918f-2b9262f74828",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "58bf589f-516e-4a29-9aca-639543dce65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4517f9a2-f062-44fb-98e2-cb535e08e154",
        "cursor": {
          "ref": "1aac9ca9-239e-4b99-b140-55e2390d1f97",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4fb613ad-3e03-4571-905a-0c0d9fa578cb"
        },
        "item": {
          "id": "4517f9a2-f062-44fb-98e2-cb535e08e154",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e7434e4e-12ab-4765-9bf3-ea0949f044e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2464b984-c19e-4dd0-8e70-e28c889e70e0",
        "cursor": {
          "ref": "0067f518-8dbc-42e0-89b5-8e5a92987558",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ba154c85-12fb-450f-8537-f3ad195d8b5c"
        },
        "item": {
          "id": "2464b984-c19e-4dd0-8e70-e28c889e70e0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b9fb04f3-7583-4a0a-a085-65f8ea12fca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa2d619-4334-4229-8bde-2fedb0229b07",
        "cursor": {
          "ref": "1d9017f2-f45f-43ed-a4dd-1a58aa388f90",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0a1d013d-bd7b-44f9-90fa-9cd430d9596e"
        },
        "item": {
          "id": "4fa2d619-4334-4229-8bde-2fedb0229b07",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "21ed702d-6bb1-4715-925b-5bd80b930564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf95abab-19fc-44c6-975d-afa26e7ae67f",
        "cursor": {
          "ref": "8b3a60aa-5ad5-4926-9571-5554ab2b7b7c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "955fefba-2db1-4eb0-9f73-30914d9031a3"
        },
        "item": {
          "id": "bf95abab-19fc-44c6-975d-afa26e7ae67f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4298a258-47d5-466d-a44b-326481450020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe66a95-2bf4-4595-bdaf-16e776d4aec6",
        "cursor": {
          "ref": "12f2bc17-c933-4ef5-b14d-470e9ecf1b41",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c1abd3bc-7325-4612-9ca8-886574dc6d80"
        },
        "item": {
          "id": "dbe66a95-2bf4-4595-bdaf-16e776d4aec6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d66e77f0-884a-4721-98b3-75d1eaf8f26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c67844-bbae-41d4-ad32-bb908219cc3b",
        "cursor": {
          "ref": "8587f0ee-bb11-47e5-bf30-150cde51da0e",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ab2259f9-20aa-4997-8958-00ad84b7c917"
        },
        "item": {
          "id": "50c67844-bbae-41d4-ad32-bb908219cc3b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4f0558a4-493a-4d40-911e-183f50eb4089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dc399d-47f8-4c32-8082-e2754af2e0d0",
        "cursor": {
          "ref": "8b6633de-9b0e-45ea-adff-75f4aeddeaad",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d5aade5e-994f-4130-8405-70a6d35252b8"
        },
        "item": {
          "id": "34dc399d-47f8-4c32-8082-e2754af2e0d0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5287bcca-9e14-478b-9274-b039f13966f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2117f4a-29ef-44f1-81ec-a64319ce1b2c",
        "cursor": {
          "ref": "5f05096f-269a-4049-8f5d-cc9a1cef0100",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e33c6d9b-b6ee-4a38-8c2b-ae8aae0bbac2"
        },
        "item": {
          "id": "b2117f4a-29ef-44f1-81ec-a64319ce1b2c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e652f32f-4a2d-4b89-8238-e030217cf766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bdad66-d5b8-423f-b2fa-9105d1b2494b",
        "cursor": {
          "ref": "a3a7a28b-311d-4bd6-889e-d29d4c7094d6",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "00bbcd00-afa4-4f81-8e23-5552ff6b1b62"
        },
        "item": {
          "id": "96bdad66-d5b8-423f-b2fa-9105d1b2494b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1c6b7af3-311b-40d6-af61-03f6b085055c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eaed3e-d465-419b-80c0-420a1483a0b5",
        "cursor": {
          "ref": "a27ba21b-2920-4ee5-8812-8620c87bf549",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "eb840b53-2762-4256-955e-4733ef98f3ae"
        },
        "item": {
          "id": "b4eaed3e-d465-419b-80c0-420a1483a0b5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "273d57e8-c189-4adc-b5ea-0f7db1c4e541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ec3bff-e7f7-458a-9a8b-e2aeb7739633",
        "cursor": {
          "ref": "46aa6dc0-bc13-4bc5-8e37-cdccc87573ce",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "dd84f37a-6ef7-4b83-bfbf-c259d3e3857b"
        },
        "item": {
          "id": "73ec3bff-e7f7-458a-9a8b-e2aeb7739633",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "41992526-949a-40ef-a4ef-d7d824eedd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6084e61b-d22e-4072-b4b4-f66358e509a2",
        "cursor": {
          "ref": "8e48458a-4959-4db5-b808-429b5b91f768",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "dff6d066-ba62-44b0-b777-0d5e8f35da5f"
        },
        "item": {
          "id": "6084e61b-d22e-4072-b4b4-f66358e509a2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "85a68808-7a57-4df7-897f-ee43f85ceb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a6ec83-88bc-4e31-8867-ae1e45814e7b",
        "cursor": {
          "ref": "51809b06-2438-4954-99ab-ae2142680cd0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d543a0be-ebc1-4e66-86a3-64937a65501e"
        },
        "item": {
          "id": "48a6ec83-88bc-4e31-8867-ae1e45814e7b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b5f6dbbe-fb4d-4c8e-b9fd-406668445226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb48f66-f3ed-4334-b520-c2f6d4446fc3",
        "cursor": {
          "ref": "295af31f-ab98-4394-8609-a51cc629ead2",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9a72a857-981d-474a-88a7-cd3ab703ac17"
        },
        "item": {
          "id": "7cb48f66-f3ed-4334-b520-c2f6d4446fc3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0db01148-b32b-421e-b707-94c323097f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8525e49c-6cfe-4edb-ae9c-e5cf248658ba",
        "cursor": {
          "ref": "4ccbd8c9-c460-4190-a9fc-fd3c40da8fd1",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2f7f0458-85ec-4808-834d-21ce982ee5e1"
        },
        "item": {
          "id": "8525e49c-6cfe-4edb-ae9c-e5cf248658ba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "585e5858-5f86-4e9c-97d9-97f0f6c2fc07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddad73d-fbb4-478d-a44e-1165f8fbea03",
        "cursor": {
          "ref": "baa84c97-d15c-4416-820b-e372d93ae7c5",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6c9e3c85-1251-457f-ac07-61542b82e874"
        },
        "item": {
          "id": "bddad73d-fbb4-478d-a44e-1165f8fbea03",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7aa0f46a-1220-4dad-8dcd-9b539df6809f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "51d73ccc-a7b7-46f1-8591-1f3d9d5a5752",
        "cursor": {
          "ref": "d578c58c-fa6f-464c-971e-15d585032695",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "54bbf582-b85e-4713-9cfd-ae3265173d22"
        },
        "item": {
          "id": "51d73ccc-a7b7-46f1-8591-1f3d9d5a5752",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e4cd10c6-d312-43f1-916a-c0818ff9fb87",
          "status": "Created",
          "code": 201,
          "responseTime": 19976,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "23644866-c6f0-4793-a808-32d45a9405a9",
        "cursor": {
          "ref": "74b94afb-d1f1-4bdd-ad54-106c9c395d5a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d88b82f8-a327-48df-88ac-9d54c98aa4b1"
        },
        "item": {
          "id": "23644866-c6f0-4793-a808-32d45a9405a9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2676449f-b6fb-4d85-b157-85bf85b76d8c",
          "status": "Created",
          "code": 201,
          "responseTime": 14737,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cfb12e-5f54-4f10-b88e-a758b4d20d5a",
        "cursor": {
          "ref": "28da83b6-b571-4fca-b5f1-c88148897544",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b4821248-7e3e-48fc-91e3-f3694f51ba91"
        },
        "item": {
          "id": "27cfb12e-5f54-4f10-b88e-a758b4d20d5a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3f9014b5-2ed8-45a7-8bf0-33b3be769cef",
          "status": "Created",
          "code": 201,
          "responseTime": 15095,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad53d7bf-6d3d-45d9-8884-eaea8eedb351",
        "cursor": {
          "ref": "af7bea7e-5db3-4af9-a6b9-1b346f6a1881",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c9c30d40-752e-4d46-808f-c535c3693dad"
        },
        "item": {
          "id": "ad53d7bf-6d3d-45d9-8884-eaea8eedb351",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a2aec0ce-4835-4b66-b3d7-c04ee7c80e2f",
          "status": "Created",
          "code": 201,
          "responseTime": 14076,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "50217e5e-b14e-4825-9a16-31243694356f",
        "cursor": {
          "ref": "0eb66f9b-3dff-4266-9534-a70874360983",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5f29e110-33c5-4a82-9bf6-ca1a04fb3cbe"
        },
        "item": {
          "id": "50217e5e-b14e-4825-9a16-31243694356f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "394d6849-9b7f-47a5-a528-ace042dfc259",
          "status": "Created",
          "code": 201,
          "responseTime": 15494,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-16T00:48:11Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-16T00:48:11Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "953b4476-2b7d-4011-9c50-f8de94c49e3b",
        "cursor": {
          "ref": "f3c0dfad-b471-418d-92d5-af0908fc8e83",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "67c9d4c6-7530-4bc6-9666-81c5b9209edd"
        },
        "item": {
          "id": "953b4476-2b7d-4011-9c50-f8de94c49e3b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "86a3e43c-df59-459f-8123-e90bf8ff70db",
          "status": "Created",
          "code": 201,
          "responseTime": 14662,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0482c4-d392-4e33-9c9f-33f723f79edc",
        "cursor": {
          "ref": "856c3d13-f9d8-4cff-b007-e02b607a906b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "44b824d1-26b9-4a23-80c0-e2a4c901a575"
        },
        "item": {
          "id": "df0482c4-d392-4e33-9c9f-33f723f79edc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f76667ca-22a3-4a51-a19e-0b19e6cf01be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c987a7-ba13-4062-9807-46a697d07e94",
        "cursor": {
          "ref": "ab57fc22-28b0-4e24-9f0a-0a5dcc28203a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9cb3ee3f-a41f-4907-a146-030dbf402c19"
        },
        "item": {
          "id": "53c987a7-ba13-4062-9807-46a697d07e94",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "aa567c4c-0001-4824-b5a2-59a6b3a3c96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be64a402-9724-4ebd-892f-b145df8f900f",
        "cursor": {
          "ref": "7857d67e-d95e-4a0a-8aca-45c7de9af9b6",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1af6c245-f947-4162-83fa-be2ba93cfa8f"
        },
        "item": {
          "id": "be64a402-9724-4ebd-892f-b145df8f900f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "965343a5-04c1-441e-a04f-0cf3089fd68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4494fd85-11bc-44b5-9390-4e4cba80a6a0",
        "cursor": {
          "ref": "e55d6467-4668-4a47-b162-afee8b4dda6b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7a190b98-d90e-4ba8-99d6-33ce87dec286"
        },
        "item": {
          "id": "4494fd85-11bc-44b5-9390-4e4cba80a6a0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1c48966e-2fab-4b62-8706-5786af422471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea23961f-4baf-48b2-bb21-689f3cbf8bb2",
        "cursor": {
          "ref": "58ae5f72-40c6-44ca-adfa-8e2eae80e50c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bb1f437d-d549-454c-9280-ed620e2e96ae"
        },
        "item": {
          "id": "ea23961f-4baf-48b2-bb21-689f3cbf8bb2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "66f1a73b-ec2e-4cff-af93-366ad2efb99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fd98f3-4691-40cc-829c-d23fc3458c7f",
        "cursor": {
          "ref": "3995d83b-21cf-47e7-89e6-2a189bc20b82",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a5d1265d-17ae-4ac7-a4d0-ae40a453710d"
        },
        "item": {
          "id": "38fd98f3-4691-40cc-829c-d23fc3458c7f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5f29903d-e803-41a5-9867-f13a5dfcd103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd37d17-0ca1-4c94-8975-df1b3ffd8fdf",
        "cursor": {
          "ref": "c2449554-875e-4bbe-b025-2578e3058e36",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d12819f4-8d63-41ee-951b-2387f8bfaece"
        },
        "item": {
          "id": "0dd37d17-0ca1-4c94-8975-df1b3ffd8fdf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "df652d0d-da6d-4b98-82a9-0deabd1d2618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa29a8c-d78e-4c7e-80e9-d0765f34f200",
        "cursor": {
          "ref": "8ab09ba3-e9df-4d32-87b6-0031c78f2ec0",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d23ca31a-cccc-421d-86f0-dda9c5f46d22"
        },
        "item": {
          "id": "4aa29a8c-d78e-4c7e-80e9-d0765f34f200",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0c701101-8a18-4463-92d3-a5f3be311713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f334ccf7-160f-4ce2-b6b8-adf48b39616d",
        "cursor": {
          "ref": "55205e25-b1c6-4e4f-bf50-c25c1aa332f8",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "58695178-521a-4d30-8926-11e9d12fb620"
        },
        "item": {
          "id": "f334ccf7-160f-4ce2-b6b8-adf48b39616d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ce016665-87c5-4e86-96f2-6f7528bdbb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f8e9b8-c311-4ff9-8533-2b7865769828",
        "cursor": {
          "ref": "6d9d332f-e2c4-4f57-a5fa-007605c5fb70",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d09d8fe1-f70d-4931-aef5-17279e1e37af"
        },
        "item": {
          "id": "93f8e9b8-c311-4ff9-8533-2b7865769828",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6bda3fe6-e142-4e8d-96d2-ee7f2de22ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a09206-34d9-4611-b5e3-5a4fdb32a7e1",
        "cursor": {
          "ref": "cfce9c31-adce-4823-a368-0258d4d62350",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b66f84e8-47b8-4bd1-953f-a74701051ff8"
        },
        "item": {
          "id": "81a09206-34d9-4611-b5e3-5a4fdb32a7e1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e2284b87-3cd1-4fe2-a476-0b55ea562c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c3084f-5527-4186-9438-d72b3fcace45",
        "cursor": {
          "ref": "2c19e968-fd3f-4e19-8bd2-35d166ca4a25",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b147f5ef-cfb6-40ca-8df0-717d73e46b53"
        },
        "item": {
          "id": "f7c3084f-5527-4186-9438-d72b3fcace45",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "24c9c40c-f061-4307-af2c-d152a744d662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5c40be-945c-4db8-bed3-47c46274d189",
        "cursor": {
          "ref": "8cc18c4b-ba01-43d6-acf9-bb1aaa32452e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c8915092-8624-4513-a315-0fc2bd8ee1d3"
        },
        "item": {
          "id": "6e5c40be-945c-4db8-bed3-47c46274d189",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f0a0c75a-4b24-4ab5-a92d-717e0bc198cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3375ab9-63c2-4769-87eb-df0c52fd1f27",
        "cursor": {
          "ref": "acf8fedb-cea6-4f2b-86bb-12b411254cb3",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cb2cc901-f105-44e9-a37b-7f6928b6f808"
        },
        "item": {
          "id": "a3375ab9-63c2-4769-87eb-df0c52fd1f27",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7a26cef9-cd7d-4146-8f52-13cb1779a7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa20eca8-cbaf-436d-9b6a-ee33616df49b",
        "cursor": {
          "ref": "c870a12b-57b5-4a05-b93f-49b6ddc3af59",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5a39fea9-fdc1-41d5-beaf-976653aae87a"
        },
        "item": {
          "id": "fa20eca8-cbaf-436d-9b6a-ee33616df49b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "97beb2b5-228f-4a82-8860-19807f289424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae6b4e2-39dd-4e12-8c70-ba2efbf68475",
        "cursor": {
          "ref": "2f291d50-b0b0-4d58-a3ef-f313fda35bdf",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ba0fe24f-2124-45fd-85f4-7867ccb29a81"
        },
        "item": {
          "id": "7ae6b4e2-39dd-4e12-8c70-ba2efbf68475",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f1577c07-32d2-4705-a472-7ffdf245209f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3374fef9-f251-42b1-bb26-0cd29841f445",
        "cursor": {
          "ref": "a1038cf6-3ad7-4c81-a3e9-20cf9fda5fa6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2c041de6-40a1-4990-ab70-438e2c8eb129"
        },
        "item": {
          "id": "3374fef9-f251-42b1-bb26-0cd29841f445",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5af49049-8840-4d37-b086-215e23159dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec5c68e-487f-4ec1-ad6d-110da4d8b688",
        "cursor": {
          "ref": "57d2cf73-25a7-4958-80d3-95eb3bcd6610",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "38902b7f-71af-413b-8dff-3fdc85a24346"
        },
        "item": {
          "id": "3ec5c68e-487f-4ec1-ad6d-110da4d8b688",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c200d64d-ea1b-4f32-8f19-2d8d57f2ef14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a5a3a0-0a63-4576-a47f-34de88e0b208",
        "cursor": {
          "ref": "414aae72-89fd-4e33-afb5-d354a9eab8d8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "10f58284-ba3b-486d-8f6a-7768ee50ce44"
        },
        "item": {
          "id": "d9a5a3a0-0a63-4576-a47f-34de88e0b208",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5e15fb75-ef2d-444c-841a-020029933e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2bd2b7-f414-4383-b7e1-421f7cef1e79",
        "cursor": {
          "ref": "d14752bd-8f7e-4d2f-b8e3-ea0cee891422",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c96010e0-2f9e-4385-8f05-02b8f4949457"
        },
        "item": {
          "id": "4b2bd2b7-f414-4383-b7e1-421f7cef1e79",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c9a75674-244e-4e0c-9213-32116ae3c8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc4a5ca-e71d-450e-9519-0ad3d0149f7a",
        "cursor": {
          "ref": "a9ea89dd-5788-471a-b51e-aac8964853f4",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "81045c20-f1b6-4bcf-90d2-06bac890083e"
        },
        "item": {
          "id": "4cc4a5ca-e71d-450e-9519-0ad3d0149f7a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7af9e1ab-77e6-4712-a96f-618499c56dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d8d591-9975-4a0f-8c2e-609a7f96909b",
        "cursor": {
          "ref": "c770daaf-fb33-459e-bcfb-773eab27c92b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "daf765b1-863b-48d6-9911-6c85f8524d1c"
        },
        "item": {
          "id": "88d8d591-9975-4a0f-8c2e-609a7f96909b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ef42bd09-972b-4059-a748-f9311e13021f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e361ab33-39db-41c5-bc0b-7f5ebd209843",
        "cursor": {
          "ref": "31cf6909-e133-446c-82c4-8c6213c80148",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "246de37d-f48a-4077-94a8-6e0cdee6ebc6"
        },
        "item": {
          "id": "e361ab33-39db-41c5-bc0b-7f5ebd209843",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0a625147-3256-4d60-afc1-99410b859edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f270aa2-3610-483a-a9b6-4de28bbb9134",
        "cursor": {
          "ref": "8f23ed47-1e94-49b2-85c1-9e49faced52f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9f93fdea-d674-4e3f-a4de-ffc38c93b799"
        },
        "item": {
          "id": "3f270aa2-3610-483a-a9b6-4de28bbb9134",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "da833503-d9c0-4711-a363-664c02125f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00105f97-ceef-45ce-991e-cbad18588523",
        "cursor": {
          "ref": "1acbb780-181d-4550-9f6f-7c9a8c6d1878",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ed4c0cc9-96e7-4f30-bea9-798a2d9d0523"
        },
        "item": {
          "id": "00105f97-ceef-45ce-991e-cbad18588523",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "815f76d5-9998-4528-bd2f-8252a5c2c481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d309b7-566d-4fa7-a6b6-0322090fb423",
        "cursor": {
          "ref": "5ff66176-8f58-4616-bc2e-77298a19712b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d11d5c89-dd8c-4d3c-a510-66c3cbe2a539"
        },
        "item": {
          "id": "10d309b7-566d-4fa7-a6b6-0322090fb423",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fe22f6c2-9e88-4c8c-bd70-2bb0d561f03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc00d723-7eae-48b4-a5df-4a6151dbb0b0",
        "cursor": {
          "ref": "39ee4c6c-0ab1-411c-8e42-8598a1e0ce91",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9d976b90-4901-4400-9cf6-1312afa8a83b"
        },
        "item": {
          "id": "fc00d723-7eae-48b4-a5df-4a6151dbb0b0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cecf1076-0e64-4f25-b703-5c049008ef47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b03358a-3a57-4a5f-b324-80286d0af27e",
        "cursor": {
          "ref": "99182c3a-b15b-4ac0-bc69-0dbaca69a67a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1b8ae75c-29d7-4362-abbb-f3e67aad8102"
        },
        "item": {
          "id": "1b03358a-3a57-4a5f-b324-80286d0af27e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "51aa9f1c-bf16-4f5e-abb3-c402ff8d09f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9702eaed-89af-4c48-a6f4-0d8d214141de",
        "cursor": {
          "ref": "4dea6e93-2b17-41ed-bf6f-38c9f049529f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5fcb5d03-7248-4b49-af44-97701a4bb188"
        },
        "item": {
          "id": "9702eaed-89af-4c48-a6f4-0d8d214141de",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2465f9a9-09c0-47af-9bce-86daae88f64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d8e6b5-db69-47aa-879e-4b0f95d24f33",
        "cursor": {
          "ref": "61e57455-29d0-4604-b1af-ef1a7f919908",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e6fae3da-1315-4f1f-89ac-1a18f27e8e3e"
        },
        "item": {
          "id": "10d8e6b5-db69-47aa-879e-4b0f95d24f33",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "694ad89b-01b0-4a75-9cb0-8ba012ba03b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260903fb-a027-41e5-9119-7a37ac0244c8",
        "cursor": {
          "ref": "d26134ef-2f74-4e40-a1df-0e15108d79af",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0ece1e02-1e1d-4322-9d99-5d12596915b4"
        },
        "item": {
          "id": "260903fb-a027-41e5-9119-7a37ac0244c8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9d9206ea-746e-47b4-804e-2fad4038359d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16f4b0f-8058-4e8c-8840-451831e10fe5",
        "cursor": {
          "ref": "f8d248a4-4059-40e2-b84a-3ed1bbfb8fb8",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b0ea6d53-c052-4c42-a2f6-b5de6058063b"
        },
        "item": {
          "id": "b16f4b0f-8058-4e8c-8840-451831e10fe5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f0fdff3b-7f3e-48e0-8c78-d7a759830b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b1d7ab-7f12-48b2-914f-3b7bf1f131e5",
        "cursor": {
          "ref": "645eff43-ca3c-4ee7-8ff8-36709abd6341",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bc4d14dc-ebe0-493a-9f4f-557ffa4c820b"
        },
        "item": {
          "id": "04b1d7ab-7f12-48b2-914f-3b7bf1f131e5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f5185c02-9a8b-48c7-bcb1-b28d67deca0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39319cb7-1dc3-47dd-856d-1f7a88f33424",
        "cursor": {
          "ref": "39291131-f756-4db1-9190-d3d4d43bbba3",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8aff28e1-042c-4688-a882-1e4945511b40"
        },
        "item": {
          "id": "39319cb7-1dc3-47dd-856d-1f7a88f33424",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fdd87754-c8af-4495-aad1-763a305267ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa77452b-4ad4-4881-8529-d35f20b7abb0",
        "cursor": {
          "ref": "6aea35aa-fd09-4c84-82b3-85bf57db64e8",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bd676147-d08c-48cf-9011-6e69470acaec"
        },
        "item": {
          "id": "fa77452b-4ad4-4881-8529-d35f20b7abb0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7a2d9f14-4d83-478c-832b-34fe16f296a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36641e6d-4c02-41a4-afa4-8cd1e3540390",
        "cursor": {
          "ref": "4295345f-32d0-4371-8400-06003be4bf06",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bb05f142-c797-45e1-9149-ffb74e5ad38d"
        },
        "item": {
          "id": "36641e6d-4c02-41a4-afa4-8cd1e3540390",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cb8482aa-e443-451a-9e74-c9dae29c9d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcec0592-bdc4-49c5-9368-46a33efaceba",
        "cursor": {
          "ref": "e804d5ae-7419-4172-8084-de7ba26b974b",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7b401f91-4e72-47bf-a615-69cdae9f5167"
        },
        "item": {
          "id": "bcec0592-bdc4-49c5-9368-46a33efaceba",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "606cf179-fbbc-40a1-be26-d29be643f122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32a484f-68ed-4f9f-8f71-1d5e2d80dca0",
        "cursor": {
          "ref": "04e9df00-0478-45de-9708-d68351da1d70",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "32ae56f7-241f-4f06-a277-1c3c92bba81c"
        },
        "item": {
          "id": "f32a484f-68ed-4f9f-8f71-1d5e2d80dca0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f8070150-6d29-4878-ab29-0f12ca2017cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a264c5b5-4c9e-4d5d-a4d6-27e94022dd56",
        "cursor": {
          "ref": "58c0ecd8-bbf6-4740-89b2-ef71ec6301e6",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a8ceecf8-67f0-427c-a67f-7da6dfda4380"
        },
        "item": {
          "id": "a264c5b5-4c9e-4d5d-a4d6-27e94022dd56",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dd3c62f8-4dc3-460b-a78b-cc221a438d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4b5822-e7b5-4943-8cc2-8494acdf1af2",
        "cursor": {
          "ref": "f4c9cfbf-d881-450c-a872-f266b286070d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f0b0a729-fb37-4654-a66c-2c7109fcef0e"
        },
        "item": {
          "id": "2b4b5822-e7b5-4943-8cc2-8494acdf1af2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1acf1286-08a4-43a3-813c-b61870da28a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada1d619-877a-4e20-8d13-44cd789569f3",
        "cursor": {
          "ref": "3be056bb-ebb8-46a8-942a-aefc5f48568a",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9cb9d5e5-5f59-4358-b395-7c1ce8088489"
        },
        "item": {
          "id": "ada1d619-877a-4e20-8d13-44cd789569f3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f98b27f6-deb2-4b40-abdf-214e05f5561b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e797296-68a2-4620-bb0c-2d7a5739a1d3",
        "cursor": {
          "ref": "cd4e746e-1c76-4a64-97a6-497a21b72764",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3ed8a1bc-64e3-4fbe-a187-be769f656ee2"
        },
        "item": {
          "id": "0e797296-68a2-4620-bb0c-2d7a5739a1d3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ddd9194d-af1d-4973-8c9a-afcad5566b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9611e9-188e-400c-85f2-69b71272d242",
        "cursor": {
          "ref": "9679496d-f7fe-4a1a-b57f-c5646a0b80a5",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b90546d8-7b90-4e6f-ad24-fd5eb55b9ae5"
        },
        "item": {
          "id": "ae9611e9-188e-400c-85f2-69b71272d242",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6ac21bc8-432c-4d9f-9075-bf4965da0ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ef4ac6-fc9b-484f-9e6f-6b9dd73e4724",
        "cursor": {
          "ref": "7a9f0c70-c37f-49ea-8425-5e0bba2ca4e6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6e293772-5782-4d37-aa02-a5a6c4b1bbad"
        },
        "item": {
          "id": "48ef4ac6-fc9b-484f-9e6f-6b9dd73e4724",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b57a3c14-f341-43e4-a578-f8cbcfe5338f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de273f4c-4f45-4aad-9b72-256df4c84911",
        "cursor": {
          "ref": "ed1a1c4c-97d6-42a0-8224-a348aa3d99f9",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "509eaa63-013c-4146-88cc-85b9c01db2ca"
        },
        "item": {
          "id": "de273f4c-4f45-4aad-9b72-256df4c84911",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fb517b26-8b47-45ef-9503-332ad0b347eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ea2e0a-af74-45ae-86e9-03f097cae2e4",
        "cursor": {
          "ref": "0ee1dbf5-5e7a-411a-b6a9-00ff370bd1d1",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b9998c4c-73d5-4228-aaea-c9221664318e"
        },
        "item": {
          "id": "99ea2e0a-af74-45ae-86e9-03f097cae2e4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2e276bf3-8ada-42bc-959d-af245e998d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316c1fa9-a41e-4bb9-8f02-e78f5a46a76a",
        "cursor": {
          "ref": "80328951-13c7-496c-a465-d06090c85525",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8dbdedac-610c-480a-b719-7be33ec76000"
        },
        "item": {
          "id": "316c1fa9-a41e-4bb9-8f02-e78f5a46a76a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "471a2b14-251b-4204-a8c1-9a8d5d8d8784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e40e8a-79d8-4939-877a-9c5b81d0c793",
        "cursor": {
          "ref": "c9da7812-803d-4d4e-95c2-c11083d4ee56",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "49f24b84-8541-4b98-b776-e3c0f8a9be9f"
        },
        "item": {
          "id": "e0e40e8a-79d8-4939-877a-9c5b81d0c793",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7f9b09c1-bb5f-4463-bf91-b308f402a7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38c94bc-d57a-48e1-bfc7-c09855ac0189",
        "cursor": {
          "ref": "9a09df60-adbe-4011-a1ee-f474f57f9375",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c8e20940-0030-46e4-b186-8d28f23c7424"
        },
        "item": {
          "id": "e38c94bc-d57a-48e1-bfc7-c09855ac0189",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "84be125a-1a44-4c4f-810a-476fbef0ea7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ddad60-1db1-42f9-84c2-cd2a3bf3fd82",
        "cursor": {
          "ref": "95fff949-adb7-41dd-8802-ac834cba291d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ecef4699-cea3-4245-aa4b-c66e8f0814d0"
        },
        "item": {
          "id": "68ddad60-1db1-42f9-84c2-cd2a3bf3fd82",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a5f38620-3f00-41e5-976e-899fd8ab6ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e12aad6-7cd8-41a6-ac9b-866d4fcb3a44",
        "cursor": {
          "ref": "30c5c689-77b5-44f8-8b42-65faf6a5d2cb",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ea8de0de-78ed-4154-9006-05e41985593a"
        },
        "item": {
          "id": "1e12aad6-7cd8-41a6-ac9b-866d4fcb3a44",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5123f3be-d7eb-405a-b5d7-ff00c19d9da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f932338e-60af-4e6c-9863-4a59df5bf35f",
        "cursor": {
          "ref": "7aae6e28-1cc4-4481-98a0-86b3b27233d3",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b99eaf35-262f-42b3-aaab-6c9843561ba9"
        },
        "item": {
          "id": "f932338e-60af-4e6c-9863-4a59df5bf35f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "039d5ba4-1e0a-4cd7-a6e9-d08fe77a3039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff9d6af-0b62-4615-afb5-cb01a3e9de0a",
        "cursor": {
          "ref": "7cc22524-0b20-4b38-9273-25acab2888cc",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e2e1126b-785f-4ffd-82bb-5ef8c345a8ee"
        },
        "item": {
          "id": "9ff9d6af-0b62-4615-afb5-cb01a3e9de0a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8bb4871c-0faa-4173-b19e-00395e92fef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1df99be-c688-4089-86df-b46a13528929",
        "cursor": {
          "ref": "aec98f89-e801-49d8-9726-1a4ec6d4d704",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5b2b0bb2-4e2d-4dd1-817d-3e8f08fce6b6"
        },
        "item": {
          "id": "c1df99be-c688-4089-86df-b46a13528929",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "51437644-8940-4750-9384-a1e189a1bd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032210b9-2ec1-4fa1-ae80-6a47279dd80c",
        "cursor": {
          "ref": "9a7d5749-9284-44bf-9d58-478ceee5afa6",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "351f7077-e5bc-45e8-a304-31dded5a4be0"
        },
        "item": {
          "id": "032210b9-2ec1-4fa1-ae80-6a47279dd80c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0082cb4f-651b-4dd8-ad6a-c0738f005669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2d21f3-ea49-423c-9251-09835edb51b8",
        "cursor": {
          "ref": "977b3556-c2eb-4104-b2d3-64a468621815",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8764add7-511d-4868-8cfa-8d72b2ac180a"
        },
        "item": {
          "id": "9c2d21f3-ea49-423c-9251-09835edb51b8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b85bc510-9cc8-4824-8d06-e6bbb6a323cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb5107f-3421-4c74-b379-9de2ff8a4dc1",
        "cursor": {
          "ref": "1e23572f-da0e-4e6e-9b08-56b4d0d3c123",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1ec0ba7c-23ec-46f6-b0ac-3912777b63bd"
        },
        "item": {
          "id": "bcb5107f-3421-4c74-b379-9de2ff8a4dc1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "080451e4-9661-4c0d-bf21-82b82ae04342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2f84a1-ae4c-4917-917b-1f5cf5f5fd67",
        "cursor": {
          "ref": "db005cd6-921c-4dd9-805d-37b6a9219b2e",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ab223c7d-3943-4110-8703-356663e5cacc"
        },
        "item": {
          "id": "7d2f84a1-ae4c-4917-917b-1f5cf5f5fd67",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "27f73a15-d449-4c14-8bcb-efb503ca5ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e537bbf6-4423-445d-a608-17296fc4cc15",
        "cursor": {
          "ref": "86828a8f-1a05-4626-af90-3866e1cd9e6b",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c8c61ca1-5d6a-451e-bf21-87156fdf2e0d"
        },
        "item": {
          "id": "e537bbf6-4423-445d-a608-17296fc4cc15",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bd6a8793-2304-4f89-9752-cf73efcb39e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6b3b96-19b6-477f-8b44-11aafeb53d7a",
        "cursor": {
          "ref": "b3b674aa-8e61-4a8a-b49b-d36806709f21",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8892aaf6-0e11-4f8d-b1cc-4972ec39502e"
        },
        "item": {
          "id": "7d6b3b96-19b6-477f-8b44-11aafeb53d7a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e31512a5-c534-4ae4-9e7a-3ebbf88c5f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c50247-89de-46bc-b4e9-9c4f333e8424",
        "cursor": {
          "ref": "6758d431-f11a-4bd9-b2ab-ef1866ff84d4",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "60658ca8-55ff-4b2a-bc56-252ee248798b"
        },
        "item": {
          "id": "e3c50247-89de-46bc-b4e9-9c4f333e8424",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a60d2a8d-5d58-43cb-8158-cdc4c07e4731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e396553-292a-453f-813f-79b50c0d53e7",
        "cursor": {
          "ref": "2577b045-e84b-4917-bb07-99642cf9fe24",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "17d3a0b0-49e4-44bc-911d-efd290e3d9a3"
        },
        "item": {
          "id": "0e396553-292a-453f-813f-79b50c0d53e7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "06143207-d4b2-4362-9d96-3c3540688a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdbdb72-ac71-4404-a470-c19987246023",
        "cursor": {
          "ref": "d72a4d7a-e40c-400a-af74-3909366e7f74",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "60e44d76-5abe-4172-8aa6-adfd09de2ce7"
        },
        "item": {
          "id": "dfdbdb72-ac71-4404-a470-c19987246023",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ca8f072b-9f66-4030-9043-f4bf46059b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d3897a-1e05-4aab-b476-da227ea9e487",
        "cursor": {
          "ref": "a5aa311e-575e-4f36-8339-7e31004d0e49",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f9d611f1-2a32-44b0-bde7-ae43df924acc"
        },
        "item": {
          "id": "68d3897a-1e05-4aab-b476-da227ea9e487",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "85c8a2bc-d2e7-427f-bce9-69cf8a50c77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4df5d3-9325-425a-98df-698955207dc2",
        "cursor": {
          "ref": "c8419b08-5412-4afb-9b96-438243ed455a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6df6c4cb-3cc8-4f7b-8348-ee8e8d752cc6"
        },
        "item": {
          "id": "3d4df5d3-9325-425a-98df-698955207dc2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6aa451c9-23d4-4480-8d80-a582258009ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128563c3-5058-472e-9866-d96f5be60518",
        "cursor": {
          "ref": "6799e2dd-cfc2-4a18-a20c-e70bf35dc191",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "36713c40-737d-4a5a-97b6-ddd8edf9870a"
        },
        "item": {
          "id": "128563c3-5058-472e-9866-d96f5be60518",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "32a8e58c-10ab-474b-ad7d-396319c981b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578da5c2-ce79-4298-91ae-4d9a9b9c233b",
        "cursor": {
          "ref": "96aec025-aab3-4bae-ae54-18c2e979672c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d4b8a94e-003b-4a84-85ce-5ec6fe75286f"
        },
        "item": {
          "id": "578da5c2-ce79-4298-91ae-4d9a9b9c233b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "021a9fdc-ce0a-4ef5-8063-a4d76e118ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e20a97-0198-4bfe-afee-4a9385e97d94",
        "cursor": {
          "ref": "096889cf-f931-4592-b483-72c5b063fe36",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4d72cd91-5225-4a1f-8c38-a0212f22713a"
        },
        "item": {
          "id": "49e20a97-0198-4bfe-afee-4a9385e97d94",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e1209d4c-4f93-4dc4-8b19-3efc6a86500d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd3dc4f-8463-4186-b0cc-53473f89aefa",
        "cursor": {
          "ref": "a4a647ab-b4f1-4a69-9955-3fcbd8d2384b",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f6c1f8ed-5002-4f5f-ad89-fe420611fabc"
        },
        "item": {
          "id": "4cd3dc4f-8463-4186-b0cc-53473f89aefa",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9feb3729-dd8b-4a6c-ab1d-06694c4e2271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e66b57-20a4-4ce4-bc5d-0b468f11eff3",
        "cursor": {
          "ref": "050666fe-8226-4283-a575-c730f1a9ba2e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7cea9db7-79c7-4678-acb1-281f6175bed3"
        },
        "item": {
          "id": "06e66b57-20a4-4ce4-bc5d-0b468f11eff3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "97e99f65-0171-4256-b1d7-a352830b3462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78de3ee1-b173-4d51-8f1c-74b40213fee7",
        "cursor": {
          "ref": "769467c8-dba1-4689-85a9-9bda94f8bfb9",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "db326d0e-d91d-4ecf-b787-650e974f5c67"
        },
        "item": {
          "id": "78de3ee1-b173-4d51-8f1c-74b40213fee7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b540d29d-14a5-43cd-9883-f9cffeaf3eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6628e668-f15e-4732-b72c-6df8c3e56531",
        "cursor": {
          "ref": "96b96eba-5b91-4416-a759-f091e8691bc5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "62b6a1a7-ebd7-4d27-99c5-2440fd9bc8c4"
        },
        "item": {
          "id": "6628e668-f15e-4732-b72c-6df8c3e56531",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "50d6d735-707e-45ba-8ea1-08f1adadb60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652d2c72-aa25-4f4b-bd71-7d4bac10fdd9",
        "cursor": {
          "ref": "02c2948d-0230-4c51-8086-b4ff576ed7fc",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "93ec5340-cfe1-4af6-909e-8ec9ec4dd15f"
        },
        "item": {
          "id": "652d2c72-aa25-4f4b-bd71-7d4bac10fdd9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5b3e22e6-ae62-48b1-9771-b70dfb3cbb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a1d2fe-2804-44d9-b804-feb966d000f4",
        "cursor": {
          "ref": "6895fc82-5945-4899-bcb9-d703c5dcb753",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "43ca96c2-b824-4126-8588-a58ba387f454"
        },
        "item": {
          "id": "47a1d2fe-2804-44d9-b804-feb966d000f4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c0082fb4-541e-4828-ac4e-021d600618ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6fd413-2259-4382-a98c-79f3cfb65e50",
        "cursor": {
          "ref": "63c96d13-3ba0-401c-82e0-6533f129b2a8",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2cb69f30-7bb6-4509-8ef4-e55793954aba"
        },
        "item": {
          "id": "5e6fd413-2259-4382-a98c-79f3cfb65e50",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f84efc39-ced6-4f21-8694-feadf13fd257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c602650b-e130-4ace-9cd7-ce9f8cf64caf",
        "cursor": {
          "ref": "86b1c5fe-ce4e-408c-8713-a3d295eb0c0f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b5f3b7bc-a46c-4618-93c0-825573ee5ba4"
        },
        "item": {
          "id": "c602650b-e130-4ace-9cd7-ce9f8cf64caf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "663037a2-2f3a-4194-abfb-6f5b6ddf48d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac71728a-d344-4c12-b159-bfd9b72ceafe",
        "cursor": {
          "ref": "783363a0-7f34-4663-9c71-fa90b098d9b2",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6edc23d3-91fe-4ecb-b0c1-1f0f2ef8e7f2"
        },
        "item": {
          "id": "ac71728a-d344-4c12-b159-bfd9b72ceafe",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d8aa1cca-d236-47a7-afb4-4a33d55b84c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f8a06c-0799-4e7b-8c19-785390cebdbc",
        "cursor": {
          "ref": "2531c3c6-ddad-412c-9f73-923c35b6d93a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b6a6b6fb-f186-4b2f-9a21-d7beed39a983"
        },
        "item": {
          "id": "e5f8a06c-0799-4e7b-8c19-785390cebdbc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a2cee350-7eae-4a02-905b-252ffe03fa02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b03c7cb-93f9-413a-8cdd-ebf2d46f91d9",
        "cursor": {
          "ref": "ef020906-d88b-482a-96d4-bfb663c25bf4",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "86b23c88-f911-4507-bd9d-0e961c8ecfb4"
        },
        "item": {
          "id": "6b03c7cb-93f9-413a-8cdd-ebf2d46f91d9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "adea8921-f08b-4f5f-9ff6-a2ad9714a210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6183b569-2ffa-490d-8de1-9a3b90f8708f",
        "cursor": {
          "ref": "19ce3fb0-96c0-4745-92b7-52f988559fc9",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9b53508c-5c06-4b12-874f-750e0d5c1a79"
        },
        "item": {
          "id": "6183b569-2ffa-490d-8de1-9a3b90f8708f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "857cdb16-fd02-43d4-a0e3-0104d44e9651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df41baf8-c2a5-4b86-8033-8c25654e69b0",
        "cursor": {
          "ref": "5805d358-0c8d-446e-9677-1e2ae4aca7ff",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7e4bd268-3d00-41e5-b6c3-5daceba45aa7"
        },
        "item": {
          "id": "df41baf8-c2a5-4b86-8033-8c25654e69b0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "278ad8ff-084c-440a-b551-e7c6e540cf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6677933-4bc3-468f-b60d-ecf926f15678",
        "cursor": {
          "ref": "4ab77d3e-c886-4dab-8471-d73f06c21231",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "efa94bb6-e791-4210-a8eb-9f7c8126f1ce"
        },
        "item": {
          "id": "e6677933-4bc3-468f-b60d-ecf926f15678",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "88d85a21-43a4-45f0-853a-ca85542e11eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f490bed3-53de-49cd-bb19-d990fbb47c47",
        "cursor": {
          "ref": "c53448e7-080a-4f7a-b057-1d6c601f20b6",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d158f354-70a2-455d-a11b-8135ccd5aa16"
        },
        "item": {
          "id": "f490bed3-53de-49cd-bb19-d990fbb47c47",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "77ad1f33-6c16-4233-9676-5ce17ad67a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5ea08d-5e8f-4f12-bb1c-50eee6fbabd4",
        "cursor": {
          "ref": "57a60e1c-e7ea-473e-862c-dffcfc6348d4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3800f0f5-fdca-4b8a-bc59-ae8beb7ca419"
        },
        "item": {
          "id": "0c5ea08d-5e8f-4f12-bb1c-50eee6fbabd4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "caf4c839-e7fe-48cd-bfbc-0bcd02f4fa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1441635f-dd73-4c92-87be-880efb19126c",
        "cursor": {
          "ref": "c88d0714-5949-4c2c-8c08-f5dd28880be5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "03351514-78b8-40e3-8bf8-e2da0df42f27"
        },
        "item": {
          "id": "1441635f-dd73-4c92-87be-880efb19126c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5079da75-63d7-429b-986a-666c31abcd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b814fd-2bdc-4080-bcea-d27b5b3f8c0c",
        "cursor": {
          "ref": "7cbfd4b0-2d3e-4351-95fb-72db2553de00",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e4c765f8-ef66-4840-bbb7-455734c82847"
        },
        "item": {
          "id": "e7b814fd-2bdc-4080-bcea-d27b5b3f8c0c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "306c9332-4650-461a-855e-c57f46019a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558b73ba-6f09-4d1b-9cb8-ba48ab668d3e",
        "cursor": {
          "ref": "535439f2-e95a-4bda-8eb4-dc9c321c2450",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7a98c469-2bb3-43c5-809f-b87fe6652e21"
        },
        "item": {
          "id": "558b73ba-6f09-4d1b-9cb8-ba48ab668d3e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4af9fbf0-79ad-4377-8b30-2782c1857bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6c8b5c-ea6e-49ce-b1dd-9988ef4b0bf9",
        "cursor": {
          "ref": "324848dd-8df6-4a5f-9f9a-ab0f235f9813",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bcc9ab35-dfce-4a17-b516-4239d5734e15"
        },
        "item": {
          "id": "4d6c8b5c-ea6e-49ce-b1dd-9988ef4b0bf9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ec1b1167-e648-476a-85e2-1431388049c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9bfc98-a6ee-4f47-be47-248414bc2686",
        "cursor": {
          "ref": "5eee1a49-07a2-447d-803d-b111ad45f7ea",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6886761e-7a20-4eb8-b6d4-e7338cf0c497"
        },
        "item": {
          "id": "0e9bfc98-a6ee-4f47-be47-248414bc2686",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cad7b5e2-10db-4805-b19e-37dbee2a4f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a4ce1a-bc12-465c-a546-1828109c00d4",
        "cursor": {
          "ref": "4b82681f-ab99-4e62-8baa-27f86d5db389",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1d97bfb8-1294-4fcf-981f-214023f405de"
        },
        "item": {
          "id": "10a4ce1a-bc12-465c-a546-1828109c00d4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "54b87ae4-f1ee-4972-9792-7a4d968e9724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83001559-51b5-4922-a303-ad11a77c0b24",
        "cursor": {
          "ref": "75cb5e3f-8dcf-4df5-948e-c3025653e3ce",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "446a5c70-e438-4345-bc0d-00e14d20819c"
        },
        "item": {
          "id": "83001559-51b5-4922-a303-ad11a77c0b24",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "38d43023-a68e-4154-a53d-78cb15a78823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b588246b-27d8-4c57-8152-00528de46ca7",
        "cursor": {
          "ref": "77190999-c141-445d-884d-b60a4b177c35",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9122d39d-53e3-4f0e-9e77-f1d850ec3e1d"
        },
        "item": {
          "id": "b588246b-27d8-4c57-8152-00528de46ca7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e35684cc-c336-4fca-a2a4-05ba0605ad7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38248eab-e714-4be4-8cbb-721ae2d34e60",
        "cursor": {
          "ref": "685e6fe9-b6e0-47d2-a436-22b3f1a1f975",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "600a468d-0062-4e6e-bd3c-44fa7a0892f2"
        },
        "item": {
          "id": "38248eab-e714-4be4-8cbb-721ae2d34e60",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7f218e38-5f66-4de4-9eb8-679f020df937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5b52d1-12ed-4e5b-b19f-ce290b387c5c",
        "cursor": {
          "ref": "77b5884d-7ae1-43c7-9596-bc7fde378838",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b72ba70a-0755-495c-b3ee-6a41524e9dbd"
        },
        "item": {
          "id": "9e5b52d1-12ed-4e5b-b19f-ce290b387c5c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "86a22522-fdef-4214-b4a3-313e04d99488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4daef24-05eb-4270-9e2d-7172d702b907",
        "cursor": {
          "ref": "4bc3c813-9cca-4479-9662-3320217801f7",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5edd0644-156c-4eac-bd21-8fbf4f934df0"
        },
        "item": {
          "id": "c4daef24-05eb-4270-9e2d-7172d702b907",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1255490e-db74-4fe8-9d7c-7d9a83b044c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cebe9b0-5807-4999-aea0-55462289bf99",
        "cursor": {
          "ref": "532b77b3-ad80-4089-b5e4-360a65e583c9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d8d18066-2bde-4273-a9d7-315c967bd2ae"
        },
        "item": {
          "id": "4cebe9b0-5807-4999-aea0-55462289bf99",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "666ad7bc-55b0-46f7-a895-06f861eb131a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fecfa1-2b38-4c3c-a227-3678fc2c7e24",
        "cursor": {
          "ref": "cbca0071-d0f9-4a66-962b-9a4aa5fad258",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "19715652-2067-4c22-b618-9b9223430efa"
        },
        "item": {
          "id": "73fecfa1-2b38-4c3c-a227-3678fc2c7e24",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "da9d88a2-6633-4b88-8de6-1d6ca1bc1463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597823e6-303b-4e8c-9367-24fc6ce7ca8e",
        "cursor": {
          "ref": "3c94463f-cc27-4239-bbaf-192854ee3095",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5c4b63fb-41b5-4a71-b30a-25e2c363e131"
        },
        "item": {
          "id": "597823e6-303b-4e8c-9367-24fc6ce7ca8e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "26c11e29-5c4c-46e5-a467-2623a17bf5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140513f5-ac46-4efd-a230-387597fd02b4",
        "cursor": {
          "ref": "9b9b0162-8b43-410e-8bf0-a957e1e221d0",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0435f867-6168-4d19-845e-52bc356e2e6b"
        },
        "item": {
          "id": "140513f5-ac46-4efd-a230-387597fd02b4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5e22548c-eedf-4f83-9006-aae310f04406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc6f51c-e4ec-4705-b3c9-1403d49eb2a9",
        "cursor": {
          "ref": "83a48659-e7ed-4553-8055-15068d82f653",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b860fc33-8e8a-4e47-841e-c72cde279f80"
        },
        "item": {
          "id": "dbc6f51c-e4ec-4705-b3c9-1403d49eb2a9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "aea2a5b4-d950-4eef-bbb9-3b07105493e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4594486a-b8a6-4bc0-ae5d-141f25617340",
        "cursor": {
          "ref": "fedbb059-f035-42f8-aaf9-d8e0d1f1f200",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7100ba17-48e6-478b-8165-8b070756613b"
        },
        "item": {
          "id": "4594486a-b8a6-4bc0-ae5d-141f25617340",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "57dec42c-09d1-442c-88f8-132eff40302b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382cec4f-5d51-4bb1-9779-5c184af2941a",
        "cursor": {
          "ref": "b4f5cf08-42c9-4645-b6a3-5342fd120312",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5c194e1e-8a96-4fa7-ab8f-3388ff099668"
        },
        "item": {
          "id": "382cec4f-5d51-4bb1-9779-5c184af2941a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "afe5a934-5866-4924-affe-589557a917b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b32db8-37df-4760-9b05-e46e2df4c861",
        "cursor": {
          "ref": "f3c72f6f-6438-4bad-817d-e092126a05eb",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "abf214cd-0a23-444d-bd8d-0180d6b4f408"
        },
        "item": {
          "id": "66b32db8-37df-4760-9b05-e46e2df4c861",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fcdd7354-f981-4ec2-8645-f2658a9b0141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75a8500-61ca-4027-98e4-3ba8ac4948a0",
        "cursor": {
          "ref": "53038578-c540-4977-b27c-3bbb9e88f972",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "78ac0536-9d60-4302-a59e-29d339cb823e"
        },
        "item": {
          "id": "e75a8500-61ca-4027-98e4-3ba8ac4948a0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c6c4ec3a-6fd1-46a0-ba37-89f4e48b5fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e7c51f-b260-4ee1-99d8-cfca04e42aa2",
        "cursor": {
          "ref": "1ddc18d6-0c93-4304-a1be-9dbc3530e83b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "08b95137-8259-4a7f-8161-95a34d3bc36d"
        },
        "item": {
          "id": "06e7c51f-b260-4ee1-99d8-cfca04e42aa2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5fbfdbed-4b14-44b7-ac97-834732de12e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e23f5a-6112-4e02-a27f-40ce2a25dafb",
        "cursor": {
          "ref": "ef7ea3c8-913b-4fa4-98bc-5c2abaf4d7af",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "66adaa00-03f3-44a5-a1f8-120bb5b7838a"
        },
        "item": {
          "id": "44e23f5a-6112-4e02-a27f-40ce2a25dafb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "48db79ba-06d2-4d63-a1b4-89628aa3cfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc34e5b-d705-4534-ad49-4afd75804f5b",
        "cursor": {
          "ref": "e8889b8c-33fe-45da-ac3d-35473c108a10",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9790623d-2ba5-4095-8fa4-69bf877e3d7e"
        },
        "item": {
          "id": "3fc34e5b-d705-4534-ad49-4afd75804f5b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "67964e3e-083d-437e-8cda-0f64782102b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7595348b-0fd7-48d0-a1f8-159f657f85a5",
        "cursor": {
          "ref": "4faf468b-d882-4eab-b816-e7f90b062c2d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "129e6e89-7c66-44fb-a26c-4d74e7121819"
        },
        "item": {
          "id": "7595348b-0fd7-48d0-a1f8-159f657f85a5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "233ec4a3-1be0-4a40-9f4f-4e7c2e5faea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c1b7dc-7655-4467-bdba-2143745e7dbc",
        "cursor": {
          "ref": "0f832546-c3e3-4e9d-a62f-14ccbdd5ec13",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6849b748-a318-4db6-abd2-e7d33b151b6f"
        },
        "item": {
          "id": "d4c1b7dc-7655-4467-bdba-2143745e7dbc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cb9974f1-52c7-456b-a0c1-e706ed22226a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312f037b-20d3-4118-9d10-58fcc6ca69ce",
        "cursor": {
          "ref": "78c19f8c-4739-41b2-a4b9-d002ff847990",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "070edceb-fcd5-4a2c-843f-bbb176d23aa5"
        },
        "item": {
          "id": "312f037b-20d3-4118-9d10-58fcc6ca69ce",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0e4f4f10-2de5-4e36-8bee-b3aa8a9a2652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5c9d3c-db38-42c3-b48e-cddc44e19aab",
        "cursor": {
          "ref": "d1a787e9-50bf-4999-8425-8ec53425f6f8",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bc8d4f57-8898-4766-bd3a-b937ed888499"
        },
        "item": {
          "id": "8f5c9d3c-db38-42c3-b48e-cddc44e19aab",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3a01a14b-4868-4488-bfb2-9773cf57a3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b3fa89-2da3-46b3-b3f4-33b617966f16",
        "cursor": {
          "ref": "204d002a-d33e-4146-ae6a-b9a5d766ce55",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1f7da50b-3fb6-4647-88da-071b2c4b5fa9"
        },
        "item": {
          "id": "11b3fa89-2da3-46b3-b3f4-33b617966f16",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5f1331a8-4d92-4e08-bb2b-bedb091bf167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95eee97-eb7f-442d-81b4-84a2c5259a56",
        "cursor": {
          "ref": "18095941-fd99-47b4-b20b-b89f306f5d5b",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2edd40de-8325-414c-b5fc-495897395de6"
        },
        "item": {
          "id": "c95eee97-eb7f-442d-81b4-84a2c5259a56",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "44416a86-d182-401b-9237-e613884848dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97670669-9a24-4aaf-9f98-b326a9068cf3",
        "cursor": {
          "ref": "6d5e316c-7ebe-4c2d-97ed-f54ee2be5f77",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8d18535c-f8c7-43d9-89e2-e91736926585"
        },
        "item": {
          "id": "97670669-9a24-4aaf-9f98-b326a9068cf3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4d8f63cc-000d-4395-b3de-2453709afdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1158fd-f8b9-4014-80d5-43a5fd6a3471",
        "cursor": {
          "ref": "7cabf0a3-90a8-467d-98a8-8a9f7d523814",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "986a8946-5437-44d0-b6ce-33c7fe33e583"
        },
        "item": {
          "id": "6a1158fd-f8b9-4014-80d5-43a5fd6a3471",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "38301571-a616-46fd-ba37-90c142555405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29e616e-840c-488c-bf70-d791c41cb8b5",
        "cursor": {
          "ref": "830be589-64ee-4bd3-9cf4-38c7a249d26f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9eb1306b-1fe2-4c48-bf45-24e28d716fb7"
        },
        "item": {
          "id": "e29e616e-840c-488c-bf70-d791c41cb8b5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8b60f856-b039-4aa7-8496-3d1819c1b59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d83fc0-023b-43ab-b621-54a62d958e94",
        "cursor": {
          "ref": "9d57712f-f878-4e06-b960-5b701b584ea9",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "151da919-b997-4836-88d2-9dd391426df3"
        },
        "item": {
          "id": "b9d83fc0-023b-43ab-b621-54a62d958e94",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7cb2a93c-f6c3-4b5b-a8bb-b2bab72fc72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871a0049-2c1e-46be-b0b0-cc24773c25c7",
        "cursor": {
          "ref": "cb8d5692-1783-4030-9665-63d1ec65dc08",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5e7e0a4d-4bb1-44e6-9bcf-1fcd80b22017"
        },
        "item": {
          "id": "871a0049-2c1e-46be-b0b0-cc24773c25c7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bcda3a2f-f82e-4b8e-b5e2-e20aa02081c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f7e13c-05b4-459d-a6a9-f93a712765f2",
        "cursor": {
          "ref": "8f438219-e214-4af2-a9d1-37804fff728f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bcd7a433-21f4-45b0-ab6d-2482a450cde0"
        },
        "item": {
          "id": "35f7e13c-05b4-459d-a6a9-f93a712765f2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dc0b501e-f13d-4fca-9f94-ff3a023c79bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9fb949-4ae4-418f-968d-c1480fcbc653",
        "cursor": {
          "ref": "dd407f09-8e71-4913-b60c-8be33f1a961a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "92eda9be-ec8f-4a31-9bc8-2c19130b1910"
        },
        "item": {
          "id": "df9fb949-4ae4-418f-968d-c1480fcbc653",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fb229bea-dcd8-4827-8eca-6abfdc2c1644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1464a1a6-fce3-42be-934c-3d4d2e508e2a",
        "cursor": {
          "ref": "6f03fa60-d7f9-4b38-92cb-9e1564e799d0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "44f77dfa-ec12-47a6-8820-5126e69ea356"
        },
        "item": {
          "id": "1464a1a6-fce3-42be-934c-3d4d2e508e2a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2106acd4-88f5-4377-b301-18c4cb28a24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a05aff3-ae0e-40a2-b775-358f3821317e",
        "cursor": {
          "ref": "d159c598-ab4c-4398-a92d-042287d0539e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4bd8e967-a848-48ab-a33e-f59cb0a255d2"
        },
        "item": {
          "id": "2a05aff3-ae0e-40a2-b775-358f3821317e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "25769b87-c1ab-4dd8-b84a-a1afe3b36620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fdec98-f2a5-4b0a-87c6-8fb80b73cea2",
        "cursor": {
          "ref": "fed652e2-47b9-4cc8-bfb1-600b16b38684",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "900d714a-0b2d-43eb-a5fb-4bd342769642"
        },
        "item": {
          "id": "30fdec98-f2a5-4b0a-87c6-8fb80b73cea2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "30e01ef0-a5fa-4140-a403-d89d4a97f45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9bc0bf-9303-4664-97bd-f2463a62deee",
        "cursor": {
          "ref": "3e5fa055-42e4-41a0-b427-e8a19cb209e2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8730bf2e-e761-4e80-811a-aa38a64651ac"
        },
        "item": {
          "id": "7e9bc0bf-9303-4664-97bd-f2463a62deee",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9b2209fb-e05d-4b3d-b54d-8c59d2e69f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d597313a-dd7e-4a60-8f8e-95046e1089f9",
        "cursor": {
          "ref": "e2f573f8-c544-495a-a5f3-4d0b02a062ed",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0849ee29-160c-4d43-b2a1-0ec948eaf171"
        },
        "item": {
          "id": "d597313a-dd7e-4a60-8f8e-95046e1089f9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "122adda9-a598-4f19-930c-48a92ebb845f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877cc8c3-9a66-41e8-b114-ada322bdcecb",
        "cursor": {
          "ref": "7f983f2b-a7b8-4d92-b940-ced685ce21c1",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "91ecc932-128e-4026-b487-f1d631e42d1d"
        },
        "item": {
          "id": "877cc8c3-9a66-41e8-b114-ada322bdcecb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0a66c256-ab1d-49fa-a5a2-da95fdcc2727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7654556-d6aa-44de-a86c-9dbfdc0c5b97",
        "cursor": {
          "ref": "22d06736-767f-401e-83e7-599fba891b1c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d603493b-d6dc-4a32-bb17-1a1bea58f199"
        },
        "item": {
          "id": "f7654556-d6aa-44de-a86c-9dbfdc0c5b97",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5972e29b-df56-448b-a992-7643d9680c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4595fece-09b9-4570-8e8f-3b88991811e8",
        "cursor": {
          "ref": "338b74b7-973a-4c7a-9048-62841dc7f7c7",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "da758f27-7725-4041-8629-a57cc5f9af16"
        },
        "item": {
          "id": "4595fece-09b9-4570-8e8f-3b88991811e8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8cf2fe42-9428-4fd7-b24a-46dfd6fb1707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cf9b77-4dc2-44f9-bbcd-5026f01cc425",
        "cursor": {
          "ref": "f1614497-46b5-4ca3-b569-d85c55279497",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a144221b-dce2-49b8-b081-892101f2d16d"
        },
        "item": {
          "id": "b3cf9b77-4dc2-44f9-bbcd-5026f01cc425",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8c29f777-b2cf-42d0-b999-ce105c267e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6bb10c-0476-4cba-9c6e-c407ca0f5c0d",
        "cursor": {
          "ref": "b6d1d9b9-faab-4871-aace-c2a02a951665",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c0dd4797-39dc-4553-953e-cf11a48e7f06"
        },
        "item": {
          "id": "8b6bb10c-0476-4cba-9c6e-c407ca0f5c0d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "544779c4-fce0-47f4-9f15-a05fc5946a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a81584-ffb9-4f22-b7d9-f77247b053b3",
        "cursor": {
          "ref": "51193826-72f2-40f3-9338-dcee6a06085b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "31783adc-43d6-4031-88fe-1dbe1b91072d"
        },
        "item": {
          "id": "f8a81584-ffb9-4f22-b7d9-f77247b053b3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0a170c09-6d2c-45db-928c-cd26f3a43862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc46c58-330f-4a0a-a18c-f77afc926118",
        "cursor": {
          "ref": "05ed753d-fff2-43ec-9137-2c54b6dfe1d5",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0ea1ef33-f2cc-46d8-8eba-92d9c337c7e2"
        },
        "item": {
          "id": "afc46c58-330f-4a0a-a18c-f77afc926118",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "da739df1-428c-489a-a354-3689bc7e0877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bedf22-4dd0-457f-86dc-ca3622ab12c8",
        "cursor": {
          "ref": "becd7553-b482-4878-a2af-239fd7af372b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0f6f80a0-a19f-40d4-a5bb-10aa241b9b98"
        },
        "item": {
          "id": "16bedf22-4dd0-457f-86dc-ca3622ab12c8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3cfb3588-07cc-45df-9f8d-8fb5d1448bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b41a93-75d2-4311-b049-297e5e54ccb4",
        "cursor": {
          "ref": "5cc1bac3-3d96-4a7c-87c5-60f1f872f753",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2b4ea8ed-5c54-4855-9df7-756ffe4d2835"
        },
        "item": {
          "id": "01b41a93-75d2-4311-b049-297e5e54ccb4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6f373eaf-0cc8-400e-9a72-6ac4a93d9457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81de16d-8210-4f6a-ae70-3c99a5ff0245",
        "cursor": {
          "ref": "b1a92fd7-bc12-45bb-8a8a-d7b8fcdc9432",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "69cddfce-c79e-422c-951e-cd968c0bf316"
        },
        "item": {
          "id": "e81de16d-8210-4f6a-ae70-3c99a5ff0245",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "aa433e06-2323-40ae-8bc7-fe9a290bbacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d111eb-cbcb-40a5-b2f3-8c1582067484",
        "cursor": {
          "ref": "0ff62a92-2817-4c9e-bc52-c181a99a2b58",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e4e7e750-0e32-435c-b07a-9eb0bc2ffa95"
        },
        "item": {
          "id": "f1d111eb-cbcb-40a5-b2f3-8c1582067484",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e087535b-43f5-4c81-be2c-122e5f68588b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e191fad-9999-4e1a-97a5-846d3ab8c219",
        "cursor": {
          "ref": "f1da9ce2-1d7e-442b-8f7a-7e274c571a61",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6b6df316-3391-40d7-b232-e8d40f003c3f"
        },
        "item": {
          "id": "6e191fad-9999-4e1a-97a5-846d3ab8c219",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "307a874f-d114-4b25-9b4e-82ff26c2fb02",
          "status": "OK",
          "code": 200,
          "responseTime": 2230,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f06b65b-d69d-49c3-a0c2-ac8536b59921",
        "cursor": {
          "ref": "9090bdc2-4bb1-42fa-955a-15acd7cabffe",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5d805573-78b3-4bca-9406-b79814e0a79a"
        },
        "item": {
          "id": "9f06b65b-d69d-49c3-a0c2-ac8536b59921",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d03fcebb-e2d9-46f4-b917-76b79df198be",
          "status": "OK",
          "code": 200,
          "responseTime": 7670,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "923fb0e5-3ac1-4cc2-9dcf-28fe24e2b2da",
        "cursor": {
          "ref": "b7b0de29-c4db-46ea-992b-03f1336a9de6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "12f3a255-7e70-40d9-ae88-40b9ccffa98d"
        },
        "item": {
          "id": "923fb0e5-3ac1-4cc2-9dcf-28fe24e2b2da",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9acb668d-2c09-47a1-8c26-c2a507a3dd76",
          "status": "OK",
          "code": 200,
          "responseTime": 3352,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b28e0f-ce27-4352-b41e-7886da24b980",
        "cursor": {
          "ref": "5066b500-2ad2-4e2a-9ab7-ac3d76d6db15",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a1243556-2d12-4bff-a1dc-60bf26f6651a"
        },
        "item": {
          "id": "90b28e0f-ce27-4352-b41e-7886da24b980",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a07679a-0b12-4fce-8d8a-063008da9252",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b28e0f-ce27-4352-b41e-7886da24b980",
        "cursor": {
          "ref": "5066b500-2ad2-4e2a-9ab7-ac3d76d6db15",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a1243556-2d12-4bff-a1dc-60bf26f6651a"
        },
        "item": {
          "id": "90b28e0f-ce27-4352-b41e-7886da24b980",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a07679a-0b12-4fce-8d8a-063008da9252",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374522af-c4da-41e3-9ae9-992c6f7935ed",
        "cursor": {
          "ref": "480806d2-b98a-4ede-b9df-8d7e5fd314ae",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bf383280-8239-4081-ac85-81e8a17de84e"
        },
        "item": {
          "id": "374522af-c4da-41e3-9ae9-992c6f7935ed",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ec833f9e-a165-4953-8265-44f04afcfb94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45de781-70d4-49a9-9ae1-d8837312fb3f",
        "cursor": {
          "ref": "b5b0270f-37bc-4629-a3a7-9fa2f0ae7703",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0983699d-b6e3-4fac-b4f2-41014c2670ec"
        },
        "item": {
          "id": "e45de781-70d4-49a9-9ae1-d8837312fb3f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f844a9b6-218a-4e65-85e9-e2048a730c54",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}