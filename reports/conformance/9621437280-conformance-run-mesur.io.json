{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9a53e7b1-834a-4e83-986c-5cfa19aa68d9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "609005ff-989b-44c7-be4c-cc81fe8e2b71",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "590e50f6-b8b7-4549-8398-b0e40c256d4f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "98186a8c-290d-4361-b7d0-b6a9a1775644"
                }
              }
            ]
          },
          {
            "id": "1d1177ba-3184-4a42-92aa-af93eeee7840",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "230cdc9b-0f1c-4a23-9e0e-d923a2eef108",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8642f284-af6b-4b8e-bc89-c2bf7bcdd2b2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d8e4b9d6-f6ff-4971-bb02-8c7bcf9f6167",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3af9e57e-f7ae-4117-8d27-da5a44bd4560",
            "name": "Positive Testing",
            "item": [
              {
                "id": "42e23fcd-0491-486d-b75f-ed09c12953f7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "612fbd20-287b-465d-b61d-08174d05d712",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcd15c44-d079-408b-9f47-c5fc7148730e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ae5f36a-98e7-430d-9b5a-e02cd5e39490",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d04d940-c1ad-4afc-9092-c906d029937a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71233c74-1da2-40f9-9156-a3d6b2f5b8c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82c75c28-42bd-4cb5-96e0-98a3e9b5f75d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fabb0c17-9b5e-4c7b-86b0-9d91a62202ef",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "15a20d48-0325-4a4e-9274-90c46c052456"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e2372e4-c566-43c0-b760-ac4cccf6c909",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41ca778f-5fed-4061-9c68-b0ee6e15e243"
            }
          }
        ]
      },
      {
        "id": "874ce808-fd1b-4092-9c78-617a65110c58",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f8cad0c6-d6fd-48fa-b94e-8965b5b7de61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6033970-018e-40fc-8550-89f926175c2b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7591cb27-c797-4f7a-a79f-ac962aed011e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2863a0bc-c8cf-418b-9d21-21e93765fb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fd6cd06-c899-413d-b33e-7320ede62ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becbd543-72be-4907-a844-2b8da1c12743",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170b952b-20e6-442c-b261-a58e4502f16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e229a124-59fd-4452-bcd4-92234dd681aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e29677-8d34-489f-b1d9-0a7444979039",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e304ca89-e241-40dc-813a-fe2ff68bf5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7d9da74-c65d-4600-b078-262096d7dc59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6834ce4f-7435-4311-9958-96f6a90c1da5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7bfb9bb1-b59d-43c9-b805-a16a4e597e53",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5518be82-1efe-47e2-814e-36418102e1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "133a7807-3d25-4621-b3f3-a3e5e2cfc603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc24811f-1a49-4ac7-9586-eee4313b7051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357b4745-bbac-48e8-9c9b-ea32601c2d3e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2b6aacec-1b43-46b2-8a32-1f524b8bcebe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a2ca44d2-df8a-4b3d-8a2e-40fd4160eac5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a80a0ff-513e-408e-b515-37015e4c8f57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6e59aae1-d40f-47d3-ad33-4280207330bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "255ac195-65e9-4a8b-9ccf-db2eaa1baf99",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e12b1de7-8078-4660-bc24-a696ada010b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1d8344e-3ad6-46d0-8a7a-175d741c8348",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03814840-75c2-4270-84b4-fdf7a2722d15"
            }
          }
        ]
      },
      {
        "id": "7a54b826-43ff-467a-8680-396f34fe364b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5cabb269-0ab9-4f7f-be6d-7e0e34f3d550",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b733b7fc-d470-4e8b-92f6-af76270e8808",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "664049bf-5b88-45d0-8b4c-4b325c20c9b7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485f3c8f-c1f1-4019-bb0f-6dd57be680c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a147736-ad94-4130-9c49-a16e1a8836d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe641ab-e667-46fb-b973-2a0c53d05c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa3c27fa-9f79-4854-b6e7-5d5d02065be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92c992c-bfbe-475c-969a-1a687b3b9812",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078e7806-7479-4d24-8b0c-57a6c9f214cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14565c8f-11a6-47f6-8dc8-78d3414eab52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ee20d4-1abb-4796-84a4-b47f572009cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccc858a2-6ba3-416a-9eef-82ecddb799ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3abfa5-7b32-4425-8cf3-a895840fe981",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107d37e6-93b9-491a-b871-f9fa82363bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c34675-4f24-405c-9a70-e612aea64821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765d8f7a-1823-4405-916c-3d39fcb55906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18c9fb23-cbe1-4eee-8dec-0aee708269d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b15cb90-ed30-495d-b2f8-e4d12c4eef74",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4293fc39-37ea-4d40-b21f-e0c787b422de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab40f1c9-89e9-4aad-8cdf-a32d508fc681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c314cace-b22f-43fa-9d92-5d8942c03617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e72861e8-a8be-4201-b859-7b7de4bb89fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08eafc52-ad07-4807-95d9-df5c177c6cbe",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e71299-c9f7-4fe6-a1d3-a77c880404a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3f6cd7-cacd-46b7-a489-c680dfd476fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04eabd42-254a-474d-b4e0-b12778c2f910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b215000e-6cff-4b75-81ff-48084951a31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e88500-f390-42b3-aa00-3837820801c0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52089496-1ef2-4aa8-b36c-176b38d8ac02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c1a899-c255-45bb-b926-4f6761c28bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68808b3-625b-41f1-95ee-c928a298af1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b18823b-93c6-4e62-835b-e8475a0b5f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f69937-89f4-4589-8d6c-d13dfbfc676d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1d8f67-b697-418b-9dec-5270c2fd6127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b506c9-b440-4e53-bd7d-d996a973e3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6544376-a397-4e33-86f2-17c5f0daf935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5d7587f-967b-4dbe-9838-c829dfc51565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711f85fa-5cb8-4dbb-9f10-d921ff228c49",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969f99e1-e64b-4071-b2d8-3f0d6b8a0c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557b7703-1862-49e8-b57a-62d7ebc3de44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecf1d3b-5822-4033-9660-f9d60343a24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb1ba5ac-4129-4dbf-b32b-ca634d9ca77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f980a4-cf19-48f5-84e7-a46aafa69bfd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de959b0-f874-49bc-a66c-156bd1d01a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60615440-b89f-4adf-840a-d24422b4a163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b855b31a-39a4-4de7-b228-660c3b515466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfb7f2b3-26a3-4bf2-b639-6c5d9fd9e9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da169ed-7412-4dd6-a0c3-dc0ba91d96b5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af97fcd7-a570-4bc3-8d2c-ffcf4e8cd82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac802f78-27e9-4de7-bfda-19476f9aea3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d4ba21-88e2-48ce-aad9-ad7a46aab267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74807401-4ce7-46c4-9a73-77e3b602611d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f76dc4a-4e20-4b56-a37c-80a11d534ee2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2377ae-bbc1-475e-808d-2f854f92c712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d88b27c-9398-471b-912a-c1471b7f4408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963851ed-8e56-44e3-9f9f-6ec3ead93963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f9fd572-56e6-4298-a265-e4fc37670420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f46d832-8b42-4b3b-8877-5ee0da554a43",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219e8b7a-9ec4-49d4-979f-8c209dc57ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1ba00b-c354-4a05-9051-d612af20efeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9494f7-92d1-47f4-9373-255fc4114d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1d319e1-ebfa-4767-8ad4-383256ad1543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d464bd10-d1fd-4aa7-b747-dc61fdbfe960",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32605b28-36c4-47ff-9e16-0fbadbee6dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92930ad-0e85-4ff2-9cf9-34302910397f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6abbe4b-e6b5-4c90-9339-f175a0e77c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66019d5b-c2f9-4455-a40a-6b9dcfeed0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340a7c3f-7286-4691-acc2-b6f5a9d48b09",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccf6922-2cb1-4298-879e-d139e4c87610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bd4f47-fa58-4288-a739-a3b50b919bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb26c88d-5121-430a-a583-ae96b6b57a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "607736cf-4cb9-4903-9a04-6ec9691abc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfacb32-119a-483f-aa23-e06fbe4ca71f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990233ff-4076-414d-ad2d-f3f64d5a5355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5ea611-8998-476c-a637-d8d830d072e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdcfecf-30ac-4014-8038-2316094784d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "955b6940-5ac7-463d-9561-46427b72b6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb8eb4c-5846-4155-8789-d19613678a9d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba5c9aa-98af-41ea-90a4-773d2e7d3a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c91c59c-a6f5-4633-b43a-81c4c1848eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f744e5-8a6f-453a-af41-4f05782f21e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6d24133-3ba7-4fb8-b809-1ca89ae8a263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88188fe3-f4d2-48aa-ae83-376582711d39",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d982e1-2d65-4162-b589-8c33c4b8b386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e387104-9836-4a68-83a6-88e70b492934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db25bd8-64bf-42ba-9fcb-12b7fe517d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7d6a742-61e7-46a4-9268-4021cfb003a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbea000b-281f-4682-aee7-750b51274d18",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adaece0-669f-4811-ab98-03d3d65ae3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00faf73-9d3b-437e-9600-5dc2b928c6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a18fdd0-2bb3-4b75-8701-e2c5488ca1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf87a52-cbbb-46f9-8379-ff0341e0edd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5a0ee8-cc0a-4818-9539-10afb6fa06a5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e86b839-c5ca-46ea-bd30-c9d321be5492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a9eaaa-26f0-413d-b72a-1252d5a3782e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84da5c8-4431-47e4-b9e6-42ca3f1cb43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a491a3b7-748e-407f-8166-34610977076f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2bf1f7-2bff-4763-b7aa-b4ddd380a50a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01981740-f749-4500-b419-7408c7b5d7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315ae28c-07cd-4c4e-9dcb-bfbe32f8d51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b33f26-2e1e-4ce9-b4ce-397a9ad2a967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33543e99-fe96-48e9-bcea-47808bf73879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca5a553-9cf5-41b2-b48e-cd4b8221f057",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a53874b-911a-4317-b29d-6fcf494dbd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1510a5-3c59-41e1-8289-1c86fb66d964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954ed259-19e4-46a3-bf9d-f88684b4744a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7bfbee-5692-493b-bf3d-fc32d4e9fcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c82cb6-c1b5-414c-9a91-75b1c49f9de1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f46ad3-99c0-4f90-8031-8cf11901e408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f956837-25af-4ead-bf37-04695d2eca68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fd605b-edff-44bf-acff-10e7c7e154a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c97597b7-9c67-447d-9afb-489713e81654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b47c2c-9126-4d06-86d7-9cf3cf2dc31e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f7d31c-daf9-4575-a8c3-a749cb1db9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e3c7f3-6eea-4ff6-a40c-4d38edda11e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6271b545-19b9-4110-bfdd-9aeee7a68484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84dcea66-49a3-4043-8ca3-4ecef975a9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b92774-fb04-4edd-a626-6a3bc7de89c2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c780cdaa-dcde-44c6-bec2-9a03d93b985f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588de542-9f1b-4479-b3cd-8822aed8c458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4a077a-6102-4e7b-b57f-5fc774f308a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3684cfd-6455-4d66-8c1d-e3aa016b50a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4667d38a-cc58-4161-b2a5-65120e381fee",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216b3bce-75b0-4999-b4c5-df7512a08b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fa87d4-1f7a-4ff6-9de7-b27b6ff725f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd05fb6-81d5-4697-a7e3-92179e6c3125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20672e9f-2554-4df1-a6fd-badc1c53d70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f098e2a7-e8a8-476c-9c90-5ecd3006189b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03ce903-9400-4959-893c-089035207360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df13a6fb-3698-449d-b90a-0a354dbfc38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4ca2fa-cb5e-4b32-ac90-87b010e49c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5465029-d0b4-4714-85c2-890973befa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bc7674-7461-43c9-b6a3-b229a8448f01",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe6926d-3ef2-4a97-818a-9c6ca3fd1276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a590f95f-e8a1-45f2-8f50-ff517d02158c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0ef03e-593e-4f34-be8b-751f0e9bbfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2ff935-0dee-45c8-bf59-40e3c3b8d16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c98f0e4-c453-4331-893c-cc53aad00313",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef9d368-d5f9-453e-ad29-b7c3fb6b7a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb3e289-fbfb-4d41-8724-4182cd59fd66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae92a95-69ea-4273-92cc-44bac8a1a437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f422fcb5-5f97-4a94-bccf-c3af81aec689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecc2cfc-bbf5-43cb-849c-2b054a170b41",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca1beae-efe9-4c0f-acc3-88339f9519cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e755441-4712-4c08-a752-7c74feee6736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8209e84d-bd24-4f5f-b1d6-21284e739a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "553b78e8-ee55-49d9-a54e-c4648114edb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94abb159-fd4e-47a2-a519-378c9b8dba14",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87491a06-92ff-4240-adb0-3a149755cd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714e69e9-f9c0-4808-b27b-424126cab89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fc2614-7b08-4aa9-88c9-dabc1e18a792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a21f5cb-65d9-46ae-941d-f099ecc990f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6303f8-6271-471f-a47d-717971e83401",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f70b853-bda5-42e8-8acc-3bdcfe9feced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98854ec8-741f-4cc9-ad0a-58c4b5cda0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94247fad-14d4-469f-89f1-6dfbca997e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c2ee5b-d600-4ec6-89b4-ed9828e08b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bd9c7e-373a-443e-b30b-991155bf03c0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1203ea17-411f-4371-9c97-2fb8710fa783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fa304c-3685-463d-aedf-2c56e6052ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3433a5f8-436c-485b-8bc3-be9654c65564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b883a80-3c86-4cb0-be25-72382e8dffa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8366673c-fba3-4264-bb9b-0c2482d6515e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3e50d3-0f7b-4cd3-a4b1-4f7f3d91b4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9fe3c8-5089-4ee0-8393-1b735e434290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060d1002-a4ed-4b42-acc1-11bb6b407db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d62ea41e-1866-40b8-97cb-2dd04314a48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5365ff-f706-482f-9047-7a3a69de5ae0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ab278c-092b-428c-9472-5ad288a5f985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e810c771-f0c1-4e3b-85e2-5e917c8fd278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14aac2b5-f942-4bff-b48c-1eafb34beb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd2edbd-9738-4f80-b9b6-a9ecfd26f5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ad6b56-88cb-49d8-980a-99a0ac106ec7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e1983c-74c3-4ed0-b3bb-5a231de95790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771d2cec-6ab1-4777-a8fd-f700dac03907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda7b9a4-af00-47e3-a68d-04d8a70f0a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a6e7ef-d755-4c05-96c1-dd3784d53116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b109ed-dea8-4268-9e4c-73051713ccf7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e832eee6-5751-4b4b-8789-25bbf18b3d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9114184-7f6a-4af6-a1ae-eaa5e8dfaf70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99319b3b-0caf-4590-a787-818e57da5183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5724ee34-5b99-42e2-8757-0796c867cc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0ca5da-526a-4185-8ace-3db8a6797bcc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aaf9c5c-20af-4aa2-a739-91a3003676d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1610611-0d46-4d31-b44a-07a8f7c57817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58830a4f-4102-4efc-89fc-54b2733d8c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46623cbe-73d8-4e74-a61d-3d5dfccaac09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4237e1b8-c7ff-44ee-a24b-2abc77fdb6da",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecb8a60-1e72-4394-adc6-4a02acd3bcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e76e12f-82e4-4cea-8f5e-b5af581b5333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebc1b60-5a05-4dd7-b76f-2c34b0b09714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a557f16a-6652-46ae-b506-e5884c254e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17c6dfb-84ac-4c13-978f-739bda7c7519",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4cbee7-9c37-45e7-8992-58d621a43abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c37568a-77ad-4515-a54f-f1965e32163b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6caab67-f578-4e2a-8c21-6237d06cd8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "47a38e13-b2e0-49ac-90e4-f940c49a131e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d4ef92-2d76-4d79-a28b-142d594a9ae6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11661bc9-183e-4227-be9f-fe061f8bbbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a988923-6e96-4c0e-8b4f-f32fba94bb1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2500808-561e-4ff5-859c-d2bf6c26b95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "da574b94-2515-4d62-8b99-1033cfbe6aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c5c788-3a28-4bbc-be73-40b481ed6034",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfff291e-c021-4790-9e80-786609592e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a282c9a3-5f52-4c73-a057-51ca541881b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db134c69-d5b1-416b-9ae7-6967bbaa64e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eba3766-a7d7-4362-b33d-82d98ee5bfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82b1749-9c4b-425d-9273-ec45b4e3e69e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333201e8-ed25-4321-b807-d6a89ef25780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1edc27-5bbd-4959-95d0-7d15556f54ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5aac29-0ee5-4dae-a41e-ae47c00377f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9f807412-f70c-4fb2-8a33-140e43612d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e20425a-8bee-4f2d-872a-22903aaf3659",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff8188c-1d21-4968-8bc0-0d45c15570b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9e65c6-2417-48f9-8dd2-dc3769c2e87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a39b92-bb28-4080-852c-b588a927b454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "792a4fc5-a37d-4833-81a0-346f52240879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e824a2e-a692-4b60-aaec-9c597d6b82ee",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21089216-6577-4441-ba86-f4521c5c3423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3618a5c7-866e-4abc-85d5-7fdc63d47893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe4233a-067d-4d7c-aedc-aa03d2676cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8a395c-1e0d-4005-86d5-24ea2d8e4820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a0131e-3833-4344-a575-df0f47319ee0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c59befe-b8d9-4c90-978b-858b7bfcb0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160895c7-b6c0-4b0d-a18f-82e1cd35ca6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d09999-dfbb-4a82-ba80-78238982f667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "535cbc1a-f527-479c-a5c0-8676b3417ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c04c99-30c0-4e12-a217-47e90c8e533b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2537937-7100-40ec-8ca2-609e91c82260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e137bc-bf17-440d-9ddd-86843011c4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84e690a-92aa-45d4-b75b-cc6d87902c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6bf8ad3-fb28-4233-a830-5d90513d38d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb11ecd5-4c67-45ff-aa47-a2a77fd9fafa",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2b3827-73a0-4eb7-97a3-fa39fd7add8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf871d4-3a7a-4b39-8759-bf961fbfc6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf50d54-02cc-4191-b6ea-8b81274acb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7998fc9-ae42-4742-8806-0b1406312e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e026e2d-dea8-47a8-8f37-c308161447b8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04a2351-c7bb-4408-ad90-992543edbabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238c3bef-d56f-4b1f-90fd-035be64ed0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9294318c-9f40-40a2-9c02-dfcf9107ac6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "010bcdc4-1305-4f58-a329-937434ee7802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b891cc0-b720-489c-b04f-67a4de250278",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9cbb54-a117-4cdf-8909-d60273745768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64976906-996a-4467-b21f-0fa05c4607b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdefa112-4f06-4deb-ade4-78fb66cee83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4435778d-b56a-4eea-adb5-281a2d9e6c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9fa2c5-6c59-4ed7-8e57-3b803d827a56",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d115297-24db-44ea-9cbf-d9b31093675d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4fe08b1-759e-4898-9df8-83301a164e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d123ffb-d29c-496c-8cc0-8d8d282d2d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1abd07fd-432f-4ec2-828d-13c314c386ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5548cc-cc7e-41f5-a653-88e12e45d752",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5625567b-3f5f-4b02-ad1b-0054c287da59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53629c2a-8fa9-4d79-99e5-80658492a2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d50a78e-0f72-43a9-bd9b-7707301f262e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "60189d28-eba1-4f38-9ec7-9ba3dff691b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f4f1b1-3693-4632-a365-fb30bdd3db99",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea35221-3ac7-4f87-b6a1-f95778da31f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e213f3d6-b710-4898-b495-b98a0db97949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173193f0-68c1-437c-8874-935945b11bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e14827-0b57-40c5-ab55-2fa5b3aa1a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c072e3a0-5a87-4aa3-a9f0-e95aae91fadd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05f309b-76f8-493e-87ad-0736ef240f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea232aa-5c1a-45dc-9f52-20eb58f9b814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93702e95-230a-452b-b234-38f18bd5d502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23e63513-a109-4271-a827-2adab4a9b095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daef8693-eab9-490b-b9bf-b3650449112c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f65cbe-3e02-47d8-b16a-00f1d986f884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ae0c40-df9e-48be-8aa8-a4258c0d7051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727350c7-6965-4f8d-baf4-84e2de06f223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9a39fc-2e40-4b22-86a4-ef13fa62bcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933921bb-175f-4a76-b425-075c87e9040a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc5bf5c-23e0-4a94-99e4-94becf34bd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8a3128-490d-4969-a6d7-6321f96c1bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3389257b-ee28-4ae1-88a3-357299ae7ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d22a1dbd-90c9-4ace-8704-b5e69c85d042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca361ff-7407-4293-a204-cb3c83f1e417",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d7e455-7cac-49cb-8a42-4dc0d02ae6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59ebcd8-050e-4fa1-955d-f476ba71311b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9126f94d-7a1d-419b-a122-9b18648386d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "abbbfe98-b8fe-4b23-9132-6d8bb72d82f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746ba50f-f795-4cb0-915f-0150b14fb3e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea4f8b2-00f5-4e48-8e45-ee8ce3d0bf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7506a6ae-dddc-4a06-8317-1c6bf191a68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e8955c-4599-4c3a-b102-e1ab5089c9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "43ab8e81-9cc1-4a16-bf66-3bb2190cf636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af0858d-adb9-4480-b013-10ddf3aee494",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056a5919-f72e-4716-83a6-2ce0e5cfe374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d8abe0-1ec8-4634-835e-b791c6eab79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f412e7c0-d3b3-4da5-8f63-ed8d0b08f118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2dc6fb5-2732-451f-a8e1-a703cd6937bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c11144-69d2-4ed4-ad3e-79acec7a8cf5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79247fd-e141-4fcb-aa68-b84b32043bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12ba8ed-7309-443d-ab8e-857bd6fbe9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f21344-0f57-4b52-9c54-bda361746acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bba6ba4-1e1e-4628-9881-558cd13c1eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b078165-df31-44ef-80eb-8337d79a0ebe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd682ed-1037-47b1-a38a-9349d8026446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f4d9fe-7142-4711-b5a5-7f567f2ed143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcae9be-e28c-4160-a31f-7bfa2b45f861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "484c3e78-3b9d-474e-a4f0-ddcd9b6b9487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d2de3d-1f0f-455c-a6d0-acedd5905212",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1057fa81-9be7-4ff4-83f2-cae9b05b959a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af666d5e-865a-49ea-8673-57df6d3c0685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f71bd3-d97b-47da-8260-621d23c65738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3983c23e-ff37-422c-a585-1bd4931d6a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d47fa79-11c3-4cf5-8a5b-8dc03717eca7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a0a6ac-7467-4fed-a369-72b6a1984047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d021669-0fec-4ac0-9b3e-17fe9af9d53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733ca622-48a2-495e-8c77-5c01bb4ec34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "28f9e304-5689-4816-a1c7-115385629da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d4811f-5747-452c-9f6c-1e6707b0de16",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e821be36-66e8-43c0-8a61-145a184c2641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7798d695-aff7-48c2-b88f-6cfd35bd71ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e638a672-b657-4cae-9318-08ff92d408e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c48644c0-2084-428f-8786-46e5c13c831d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1431bf83-dd26-41e7-986b-5c310cb3adb4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8df5346-72c7-477c-9bf2-ef2630bbf23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544ee552-d3e7-420e-b195-c8b84b4ff26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af98a58-0d8b-40eb-85ab-46d08e234119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b74ff65-2122-40ed-837e-e3a77e73b64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0413ac3-0041-4772-87c7-7f96adf1ecd9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c240c9d-3ffd-46bf-999f-1dafcb16c319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e5f74d-fe02-4f16-8b4a-296e8c1ed67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b565b105-a75c-4579-b551-2c5f3e518bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b30db680-a349-41e3-9fd0-3f259b7890a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5716d5-3fe8-4926-8e1a-be6c327ea6bb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4215e9-00e1-4daa-8a57-9db57142f475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee1153c-8484-4cea-8ff3-f675ad3dc067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11e41d5-51b4-4e99-a14e-a2926ee6e425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f287e090-a199-4253-8c51-a636435ef259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c580ef2-8f7b-4d41-9957-a4da769d051b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4ee4b4-b810-4af2-9289-5d96633a8bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1809ac1-2272-467a-801a-a087a1d97248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c22c6a-6451-42ae-88ed-a0c622d40ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47c211f6-7518-4283-aebd-d1afc3687d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7e6084-a666-42de-a8dd-5edcdfc02484",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8a59cb-0ab2-491d-a73b-ce5441ec8acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805891b7-3eca-4479-89a8-78a15101c011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba19c73-2f7a-454d-a682-2fcd79629c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f74e00-56d9-4208-8ba1-86ba3e738026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38783eb2-048a-4e76-84fe-1ff96d82e033",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86e7e35-ad72-4ed1-a90a-f890f44d386e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bd70f1-2786-4e7c-9486-2e5ad935c11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c41ed3-a746-46fb-be4f-6f468b88bac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e917273-1d16-4ed1-ba9f-8759a2d6db8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318d9987-a6b3-4034-ae48-9b6833521e1a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31066c8-c9dd-4a37-b51f-d1912e71624c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2888930-fc36-4aa9-8a12-c06b004ce1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391704dc-1741-435e-9f5d-f785aa80fc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "700d0566-1837-4510-a620-b1392606ea7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09d9adb-a7b1-4af4-986e-04407fb58c72",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9345e306-8285-43b9-aecc-c17a657665bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96486df-027d-4a91-b8ef-be358a41ff91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d14fc08-f6a1-410a-a9bf-df0a30f0d678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f68279a3-260c-454a-970b-28f3fae531d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfc50dd-a84b-425a-a6b5-3402e4f4898b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65374445-d02c-4326-b523-7d3559cc727a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ff1d46-d2ee-40c8-bb7a-055436c6b886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e9f8ed-8953-4fc3-ac7e-bf9965829529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01faa8bc-8c39-4fa1-b496-78a4ac11411a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293608f7-ef87-4ece-a770-976a24f06d89",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72364e93-cdbd-4b05-896a-a4913973907d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8eb0f3-1c5c-4650-aff1-08c88b56c4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf91dc8-bc39-4804-b78c-4508fde83c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca9491d-1f99-49b9-a098-621c89822447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3306c675-4a4a-414c-9a0c-efda6617abf2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64e1484-ede3-46ee-b5b2-034d47039089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b28e970-5d1a-4c34-8a0b-bda7d7c6a769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfe852c-ee76-4db9-942a-680eb61d9cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf094ff-a6d7-4234-b5ba-cb4ac74e9a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec9930e-dd7b-45ac-b69f-bf6eb7aad39d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cf89bb-df51-4712-8257-af35fc505522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546e26a7-71c2-4e5e-8e6b-b45bc1d72762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580b532b-c8fb-4953-9a65-dbbac704f58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "44317712-d08e-4fb1-ae50-2ae4c297b73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0c212a-cb01-41d7-8597-616eee590219",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681d7905-b19f-49af-ab5c-9b94b8c2dc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a08eaaa-4099-40e4-ba40-d21ac64d34c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045e167b-5dd3-4015-8926-a558fbb3bafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "975e7e63-148b-4470-b776-9374bdb74366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227a2f0b-c4d2-4000-88ea-4774f5c88f9e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ec85e5-c604-4210-9f89-bf1d70e54ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52f975b-296f-4b79-85dd-cd3a99cc42f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ab67a9-1ec8-4088-bb60-3afec83a01d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1b5162-3754-447a-8169-8b52fe8b0936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffba482-002b-4b07-b036-055f1355cf27",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0174e446-aa7d-464f-bc13-862f94a1a28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfd15a2-6cdd-4d52-84cc-a02d41a7ced2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94680513-3107-483b-bdff-a61cdc1884b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe939340-8d56-43c4-990e-655177404bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ab0217-f111-466a-af6e-8fe5c11ae369",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac8a46e-c3ce-4171-b191-8a3aaa094f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35eecd92-11d3-4781-ae85-a51d3daa569f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8fa6e7-4aec-41a7-b0c9-75144d1b75b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7bf034-37f6-4a88-9892-c671a97e0341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97989ea3-04d8-49dc-81ad-4e1386d41016",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473234a2-f265-4046-ad44-72d9015b6571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00142cbf-d658-4b9f-8343-99fe2712b5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc581079-b9cb-419a-8157-a55e014392e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2df69b75-7621-4bc0-a346-fe6ab5794b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65270d42-e24d-4ed1-80d8-61c02e779f96",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6080ea8-f43a-43f9-bf84-654610833ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdede0f-c4fd-4343-8355-5ae7417a0a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3227c0fb-06c1-4059-a69f-4ec23e408b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38c11be8-a1b2-4a6c-9d63-97c3cb3b6f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bec4376-0d6f-428b-8560-565b2d2c7b2c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31aff9f0-7ea7-4838-979b-25ad04aa710a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75654256-615f-48c2-86f8-116d397898fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca09430-6afa-4d5d-8340-b348625dbfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daa8c292-5325-48dc-bb77-4dc7c05a19f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d1ab8e-f588-49c3-969c-fc4f296bcb7a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40838fba-5a2e-4282-916a-afb897094bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b35bc6-de4c-45d8-ac2c-6deb932b9e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ea63be-76ec-4013-a6f4-a690b9e1c843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8a8712-4305-4052-b4cc-ba2107f41d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2b1e53-17ee-42d0-be2c-e1d0b56a59f5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb634e25-69af-44ce-83cc-e92f3fa6e3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2af069-8364-4ea8-be19-b97e1d54befd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089d5858-f0a2-416a-a768-452efddbfdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c1aa4b-8ac5-45d2-91b1-b25bf7acfb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbea165-2719-4ac1-ae5b-2135f56f35e0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f65f34d-3d8f-47ba-a457-c8366bbb53b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6260dd4-4101-457c-bd2f-55dc38f7d62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0e2b59-b51d-409d-a591-db036aaf3daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7164d4-7320-4705-a82f-cb1f578851af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942b4aa8-db27-4f4c-a94d-fb9da986cb5d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de457e82-dc71-46e6-90c6-71be6a3b84be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdbd5f8-d0b3-46ea-944d-2ea9f049f7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddfc150-ebb5-4920-b9e9-f62f349a332b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79060108-8d7f-4dd9-adc3-e99f97225243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7706d151-a5d2-4d39-a35d-fbff08abf188",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b19719a-5bd7-4462-9fa4-09e903b744ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9451d9-17da-4b0f-b232-3b116ddc9d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b117afe-d493-4830-bb21-7c2f2c08174c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee00f67f-7e73-4d8b-9f1f-6014bf60b794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b499102-6827-44ed-888e-d407d7af403f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b773f0-ef30-475d-a3c2-868467f9ce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52294d81-b07e-43b6-831c-3a014837d0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6686bc80-e0c2-461e-be85-32e2329dd520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "75a20f7e-84c7-42ca-a9dc-261673ff8cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d1942c-a931-4727-a49a-f910ba31c688",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fbbf36-b7f6-4074-ba95-556830278b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f149adb-d020-4d2e-95a8-007ae53f9c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f4e075-ea1e-4fb0-b419-0951637da888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "269e3fb0-dec1-4c33-8f3b-77a1dabe420c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b18d4f2-d652-4aec-adb2-e62442f4a659",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a82b12-9760-4312-a874-c0a7c2b33468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a69c92-3bac-4a4a-b64c-65f8ab2a4fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f844ce-54ba-4d46-8e3f-80e5e36f712b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d98f7487-a591-4a7e-b84f-2084c498e767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8555f9ef-3a2c-468c-87e6-387d947d61bf",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e32fff1-ef31-41df-a588-f8cd4cd5df0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c9a095-bff7-45b2-8c07-7d02650b1604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bda31a-5426-4aba-8ad1-807234d6872a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cad54381-8515-436b-9c7a-d6f45dce27ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547209f9-e374-4543-96e6-f7bb0fbcf734",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191fd13e-fd49-45ad-b39e-36892173df95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7e204983-bb35-4d55-8fa0-67cd1efb10ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60aaa9ea-9582-461c-8942-797d27c77122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2b0d86-e119-42ec-bebe-fdc1ec630199"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a58f2d00-2477-44c5-991e-d3753dd11f9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "738a9351-c4cd-466e-8edc-04d42d2ab94b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6727461-9881-4d45-8667-a9328a389158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8153b61c-2fb7-4efa-b643-a8e1dd80862f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9292f055-cdf5-4d39-be93-0d7995fe235f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "811e6116-77ab-4f5b-a8f6-7b8ac083a910"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ff0fca1-0157-43b5-9e65-3d872c741332",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d666a35f-e0bd-435f-a868-48a4b10dcbdc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1937db2-04fa-4010-b74d-1a4d6d85d0a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efeb2d07-9a60-4ed7-b437-b3a72fa355f5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56d18f21-b995-4654-83bd-4cd778027100",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "485d53bc-f02e-449c-b207-bde83f3933e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5f50985a-375b-486f-bcea-607dbb5f85e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60fc680d-fac8-4550-a0fd-4ac8f723261f"
                }
              }
            ]
          },
          {
            "id": "ae0a6c46-900e-48fd-b849-5f9b30a09433",
            "name": "Positive Testing",
            "item": [
              {
                "id": "774826a7-14e6-4e4f-bfa4-ecac2dd9afdf",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9f214d7a-a851-4b1e-b212-70b0af5852fd",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e5a4dc-9bc8-47e5-a673-95fbeae298e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "90815ee7-2b62-48be-81ec-29df2d69ef3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b5a35f-6014-4bc4-b9c6-88f4e0577d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30e4876-b411-4ec8-9ba6-bc08f0e2cc85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41b5b416-826f-460f-be2a-5dfca218fbd5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cbf2c89-8380-41ef-a5d0-546e1a1b64b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7a97fcd-161b-4fbc-996b-7eb4d89502f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ee5c76b-bb19-485a-af64-fa7668f64aaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4e9ba3e6-9272-44fa-8d97-72f5b8dceda5"
                    }
                  }
                ]
              },
              {
                "id": "ed593136-5808-411d-bf7c-8411ea0efb1a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6db59bbd-4227-47a6-986c-96067cd784c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afbb8e25-892d-4ca4-bb10-43b257156ce1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df887187-1f70-484b-aaca-747ecf77bba9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c55de7a7-413a-44ec-955e-b140184fdcf1"
                    }
                  }
                ]
              },
              {
                "id": "a5b66344-7aac-4e98-a00e-a18217406967",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca4ba467-1e3f-4279-9814-a427e205aa1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30868ecf-527c-437a-b7ee-7354d08bfad0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "935fa3cc-aadf-4b25-8321-d0ea074d4234",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16ffa2bf-a4f6-4c27-8a48-fcb8a56a18d2"
                    }
                  }
                ]
              },
              {
                "id": "cc63df88-ff54-46c9-8212-548c4c87d16a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79d116ee-52c6-4fe0-baf5-3b464427bdfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cdad985b-4a79-4bc9-9e2d-e0fef2011396"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4761b146-ab38-457d-8f4f-668c78add998",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b7016d0c-1253-4db5-bd32-bd5ddcbd66c9"
                    }
                  }
                ]
              },
              {
                "id": "d3d2ffb5-240b-41df-b5f5-dd4e9917a705",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b9b8429-5f04-46a7-af98-7b2404a0382f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7202cf8-9516-40a6-9dcf-8aaaa00f9e35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cc1a8a6-cd47-436f-b4d0-cfc4e346b51b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "37426373-f78c-4db5-b493-9b93d54beab2"
                    }
                  }
                ]
              },
              {
                "id": "fa0cea20-fe33-42d3-8bbf-d6856d600ce6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6d6637b-cf38-4d35-84a7-8a2fe14dcea4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "695282d9-441c-4cf7-8a75-4d7404135ce9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dac9ac8d-efdc-4d40-9af8-68752834d120",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7343abe1-0907-490b-8996-afbc6ec7f2a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca2c4813-8f44-4db3-9ecc-84a592bbdf4b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5beb05c-2c79-4bd6-89a0-613a77454d7c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e937176f-056d-4b5a-b517-105f57f8584e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0620a4bb-87da-42f1-97fe-beefb1d1e58c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14a487b0-cb3e-4ecc-aea9-29a298031bf7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "aa51e5f4-e514-4655-825a-fb8d6067bd9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36228480-eac5-43ba-8090-0cae58815654",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ef38b9c-c906-4957-8af5-4d2238f0ee15"
            }
          }
        ]
      },
      {
        "id": "f5fa4c2e-2be4-4c0d-8d57-233e33324c09",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a376a8bb-1fda-46a5-81a4-2a3b0da5f515",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad1fce44-6248-45c6-9d13-4e3ce1359123",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3df4408c-bb2d-4b3f-8802-17ba0c74a1ac",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765a5579-f1f8-4ed0-864c-d5bd2747d3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e282d28e-0afb-4c3b-b5fb-92d672a57ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12a991f-509a-4d9f-8d76-f9a89b176f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa64a76-1e32-4bb7-9a85-f310e1bae24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e622f3-6b47-40c2-ae46-18ae45d8a016",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f551be-d7be-4b9b-b9cc-8556b2f66c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b7f706-70f9-4ac3-809e-26f525ff6e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3730c93d-b1f8-4390-adc5-54dfef13507b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "77661f3d-53d3-4bc3-aa23-fe38c793c8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bbae19-5ef3-4868-a7a1-5fe6676ba09f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3dca24-d50e-4eb3-a5e0-a3305007f61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8aeacff-e858-4b12-af46-16cafa2a7081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46731e9e-ac25-491c-8973-023d407adc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6beb9e78-84b4-4e61-a87b-d9871418090c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc5c13b-60e6-4fe5-b563-d201a3b5d22c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2165f9-54bd-4ba1-9f5e-c8efd66dbf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901b65de-c4e5-4352-b94b-c3d14fa2a9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330bc10f-c70d-4625-8f62-cdc728b8028d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4daf5ef3-4647-491d-bfec-cb0990b27307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1db02c5-4214-4128-8383-d363e1e4b9bc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf8bc58-6d1e-4652-94f4-f088ab1c0b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4e8122-2a25-49c6-bb59-57c83caf4cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2081d9-6795-4923-b2e3-46d6572e277f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c8227a-ae3a-4d9c-b237-5bbbabc8f9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b012d78-97d1-4150-be96-d445db71384f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca6492f-67e9-4360-be78-19fcb692d041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9944deb-07ae-47d9-b242-e5283db4c6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e770f86b-1dae-4dde-9536-467398bb6d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63ea6b51-ce98-4620-990d-febd494050b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f26c109-3952-4f45-93de-e71869566049",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a7fe8c-482c-4998-b975-d3cc10aecc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af18958f-c283-444d-96f8-ca8ce1500eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50212084-8383-48ab-b277-88e4178eb301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "41ad17b9-e14a-462a-9c4a-aa62cec6f27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78386a4-c25b-4f1b-9915-47bdf70708ad",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd26be26-f50c-4a38-a9fc-fb0b93dc8326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55aa7bea-aff0-43f5-908a-62b47ea8322f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9bf146-f0b2-4e4a-87b2-74b319b01175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eaed044-7337-445a-9b70-b507b48a8a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bd75d1-c60b-47d1-9456-7a5e4850e4fd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400d3841-0249-40c7-aa9b-c1c05e3001d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c01d78c-ab36-4914-a9ff-92ed3873aa97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef10a53-829e-4c99-901a-d31e8e1b0364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1748d3c0-6bc5-40dc-a964-4282fe3c4bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80729c9c-2689-48e7-b37f-145d39e2b017",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d6bd0c-1c66-4e03-ba77-b9131e866203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83cea51-7c8c-415e-a4bf-3fda391789b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dfcd7c-2e82-4f44-a596-dcd5cfe6cb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75b75aef-8a9a-4caf-bb02-fcdc81f5fb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c38452-4e0b-47de-8902-bc12bfe915c9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0113c35-4e50-4a42-bc13-eced0f21ab49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6728d5b-2c1c-4fe0-b470-d89bd1e36c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708d0ced-49c9-4788-9420-2dcf17f88715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d51e04dc-0c3b-4304-a934-709e10677f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961f2c45-2ffd-4d22-b4d8-a3c708b21b33",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e808e82-d687-4077-896c-05c641a6d137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47ee45f-4e31-4be1-a601-1892ca0806ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2af7d3e-121b-4af5-97a9-fed5e5c2b38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f47ce262-3466-43c6-aacc-ffd36d87d8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436350ef-caba-438c-bca9-3fe5fa7a1994",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a849217-e644-4892-b8e5-2a3b1e342dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5656f2c-a183-466f-82fb-71f4c2406b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af1ac68-016c-4f0c-9b02-ab416ce60067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5aeef71-8ffa-488f-8299-f1594feb6ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e741aa69-6498-4295-84a8-81713c0185c6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83474ae-6643-4482-a6e6-9434ff739aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb54ecd6-ae4d-4876-a1f1-ba2b3fab16ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5a2cfa-9011-4e22-a6c5-639d9e49ae5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c881bb55-d6c7-4345-9acf-6d97491691fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512ae3f6-6af3-4b46-9da1-ada2afbfcddb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a639060-e77a-457a-a63e-f451ada22eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b241e70-427a-44a4-bfb5-3a988acadeba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ad9670-128d-4698-96b7-050d35456d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b5699f-6140-4ad4-90b6-cce63ee5cd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f52c33-0334-4005-a2e8-0b1f4ffa78cb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5996b300-210d-4411-9e76-bd2890655ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbd82bf-cb9d-4437-9a00-8eaedc81a5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ded0d0-4927-4a56-8c92-87ff8525ea32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d316ed51-67f3-46ba-9f29-eecddc0cc360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55cd209-d3e2-45e6-9724-c3dd020105be",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e570e4-e4e2-4bb9-a80c-593007bc784a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda7bd0a-e173-40de-b943-0e2ea1f70d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf320bd-d93a-40c3-8d57-044a7b306051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1677bf79-2af3-4399-b2cd-897cfd064118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d1f1ae-3380-4dd6-be92-3d48797ebc40",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3609f063-3669-4479-84d7-e81be92b2eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f9d22c-a7bb-437d-aa5d-3d9638d78e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c99012-d455-483b-bd67-eadafb8e124a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a897ba8a-3a1f-47a2-a7d3-6de2190c5a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f10bd8-afdd-482a-b8cb-906b14d5694c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aea42a0-c009-4a6f-8bee-15af2bdd8aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6afa98-11a6-469d-b73a-1370111db531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14b008b-99db-4c09-8fea-55de19e2ebdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4e732d-3805-4b1c-bdfd-5701feb81c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a94a43-ffb5-4eb4-8f46-9fd050005565",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2b8325-6a9f-46c5-b27c-86a43357f9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64da808b-d6cd-4b3c-9c5c-9e259e6871ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c091b9-f1c2-4a03-81de-1a9db4687687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "782e37de-119f-4374-ba05-0b2d5f35eda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b28fd2-daee-4039-b2f2-18f4190ef29e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1b00f0-9b11-4a9c-9302-dad40ddb3aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d91c6ff-7f88-4bef-b899-5156164e9c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a44383-2305-4336-ae6f-a71df6d66961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a70eb71e-e1d6-4282-8ccd-3a348dc8f05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d764738a-e239-47ce-a198-48bba22b5db8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694a0876-893d-421c-b7da-099c53328fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1718a768-0919-46fd-8b0e-f42091447711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06046d8-3ed3-4e91-b3bd-e3827b56a824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9df601-fac4-4af0-a0ce-52cd80038205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0b4b32-aded-46c4-809b-0ee54fc44f4d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9582de3-1a92-46f7-8521-5515bad5aa2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8789c83c-68be-486d-82cf-7236a761e5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164267f2-d5ac-4d3a-aae9-2a78749b6ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d7c706-df66-4233-a519-1a87846ec2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e2dda7-48c6-4324-8bbf-c955b098e20b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090e24ad-632c-45d2-864d-8be6c494f17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f54e724-2113-46b2-9ff3-b75702f89453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e72ae5c-9c11-4b94-a1dc-b553567c2448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55ad10f3-92a8-44b0-875a-5f217aa5109d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b88107-f342-4619-adcc-f53ab78153a1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaf424d-5f75-4532-9e51-d707fda6b8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a618e5db-9f19-4583-9318-a722a21c30bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04008e3d-ebe9-4e8f-a8a9-5c71ff8a2072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19296a1c-95db-4ff4-b9b2-494cf6220d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60f66ba-7046-496e-aa91-472427107550",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8840ad9-2975-4839-ba4b-ec31c15bb96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afed4c24-d378-47ec-9742-afd125f62ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6846537e-3858-4ac9-b242-5885f8d208c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "242c8fa7-630f-409a-9794-06bee21f89de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec29380-c033-4585-8f1d-228d5645462e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32637e8-d547-4fe9-ab0a-3a0a5ba7cbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8b8c25-1d64-4c74-acf2-2b933d65694b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f51185b-9558-4a11-a701-5e0bbf4eb0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d41efa89-ca40-469b-8218-6565ab507e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b7b9c8-fead-48aa-8c46-bce1a78c8bfe",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57216e12-5ce5-49b9-964a-bbf4accc3139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddb4d0f-c7cf-426d-8c28-4059aae38965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86ab47a-4a77-4a86-abc1-e0d01b1ff4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "237461ee-bc47-42ca-8d02-242c1cfb3a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdf813c-740d-44e2-8935-760d176a31bf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff25d375-dea7-4804-b927-8ce482d3d84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc83f070-d94e-4904-8f0b-4a9f233afe3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bacb76e-2e2c-4173-a085-f9849a9c41c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97828daf-8d39-46d9-a749-70d2ba710721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39566202-29e0-4095-b09d-494bced2f30e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3f5c53-1fad-4bf9-bf0e-80ea73057237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f175387b-bcd3-463a-a3cc-2f8d345aefaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60107193-ce0b-47ca-b0f8-3dc895879fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43788af4-019e-4233-b05e-5e9dc4a1b6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6097241d-d42d-4e25-b93f-4fe37fa38822",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c201ff9-ba68-49d7-b28e-afff3c0d77dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42fd476-7bc5-4bdf-bd7b-0f715a02c613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a2ed86-ecd6-462a-8cf9-da3037d0c8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22e18009-2c1c-44c2-9056-84016a497c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10760fdd-2c67-411f-bf75-c5f24a7bb33b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13f5dee-e502-49aa-9b6e-66b83f537575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2612dadf-a487-4559-a898-ce64064c278f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e33e10f-abbc-4afc-82f5-2d026002fa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b20be9c-a4a9-44d8-99d7-321aca654f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b7cc52-1440-4142-bf97-92cc7e5ba71f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5997907a-2ba7-41d7-9a34-29fb4eb82b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c61c11-64cd-4606-8b30-ba0715400a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e572c3f0-92c1-49fa-86c1-df79ad6f4f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "669934c2-ce96-43ee-b97a-8be4b630a1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74bd0ea-82f9-40ba-bad3-2b01777eb92e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21108d3-c041-48b7-8d59-6f964dc015b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23af7bcf-67a0-471a-803f-9c4b62cece1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f226d922-9a89-4dbb-93e6-5959f822147d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "593f0664-52db-48af-8d0b-2a53fd836da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13d6622-bc87-4d94-909f-32849d27c987",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980556e2-4d23-495d-b5e7-159f9dc8a0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2441bfe-ee2b-4eea-a2a1-4af96879ad21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4cc692-95d3-4b93-afa5-bb6a67f5bf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56528b51-8b8a-4ed4-a055-44b734845e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655e0ed3-111c-4dc6-bd70-102af3f7d814",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33862828-4cc4-4434-bbb5-daba20e792e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a9ec9b-4fd7-4faf-a5b7-196bb23f59bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7674ad-05e5-46f0-87ef-716fee713b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "584533ca-e039-417c-b089-350414d88e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f129b98-23d8-466d-9947-9af25f2a516e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437a4b66-a210-486a-8f55-ff15d09a6fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c38654-a890-4842-9101-5a597f0c9547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e07de04-0864-40a1-a627-80cfa33588a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84d5357f-0ce3-44cc-b67e-ec5238bccf24"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15bcbac9-80a2-4146-9e2b-515251b9ba0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3dabe589-7eb4-4f33-8669-6b03f3fdaf27",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b85e1df-8034-42d0-825b-8de7b71a0f90",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8da6d546-a150-4790-8e5e-8b72bca62281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb657dd-0110-4114-833d-47713de312ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c733dd4d-5458-4c32-b4b1-8ada8dbac5c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b9e2c0f-571f-47d1-88ac-770981520347",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bd51c3b-6099-41e8-b45f-3dcaa83b985d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cafd0fc-04c5-4087-843f-494fe64b4652",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b8f7d44-6f78-4d2f-8a95-f2b238988667"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09abdd87-a575-468f-865b-ba67afc9097c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8baecff3-24e1-46f1-8e49-6a2fd644766e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e380aef-05f1-4fa2-9a86-db4f95c3931c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e3bb8a4-08c1-4fc3-881a-b648b2b356ce"
            }
          }
        ]
      },
      {
        "id": "7fd8a212-a3a8-4998-a0be-f80a87f89c88",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "85958f52-1942-4557-8198-ba0a373661b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b1b764c-57e5-45ae-9df6-38a1f75f94d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "186c79a2-f22b-4989-8ed1-5742756d88b6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf3c60c-d4f8-4b0f-8d90-8ecf8eb94f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8489ff-8ee5-40bb-a90f-3a54b321560e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6033f62a-2da1-4bea-98d7-28853c1a35db",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1393b3-82dd-4371-95cd-02512869159f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f29441-6fed-4243-882e-656b3d4a35b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1062cc-abde-4564-abdc-8d68db56beba",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c5503b-9ec4-4401-8bb6-0aba554f49e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cddfb2-ae42-4983-a4e9-70e738739be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a3082a-f15a-471c-b75d-af84e2220c19",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319297c8-5b3b-47b8-a930-3a0d6ccc650f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b26821-ffa7-43c5-9eda-675491876ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eada44a-e709-49a7-ad70-f4c500a329ee",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b70728a-c924-4229-ae95-2b3ef25b345a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a44425-b8a3-482f-87e9-4e8ea105e78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef7f56a-9267-48a0-9b8c-5b881abb24b8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08654fdf-6af4-4378-a5b3-5bd128fb57b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab77684-e24a-426f-94b0-3d94026935c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516c402f-a12f-4390-9812-315c362dbe77",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542d57d3-4336-4e0f-a29f-b3b0b0f23e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3c3427-1eef-4c17-a077-cb7799a7704f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c8fa44-aae2-48a3-9d2f-25233b04b513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae52b66-4e4c-48f3-8cc6-f7b8a7ce9dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98dfaa9-bbdb-425d-b970-95c4579c4649",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d72913c-9275-44a8-8f92-984ae81cc726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9ad3ed2-3f26-4c9c-8dea-34c7c447c8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fa1358-514e-47c8-8ea0-f6a9ad0af2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48177c3-8ba1-44d6-bc4a-fd6e9d7b4085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868e9e9a-5eaa-4987-b510-996a09e5373f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069d5345-cee9-4e9f-b5a0-f0e18341dab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18b6f60-ec48-457d-ba48-268048bb75dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1becbc80-89c9-49b0-b881-2c74cf0126bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94335c7-c3de-413a-aab0-cb2d6ab9f037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389b368e-1143-4bd3-bd9c-f5fef1463367",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678afbf9-2f09-4aa9-9c29-c7010598d5b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b0eff1b-ffe6-4672-a0fd-8e50bd74acff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2f4b00-4d5b-4302-ab7e-79965c6818e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c1e05a-7f1f-4d60-8c8c-19d62bb789f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3ccdd6-2aca-42b2-9186-17a23943c860",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4f3a88-6315-49fd-9003-5288aecabbc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd84f7e8-c25d-43c2-a66d-af390a8a8176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3aadf3-f63a-485a-b4fa-c0d0dfb100b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd7e009-b2d1-48db-9333-2a3980b784a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3247374-4210-437a-8e6b-602fdefd98af",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd47ed9-aec5-48eb-9c2e-a59b1b34ee58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc9170f-5e9e-4918-bbbd-13a8a36fa9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b711d7f-2ef7-492d-b41b-c2f597d9ea89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674edb4f-2dd0-4329-9ee1-7d2c6e9dd5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d98747-4705-421a-883f-8d6c9518165b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6054256a-2e42-41ae-83c8-d35f14dd4c58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bdc361a-a13d-4434-b5c2-c3252228a9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae471924-a5f2-46f8-b399-c54aa1738f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286bee7e-ef5a-429e-9f02-eedcbe663568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4aed6b-6b3a-4ea3-8439-d5500f4b2ba6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22acd373-8b48-47f6-afd7-aa6a7dfccadf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c5d27be-8c0e-433c-be3c-211d1e8a862b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5bcd3c-a2b3-401a-be95-0139ca28d7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2daef681-28d7-4fbe-8c42-7355ef31e221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46455290-7ee8-4519-bced-fcd9e6705998",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c299448f-ee5b-4666-a3b5-7db489cc5e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6b0226-c3d1-4f91-9206-46ace2bba9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3065da6e-53f1-4c3a-bc0b-c404bd32b74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97759398-963a-48ad-90ac-9af871a22ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf81dfe-4a69-4ccf-8ab7-375e5622c21e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ec7488-fea2-485f-b78f-7c91bb23a133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4acf4fe6-79c4-458e-82e6-5155e45db5d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f7081f-85c2-4e01-b0fe-7c006f1a4da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3acc78af-3bc3-4339-a3ef-8e7512f1a39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967c76d7-8c49-441a-8a79-13d2de2f6aac",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5b4075-3a72-48a6-b2da-f29afe6eec3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8956fc-01b6-4990-8da6-97030a1d18f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa28010d-94e2-42ae-b4d7-733c02790466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbef8b8-a852-4feb-92e9-1a24e9062e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b149393e-4cfa-436a-9974-ccf3ddcc6de1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f10559-c2e7-4e70-8f5e-17d4a2c094d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1764df-658a-4fcc-8be0-915607726b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131683a3-5201-4268-a71d-51fa4fb70d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2a0cb4-01e9-4e60-83c7-482063ed67ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64971bfb-25e9-4c3b-a6ec-952fab64f201",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dd905e-73a2-4939-8430-12c4302cfe5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dceba228-9900-4f7a-ae63-f0af0b298623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f292ac24-7037-444a-b939-4a3241940e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c351f36e-a301-4430-a6dc-dd438cb4affb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de68a2c-b770-42a1-a8ec-0ff7956cbd82",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac1889e-9b69-4c01-9f74-506f882fdadc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05941618-2c4f-46c3-84ec-b420dcec25a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688bde7e-db88-48e2-a369-4b401b47862b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936b17b6-e0c7-4347-be44-7550bbeda695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68dc95b-2eb1-4a23-9d6c-74c495e060bd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22205eb3-0b21-408a-8ca8-d5bb37dd1f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12dd343-a500-4bad-bbe6-b0f1d3e8102d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5066415-8522-49fb-83e8-a70e5baf90f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6a4d5d-1f53-4789-aa57-5ec2b75f0e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d54a517-dabc-450e-990c-42b5413b3270",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6efb85d-0e06-477a-b72b-62a1910fbae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596635cb-ba60-47db-b09f-16315f2359a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0f2e99-6df0-4109-8453-366282a8c4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7435403-2c44-4b12-b6d6-7036c7e664ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ced55d9-5c87-4e9e-8c82-72f89b7b8954",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bed310-96c0-456b-a6d8-09c8ddd996f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0735616-6a66-4cfb-9a7c-4d6c363f892e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fdc2f5-127a-467d-a7f2-0bbcbeb28201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b261f2-df39-4863-ab76-fe2901b82067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7949581-63bc-49a3-bc66-e1cdd91df117",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a6eecb-e4c6-416b-a618-77a80e1beee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23154b60-a08c-4101-bca2-6c9c980854a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa0d477-2d9c-4a3c-aa4f-a2abd8872f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4797d56-8293-4297-81f7-e4526ba9344b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde04dda-1037-4a5a-b853-5b4b30805ffc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3224a8-83ad-496e-a552-a9a17fed97b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e26b89-9401-4db1-8b9c-cf3668bf78b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434509f0-4802-42c7-8578-fd6baaadc5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39806166-3017-43a6-bc72-68efda9484db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052abf19-8f80-4736-8024-326d5116f2eb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22784790-a116-4ec2-9c3d-4dcb3782a1e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6323256c-f3af-43cd-9ea2-84612be3fc20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a3bb51-9da6-4bfa-aa1f-eaf12303c02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4859df18-d4e4-4a81-9ab0-d4147d039b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65af5957-7356-4d31-8347-b055a7863a20",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38217121-8570-46e9-b588-8b93bda1626b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e00102f-64e1-4428-9ab9-f9a2fa37e2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ae212d-b0ac-4fad-8fc9-dcb12e387d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e225f173-f6f8-4ec0-b80b-1aabbe0387c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16244c89-ce2f-4836-9064-89946ed0925f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdde3c5-5080-44b7-9a65-a06a75cd57ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffeef712-62f7-447f-84ea-8b4c21df3ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b8e64a-04c6-4b9d-9109-00b6d96df83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d68040-56f7-4e99-804e-50f9b45e5282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c061fe7-26d7-42cf-a8ff-a444be435c8e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f965180-0fd8-4c4f-b54f-8d2e564a4d9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0fa226d-597a-40f8-b615-fcc1243ba79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5ba847-5a30-40b3-bccd-48a832aba05c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45348f5-f677-4237-a4d7-02e379ef6186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c094b5-c762-4a29-957a-112fe9abd2ad",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1132e6-9161-4296-aa20-f9f1f2d83635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fc8f33d-515f-4717-bb5d-353e812d8a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc50ea8-3cfc-471a-8f5d-b4b245c8de63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aecb337-7bb1-4a85-bd5b-0eb097dd1de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f70601-987a-46c0-842c-80a78f87435a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa300f98-d566-48ba-98b5-704665db87ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef267723-a278-4bc5-b128-2194ff1a7594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c3c277-37f4-437b-a0e9-5055bd5976b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369af855-d495-4af5-8574-f81d258db158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c8d61d-6188-45e0-99aa-3925a32bf844",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5378b6f0-94bf-4f52-9041-4dadde71a3d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e2c6ec5-addd-4b24-8dc8-aa199f65e816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1546577f-f597-43d2-b7f5-a839d7cad13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef55b44f-2260-48c6-8cde-77a2296574d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8043c665-e3eb-444e-9f43-76d75842f55b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b889c4ac-efa2-4400-9b93-43bddc787ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9900dd46-f71c-4b50-bb27-ada6558a067e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8c5f5d-08b6-4323-9cc5-1e93a04cd8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6fd029-ca5f-4ce0-866a-c6bd2396b823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab5a19a-61c7-4354-94c4-dd8fa870c538",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da4648b-54f4-4907-8a4e-d817d6f0ab20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "039e6840-cb43-40a5-abbf-503b8e351a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa7a456-3b2e-4164-9496-77be8843ce3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3584c280-ab7e-4af8-8ead-dd58cde2a47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8335c63-f73b-4c9b-a29b-05e9cf354c6b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce68b0a9-9930-4fc7-b9fb-33b52fc0c563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549fd1a5-5e93-4f7d-ab4d-a0cf6223495e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0647b4d6-c208-4fe6-96d2-75d53b667826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032db468-530e-4540-a54a-fa5bc84ab875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0ff599-ff9e-48d8-8352-1a83a78241b0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc52b170-7b0a-46f3-9f44-02fc0af27b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b8cf09-5010-4a06-b0dd-522ff147fcdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee5d4ca-61a1-48d4-94d8-4d5b14328f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c48d0a-2e20-402e-889d-ee5e113187b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080a86c3-9db7-47ad-8176-4e37d5665c64",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2076aa4e-75e8-47e9-8c95-56b1713c878f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55b8c4f-7380-46df-af3b-ce10c9cbe1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4405d2-e89c-4cb1-a12d-deff08802a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8a47d3-79d6-4c16-85f2-395f5e18e2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7bfc55-9151-472e-9c26-ebb7cf1e9b10",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aecd4ea-9679-49d8-b0f7-904af0777200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0719748-9846-47fc-acf5-3e24ec57fb27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1395b06c-82f6-4a49-a92f-287b29393832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab9d51b-166b-4357-91c6-6073d7efa09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02376c0-bdaf-4168-863d-0dd0ac9aeacc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ef48de-870f-4dc8-9f1d-d625f650186d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49193398-fbce-4ac3-bf00-41fc60ecb6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442c82fb-1103-413f-9347-983a907cac4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8a5e80-95bb-4122-813f-d3067fe0a354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9c5992-b34f-47a0-83b5-619fa1fd9050",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a389fbf4-e443-4bcb-88fe-82b4117c426e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9b7959-cfd4-403b-876c-66119a17df14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047ebe0a-3f00-43a2-bc9a-bf1cd4231b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f52a4f6-f981-4f7b-8b3a-ef36343b59be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6170bf1-23e3-4aea-a26d-467b7ea747cf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc2078d-7a5b-417d-89bc-e22072ee2665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b666d63f-7ef8-4fe9-b981-03d433b2ed98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d695f2e2-4308-40bb-be57-84638c034c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb16da3-6f8f-4e2c-930e-3fd4b7ce67e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82959489-9e40-4a07-9441-bf26ccdee409",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7977513-0669-40ca-9b3b-898e4538935d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78241450-aa85-45a9-87c3-e9fe9e5011b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79567b8-22bc-445f-b082-04c04356f776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ec49ba-5793-448f-a614-8b18109a7a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36240d8e-5c5f-4d7b-a574-2f4134133706",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f900061-0c3f-4b62-882c-e4517f36685f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff8ed1b-0e3f-41d1-aeee-a773d9d465bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80781c17-aa1a-4c18-8119-69ca9f1d9666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2eb18d-00e0-4692-a909-554353013d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad0f945-0421-4f20-9108-c023a8602e0d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0946d48c-ed87-46b9-8b8c-27de13d93fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501c55a6-72b1-4edf-ada4-a48b2b37e272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2a6604-2428-4bea-89d6-c64ec960a4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4526b23d-1f2d-4cf6-b807-f3cdbc5019fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910dbf6c-56b4-42cb-a8f3-7572375c068e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17eedc22-a967-4cfd-b7a9-6ff8dce4c9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf13423-29ea-48e6-9807-fea1d09af291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3171017-b321-400f-bc37-0df49c5cdd6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff0a9e9-5203-49af-8c55-51622f8c1f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98167c72-c9ef-46d4-8587-9ba543ec0ab6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfec01d3-3b4a-4f97-90e8-5589a0b92471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30f72af-522e-4d94-9e85-da503c286253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ebdbb4-c74f-48eb-bd12-1462b567c521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d11eab4-a62c-4e50-86a5-7893c5527b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c65ed91-c9a8-4994-8815-e96ebda6aeee",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6608c12b-092d-47b0-8e69-f12a20a6e17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac3473e-9b59-4f6d-8aea-6016b6ef6624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1927b232-2686-4c29-b11f-5e02c80b3c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb01b7a2-1b38-4716-bdad-725b76ce20e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c79ca0-a4ea-47ae-a516-2c050c71879d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c9cfe9-a2b9-4095-9d3d-fba9d0cab33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dffe43f-c97f-4434-a03c-caa2bba99b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44fcbed-435b-46b1-93ce-a78a890f4724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de884f31-2dec-465c-9e50-acdfacfb33b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a9f247-dbc4-4d96-a919-20650f756382",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07952f5-477e-4216-8cb3-a08e604dff38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cce6165-1f5b-4c61-94ba-bdc5851f508a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3076f8a3-d6fe-46b8-afb8-2f3422efa815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c2d354-b5ea-4d37-968a-5f0a5d66cc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d43148f-b174-450f-a077-5e72fbd36420",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0c399b-566d-4ed6-9ce3-792afb722cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723ade06-c143-4f58-ab9d-dc928c96f29f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e36e46-5930-4140-adf1-f85ca1a251a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d692ce-cd3d-4c72-81de-0b9caa088572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc35ecf-b132-4179-8379-d33dfa4def83",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbca753c-69fb-43d9-91eb-4d9d24b82d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76093b5-2bda-459c-b7d3-61db57e06d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9e4a2d-dcce-4c4a-9ac2-9e037da526cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dae612-0810-47e0-b5f5-6219c90684b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f3208c-9581-435a-bdac-770d4c29e94a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084d3dad-64cf-4fa3-947a-6c4be4d3c063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ecc8d87-dfa8-47d0-8951-2dadfb8c7546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b349fa12-7339-42f6-a0ad-c582b70a27be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2c8129-441a-42a8-96ce-889d377a0d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0387f3cc-b616-4a78-b883-73e230276e68",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd5d1a0-2d17-42f1-84cf-83e5409f1af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f88d428-7a8a-47e3-b078-2a117c6c0c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0dc2baf-04f2-4700-896c-a32bcbbff49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55308b5-5976-4658-a7a7-5313a8311e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa36cc9-31ff-400e-9169-bf696eaa962a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33fb07a-307c-41b0-96d2-bd7c7b042e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3f9b9c-3714-4f61-8c7d-43f8d68802d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6504d2b0-d85b-48e0-b2b9-f784e6b6fc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43dccdf-247b-4374-a558-1060b660df2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14547c5-b879-4565-9d55-77a80eb20b27",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb6028d-be91-46c3-b791-7e684ce2cb0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d244428b-743b-43af-aa52-ecc4b8925dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "869c85ca-229e-4cd2-8549-a9033d108a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b90799c-e490-4a44-b25f-a5f432d5ba45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79d592a-91c1-4405-bd0a-6d19629d3f70",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095675fc-e88f-4189-8f29-ae55a42e65f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f15f60f-4ef2-451f-9c18-ed781f93451a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae54eaee-aa7a-49b6-a86b-a958b82cf69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22c2251-e8b8-453a-9fca-35d6b3e2a654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cb8dbc-df32-456e-b402-c7f1627d9c4e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9511b47-ef4c-4bd1-a1db-332616c55634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8aaa75-26b1-4665-8324-a91449cfd931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de064e7b-1030-4718-89b1-d623f2c6930d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbeb6b0-8a90-4eb1-a374-7b07612ef341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84498736-ae9a-400a-bcb3-f7063e2903c3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3deed90-5abe-4abe-aefe-4796d226cdec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdb59bc-1138-4033-9e5c-303a39df2b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b645c3-ab1b-4088-bb3b-438ac8327cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c67cad-0af9-4bdc-b217-df22a19c746d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38657b5b-0a5b-43b4-93ca-98a0a8e03d18",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb2ab70-e04b-4603-bb00-e8b52ab4edbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c3c852-7cde-4781-9fc6-2d704e229ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e929ee39-387a-4b59-95ca-44ac221291fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056fc02c-7b57-4779-8d58-ce58df582d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03225fb0-8f62-4031-bdbc-6f2c392e3440",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5926588-a4f6-4703-b54a-16568d2bcc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc29fa1a-b693-48de-bf22-85a5047843a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b62e121-abdc-47bb-8cf1-f955edfea1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170f4798-b9ba-44b8-b2d3-39d91014b15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc33ae51-9809-4dd9-bb7d-6f71e070d9bf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fb9e50-8acc-482d-a9e1-76c00f9e0071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb86be0-9154-4205-98b8-066c4f2d6cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef6d20a-7af2-45fd-9229-d1c8f5036bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf40235-89f1-4ec4-8e1a-679ca1074c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4ff01d-1fd3-4d7c-b21c-b8ed040e54e0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe255a8-251d-41c7-90ad-de5fc0b923e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc42e2a-77e0-4c39-95bc-d0b4886a5b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f58deb4-2b23-4195-8db4-e46c37521847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f18352-6650-4f8f-9f48-787b7f264826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721f048f-4ea9-4b61-aa7e-d79c3f1d6b66",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d8fdd9-3159-4c29-9ee0-d4889183aed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9005554-9583-4339-822c-be1af7e71d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "febc3654-b6b7-4186-8ff8-fc36de5993b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97683b94-e2b7-44c0-8826-ef4df1d533df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41e12de-a3e3-4ee5-867d-b057d96d4aea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62101a45-9b2e-409d-807e-788db5ad933c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cf3e51d-525f-4048-9baa-8f5846f9e1ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e71c3d-0e9b-4fd1-9898-86de6bd0a1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a2c8f6-616e-45f2-bf1c-d7ccea329e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd7118f-3c85-4634-93a9-15a24d12312c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f437e5b-15cc-41fd-9bc9-8f0411a618ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de6f396b-6511-4898-aa20-dffa5cb41527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2fb405-6605-457d-a7bc-a2305acca5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2613631d-25a2-4a73-aea1-018999f0c015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d937350-c786-4aac-abcb-c91d4a14238a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1986f4-e893-4159-933e-06366d3cf38d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5c06140-bf91-4912-b8f8-86aca20b8b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504ff4c0-21cf-4e8b-b753-4a93bf5bd8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5e8515-5189-45d3-af9b-3a8d69f1c22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6352344e-e5e1-4a80-b67a-cfaca456d0e6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd6c674-6642-40c0-8889-26e23e4e2333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03f81359-7d1d-4f15-a20b-8ad41eb51c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa35bae-318f-4cd6-ac0d-6b2ae5bf4c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5755d61a-802a-46be-8b62-7915981a2e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f996b5-b68e-4bce-91b8-ea5a7862d310",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad299c3-4437-4817-bbe2-7f1f94be8c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74bd24f1-0942-4edb-8065-060146f3a0e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8a1d07-acb7-45c5-85d0-577ca7e94526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40278a3b-ddaa-4e57-adea-1a71ab3cfb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34eb6d4-5961-4e4f-88a9-5028d1800872",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d70d79-b36a-47dc-a2b8-d2268ea50ee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "397fa560-33a7-41e0-8ddb-6a15086d6a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd5ffc3-23fe-4db3-a928-53794db80309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6bf3cd-86b3-4ff3-b6dd-bc7a9d0ec535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04e6f7c-d7e8-4ef5-b20a-625c5000e715",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2179f2-3f66-4c4b-bd13-caf877b3231d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d15da0cb-c802-44af-8684-e3a8d712c80b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ca8b5b-aad6-4dc0-8062-00976b556752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48c5e88-caa9-4f25-b13a-cf238b699575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1a8afc-2e7a-419b-9150-f5e7a07b72ca",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad8e5b8-3ba9-4328-abae-c9f57da018fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d642bbe-fb75-4a87-8ba4-ef4a77d93569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658c0aaa-872b-4378-b659-e1f97d4dbe7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cef60db-e574-40c5-9399-640719f93e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadd3e00-854c-40d6-8b4f-a5f69d821f92",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d53bd0-4aeb-4e79-aa47-0347a8860a91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e45b3b5-196e-4acf-a9d7-d63c59361c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d971e5f7-a88d-4b5a-9567-49e1acc4e253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4329874-86a0-4131-9e19-f4e524f248f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7a0253-c8e1-4c04-9850-a17ba2d0146d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6924847-7be0-4824-923c-84bf6c699934",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09af6a80-ac6a-4030-8455-ded277b63625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb5cfab-e48c-4fb5-8b57-417aa4a12fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08a2709-a5a3-4e5a-9cbc-7a23a1e3bf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e15995-1589-4153-93a2-7ddd4c704e5a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ecd3fa-9b99-4c9c-bbed-f1d138fdc3d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d72879de-91b6-4922-b7e4-1695b88887b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e974c126-d08a-4399-825a-ce7a6f949191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59850990-4012-4ec7-91b4-ccd3bc505c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9623d7e0-b670-4d8e-b02a-c9c6aed030aa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5586ec2c-4bf5-4d49-b48a-42bce216c887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "822c9711-f452-48f2-992d-89641935f434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b20759-b279-4542-b5fc-363120b09420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a537e7-f172-4d38-ba14-c0e8087f2a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99724b46-f215-423d-8837-7f0d5ab3c809",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e400025c-62a4-4044-a9e3-21299c507dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e78f503c-2549-4823-8fcd-5945b8c21f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28c7ecc-95bb-4b0e-ad17-7a8f29ccfc49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92933303-eb8a-4cdc-bc70-d2efcf6e5223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100e66af-f5ed-44c9-90f1-70e323d0e3b0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72da3a4b-0729-43b9-9e53-00c4025fed17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "444362d6-0b46-4f0c-8447-99df1689418c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c1ca65-03d7-4530-aeeb-21c7e87f7d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24dd8861-da15-4f2a-bcc4-5a4952a2d3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1819ff2d-0479-48f0-bca6-f1583c30f861",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc9300e-f176-406b-8647-d16de0b0b1a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de1fccb4-455e-48f3-9ecf-85f7c2469b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3588ac55-f54d-44ef-9e20-2c8b9e77bb30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121ea765-5482-48d7-8e65-a1cfffddf964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438b773f-e1df-4ad5-8cc2-d3d4f436badb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a4e1c6-3e25-4947-99f9-9709f5967e1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d09cf52-d204-4674-8130-a196d77b949d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8199e660-99be-493e-84a9-3c769f57cb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269e5884-1da9-484b-90d9-27c5f40ef57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8bc41b-63c7-4eaf-af20-859ad1ed1a66",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ba08a7-5cae-4b35-acd6-619d52f86fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65ac0dfa-e03c-4ff7-8871-99a83028215b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b52e97-0fda-47de-b9cb-e73db1b6c9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc514bb5-1448-4360-aa2b-c65221f74ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7122a6-1cc8-40ee-9913-a83e06902ad3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c64ca7d-ebb8-4270-a6e9-19bb08688c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "361246e0-532a-41de-bd57-e0d41ddaad1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c914a37d-bc6c-4a68-91e7-fb9cb6e5b576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47261c15-6003-4a75-a250-a26b43be54cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3f71ce-7459-4478-918e-6f2241933041",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b323960c-6611-4b2d-b5cc-a14194ab8d49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9abb06bf-65e0-4b87-8a4e-0e1590e51c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74659d2f-0e86-445d-ade2-2f06aa4ce334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b99a994-6396-4633-8a39-bada5acc4c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e99e0cb-bb28-4ed2-b81f-9a24d27cc516",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05196cf-c919-4369-9d65-c0a55da1a60c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd26b9b0-94c6-419e-a2f2-0bb623f4ddd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ce5749-e502-45c5-a859-fc3f35a89b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218dcdf2-6965-4ed1-9796-6ac86c91478b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c257c6-17f4-4ad8-9f8b-d1df0347098b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539fd454-1a14-482a-ad2a-13f2ab08c145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9034d86-d3cf-426f-a3bc-c8c1efcbc178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f47043-45fb-4461-891a-92ed9d7727b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f25253-eca0-4b10-a886-70ddaa535c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be434f6-1ba7-4eb8-9b3e-d8e65f39a88f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4acc752-0b0f-4929-b016-8a40594a5cc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9c2ad5d-5292-4727-82d8-e0ec26fa6ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5152fa2-9c65-465c-a11d-5edfe980b545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10950eec-5bb4-4c42-b847-4bb0fa4a03df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0086f0-f869-48ab-b23c-44792ea0ccfe",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd74ae4-91a8-4a72-ba8d-f5f30b8e8048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fbdcfda-24e6-4a45-8f2c-ced0ed659d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb3da08-8f6f-40e9-ab42-e59fcacdd425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54585c5a-7236-4460-9db8-9d2cd8e97763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9dabdd-b103-46fe-9117-f9d3dc56fd8a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84e00a0-7efc-4db1-b60b-8139fdad40e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c289f4-2107-4227-a38a-54b5f3bd422e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faeb3db-16aa-431d-bd39-9da49512176d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b6b0b5-7cc9-4d7b-bfe5-22e7153eddb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d1eb1a-6651-4503-ac9b-6ae430b37a7e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5931293a-4752-4ff3-b884-6d24fbe04abe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc647450-983f-4821-8613-79d0a3f92a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44ef956-e72c-4c13-85ca-6be4572d96f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5489a500-bf67-4250-880a-c09f0003bb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7a995d-99e2-48df-8012-44dc65fd48a9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539ab694-31ce-4a2d-9e2f-ad7866f66980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45c3f972-4a9f-43ca-b2e3-2c077523a35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8004474f-b7d0-4e0b-bf27-5a4f04c8e79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fe83d7-5f0e-4ff5-ba89-688dd6c07491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc30a52-fd3d-47ff-90c4-f1657714d14c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f47725-c7d8-4a3f-8aaf-df4adbaeb8f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a14d4a79-7ac8-4476-aaf1-631671a71ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d2e6f4-4dce-4d98-988b-90e6abe0d562",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044daa5e-b10f-466b-a2e7-e08ad374df6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebee5ade-697a-4b24-ae16-a0d85ac04393",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f992294-2fd3-49d6-a94e-6be6098f3ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1283e3cc-0152-4290-bad6-e8015e661285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85cf38b-b867-4877-af04-9e17e023d8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2caef6-664e-4824-bf04-d4447faecaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb34ebf4-3231-4727-ab24-2e5d0d4c3ff9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7034b08e-8a9b-4658-98f6-60c70e4cd13e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edd5c0c3-f053-4b38-8bab-2f54fd78da71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af36511-0330-40d3-b7a4-555d580c0bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bba56d5-19d3-4078-9fe3-d5ef2a2e45ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca1683c-52df-41a0-8b97-34fee3b1f95b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02522f92-c077-45d2-bfcb-0c17d334a1e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a35018d1-f296-49c4-ab38-c432d483cbc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab10b74-e375-4255-9119-f2f1d372a84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9604d63-b037-4881-80aa-5adf92e410cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdaf027a-96cf-45b3-a4f9-d67cf9dc5d9c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b24dea-bf84-4354-b2fc-26631be30e1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88c6f836-dd1e-4e6a-a26b-e7014c43a661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b12ba78-139e-439a-a225-092a51138622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18083868-02b6-4ad0-b9b8-5add0e0088b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdf597b-7b17-45a0-9961-4c13dbbd4cf5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5934b29e-5cbd-4272-bfb3-1a4ba532aa38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d07acdb4-787f-4ee6-b7f3-4f078aa631a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b343c2e1-5016-4914-9e43-a5fb05a7bb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df74aeea-de99-4668-8c8b-1278f0308269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8460faf-15d9-4d26-a325-9114dcd17a2c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085c5fd3-6a0a-4cab-8e75-c49e57132625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48f644c1-5024-40c8-a10e-2304098fb26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af90116-3825-4344-9fd9-36a5ab6bbe3b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc9046e-b529-4ab7-8605-100a59515ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53606463-de90-49a0-9cf0-d587dabad94a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9506c1a5-d6c2-4032-b9a4-e47661bca3c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "670cb2a1-101f-42bb-b571-a167a012061d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb653d2b-24f3-44a6-a934-a5448f39aec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae87ec32-f9d5-4013-9382-44c6d52f138a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80839b3e-d9df-4dd0-80db-3b132943acfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae31e286-5e77-4bae-a9d4-2359ba4a3fc7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "280b2324-b82d-4f36-87a9-2ee9e4dbd837",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "845a7480-1327-4264-89aa-69c7ad8fd687"
                    }
                  }
                ]
              },
              {
                "id": "ae6eafc2-124d-4779-ac16-f7e02b6911a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0da00b19-a62a-411c-974a-4fda16212153",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cf753f-e896-4e20-b1dc-c2e280867972",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "661534af-baf3-447b-8822-073075b75703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00851176-06fc-4c23-812d-9f524440f1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "695005fd-87ef-46d8-9401-14375aedef41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71c423b7-da90-4f6a-88ae-3140cdf6560c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e227a76-ae1f-41c5-a219-0f7b7cb25976"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19fc1b15-41d8-4280-8e86-5204462b0c6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b13b088-351b-4643-b2bf-84bb30c3b119"
                    }
                  }
                ]
              },
              {
                "id": "4a768293-5337-4850-8e4b-9be0dc574e6a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "003267dd-53df-4905-a84a-ec88790bce75",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac9b29c-021a-4223-96a5-be0a39906bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "35d2767e-b185-4af0-a316-78f786ce36b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6714438-d442-4d88-bca4-2f3e94bca6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9ddaf5-2e8b-4804-a9fd-70a4f7b59d83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e08dab65-ad95-4869-ad9c-02d4439f4322",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f4d0e3b1-5efd-4696-bb94-4a5cc34ddff5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b130d96-400f-4a02-a030-2fdf0fd8c10f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f1d63595-2db6-412d-b623-886bcfd22417"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc9e464b-76c3-42ed-af9f-175b7a99d3fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbad5bfb-3101-4e4f-80b3-e0b79edab3d8"
                    }
                  }
                ]
              },
              {
                "id": "6293fdf7-4b62-4157-aae5-aba456d5491d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f95b154e-fb0c-47bd-b976-3df938b3e511",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "48804c18-bab2-4563-860c-3aaa3b5bf4d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfbb0d91-cdd6-48b7-a8d6-5b56408360a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1e66fc0-bc42-45cc-b6bf-7c9ac4ea1e83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e967bb5e-95cd-43d9-8ba9-d597e085d490",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "69e41c79-1271-4516-9f84-e2a4324bb1eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "242e49e7-3a62-41c4-b3b5-f8ca76952d53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99b2d287-ab28-436b-94a2-5287ec3b9c5c"
            }
          }
        ]
      },
      {
        "id": "c1f93fce-1af2-471f-8631-82f8dc640e07",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3a4c28eb-af85-48e8-8ea0-c35ff12f135a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64469bd0-d8d2-4941-9b7c-1c6fe124e892",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b43d5be6-ed66-4d6d-848d-2b29d3a504c8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34ce8d5-ec47-43d5-a67f-23d8a38dd65e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "12756229-03d4-4a84-bc0c-43d0707c6f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d3c80c-9c0f-4966-9cf8-18705f0fe79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f71911e7-1694-4561-be9d-bb38c361ba02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1622f8dc-9dff-49b2-9159-b620bfdd4045",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b656cb3-e17d-4210-be50-36a0b63e8e21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a6eb728-5309-4927-b79d-92a9cd56729b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25520c30-e33a-44ac-8bb1-3c122cd3aa66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a916fd0-9d00-4d71-9fcd-fffedf458d4b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "96fa32d0-5a3e-41aa-93ba-3f2d7918887f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82bb0f4c-af9d-4cdc-96c0-b9e2f8d71791",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95c37b7d-cc23-45e1-93ad-45bd62f58d89"
            }
          }
        ]
      },
      {
        "id": "2758c857-3cc6-45e8-ad65-c9ebc8512ca5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "50b683d2-fe00-4536-b581-29829eedd4cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd5c133f-af14-4269-82c2-28ab453c2f42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "badbd217-bd62-4a98-a56d-fe6819da4a75",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e3cd2c-5247-422d-94fb-5ef4596f5b3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb45f17d-2b9b-494c-b6e3-87a02bd18ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2964550-ec32-4a78-a87b-7de0643bf5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14f5325c-b8b8-4d6d-a861-919f54d6ea02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbb06bb8-f819-41ce-b260-ff5ef91ce388",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffc397e7-f996-4af9-8ce6-9c8810daffd8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "847e0a2b-2b41-43dc-b9f1-63d99f3e592c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1154eb1c-92f3-495f-9ab5-f5d4d5144d42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3465cd0-2fdb-4923-969c-5d91df14f6eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "618c459c-3fea-475e-93a1-fecf8ac5b22c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18e807fc-ccb9-4dff-b42f-075b7776e07c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16e6dba1-625c-48f7-ba53-76b75e6be07f"
            }
          }
        ]
      },
      {
        "id": "753776b9-dca4-410a-8fbd-706785bc46ad",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "62297848-0e8b-4648-90a5-db81afa61cfc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a5b7efb-04aa-4420-b98c-4a2accbfc9a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abfa260d-3154-4cdf-8ada-907ce3f28aa1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729078f8-3a67-4cd4-b01f-4017c158d2d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c43cc630-c7f7-4c98-b84a-4a6b8609974b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a29726-38c6-4dcc-820c-7910fba4f15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11b49783-5404-4d89-874b-dd0d77a066e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93d33471-8a70-4e21-b9f4-92da4f18d193",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6107a57-a733-484e-8024-65851f2852ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63ce56b3-4b7f-4af5-b503-0619f472c686",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df1e1644-38d3-4fa1-b13a-ffac2775958e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78c93381-5880-486b-afd1-9d8b9a671290",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "37ab62ea-0d39-41af-a50f-33bd0f11c664"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bddd7ac-e49e-4893-8016-9d55110ae531",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dca0182e-df5f-4057-8f7e-81aa2a5506d8"
            }
          }
        ]
      },
      {
        "id": "ad989ff9-5d1e-4844-bdbc-48ef0d90046f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bdc3288-b92b-4f6c-ba38-b58db83f96fb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b94b7a1-f0c8-4d24-bd7a-c3d88a5e089a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "61dd36fa-09d8-4a07-b6ef-d68cfc9a21f9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5156220-faca-4284-812d-a2bf88f75ad4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef356630-2887-4657-b1a3-8751fcc7f970",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.273809523809524,
      "responseMin": 6,
      "responseMax": 273,
      "responseSd": 20.924287849182942,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719016659915,
      "completed": 1719016670854
    },
    "executions": [
      {
        "id": "609005ff-989b-44c7-be4c-cc81fe8e2b71",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ac5b3617-9d16-402d-b745-dcf597ae8c92",
          "httpRequestId": "4c1902d6-aae4-440c-89df-700ec6316eb5"
        },
        "item": {
          "id": "609005ff-989b-44c7-be4c-cc81fe8e2b71",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a576e2de-4261-48f2-9aa0-f78996eadfc1",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "1d1177ba-3184-4a42-92aa-af93eeee7840",
        "cursor": {
          "ref": "cd9a9700-c5eb-4a61-9ff9-2aa2b8c20298",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "02ef2116-fb38-4dcb-9096-37605d43cd61"
        },
        "item": {
          "id": "1d1177ba-3184-4a42-92aa-af93eeee7840",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f7bf5665-b454-4b70-9f70-b709eee536f8",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "42e23fcd-0491-486d-b75f-ed09c12953f7",
        "cursor": {
          "ref": "b2c1974e-c25b-4951-b782-96c5da52a462",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3988f4c0-dc33-45ba-b3b2-72c17c6154e6"
        },
        "item": {
          "id": "42e23fcd-0491-486d-b75f-ed09c12953f7",
          "name": "did_json"
        },
        "response": {
          "id": "1bcf669d-0c2b-4e42-a750-8606494398aa",
          "status": "OK",
          "code": 200,
          "responseTime": 166,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7591cb27-c797-4f7a-a79f-ac962aed011e",
        "cursor": {
          "ref": "3c94807f-8acf-44a5-b1e9-254b97bf7d75",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a80d70cc-3a89-4888-aebc-40185c121978"
        },
        "item": {
          "id": "7591cb27-c797-4f7a-a79f-ac962aed011e",
          "name": "did:invalid"
        },
        "response": {
          "id": "60a870ac-3958-45ae-b6eb-df7ae39281c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7591cb27-c797-4f7a-a79f-ac962aed011e",
        "cursor": {
          "ref": "3c94807f-8acf-44a5-b1e9-254b97bf7d75",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a80d70cc-3a89-4888-aebc-40185c121978"
        },
        "item": {
          "id": "7591cb27-c797-4f7a-a79f-ac962aed011e",
          "name": "did:invalid"
        },
        "response": {
          "id": "60a870ac-3958-45ae-b6eb-df7ae39281c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becbd543-72be-4907-a844-2b8da1c12743",
        "cursor": {
          "ref": "66faca41-062c-4191-a553-5e153322accc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "068d261f-5a26-4d1c-ba85-e5f8b30dbda6"
        },
        "item": {
          "id": "becbd543-72be-4907-a844-2b8da1c12743",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fe00b476-6797-4b71-a1d7-af0a02beee2a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 122,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e29677-8d34-489f-b1d9-0a7444979039",
        "cursor": {
          "ref": "4e99586b-ee6b-4ae4-979a-746eaeaaff68",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0ec22a52-7883-401d-ab54-bb1951003a64"
        },
        "item": {
          "id": "10e29677-8d34-489f-b1d9-0a7444979039",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4b87112c-ba08-48dd-a3f7-445760d1ab7c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfb9bb1-b59d-43c9-b805-a16a4e597e53",
        "cursor": {
          "ref": "80730941-3898-469c-a03e-dbb0443ec48e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e5fdf909-b729-479e-898a-c73750bc5c36"
        },
        "item": {
          "id": "7bfb9bb1-b59d-43c9-b805-a16a4e597e53",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d77aa75f-2430-447a-b071-881f10486d39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ca44d2-df8a-4b3d-8a2e-40fd4160eac5",
        "cursor": {
          "ref": "4d2eeeee-0a16-4e70-a53e-b9e629f62466",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "09f872e1-db47-4d42-a0ba-548cf2bdf87c"
        },
        "item": {
          "id": "a2ca44d2-df8a-4b3d-8a2e-40fd4160eac5",
          "name": "identifiers"
        },
        "response": {
          "id": "80f85470-aa60-4cc7-89cc-4fce975e2566",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664049bf-5b88-45d0-8b4c-4b325c20c9b7",
        "cursor": {
          "ref": "734f0f2d-225a-4171-8b06-58ecf206a25f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d87b4c9a-e068-43db-9bfe-d58f2a87f775"
        },
        "item": {
          "id": "664049bf-5b88-45d0-8b4c-4b325c20c9b7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a6afa8c7-9613-4da9-908d-fa3e5776d5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92c992c-bfbe-475c-969a-1a687b3b9812",
        "cursor": {
          "ref": "c62fbdd2-6553-4271-ae53-3db25357710d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "06afdc2b-2d0d-4d30-943a-b67a8e6d2911"
        },
        "item": {
          "id": "e92c992c-bfbe-475c-969a-1a687b3b9812",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a2aa2224-1ccf-43f0-b499-f308ff7f10f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3abfa5-7b32-4425-8cf3-a895840fe981",
        "cursor": {
          "ref": "c04fed3c-b457-4dc2-ab3c-e2351a701b3a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "418f381c-ddf6-4876-bcd1-fff6b13a11a0"
        },
        "item": {
          "id": "ea3abfa5-7b32-4425-8cf3-a895840fe981",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "95762022-80aa-4083-b0c2-f51fa61509d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b15cb90-ed30-495d-b2f8-e4d12c4eef74",
        "cursor": {
          "ref": "8e94b433-e3e7-4591-b74a-9d7cb83484cf",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "943188e6-9d81-4289-ab8c-0d417d44c80c"
        },
        "item": {
          "id": "0b15cb90-ed30-495d-b2f8-e4d12c4eef74",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "21509c07-7dfd-4607-ab8c-f7305dca4ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08eafc52-ad07-4807-95d9-df5c177c6cbe",
        "cursor": {
          "ref": "e034dddf-d77f-4042-926f-19ae41a137bf",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f8e2fe3a-eaf3-4e82-a839-0df14c17ec2a"
        },
        "item": {
          "id": "08eafc52-ad07-4807-95d9-df5c177c6cbe",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1f769392-f995-4b70-b207-fe08bc3aa9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e88500-f390-42b3-aa00-3837820801c0",
        "cursor": {
          "ref": "0a04f702-16f6-4bb8-a525-44046ee5f877",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a0a1d3b1-7325-4536-88ab-db7b4452a949"
        },
        "item": {
          "id": "60e88500-f390-42b3-aa00-3837820801c0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4b83e0e0-bb7e-4d63-a8b1-f03a286af55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f69937-89f4-4589-8d6c-d13dfbfc676d",
        "cursor": {
          "ref": "cd7f10bc-0b85-4ee6-a72d-dbc5a8dd7b22",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "29299d70-37bd-4e20-b493-92da26606c68"
        },
        "item": {
          "id": "54f69937-89f4-4589-8d6c-d13dfbfc676d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f47ae950-a778-4884-94f7-eb5e890f5a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711f85fa-5cb8-4dbb-9f10-d921ff228c49",
        "cursor": {
          "ref": "61dd3e59-4377-4cdb-a4a2-95ec28ad21e2",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "81bdd9e1-3336-491a-b8b9-8e3061e0974f"
        },
        "item": {
          "id": "711f85fa-5cb8-4dbb-9f10-d921ff228c49",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2c41c7b5-63f8-4526-a985-2d800b02d340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f980a4-cf19-48f5-84e7-a46aafa69bfd",
        "cursor": {
          "ref": "702aa6da-42fc-44ba-bd4a-15280791cd07",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cc530e82-57cc-4bd0-902b-de45fc6eb550"
        },
        "item": {
          "id": "e2f980a4-cf19-48f5-84e7-a46aafa69bfd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b95a46e9-f996-4300-b77d-9f87a3db2f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da169ed-7412-4dd6-a0c3-dc0ba91d96b5",
        "cursor": {
          "ref": "f17401c8-fa74-4964-a4a8-e48849a3dffe",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "797ff9c5-aba0-4d53-9277-76f0bdec4666"
        },
        "item": {
          "id": "0da169ed-7412-4dd6-a0c3-dc0ba91d96b5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6cc61e47-e612-4567-96c0-11548ef7fced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f76dc4a-4e20-4b56-a37c-80a11d534ee2",
        "cursor": {
          "ref": "a347296c-2430-4ef3-bec3-01ed075c2b99",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "84165ab5-0323-41b0-b56e-507e04702a74"
        },
        "item": {
          "id": "9f76dc4a-4e20-4b56-a37c-80a11d534ee2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "13bb3f6e-4ee4-46c7-a63b-64c12312d023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f46d832-8b42-4b3b-8877-5ee0da554a43",
        "cursor": {
          "ref": "3d077fcb-c730-4ae0-8776-7c5dd67f243c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4cb190f1-e071-4049-b366-1c955b22f7c7"
        },
        "item": {
          "id": "8f46d832-8b42-4b3b-8877-5ee0da554a43",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2234702c-e7c6-4ec4-adfe-e3377e87866a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d464bd10-d1fd-4aa7-b747-dc61fdbfe960",
        "cursor": {
          "ref": "0aea5a4b-59f4-4726-bb11-6aa560b1797e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9811579f-a807-435c-940a-92b482dfedad"
        },
        "item": {
          "id": "d464bd10-d1fd-4aa7-b747-dc61fdbfe960",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5e529e59-9820-4913-ab5b-f335f1ac628a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340a7c3f-7286-4691-acc2-b6f5a9d48b09",
        "cursor": {
          "ref": "19dba985-d3e3-40c3-8a66-d3b2b6bb2f97",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bfbacc8b-e09f-4c67-be6d-3716953f109e"
        },
        "item": {
          "id": "340a7c3f-7286-4691-acc2-b6f5a9d48b09",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f0f0499f-e43b-4d05-9d3a-57d351494c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfacb32-119a-483f-aa23-e06fbe4ca71f",
        "cursor": {
          "ref": "8853ae73-6b83-4a0b-b142-abc5a9bd38cc",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "81a0262f-708c-424b-a0ae-37737f375c48"
        },
        "item": {
          "id": "fbfacb32-119a-483f-aa23-e06fbe4ca71f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "12659081-5ff9-4248-a166-357e0c59ef1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb8eb4c-5846-4155-8789-d19613678a9d",
        "cursor": {
          "ref": "0f38e0f6-a7f7-4d2b-8c2e-f0f33d140431",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fa67040e-8f90-4f6f-8270-fe22fabecbc5"
        },
        "item": {
          "id": "deb8eb4c-5846-4155-8789-d19613678a9d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "46cc087f-e1b8-4965-8e84-bf5cbffd136a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88188fe3-f4d2-48aa-ae83-376582711d39",
        "cursor": {
          "ref": "0525e8ef-db29-44e6-8e9a-0d6b28ba458c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d0fdda4d-9046-44ee-b4e5-2c8266894b34"
        },
        "item": {
          "id": "88188fe3-f4d2-48aa-ae83-376582711d39",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9e48dbfb-2ce9-4ab3-8031-493fe1fb06f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbea000b-281f-4682-aee7-750b51274d18",
        "cursor": {
          "ref": "93c542de-9265-40a5-8ef3-2ac887dbb4a6",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "eb2cb59a-5792-427a-9b84-a148e3917686"
        },
        "item": {
          "id": "fbea000b-281f-4682-aee7-750b51274d18",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d1f94ae4-c8ee-45ee-9204-1496d378b611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5a0ee8-cc0a-4818-9539-10afb6fa06a5",
        "cursor": {
          "ref": "9bac6387-752f-4686-88f0-c2372ca47dea",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "676cf892-f326-4b75-b0b5-4a3450cfb55a"
        },
        "item": {
          "id": "aa5a0ee8-cc0a-4818-9539-10afb6fa06a5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "db5596a5-f244-4f8a-b186-5abb7cb29025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2bf1f7-2bff-4763-b7aa-b4ddd380a50a",
        "cursor": {
          "ref": "9ff2d2ec-6f7c-4ae7-9816-20dc4f1b8d12",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "77882500-daf8-4747-9a4d-a814c6980880"
        },
        "item": {
          "id": "7d2bf1f7-2bff-4763-b7aa-b4ddd380a50a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a0de7d36-cd70-4972-a5bd-84521eb1d4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca5a553-9cf5-41b2-b48e-cd4b8221f057",
        "cursor": {
          "ref": "aff4e462-8f66-4b74-b015-07152287e5c3",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ea2ef342-1739-4a4a-9146-339fa4d83fea"
        },
        "item": {
          "id": "7ca5a553-9cf5-41b2-b48e-cd4b8221f057",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ca332adb-2a95-4385-95f7-43ea64e0d574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c82cb6-c1b5-414c-9a91-75b1c49f9de1",
        "cursor": {
          "ref": "f7ee48c6-c68f-4205-b2c6-65dd2520773e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "318919dd-9494-4ea3-91fb-900ec8b7a427"
        },
        "item": {
          "id": "f3c82cb6-c1b5-414c-9a91-75b1c49f9de1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "97107109-99f8-4766-9476-55a831af3164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b47c2c-9126-4d06-86d7-9cf3cf2dc31e",
        "cursor": {
          "ref": "a22c9f84-5647-4572-9927-6b0152c8bccf",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9e688680-d8fb-4412-8080-64bf97eb370c"
        },
        "item": {
          "id": "83b47c2c-9126-4d06-86d7-9cf3cf2dc31e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ea9a12bd-6e82-4ec5-81a2-1f0d44890cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b92774-fb04-4edd-a626-6a3bc7de89c2",
        "cursor": {
          "ref": "576fb7e8-5fbb-4947-8af0-374e393207ae",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "43976754-5a30-4faa-a151-8b74455e9a9c"
        },
        "item": {
          "id": "84b92774-fb04-4edd-a626-6a3bc7de89c2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "714f523b-cc3e-492f-9109-74d7694dd26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4667d38a-cc58-4161-b2a5-65120e381fee",
        "cursor": {
          "ref": "33964c96-36d9-494d-9686-bf6309e43b64",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6d33bc27-0962-424b-8d7e-1f4ec99a3ada"
        },
        "item": {
          "id": "4667d38a-cc58-4161-b2a5-65120e381fee",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3f6d9dfa-a72e-4cc3-bc3a-d24b149ff291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f098e2a7-e8a8-476c-9c90-5ecd3006189b",
        "cursor": {
          "ref": "b25c02e7-fbb4-4657-9995-58b3bf2345de",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "25fde69b-cfe5-4bbf-9a3d-6c0a8aa1bb52"
        },
        "item": {
          "id": "f098e2a7-e8a8-476c-9c90-5ecd3006189b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dfbf14be-3889-4a09-9e7b-2c9376bbd6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bc7674-7461-43c9-b6a3-b229a8448f01",
        "cursor": {
          "ref": "45dc27cf-7edf-4098-95e8-48a18d2c1176",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "508d99ba-a39f-49b8-8225-d7f11ae9c87d"
        },
        "item": {
          "id": "c3bc7674-7461-43c9-b6a3-b229a8448f01",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0f1c032d-2929-4b5c-884c-4b3d009880d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c98f0e4-c453-4331-893c-cc53aad00313",
        "cursor": {
          "ref": "3dd9f593-7ed4-4a47-9ccd-a7228f8c4493",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7dbea0d8-3b27-47cb-b802-9ac088b7fc7f"
        },
        "item": {
          "id": "9c98f0e4-c453-4331-893c-cc53aad00313",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5a0a0b27-e7fa-4a16-898e-a8a6d67e814b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecc2cfc-bbf5-43cb-849c-2b054a170b41",
        "cursor": {
          "ref": "befca0d9-16fb-4d92-8a25-3b39c2edbfd0",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "66bc8257-e3d0-4de7-b0ed-f65d66a7a82e"
        },
        "item": {
          "id": "6ecc2cfc-bbf5-43cb-849c-2b054a170b41",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f0a8e524-35b6-4741-a13b-169adb780da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94abb159-fd4e-47a2-a519-378c9b8dba14",
        "cursor": {
          "ref": "2dd33872-f43e-4ae5-be80-8feca7605874",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e9c7ae0a-7eed-4d10-b321-72e4ee84a48f"
        },
        "item": {
          "id": "94abb159-fd4e-47a2-a519-378c9b8dba14",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "262289fd-9a48-4d35-bb0b-bd8024286471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6303f8-6271-471f-a47d-717971e83401",
        "cursor": {
          "ref": "37ab7b56-39cf-4674-8979-a450c9eb3195",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4add8f0c-9c68-4fae-ad44-f8829d02cc85"
        },
        "item": {
          "id": "8c6303f8-6271-471f-a47d-717971e83401",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a38d3c99-794e-42c7-b5e3-3f5eb9c4e8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bd9c7e-373a-443e-b30b-991155bf03c0",
        "cursor": {
          "ref": "8e5faee2-e5ae-4529-bcac-8b246751f436",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8bff27e1-db04-4232-8837-4bdbf9b3f48c"
        },
        "item": {
          "id": "79bd9c7e-373a-443e-b30b-991155bf03c0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1dd4175b-baee-40f3-9cb2-9e9d661517d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8366673c-fba3-4264-bb9b-0c2482d6515e",
        "cursor": {
          "ref": "ffbf2299-0ef4-458a-aae6-e12b629c05bc",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4ac4493e-8cfc-48ab-ace0-63583c29dd54"
        },
        "item": {
          "id": "8366673c-fba3-4264-bb9b-0c2482d6515e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "84125edb-5449-4bcf-8ca9-1bf6728f0b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5365ff-f706-482f-9047-7a3a69de5ae0",
        "cursor": {
          "ref": "3eb58dd0-ec61-4952-acff-7da24365dd61",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1e236690-3329-468b-a91f-1dda74030b71"
        },
        "item": {
          "id": "ae5365ff-f706-482f-9047-7a3a69de5ae0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "87e374e4-4469-4b34-915b-8894a6333926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ad6b56-88cb-49d8-980a-99a0ac106ec7",
        "cursor": {
          "ref": "7928f081-cac8-4818-a7e1-52cc983979ca",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b0248bac-877b-4178-a614-27e8ef4cca08"
        },
        "item": {
          "id": "e0ad6b56-88cb-49d8-980a-99a0ac106ec7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ce72263a-9205-4800-b501-76fa449bde6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b109ed-dea8-4268-9e4c-73051713ccf7",
        "cursor": {
          "ref": "5e944294-1962-43e4-b295-2caf178b0f0a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "99bb452f-e39e-427d-8f6a-2769fd7fa1db"
        },
        "item": {
          "id": "b2b109ed-dea8-4268-9e4c-73051713ccf7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d2bec799-0130-48ba-bf8e-92d70ca1b6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0ca5da-526a-4185-8ace-3db8a6797bcc",
        "cursor": {
          "ref": "2460e944-bdaf-49fb-a2a7-6df38f8abbd8",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "777bafdd-09b3-4bd8-b54d-48c778a750d1"
        },
        "item": {
          "id": "1a0ca5da-526a-4185-8ace-3db8a6797bcc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "65b2c583-768f-4cec-ab60-b78178e78906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4237e1b8-c7ff-44ee-a24b-2abc77fdb6da",
        "cursor": {
          "ref": "8e99e9c4-216b-40e7-9e24-d196d89a81cc",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "838a7946-49ca-4f15-900c-31df06e6b1cc"
        },
        "item": {
          "id": "4237e1b8-c7ff-44ee-a24b-2abc77fdb6da",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "656b523c-e32b-4f88-ac00-7ad275059310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17c6dfb-84ac-4c13-978f-739bda7c7519",
        "cursor": {
          "ref": "0ddeb330-afab-475f-95d2-eabffb6c2247",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0c074722-4aa3-4ac0-973d-78d68466d380"
        },
        "item": {
          "id": "f17c6dfb-84ac-4c13-978f-739bda7c7519",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3afa4c86-da9a-414d-b3b3-feda8fc34f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d4ef92-2d76-4d79-a28b-142d594a9ae6",
        "cursor": {
          "ref": "a6267e89-57bb-4d36-806a-55384f36aff1",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7ec3e31a-6b58-4012-8a28-560f16d08371"
        },
        "item": {
          "id": "46d4ef92-2d76-4d79-a28b-142d594a9ae6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7df0747a-7e40-42a6-a033-13ea64fc4536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c5c788-3a28-4bbc-be73-40b481ed6034",
        "cursor": {
          "ref": "1ce9b940-ed17-449d-98d5-3f48d0d8a1a6",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7d608c0b-3b28-4e79-8856-ba9db24ba7d5"
        },
        "item": {
          "id": "38c5c788-3a28-4bbc-be73-40b481ed6034",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d407499a-7642-416d-b1a6-e193e8497b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82b1749-9c4b-425d-9273-ec45b4e3e69e",
        "cursor": {
          "ref": "750714be-1619-4e0b-9ec6-95262ff847ae",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f4df4a7e-43b3-451b-94e4-bc2e604cd1bc"
        },
        "item": {
          "id": "a82b1749-9c4b-425d-9273-ec45b4e3e69e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "38f19038-8200-4362-8f7b-8dce3c785968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e20425a-8bee-4f2d-872a-22903aaf3659",
        "cursor": {
          "ref": "e902cd2d-e678-49a1-87db-0c7cb04ae4ea",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "18c95b22-c9bc-4918-8844-129b1abec064"
        },
        "item": {
          "id": "3e20425a-8bee-4f2d-872a-22903aaf3659",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d7c3dbb4-55ce-4cb9-a6d3-9f48fa275d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e824a2e-a692-4b60-aaec-9c597d6b82ee",
        "cursor": {
          "ref": "995ebcba-7490-4526-97b0-ef7c8e5668b4",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5c7a0f74-0f2a-4915-aeb4-1c9da9c7866e"
        },
        "item": {
          "id": "8e824a2e-a692-4b60-aaec-9c597d6b82ee",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cace16d0-00c4-4a5a-beab-0689dc945fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a0131e-3833-4344-a575-df0f47319ee0",
        "cursor": {
          "ref": "45fb9757-89b8-49e9-b658-575489ac4188",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5087ca77-a4fc-4aa4-a85b-3abe25074e16"
        },
        "item": {
          "id": "e1a0131e-3833-4344-a575-df0f47319ee0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b7987a0d-3a1b-4e6e-bc73-64fb43d64163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c04c99-30c0-4e12-a217-47e90c8e533b",
        "cursor": {
          "ref": "031937c9-bb60-423c-b4db-b7db79001b35",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "034cd658-589a-498e-956d-d423345449c4"
        },
        "item": {
          "id": "11c04c99-30c0-4e12-a217-47e90c8e533b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e58beebf-646a-4b22-81a0-7f76cdca6bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb11ecd5-4c67-45ff-aa47-a2a77fd9fafa",
        "cursor": {
          "ref": "f56f89ed-e1cd-4663-b863-0d9bdd10e0c5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "72902594-c0f2-4e39-9192-748cd77797e2"
        },
        "item": {
          "id": "bb11ecd5-4c67-45ff-aa47-a2a77fd9fafa",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1164eb68-1206-43dd-a0d5-38dfbe410f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e026e2d-dea8-47a8-8f37-c308161447b8",
        "cursor": {
          "ref": "604252f5-67fc-4593-bf25-653e5702bda9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1f35b3c2-5286-4a00-bb4e-5304aa1f5e4a"
        },
        "item": {
          "id": "8e026e2d-dea8-47a8-8f37-c308161447b8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ab22ce5d-9bae-433c-b870-0d58189a0eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b891cc0-b720-489c-b04f-67a4de250278",
        "cursor": {
          "ref": "e0a64b54-da69-4176-a349-c2aa66b0a616",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "360fce49-470f-4ee2-872f-92098192d20c"
        },
        "item": {
          "id": "9b891cc0-b720-489c-b04f-67a4de250278",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a50d29a2-6912-4f93-90e5-3f986ea9e355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9fa2c5-6c59-4ed7-8e57-3b803d827a56",
        "cursor": {
          "ref": "4cf0d363-51ea-418f-9fe2-7228c1abfbcf",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2b26f1ae-472c-4e9c-99a7-7f135aac4c12"
        },
        "item": {
          "id": "1d9fa2c5-6c59-4ed7-8e57-3b803d827a56",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2cdcf2a4-e33c-43e2-b513-e78ae024f699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5548cc-cc7e-41f5-a653-88e12e45d752",
        "cursor": {
          "ref": "41b83b5c-2541-453d-b6d1-6d450dbbcf22",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "37b47922-40c1-4028-8be8-4c9bed7aa735"
        },
        "item": {
          "id": "9d5548cc-cc7e-41f5-a653-88e12e45d752",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f0866d86-5a44-42b2-9396-64cb4d317f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f4f1b1-3693-4632-a365-fb30bdd3db99",
        "cursor": {
          "ref": "e530d693-349d-4a42-af7c-9e787cb84653",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ce89037f-0ae8-43f2-956f-31d0e600f059"
        },
        "item": {
          "id": "25f4f1b1-3693-4632-a365-fb30bdd3db99",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "34dec5c7-652e-43fd-9b7b-8ee942fef7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c072e3a0-5a87-4aa3-a9f0-e95aae91fadd",
        "cursor": {
          "ref": "716abf38-4d5a-4c5d-927f-8d5964d01235",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d70e9ae2-f985-4d98-b0cd-6fff03e1e758"
        },
        "item": {
          "id": "c072e3a0-5a87-4aa3-a9f0-e95aae91fadd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7fbd27a5-c25f-405d-95d5-cc93da2a72ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daef8693-eab9-490b-b9bf-b3650449112c",
        "cursor": {
          "ref": "3ef223cb-3cc5-4668-b667-488baf7e8b8d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4e09a814-9575-4cfe-b6a0-b0c739cd3a46"
        },
        "item": {
          "id": "daef8693-eab9-490b-b9bf-b3650449112c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "88377686-a1c5-4e80-99a8-e9c08a0a3a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933921bb-175f-4a76-b425-075c87e9040a",
        "cursor": {
          "ref": "f2fadc43-b3e1-4fdd-b81b-71cf9c77287d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "392ef166-4bce-47b3-be54-8fe2de3b3da2"
        },
        "item": {
          "id": "933921bb-175f-4a76-b425-075c87e9040a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "103258f9-2c6d-40bc-91f7-c4207521df6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca361ff-7407-4293-a204-cb3c83f1e417",
        "cursor": {
          "ref": "5d1bc8b8-49e4-4bba-bea0-712da0f2bba0",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "680187d5-a2bb-4a9b-862c-391da5cc3841"
        },
        "item": {
          "id": "dca361ff-7407-4293-a204-cb3c83f1e417",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0531a27b-c14a-49ff-b0b8-03186dab4740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746ba50f-f795-4cb0-915f-0150b14fb3e8",
        "cursor": {
          "ref": "2f5b3966-2279-434f-81ea-fc72eff34c1d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "325466da-a137-431d-beab-13c8a7dd3963"
        },
        "item": {
          "id": "746ba50f-f795-4cb0-915f-0150b14fb3e8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "32343f17-ba8b-41da-8530-628a4f2cd0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af0858d-adb9-4480-b013-10ddf3aee494",
        "cursor": {
          "ref": "fc7823a9-4552-48a2-b21d-1e92f4dae8bf",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c888de20-149c-4532-b882-65abf96c44db"
        },
        "item": {
          "id": "6af0858d-adb9-4480-b013-10ddf3aee494",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3d94421c-6634-482c-85d8-1f479cf873ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c11144-69d2-4ed4-ad3e-79acec7a8cf5",
        "cursor": {
          "ref": "db48baca-54dc-41a1-974b-9702e7b3ed8e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c1f8eb5c-6757-4e6d-8670-63846756bff2"
        },
        "item": {
          "id": "52c11144-69d2-4ed4-ad3e-79acec7a8cf5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d931369c-31cd-4765-bf9c-cda806fc93bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b078165-df31-44ef-80eb-8337d79a0ebe",
        "cursor": {
          "ref": "86f0ab45-879f-4787-a79a-6274522b36b3",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0861e4c9-6134-430a-a3d2-0f51e8eda541"
        },
        "item": {
          "id": "4b078165-df31-44ef-80eb-8337d79a0ebe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6a3d02d0-57f1-46d5-b9d3-d83763994c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d2de3d-1f0f-455c-a6d0-acedd5905212",
        "cursor": {
          "ref": "594f5150-39f4-4286-bc6d-b3fdc4f7d8cb",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ac58558b-0a2a-4d5d-9b5a-7d82909fd590"
        },
        "item": {
          "id": "32d2de3d-1f0f-455c-a6d0-acedd5905212",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "477f58d6-38d1-4038-9b9a-94a9eb00b08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d47fa79-11c3-4cf5-8a5b-8dc03717eca7",
        "cursor": {
          "ref": "b3cfb7ec-ecd8-4605-98e5-6b5d412b4bc1",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f30e8bbd-b7df-487b-a247-a8bf4aad2185"
        },
        "item": {
          "id": "5d47fa79-11c3-4cf5-8a5b-8dc03717eca7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "62d42da2-cb32-4de5-a776-1107f5e4bd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d4811f-5747-452c-9f6c-1e6707b0de16",
        "cursor": {
          "ref": "40a5fe6b-ab72-4330-8279-6f300d074895",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a57daaab-30df-471c-b1da-7c6f581f4275"
        },
        "item": {
          "id": "53d4811f-5747-452c-9f6c-1e6707b0de16",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a299575c-32a9-4f29-98ee-092149e377a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1431bf83-dd26-41e7-986b-5c310cb3adb4",
        "cursor": {
          "ref": "8129b9e0-8cae-4e9c-ba3e-c1e9bc6af10a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "760f8edf-ba03-460e-a009-56c611459dae"
        },
        "item": {
          "id": "1431bf83-dd26-41e7-986b-5c310cb3adb4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c018adda-b4d7-42a9-8002-885bd6086004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0413ac3-0041-4772-87c7-7f96adf1ecd9",
        "cursor": {
          "ref": "c7abc541-96d7-4d7c-9656-96e4ee5cc6e7",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e1de04bf-a9d3-4d8c-a0c8-34312772204f"
        },
        "item": {
          "id": "e0413ac3-0041-4772-87c7-7f96adf1ecd9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e5279da1-fdd8-4a1a-bf58-8677092b5451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5716d5-3fe8-4926-8e1a-be6c327ea6bb",
        "cursor": {
          "ref": "a674d626-f890-4924-ade7-69a9492b03b5",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c4db50f0-4af0-403e-852e-96f561348391"
        },
        "item": {
          "id": "ce5716d5-3fe8-4926-8e1a-be6c327ea6bb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f4a6981e-0f6d-4f6a-957c-33980a0737c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c580ef2-8f7b-4d41-9957-a4da769d051b",
        "cursor": {
          "ref": "61128cad-e053-4125-a34c-96425728e18b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c5d962f7-62e1-41ed-b662-fd68c8071b42"
        },
        "item": {
          "id": "1c580ef2-8f7b-4d41-9957-a4da769d051b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f879137d-2893-4eb3-b8a9-10a54824abd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7e6084-a666-42de-a8dd-5edcdfc02484",
        "cursor": {
          "ref": "2f8bd19a-b948-450d-adb0-7f3696998b0c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f5fdab26-5e3f-4d20-a3e9-c2bee4b150cc"
        },
        "item": {
          "id": "ed7e6084-a666-42de-a8dd-5edcdfc02484",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "52bf1f41-9204-48ca-b51d-a22f2a9ab2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38783eb2-048a-4e76-84fe-1ff96d82e033",
        "cursor": {
          "ref": "d68a7a51-082b-4a97-92b5-7ac968ee535c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0b9131e4-5860-4d8b-b4c0-55efe56e6bd1"
        },
        "item": {
          "id": "38783eb2-048a-4e76-84fe-1ff96d82e033",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4a7fb888-39de-4667-a413-2977bdf97fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318d9987-a6b3-4034-ae48-9b6833521e1a",
        "cursor": {
          "ref": "4d389baa-fe4d-4963-b495-0b5fcacb5f38",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "30017b6a-724c-4c8a-a2d3-fb9fd84bc94b"
        },
        "item": {
          "id": "318d9987-a6b3-4034-ae48-9b6833521e1a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8bb24e6a-48fb-416f-a137-5977b19aea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09d9adb-a7b1-4af4-986e-04407fb58c72",
        "cursor": {
          "ref": "0e211d96-75b2-43bd-8bfe-e08cf55766c9",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fafe8fca-459d-49fa-9edb-dd07ff0523c1"
        },
        "item": {
          "id": "e09d9adb-a7b1-4af4-986e-04407fb58c72",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f2c2f9d9-66c2-487a-91c8-0f86fc750d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfc50dd-a84b-425a-a6b5-3402e4f4898b",
        "cursor": {
          "ref": "fc9a4e8d-1fe8-43aa-a95e-054d2e772a2a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6aada8f8-c8e0-4acc-b6fa-9fc287fb5381"
        },
        "item": {
          "id": "1dfc50dd-a84b-425a-a6b5-3402e4f4898b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "153d603f-e91c-489e-8925-4899f1b778c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293608f7-ef87-4ece-a770-976a24f06d89",
        "cursor": {
          "ref": "d02f4f1c-cea7-447d-96db-d40f91c50f51",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b532a14b-2540-456e-b7cf-ca9fb21c2169"
        },
        "item": {
          "id": "293608f7-ef87-4ece-a770-976a24f06d89",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6a7a743a-e6f8-4c19-837a-c5264b93acd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3306c675-4a4a-414c-9a0c-efda6617abf2",
        "cursor": {
          "ref": "71343d25-8f0a-45cf-8d94-dfaddeae186d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c0ca26e1-4512-4e02-a5f4-3ea7c2f835fb"
        },
        "item": {
          "id": "3306c675-4a4a-414c-9a0c-efda6617abf2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c513a289-2419-4e5e-a68d-26564fb703b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec9930e-dd7b-45ac-b69f-bf6eb7aad39d",
        "cursor": {
          "ref": "68578b9b-c44d-44fa-a948-32f570e1aaeb",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2528a2e1-698e-46f5-bb50-aeb70102c1d7"
        },
        "item": {
          "id": "8ec9930e-dd7b-45ac-b69f-bf6eb7aad39d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "43a28110-5a6a-411a-ab3a-76f4c5bbb8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0c212a-cb01-41d7-8597-616eee590219",
        "cursor": {
          "ref": "d00a8be0-ece1-4a14-9bbb-168efcdf75c8",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d18b4e2b-63d5-41c3-85b7-e4f66a477b65"
        },
        "item": {
          "id": "3e0c212a-cb01-41d7-8597-616eee590219",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "59a70c3d-8ed1-43b6-97f4-772eacb653a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227a2f0b-c4d2-4000-88ea-4774f5c88f9e",
        "cursor": {
          "ref": "7f2c2e70-b34d-4f5e-b50a-c4ebbc616f98",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "63b4c209-41d6-4b47-99a1-da6a4549e6cd"
        },
        "item": {
          "id": "227a2f0b-c4d2-4000-88ea-4774f5c88f9e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "310acc75-c7ed-49df-9447-2436a2f1d39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffba482-002b-4b07-b036-055f1355cf27",
        "cursor": {
          "ref": "793bb692-95f8-4df5-8fb3-2d185f5f47a1",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bea394f0-3bfd-4f08-9556-ef37bc328a3f"
        },
        "item": {
          "id": "4ffba482-002b-4b07-b036-055f1355cf27",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c06d0407-e0a9-458a-952b-f6bdc1d29988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ab0217-f111-466a-af6e-8fe5c11ae369",
        "cursor": {
          "ref": "3ef71c75-0af9-48d9-a8ba-66d07ff90342",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9fd0b4b0-b2f3-484a-afca-ec936c34b623"
        },
        "item": {
          "id": "95ab0217-f111-466a-af6e-8fe5c11ae369",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "db716a1c-9ee1-4e17-878a-2b381144cf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97989ea3-04d8-49dc-81ad-4e1386d41016",
        "cursor": {
          "ref": "af289265-1af9-488c-9baf-9cda65628085",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f2df32a6-17a7-40e5-909b-b2709104dcec"
        },
        "item": {
          "id": "97989ea3-04d8-49dc-81ad-4e1386d41016",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "390bf793-8f9b-47c5-ad74-88dfea7f55ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65270d42-e24d-4ed1-80d8-61c02e779f96",
        "cursor": {
          "ref": "9d63fbf3-ce86-4f51-bfa6-b6a443c8686b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "09cbf474-384d-49b2-ad2e-baa45b3e3601"
        },
        "item": {
          "id": "65270d42-e24d-4ed1-80d8-61c02e779f96",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3b9bce91-5f18-4ffb-9501-7041481df9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bec4376-0d6f-428b-8560-565b2d2c7b2c",
        "cursor": {
          "ref": "1c66b307-f9e2-45a8-b57e-089dfe64cb67",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f2e31a62-1096-4403-9afd-f5e767de434a"
        },
        "item": {
          "id": "0bec4376-0d6f-428b-8560-565b2d2c7b2c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "79dbc2da-a4c3-4c5e-bf70-274bfe7e1934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d1ab8e-f588-49c3-969c-fc4f296bcb7a",
        "cursor": {
          "ref": "07316514-d17b-41db-b3a0-ae27f38010a6",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8964b409-f39a-46b6-9384-32879a2abaee"
        },
        "item": {
          "id": "42d1ab8e-f588-49c3-969c-fc4f296bcb7a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e5a392d1-19d3-4de9-9404-6fdb4c5629ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2b1e53-17ee-42d0-be2c-e1d0b56a59f5",
        "cursor": {
          "ref": "d233a881-03f2-4170-a00d-7d7a0a4f98b9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "14b743ca-f1de-48f8-b337-364016e152da"
        },
        "item": {
          "id": "dc2b1e53-17ee-42d0-be2c-e1d0b56a59f5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7a667e17-96a2-41ee-adae-970108f3f855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbea165-2719-4ac1-ae5b-2135f56f35e0",
        "cursor": {
          "ref": "8899be45-82f1-4e6b-aa86-81b9be1dff94",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "83c3506d-f99f-46dc-8b41-b8cddbd96ca6"
        },
        "item": {
          "id": "bdbea165-2719-4ac1-ae5b-2135f56f35e0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6b566d9e-9817-4751-bb7d-63416406cca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942b4aa8-db27-4f4c-a94d-fb9da986cb5d",
        "cursor": {
          "ref": "b15a6aa1-8868-4fad-9376-a7d37b9e3a17",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e568deb0-b48f-4e2f-abd5-9f373c85971d"
        },
        "item": {
          "id": "942b4aa8-db27-4f4c-a94d-fb9da986cb5d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "40c7a626-23fc-4897-a2e7-a3402ead608f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7706d151-a5d2-4d39-a35d-fbff08abf188",
        "cursor": {
          "ref": "71e942be-6853-49af-bb8c-2d0300a42542",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fe960d7c-5e69-4bac-9f45-496748110530"
        },
        "item": {
          "id": "7706d151-a5d2-4d39-a35d-fbff08abf188",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "534eba88-54c9-435e-b64a-675c1d634522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b499102-6827-44ed-888e-d407d7af403f",
        "cursor": {
          "ref": "3eb01a38-0b2f-4afc-8fea-b89dd9efaf17",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "55028b49-a754-4ca9-ba71-529f41f7d717"
        },
        "item": {
          "id": "0b499102-6827-44ed-888e-d407d7af403f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "84271034-ebee-4aad-bb11-922a7c31c058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d1942c-a931-4727-a49a-f910ba31c688",
        "cursor": {
          "ref": "9a66b8c9-52d7-4cd3-9c02-4f125b3f8037",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4b253533-722c-4511-a00c-43da77d54050"
        },
        "item": {
          "id": "56d1942c-a931-4727-a49a-f910ba31c688",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4d6d9d7a-de6b-482f-8842-57b8d782967b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b18d4f2-d652-4aec-adb2-e62442f4a659",
        "cursor": {
          "ref": "1cf4bb95-9128-4328-8cd3-09ef4dbf1867",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c3731161-051f-444a-92ad-a856b3938738"
        },
        "item": {
          "id": "3b18d4f2-d652-4aec-adb2-e62442f4a659",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c2a88ea5-decb-4120-8e57-bca0f5ae9911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8555f9ef-3a2c-468c-87e6-387d947d61bf",
        "cursor": {
          "ref": "b9c5f570-cf39-4ef5-b5ff-5a3b8ac580a0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2eb43131-3669-43b1-8735-7efc23d031ff"
        },
        "item": {
          "id": "8555f9ef-3a2c-468c-87e6-387d947d61bf",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "069b1639-648b-4409-9c58-123eb9aacf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547209f9-e374-4543-96e6-f7bb0fbcf734",
        "cursor": {
          "ref": "0fbedab6-cd6c-4a03-bd12-78c2a052c797",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "544039e7-b4d2-43eb-827c-9adbfa8ef7bf"
        },
        "item": {
          "id": "547209f9-e374-4543-96e6-f7bb0fbcf734",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2bfc35e2-375d-4a02-a4d6-7976ad3560ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738a9351-c4cd-466e-8edc-04d42d2ab94b",
        "cursor": {
          "ref": "c9f3ea02-cc00-4d59-8161-0f6b86c0c7e4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cc40b733-99cc-4252-bc4f-fa5c7643375e"
        },
        "item": {
          "id": "738a9351-c4cd-466e-8edc-04d42d2ab94b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5a70a43a-5759-42a0-b1dd-23e7708b39e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f214d7a-a851-4b1e-b212-70b0af5852fd",
        "cursor": {
          "ref": "b5595405-9fdc-4ba4-bcdb-a1278bbab3af",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e89231ad-8879-4399-bf83-84b8df34499f"
        },
        "item": {
          "id": "9f214d7a-a851-4b1e-b212-70b0af5852fd",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "36559934-b6bc-4d8d-b74e-cf2273101ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "41b5b416-826f-460f-be2a-5dfca218fbd5",
        "cursor": {
          "ref": "ea41d498-cd85-4fb2-94b2-8e58f041e805",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "18613a16-6d27-4362-b54d-aecd22d566e2"
        },
        "item": {
          "id": "41b5b416-826f-460f-be2a-5dfca218fbd5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "67bef0c0-9131-4022-979a-4717e5a16d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ed593136-5808-411d-bf7c-8411ea0efb1a",
        "cursor": {
          "ref": "2c178894-5054-4a31-8c34-f42fd55b6c24",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1cace56e-7414-4a58-bb04-7cd06e8df5b8"
        },
        "item": {
          "id": "ed593136-5808-411d-bf7c-8411ea0efb1a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "105a5462-834d-459b-b030-e6375273a903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a5b66344-7aac-4e98-a00e-a18217406967",
        "cursor": {
          "ref": "065287e7-817a-4d7a-b9ff-9e2b15fd3025",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "63765f6f-1cee-4973-8353-b803c74df162"
        },
        "item": {
          "id": "a5b66344-7aac-4e98-a00e-a18217406967",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5af5636c-4788-493c-87a0-ca1f337b1800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "cc63df88-ff54-46c9-8212-548c4c87d16a",
        "cursor": {
          "ref": "ad3156b8-e70f-4773-aaf4-6e909b8133f6",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c802733c-e6cd-4c92-92bc-2c01809b98f4"
        },
        "item": {
          "id": "cc63df88-ff54-46c9-8212-548c4c87d16a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cfc7642d-deb2-49be-8bc5-2f0cbba519d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d3d2ffb5-240b-41df-b5f5-dd4e9917a705",
        "cursor": {
          "ref": "1bedc0d1-e774-4e79-aec1-6f0d387dc08e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d4f553a5-e644-4d7e-80d4-528678aa0291"
        },
        "item": {
          "id": "d3d2ffb5-240b-41df-b5f5-dd4e9917a705",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e5734997-ef31-436c-ba75-a621a7b14f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fa0cea20-fe33-42d3-8bbf-d6856d600ce6",
        "cursor": {
          "ref": "0939ec97-2c78-47a8-a804-3612192d8e11",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "04ff73ed-530e-41a8-946f-1828abce5e26"
        },
        "item": {
          "id": "fa0cea20-fe33-42d3-8bbf-d6856d600ce6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a95921bc-6f25-4542-8dac-605b13f89b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3df4408c-bb2d-4b3f-8802-17ba0c74a1ac",
        "cursor": {
          "ref": "8ea7853c-cba2-4521-ae89-4fc28ae0c6d7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ba0504aa-ca58-42aa-bd85-ebdda9408b48"
        },
        "item": {
          "id": "3df4408c-bb2d-4b3f-8802-17ba0c74a1ac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ffc87b01-9f93-412b-be50-e0fd8d91e5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e622f3-6b47-40c2-ae46-18ae45d8a016",
        "cursor": {
          "ref": "390f8d0f-eab6-45bb-9ca4-b186dbbcf08d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "15dac399-3f69-43d2-b4d2-f2dd7b6f12d3"
        },
        "item": {
          "id": "a5e622f3-6b47-40c2-ae46-18ae45d8a016",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a6df8397-7767-46b2-a330-6937303cf425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bbae19-5ef3-4868-a7a1-5fe6676ba09f",
        "cursor": {
          "ref": "7b5b3f38-5419-48fb-87b7-e630d377bab6",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "868734de-8d91-4854-ab29-44e4b23e42d8"
        },
        "item": {
          "id": "c2bbae19-5ef3-4868-a7a1-5fe6676ba09f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8fc74a68-239c-4274-b531-30512b82188c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc5c13b-60e6-4fe5-b563-d201a3b5d22c",
        "cursor": {
          "ref": "dc2c8285-edd4-41a3-8f7b-5d9eb99f1fec",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "48e5bfee-e0a4-418c-b1a1-edefab86d2ca"
        },
        "item": {
          "id": "cdc5c13b-60e6-4fe5-b563-d201a3b5d22c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f3434d9b-cd38-48f8-b41f-f54355015d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1db02c5-4214-4128-8383-d363e1e4b9bc",
        "cursor": {
          "ref": "85e92853-833c-4da8-9e1d-1e0a0b28f4b7",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6bb10851-e2ac-4249-b78a-7becb3d00ab9"
        },
        "item": {
          "id": "b1db02c5-4214-4128-8383-d363e1e4b9bc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a9fa3b18-3b1f-4b3b-a422-04052025428c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b012d78-97d1-4150-be96-d445db71384f",
        "cursor": {
          "ref": "91bfe86b-c50b-4cf8-b290-5091799162b4",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a86dad61-7e0d-4073-915f-fc361ca94d77"
        },
        "item": {
          "id": "7b012d78-97d1-4150-be96-d445db71384f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c0e48323-a9ef-4aac-9ab5-1ff38446d36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f26c109-3952-4f45-93de-e71869566049",
        "cursor": {
          "ref": "a8edde4c-7d37-415c-81f6-c06e253011cb",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6d924e0f-41d5-4ab2-88f7-746c587d4b06"
        },
        "item": {
          "id": "8f26c109-3952-4f45-93de-e71869566049",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "353ad596-95b0-4e4d-9739-4324b786c88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78386a4-c25b-4f1b-9915-47bdf70708ad",
        "cursor": {
          "ref": "277f4853-fa39-4e5c-9efd-42cb71ad5a70",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1d4e1fc9-2087-4ecc-b4a0-872b8c97dac9"
        },
        "item": {
          "id": "f78386a4-c25b-4f1b-9915-47bdf70708ad",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9a64126f-e779-44fc-a01a-22ca2750d7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bd75d1-c60b-47d1-9456-7a5e4850e4fd",
        "cursor": {
          "ref": "45e1889c-fe9a-4f98-96c1-7eb2650512ab",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5d748b05-c46d-4e5e-95f8-a5ab39f4cc66"
        },
        "item": {
          "id": "96bd75d1-c60b-47d1-9456-7a5e4850e4fd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7f5eeb4f-a383-4d7e-aee8-7ac5c43d0684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80729c9c-2689-48e7-b37f-145d39e2b017",
        "cursor": {
          "ref": "435d05a7-04c9-4e13-9bf6-04efd8914384",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e6a8bdbd-3346-4168-81ce-89f89576dd9d"
        },
        "item": {
          "id": "80729c9c-2689-48e7-b37f-145d39e2b017",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fb64bb25-dea1-4bef-b20f-2851f13c4c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c38452-4e0b-47de-8902-bc12bfe915c9",
        "cursor": {
          "ref": "7e09ef80-8694-47d0-ab6d-0a93472b46ea",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e00e5260-0109-4b94-aabc-2899b99e345d"
        },
        "item": {
          "id": "b4c38452-4e0b-47de-8902-bc12bfe915c9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ee9c7d60-17bb-4636-a390-d9529de7879a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961f2c45-2ffd-4d22-b4d8-a3c708b21b33",
        "cursor": {
          "ref": "317a561d-8009-4f09-a1ce-447154b121eb",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "30cabc57-a2c4-43a5-8b29-2f582617772d"
        },
        "item": {
          "id": "961f2c45-2ffd-4d22-b4d8-a3c708b21b33",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c639d38d-b857-44cc-9075-c25cc96ecea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436350ef-caba-438c-bca9-3fe5fa7a1994",
        "cursor": {
          "ref": "ad4572f2-865d-4355-b96d-66029ac8c504",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "82460fb0-5a1c-4058-aba2-167ec0d542c0"
        },
        "item": {
          "id": "436350ef-caba-438c-bca9-3fe5fa7a1994",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "47f162ef-2679-482f-9846-c8d537188469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e741aa69-6498-4295-84a8-81713c0185c6",
        "cursor": {
          "ref": "a7e00a74-26d9-496a-8161-f0659055e1da",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e051c647-11c1-4d7b-a639-1fca8fd85ffd"
        },
        "item": {
          "id": "e741aa69-6498-4295-84a8-81713c0185c6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "18ce0137-134b-4b44-b968-b908c0140205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512ae3f6-6af3-4b46-9da1-ada2afbfcddb",
        "cursor": {
          "ref": "7dbb199a-fe2d-42f8-ae5d-a9bb5c09a760",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c0d9d62e-ca2d-4652-a59d-01d8b8c8d7e8"
        },
        "item": {
          "id": "512ae3f6-6af3-4b46-9da1-ada2afbfcddb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "28f170f7-c2ef-499d-a5eb-6f12738eb034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f52c33-0334-4005-a2e8-0b1f4ffa78cb",
        "cursor": {
          "ref": "b6aeed07-8a27-4c23-b1f2-63be417465fb",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e0417a32-a471-4d78-bc13-b83a4a45e67d"
        },
        "item": {
          "id": "a4f52c33-0334-4005-a2e8-0b1f4ffa78cb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9ee445ad-0bfb-4186-87ee-20b43d2c5419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55cd209-d3e2-45e6-9724-c3dd020105be",
        "cursor": {
          "ref": "caf2e395-5b62-463e-8745-601a88fc2300",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cb4d2ed7-3190-4fbe-8e7e-f48164ebed88"
        },
        "item": {
          "id": "f55cd209-d3e2-45e6-9724-c3dd020105be",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "98a59d05-c4d9-4a75-826e-b5f9ef6a0ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d1f1ae-3380-4dd6-be92-3d48797ebc40",
        "cursor": {
          "ref": "1d784822-78d7-440b-b4d3-bc3f905545b3",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "14d9b416-9d83-4a2c-ac36-9bdcc9dd602b"
        },
        "item": {
          "id": "a2d1f1ae-3380-4dd6-be92-3d48797ebc40",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b701d0d2-a9df-4026-8a6d-a11f2ce09196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f10bd8-afdd-482a-b8cb-906b14d5694c",
        "cursor": {
          "ref": "5d611466-f904-42dc-b0e5-9687058421cf",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3e0b704f-0b03-4d05-9e63-0dacafe0c73e"
        },
        "item": {
          "id": "71f10bd8-afdd-482a-b8cb-906b14d5694c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "df0077fd-45b2-4aa9-8a0d-e17bcecdace7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a94a43-ffb5-4eb4-8f46-9fd050005565",
        "cursor": {
          "ref": "bec5f038-80bd-4383-88b0-1686775ef850",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7c0ffeac-11d2-48d2-950a-8ff30cb5bd0c"
        },
        "item": {
          "id": "c8a94a43-ffb5-4eb4-8f46-9fd050005565",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "457cd8d8-85aa-4fdc-b3f7-b8dbba686389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b28fd2-daee-4039-b2f2-18f4190ef29e",
        "cursor": {
          "ref": "c9749392-98f3-45e0-bdef-29c006073d6a",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b941d6b7-c8da-4ec6-8b42-3484bf078d9a"
        },
        "item": {
          "id": "94b28fd2-daee-4039-b2f2-18f4190ef29e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "de4bad93-fd53-4921-96dc-1273e49e11b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d764738a-e239-47ce-a198-48bba22b5db8",
        "cursor": {
          "ref": "99bcc8d5-ea57-4f93-95bf-ab251f0c7beb",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f1fb2ba5-7366-4944-9243-d54a24953452"
        },
        "item": {
          "id": "d764738a-e239-47ce-a198-48bba22b5db8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2c2e2892-8156-4067-a90c-c71a92eb0efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0b4b32-aded-46c4-809b-0ee54fc44f4d",
        "cursor": {
          "ref": "093959ec-c746-4413-a8f0-a82d6bea7c10",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5d7d2521-2fcc-4cc7-8d78-7b019d0fcee1"
        },
        "item": {
          "id": "be0b4b32-aded-46c4-809b-0ee54fc44f4d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c1c7b21a-5cd4-4d89-8411-e662868fadd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e2dda7-48c6-4324-8bbf-c955b098e20b",
        "cursor": {
          "ref": "d386c5fa-fc3c-4a0c-8246-0021aca55244",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ddb88b84-96db-4023-813b-dd14b571a4cd"
        },
        "item": {
          "id": "04e2dda7-48c6-4324-8bbf-c955b098e20b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "226f2fa1-d7de-4433-a245-11c811c2e42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b88107-f342-4619-adcc-f53ab78153a1",
        "cursor": {
          "ref": "bcd44ae6-5ed2-4dac-b33a-3d9d0d37c857",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6915b520-2548-489a-ae08-b507176cc802"
        },
        "item": {
          "id": "81b88107-f342-4619-adcc-f53ab78153a1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "09a3e325-9e75-40b9-bb88-59956342ce7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60f66ba-7046-496e-aa91-472427107550",
        "cursor": {
          "ref": "761beb24-02b3-458e-b07f-a94c2cd78b78",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6d2cd53e-20c7-4ed3-89ec-7c9bc6b1c3d5"
        },
        "item": {
          "id": "d60f66ba-7046-496e-aa91-472427107550",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f9624ca4-12e4-4eba-a20c-cb7d274443f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec29380-c033-4585-8f1d-228d5645462e",
        "cursor": {
          "ref": "6b397f12-c19d-4f73-8e1a-ff1481c74937",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3ad9f348-fbf2-4553-8e1a-841f6ff4a12d"
        },
        "item": {
          "id": "dec29380-c033-4585-8f1d-228d5645462e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6ca1dcb6-da46-4136-9c18-f48496f2e9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b7b9c8-fead-48aa-8c46-bce1a78c8bfe",
        "cursor": {
          "ref": "5a73e932-da8b-4308-9cc5-e2d59abe5e0e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e0bb5091-d3ec-4344-8644-5db45dabe391"
        },
        "item": {
          "id": "83b7b9c8-fead-48aa-8c46-bce1a78c8bfe",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f4d845a8-5892-42f8-acfe-6cd85eef50bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdf813c-740d-44e2-8935-760d176a31bf",
        "cursor": {
          "ref": "f207ad90-47de-4d11-9084-9e5a4d60ed48",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8a7794c9-9115-496c-9d05-50673c703819"
        },
        "item": {
          "id": "1cdf813c-740d-44e2-8935-760d176a31bf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "34fe6e50-b765-4b0c-ac2c-2e6d95c032b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39566202-29e0-4095-b09d-494bced2f30e",
        "cursor": {
          "ref": "9ea5eb3a-c04e-44f0-abd7-ede374f839ad",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e4071b7d-9963-4cf1-aecf-791f2429873d"
        },
        "item": {
          "id": "39566202-29e0-4095-b09d-494bced2f30e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b5519b2b-2f79-4282-83d7-11904929d117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6097241d-d42d-4e25-b93f-4fe37fa38822",
        "cursor": {
          "ref": "a41d77fc-510e-46ee-84f8-b6e720fa3bab",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b8b3268e-eb93-4ed8-b9fe-7eabb3d95902"
        },
        "item": {
          "id": "6097241d-d42d-4e25-b93f-4fe37fa38822",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d26d41a6-73b4-4dc8-b7c4-54f743026889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10760fdd-2c67-411f-bf75-c5f24a7bb33b",
        "cursor": {
          "ref": "cb78a056-c577-47e2-b9dc-5765b3f73d9d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "17736fee-20b3-4556-9585-79968222a44d"
        },
        "item": {
          "id": "10760fdd-2c67-411f-bf75-c5f24a7bb33b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "135af802-d57b-4430-9833-26227d1decad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b7cc52-1440-4142-bf97-92cc7e5ba71f",
        "cursor": {
          "ref": "e77e76bf-5c2b-4929-b7e5-035925c5d0c4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "687d5a10-3fcd-49ce-8d7a-121121bdbc23"
        },
        "item": {
          "id": "75b7cc52-1440-4142-bf97-92cc7e5ba71f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a05581c3-973a-4dcf-bb3a-cea4e9b8caa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74bd0ea-82f9-40ba-bad3-2b01777eb92e",
        "cursor": {
          "ref": "f89cc447-4d5d-410a-b06f-c23bae184c24",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d1392adc-0438-4ece-babc-2fa64643f43e"
        },
        "item": {
          "id": "c74bd0ea-82f9-40ba-bad3-2b01777eb92e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "27e13641-e4bf-457e-acdf-6a2593666ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13d6622-bc87-4d94-909f-32849d27c987",
        "cursor": {
          "ref": "5a07a93d-2ef8-465b-acbb-6964354c90ae",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "206bad0a-ad77-4f65-b5f9-f97023d81e36"
        },
        "item": {
          "id": "b13d6622-bc87-4d94-909f-32849d27c987",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f760d118-cf29-4a2b-adcd-d5c83025f7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655e0ed3-111c-4dc6-bd70-102af3f7d814",
        "cursor": {
          "ref": "4c874def-bb84-4c8c-b69e-57b6d8b0aa5a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "50583c93-023c-4b06-91ad-6c24b6cdc4f5"
        },
        "item": {
          "id": "655e0ed3-111c-4dc6-bd70-102af3f7d814",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "79a62cff-c958-440d-988b-0f1144ac1d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f129b98-23d8-466d-9947-9af25f2a516e",
        "cursor": {
          "ref": "454f348e-cade-4387-a8ce-cb274902f3fd",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0acba073-ffde-4645-be6e-aeabd3ea22a5"
        },
        "item": {
          "id": "7f129b98-23d8-466d-9947-9af25f2a516e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "006d3d6e-310d-4a30-b7ab-101175d3f269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dabe589-7eb4-4f33-8669-6b03f3fdaf27",
        "cursor": {
          "ref": "e4ce46b1-d86f-4ed3-815e-3d1aa9c2247a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ce66407e-57c6-4f01-ac43-ad4cef1bc302"
        },
        "item": {
          "id": "3dabe589-7eb4-4f33-8669-6b03f3fdaf27",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4ca09b25-9b2b-412b-bd91-0527dc51a2a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186c79a2-f22b-4989-8ed1-5742756d88b6",
        "cursor": {
          "ref": "11561f99-8cf0-4e9b-845c-ea712f75dc2e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d7712722-a46e-4991-8f95-bf02f5b9e926"
        },
        "item": {
          "id": "186c79a2-f22b-4989-8ed1-5742756d88b6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f01c39f3-5e1d-42ac-917e-6cea0cb53a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6033f62a-2da1-4bea-98d7-28853c1a35db",
        "cursor": {
          "ref": "81c28fcf-9bcf-4d0d-88ed-e2ccf34a34b1",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6e5ff705-bba8-41a0-bae4-25b353239db4"
        },
        "item": {
          "id": "6033f62a-2da1-4bea-98d7-28853c1a35db",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "966dbf3f-d9fe-4b38-9444-58d26cd9a44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1062cc-abde-4564-abdc-8d68db56beba",
        "cursor": {
          "ref": "9f63cc3f-d916-4568-9060-063821befaa5",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "95f4ddd8-d4b4-4758-a1b4-b6b4a578548f"
        },
        "item": {
          "id": "7f1062cc-abde-4564-abdc-8d68db56beba",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fe8f500c-b1ed-42a2-8ffb-f59b4ed8d842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a3082a-f15a-471c-b75d-af84e2220c19",
        "cursor": {
          "ref": "5a6dbc7e-5a27-4e84-b31e-ba1e32cdf3aa",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a1363960-2f94-47c4-b70c-7b90709afe6c"
        },
        "item": {
          "id": "f2a3082a-f15a-471c-b75d-af84e2220c19",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "89b7dbef-6407-4fb3-83fc-b1e21cc32b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eada44a-e709-49a7-ad70-f4c500a329ee",
        "cursor": {
          "ref": "98f0c94a-7803-46fb-af49-09867f1b218f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d0ea4ca0-df9f-41fe-a83f-8133571b78ed"
        },
        "item": {
          "id": "4eada44a-e709-49a7-ad70-f4c500a329ee",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ca8df944-8dd9-40a8-a79f-545688092f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef7f56a-9267-48a0-9b8c-5b881abb24b8",
        "cursor": {
          "ref": "4649dd01-0c90-4461-9ed0-aff6ceed50d5",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c350c3a7-cb46-4734-a823-3308a78d583a"
        },
        "item": {
          "id": "6ef7f56a-9267-48a0-9b8c-5b881abb24b8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3ca5257b-31dc-4960-b03f-278fd37e8c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516c402f-a12f-4390-9812-315c362dbe77",
        "cursor": {
          "ref": "8f0009fc-e9f0-44f8-b2f0-944f19030166",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a6a4dd78-5b80-40b2-a9e8-9d4bba9dbc15"
        },
        "item": {
          "id": "516c402f-a12f-4390-9812-315c362dbe77",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fe60fab8-3f80-4549-a78b-fc1c9929f6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98dfaa9-bbdb-425d-b970-95c4579c4649",
        "cursor": {
          "ref": "62be6730-5474-4025-8d8a-59f0b563d65c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b37596d9-34d0-4548-a290-aa891e3c7a45"
        },
        "item": {
          "id": "d98dfaa9-bbdb-425d-b970-95c4579c4649",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c16bdfd2-ce58-48b5-937b-1762b336a0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868e9e9a-5eaa-4987-b510-996a09e5373f",
        "cursor": {
          "ref": "b068ec80-09ad-4d97-8624-23a463ce99cc",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "466203e8-036f-4ed2-8329-6db0d10f7f82"
        },
        "item": {
          "id": "868e9e9a-5eaa-4987-b510-996a09e5373f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "67157be0-f2ab-498a-af61-0b50f5ccb6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389b368e-1143-4bd3-bd9c-f5fef1463367",
        "cursor": {
          "ref": "e6381ed0-7805-4149-87de-745e5795ef0a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0dbec18f-4fba-47ff-9c43-e53b606d039e"
        },
        "item": {
          "id": "389b368e-1143-4bd3-bd9c-f5fef1463367",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "eeedeaee-f454-48fb-8d0a-7cf64458f383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3ccdd6-2aca-42b2-9186-17a23943c860",
        "cursor": {
          "ref": "262753a4-4d66-4a8e-8b44-8fd46def56a0",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d133138f-d8b5-46fa-895b-8319f59570ae"
        },
        "item": {
          "id": "5b3ccdd6-2aca-42b2-9186-17a23943c860",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8da38556-fdf1-4c2f-b2d8-32dcd4f8d293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3247374-4210-437a-8e6b-602fdefd98af",
        "cursor": {
          "ref": "453fb5cc-a77d-4168-a7d9-82db28116aec",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c2012dfe-51ac-4d12-b930-fc36cbbba5a9"
        },
        "item": {
          "id": "e3247374-4210-437a-8e6b-602fdefd98af",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f44e5e3d-affc-46a0-87a7-97877b8435cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d98747-4705-421a-883f-8d6c9518165b",
        "cursor": {
          "ref": "41ac728e-9e8b-43e2-934a-ff6dccf2b6bf",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "876bf956-8928-4395-9a0c-fdcdd45d0507"
        },
        "item": {
          "id": "01d98747-4705-421a-883f-8d6c9518165b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e5b1b859-d803-4360-bdca-898f00951334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4aed6b-6b3a-4ea3-8439-d5500f4b2ba6",
        "cursor": {
          "ref": "f33ffade-9508-4073-9966-f612fb078bd6",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7b453eff-983e-4437-9de0-3387eae6faf1"
        },
        "item": {
          "id": "7a4aed6b-6b3a-4ea3-8439-d5500f4b2ba6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e0903404-1870-444e-8cf0-87727afa706c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46455290-7ee8-4519-bced-fcd9e6705998",
        "cursor": {
          "ref": "3ae5c238-1916-4758-9a14-5245bf5d5e98",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1b236c54-2f57-4af5-83bb-b0bbf636d274"
        },
        "item": {
          "id": "46455290-7ee8-4519-bced-fcd9e6705998",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "58acc00a-fe04-4a57-8334-78d6e5f25807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf81dfe-4a69-4ccf-8ab7-375e5622c21e",
        "cursor": {
          "ref": "cddddf39-a8e9-4314-bd98-7ca9cfb5d7d4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ac3129b6-7936-4a32-80f3-341271edc736"
        },
        "item": {
          "id": "adf81dfe-4a69-4ccf-8ab7-375e5622c21e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4c06a8f0-afd4-45ac-9173-6b1bd7eaefdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967c76d7-8c49-441a-8a79-13d2de2f6aac",
        "cursor": {
          "ref": "97c3df85-fde4-4b2d-a1aa-236708ceea83",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6757508c-bbf4-4c69-8b3d-8311884a3505"
        },
        "item": {
          "id": "967c76d7-8c49-441a-8a79-13d2de2f6aac",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "576daf35-243a-41a5-bf5c-ac336b444b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b149393e-4cfa-436a-9974-ccf3ddcc6de1",
        "cursor": {
          "ref": "7cf31651-cddb-4e51-a176-1d9bb5784e6d",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "47e1245b-8acf-4716-8fe2-59389dbfd582"
        },
        "item": {
          "id": "b149393e-4cfa-436a-9974-ccf3ddcc6de1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "56222964-a22f-4170-a5f6-3dc38979a10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64971bfb-25e9-4c3b-a6ec-952fab64f201",
        "cursor": {
          "ref": "5e17d774-b90a-4707-a307-39593ccf2f25",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "43f96d14-4bcc-401b-870c-4e507c927472"
        },
        "item": {
          "id": "64971bfb-25e9-4c3b-a6ec-952fab64f201",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9914786f-ee5c-49ee-8b5d-3fa8c213ff56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de68a2c-b770-42a1-a8ec-0ff7956cbd82",
        "cursor": {
          "ref": "5d838051-97d9-4f53-84cf-9d1f4f68760c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1f18a094-1b60-437f-8838-57c42c69569a"
        },
        "item": {
          "id": "7de68a2c-b770-42a1-a8ec-0ff7956cbd82",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d734710e-5595-4a36-840b-e48b98e8e553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68dc95b-2eb1-4a23-9d6c-74c495e060bd",
        "cursor": {
          "ref": "0d6b9401-04c8-496f-b17e-679b3ebf06bf",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "743988f9-ea55-4d03-9fae-e2b544a8b573"
        },
        "item": {
          "id": "b68dc95b-2eb1-4a23-9d6c-74c495e060bd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cefaf503-73c3-45e7-848a-fa0eb77f176c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d54a517-dabc-450e-990c-42b5413b3270",
        "cursor": {
          "ref": "6db1ac6d-3a77-4120-89b8-7238ca695440",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0edeba8d-b505-4c53-9b74-cc64fb303186"
        },
        "item": {
          "id": "6d54a517-dabc-450e-990c-42b5413b3270",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "eead42f8-6d30-46fd-8b06-3d6a3149c2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ced55d9-5c87-4e9e-8c82-72f89b7b8954",
        "cursor": {
          "ref": "83de2370-a757-4557-8edf-88b483326bab",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "afaf9fca-b032-4ab5-b631-be347325f7c9"
        },
        "item": {
          "id": "3ced55d9-5c87-4e9e-8c82-72f89b7b8954",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "709cb6e5-8328-48f1-a617-5014c96b8572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7949581-63bc-49a3-bc66-e1cdd91df117",
        "cursor": {
          "ref": "b58b070b-9d31-4bce-80ac-4e23cda0f20d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e9bc3104-32a8-49dc-81c6-b48cca9f9bdc"
        },
        "item": {
          "id": "e7949581-63bc-49a3-bc66-e1cdd91df117",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "81be87d9-cd87-4db3-807a-ea9b4e3302e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde04dda-1037-4a5a-b853-5b4b30805ffc",
        "cursor": {
          "ref": "6df00259-1365-4280-a993-d8bf84e42bd4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c300b9fd-6313-40c4-948f-ae25fec493d6"
        },
        "item": {
          "id": "fde04dda-1037-4a5a-b853-5b4b30805ffc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c8b72497-7a0f-4425-930c-700499219d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052abf19-8f80-4736-8024-326d5116f2eb",
        "cursor": {
          "ref": "3ec6b00b-8d42-4272-ba31-f8235aa71925",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6eb0299f-47ef-403e-97f7-7d6fc8f64e7a"
        },
        "item": {
          "id": "052abf19-8f80-4736-8024-326d5116f2eb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "99a70ad6-b403-400b-b365-c962e5e6d642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65af5957-7356-4d31-8347-b055a7863a20",
        "cursor": {
          "ref": "5bf602fb-744b-4ed8-98df-48f4e746c29b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9a0cddfd-5bd7-4926-a4df-fb60a2179194"
        },
        "item": {
          "id": "65af5957-7356-4d31-8347-b055a7863a20",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "530769b5-b876-4c42-8f1e-c50de218a65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16244c89-ce2f-4836-9064-89946ed0925f",
        "cursor": {
          "ref": "26cf2e61-0ae1-47db-be8d-2712c4762044",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "86dcf5d1-04cd-47ae-a55b-17ef9309938a"
        },
        "item": {
          "id": "16244c89-ce2f-4836-9064-89946ed0925f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a31fdde6-59f7-4141-9ef6-c425a3f12060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c061fe7-26d7-42cf-a8ff-a444be435c8e",
        "cursor": {
          "ref": "15d3675b-c1d6-46a2-8f24-fe5cb9bee0e3",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e9322dd0-5d60-4e74-a191-ec45998dd2b7"
        },
        "item": {
          "id": "4c061fe7-26d7-42cf-a8ff-a444be435c8e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "321a43e4-452a-458d-881a-a8aba39c973b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c094b5-c762-4a29-957a-112fe9abd2ad",
        "cursor": {
          "ref": "aa8dc341-eb30-4492-83c3-bd1775f5b620",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4e91b0e0-66f8-4542-8058-5063242ae1ed"
        },
        "item": {
          "id": "87c094b5-c762-4a29-957a-112fe9abd2ad",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4be269a6-fec8-4593-8123-87116b851a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f70601-987a-46c0-842c-80a78f87435a",
        "cursor": {
          "ref": "0e758a74-653a-4738-938a-151a7758fbf8",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5cd29a57-ce86-4c3f-b9c0-5e7cdeeaa128"
        },
        "item": {
          "id": "11f70601-987a-46c0-842c-80a78f87435a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "80c9b021-c661-4962-9edc-fed8d63573f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c8d61d-6188-45e0-99aa-3925a32bf844",
        "cursor": {
          "ref": "2d0ba602-5906-43d0-9ff3-3d0c8b3f219c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "703beabc-2203-426a-9392-92e8732aea76"
        },
        "item": {
          "id": "04c8d61d-6188-45e0-99aa-3925a32bf844",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0085f7d0-4518-40da-9bad-9795d68e2d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8043c665-e3eb-444e-9f43-76d75842f55b",
        "cursor": {
          "ref": "e7507e34-d552-465c-99a3-f4bf63beccee",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "08a9e842-912d-41cd-bfc4-262d28cfcb7c"
        },
        "item": {
          "id": "8043c665-e3eb-444e-9f43-76d75842f55b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fa304b4a-0a71-4dc8-b5bc-ee4e6937c9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab5a19a-61c7-4354-94c4-dd8fa870c538",
        "cursor": {
          "ref": "0aaab9ea-fe7e-4b8d-af71-b3f981ab1d3a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4dcc7561-039c-47ef-aae1-5a063288b6e5"
        },
        "item": {
          "id": "6ab5a19a-61c7-4354-94c4-dd8fa870c538",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "37c1ee9f-0a31-4280-b9b5-3a817279683a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8335c63-f73b-4c9b-a29b-05e9cf354c6b",
        "cursor": {
          "ref": "0f9d6911-1393-487b-bf17-a90b8e76a5da",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7c735d14-b77d-4c3c-a2e1-277b1308c12c"
        },
        "item": {
          "id": "b8335c63-f73b-4c9b-a29b-05e9cf354c6b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "24b557fb-2fea-4e66-b54d-b91a2b2636d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0ff599-ff9e-48d8-8352-1a83a78241b0",
        "cursor": {
          "ref": "ea63d94b-8593-4926-a212-6a26297191fa",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4d641a5e-6c5e-4c26-b1be-b928cfe373ff"
        },
        "item": {
          "id": "ef0ff599-ff9e-48d8-8352-1a83a78241b0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a7bc1fe9-53a7-4785-9b42-667c8dabe051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080a86c3-9db7-47ad-8176-4e37d5665c64",
        "cursor": {
          "ref": "e18dd3db-5268-46c4-b7a2-6dab6a837bb9",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2639ff75-63c5-42db-ad3e-87318ad5e558"
        },
        "item": {
          "id": "080a86c3-9db7-47ad-8176-4e37d5665c64",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "be1c4a27-5183-4f58-93ec-018f39ecc1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7bfc55-9151-472e-9c26-ebb7cf1e9b10",
        "cursor": {
          "ref": "e929522a-5ae1-4b0e-b05d-eaa80d847833",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "88d4436d-27fe-4d0d-b600-979b6ff736c4"
        },
        "item": {
          "id": "db7bfc55-9151-472e-9c26-ebb7cf1e9b10",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7894047a-a805-4dd0-a13a-cd2cb0cdf3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02376c0-bdaf-4168-863d-0dd0ac9aeacc",
        "cursor": {
          "ref": "4cb302be-b919-47c8-916c-eef8fa6a8c02",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "46b56b14-58e9-4907-bcbb-ae1600778b51"
        },
        "item": {
          "id": "f02376c0-bdaf-4168-863d-0dd0ac9aeacc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bd29adaf-08c4-4eff-9449-457aa5b5c6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9c5992-b34f-47a0-83b5-619fa1fd9050",
        "cursor": {
          "ref": "d16d9a37-222d-41d0-897e-5fb378658e3a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "375f0a78-58c5-4a31-9a3d-c0913c4e34ba"
        },
        "item": {
          "id": "2b9c5992-b34f-47a0-83b5-619fa1fd9050",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "72eaca2f-0701-4ad6-b3c3-6a81129ebb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6170bf1-23e3-4aea-a26d-467b7ea747cf",
        "cursor": {
          "ref": "656e4294-8594-4742-8c06-58b71030cac6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9e525767-e81e-4652-81a2-601725f535ac"
        },
        "item": {
          "id": "a6170bf1-23e3-4aea-a26d-467b7ea747cf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "44178bbe-2ee8-4b51-bf0e-883a66cc51ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82959489-9e40-4a07-9441-bf26ccdee409",
        "cursor": {
          "ref": "e33d9cae-897a-4370-b0cf-5728a44e9ac4",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d68798db-47df-4b29-a0dd-d3337645a255"
        },
        "item": {
          "id": "82959489-9e40-4a07-9441-bf26ccdee409",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f6a5e510-c6f1-4037-af82-7037e13ecb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36240d8e-5c5f-4d7b-a574-2f4134133706",
        "cursor": {
          "ref": "7e6d06af-2fa0-4777-89d1-dd1c6495d5e6",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9aa8bf29-2078-4909-a211-f8ba2c4ef120"
        },
        "item": {
          "id": "36240d8e-5c5f-4d7b-a574-2f4134133706",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "912940ce-2dc1-4347-8965-77f39e632f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad0f945-0421-4f20-9108-c023a8602e0d",
        "cursor": {
          "ref": "c8de2782-b86b-4c4d-9c0f-52186dbcd24c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1a8e334a-eedc-4625-9415-455a7ab99625"
        },
        "item": {
          "id": "0ad0f945-0421-4f20-9108-c023a8602e0d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4d484639-1a5c-4c6b-844b-f65608862df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910dbf6c-56b4-42cb-a8f3-7572375c068e",
        "cursor": {
          "ref": "8261ec5f-8c5c-4152-9404-d392ee41daa8",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7997b5c2-bf64-4bde-bdbb-c42d48b5a998"
        },
        "item": {
          "id": "910dbf6c-56b4-42cb-a8f3-7572375c068e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8cd65a51-7f5f-4b73-97f1-499c7073ac09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98167c72-c9ef-46d4-8587-9ba543ec0ab6",
        "cursor": {
          "ref": "7f3ddf56-bede-41a9-a174-345088ae132e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f8d96dca-b6f1-4bc8-965e-ccf7ab51fc51"
        },
        "item": {
          "id": "98167c72-c9ef-46d4-8587-9ba543ec0ab6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3a6331a3-3d46-4f1d-bf21-9e54d1c71915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c65ed91-c9a8-4994-8815-e96ebda6aeee",
        "cursor": {
          "ref": "1544947c-ad9a-4517-ab6a-67587f28cfec",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0fa00421-abe3-426f-8c13-d61388a4e601"
        },
        "item": {
          "id": "3c65ed91-c9a8-4994-8815-e96ebda6aeee",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9bbc3d82-ab6b-4332-8608-15eeaf6afe73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c79ca0-a4ea-47ae-a516-2c050c71879d",
        "cursor": {
          "ref": "8137cc2f-8e73-4cd3-a218-2221eb827527",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8554112c-ed4a-44ab-83c2-636055649daf"
        },
        "item": {
          "id": "50c79ca0-a4ea-47ae-a516-2c050c71879d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1eb66621-f1c5-4ea5-8582-c63c197c8380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a9f247-dbc4-4d96-a919-20650f756382",
        "cursor": {
          "ref": "eca503ee-296e-4c59-894d-ca12854972d3",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a25d3140-e44a-495b-a0c1-a4c5475df4a1"
        },
        "item": {
          "id": "33a9f247-dbc4-4d96-a919-20650f756382",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e67c701c-8007-46ba-a5d1-c5d607e81cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d43148f-b174-450f-a077-5e72fbd36420",
        "cursor": {
          "ref": "d469802f-d3c6-4426-862e-1f3505260417",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "467ee8e0-808d-462e-b7d0-92eb1c327f24"
        },
        "item": {
          "id": "9d43148f-b174-450f-a077-5e72fbd36420",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c0c12e4d-78a3-45a5-93fb-627940ccbc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc35ecf-b132-4179-8379-d33dfa4def83",
        "cursor": {
          "ref": "ad4d839f-9394-4575-a2da-9ed889623e96",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c1fe0d00-0f16-473b-a677-1f46006904e2"
        },
        "item": {
          "id": "4bc35ecf-b132-4179-8379-d33dfa4def83",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cbc1c463-f40a-43b2-ace0-d490666673fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f3208c-9581-435a-bdac-770d4c29e94a",
        "cursor": {
          "ref": "7f0819b4-603a-44db-98e8-8f9d6ef54e93",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "43b17e04-a458-42b8-b1a1-7341d33b1442"
        },
        "item": {
          "id": "a3f3208c-9581-435a-bdac-770d4c29e94a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0108394c-f463-4f45-b8dd-3b95989f8312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0387f3cc-b616-4a78-b883-73e230276e68",
        "cursor": {
          "ref": "e7441fae-b519-494d-823e-4dc6279b5543",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "13820c7e-8f15-42f5-bae7-b0b45bcd0f67"
        },
        "item": {
          "id": "0387f3cc-b616-4a78-b883-73e230276e68",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bff95eaa-01e7-434e-bfcf-e4867c67789b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa36cc9-31ff-400e-9169-bf696eaa962a",
        "cursor": {
          "ref": "6cc0d562-8fb9-43cd-95c6-ff96ca4ce510",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2e8abebc-9470-4012-9394-2475580d8c17"
        },
        "item": {
          "id": "efa36cc9-31ff-400e-9169-bf696eaa962a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9c97279b-a055-457f-8c85-3d71467cace0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14547c5-b879-4565-9d55-77a80eb20b27",
        "cursor": {
          "ref": "a4982300-4547-4236-b819-016b6473e4d7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5a485226-e9cf-476a-a953-744bcf3d10ea"
        },
        "item": {
          "id": "c14547c5-b879-4565-9d55-77a80eb20b27",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b881ac7f-ad0f-435b-82ee-e532e8467171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79d592a-91c1-4405-bd0a-6d19629d3f70",
        "cursor": {
          "ref": "b428d85c-ec51-4068-ab42-7e5fc07d72ec",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2e812aab-fe37-4d1d-9398-e6bf2930de3f"
        },
        "item": {
          "id": "a79d592a-91c1-4405-bd0a-6d19629d3f70",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0d5b695c-f161-4d0a-b3d5-43e1b685890e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cb8dbc-df32-456e-b402-c7f1627d9c4e",
        "cursor": {
          "ref": "9108d0f2-5dc0-48e1-94e0-f2e1f995ea9a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6e10ee76-c2b1-47db-912c-55b20cca32ca"
        },
        "item": {
          "id": "74cb8dbc-df32-456e-b402-c7f1627d9c4e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "809f877c-99de-42cd-99f8-6821f47729ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84498736-ae9a-400a-bcb3-f7063e2903c3",
        "cursor": {
          "ref": "fe601d9e-7e28-4bde-aa73-0d4e98d73675",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "27168130-f429-4192-aae0-d1480c78ac7b"
        },
        "item": {
          "id": "84498736-ae9a-400a-bcb3-f7063e2903c3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "46d89654-ea1d-475f-8478-2db86815811a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38657b5b-0a5b-43b4-93ca-98a0a8e03d18",
        "cursor": {
          "ref": "744393e6-6346-44dc-9466-aea5c8398494",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "76c4947b-43fb-4c38-a4fc-889bd684d780"
        },
        "item": {
          "id": "38657b5b-0a5b-43b4-93ca-98a0a8e03d18",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0584d025-2a96-4016-9888-99d19eadfff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03225fb0-8f62-4031-bdbc-6f2c392e3440",
        "cursor": {
          "ref": "d33025ba-79e4-41b7-bcb5-b581b8dff858",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "18c211db-2c43-420f-866c-4bd3b518cf86"
        },
        "item": {
          "id": "03225fb0-8f62-4031-bdbc-6f2c392e3440",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "58b2ffc2-db21-4ba2-ba08-0caf4fe22f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc33ae51-9809-4dd9-bb7d-6f71e070d9bf",
        "cursor": {
          "ref": "6437c68f-b08a-47fc-aebd-8b81e2eb7bd9",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8b790e38-f258-4b94-b3da-9a1942207b56"
        },
        "item": {
          "id": "fc33ae51-9809-4dd9-bb7d-6f71e070d9bf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9b6ff32d-6bbd-418e-8216-955e1cf68311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4ff01d-1fd3-4d7c-b21c-b8ed040e54e0",
        "cursor": {
          "ref": "008e3ef6-6691-4678-9e84-3cdea5672bab",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ee565ed3-173a-4ea4-a2f2-4d3d3f8d43cd"
        },
        "item": {
          "id": "cc4ff01d-1fd3-4d7c-b21c-b8ed040e54e0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "28c4fc24-9efe-4911-ae3f-3a2b70f0c402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721f048f-4ea9-4b61-aa7e-d79c3f1d6b66",
        "cursor": {
          "ref": "a09da9b8-314f-4bc1-89a0-66aab76be123",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "aca473e2-d1ab-42f9-b163-679cdeb099b6"
        },
        "item": {
          "id": "721f048f-4ea9-4b61-aa7e-d79c3f1d6b66",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a718ad06-3106-41b7-8637-58572e3e2378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41e12de-a3e3-4ee5-867d-b057d96d4aea",
        "cursor": {
          "ref": "af58431b-9ea6-4a94-b810-ab6a92c94f74",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "66c4fbee-f383-4711-bb2e-5a58a2c4fdff"
        },
        "item": {
          "id": "f41e12de-a3e3-4ee5-867d-b057d96d4aea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e97a67de-dcfb-4c8f-80e9-926474070084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd7118f-3c85-4634-93a9-15a24d12312c",
        "cursor": {
          "ref": "51681992-bef3-446a-baa9-a937b65ba9c7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a90eab4a-0d04-420a-8ebb-e2c44a0dba79"
        },
        "item": {
          "id": "7dd7118f-3c85-4634-93a9-15a24d12312c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7af4abc9-16e0-40f3-b64e-e9ca3749508e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d937350-c786-4aac-abcb-c91d4a14238a",
        "cursor": {
          "ref": "6407c027-6dc0-4a70-bd79-9625251c9d38",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a7845229-7e9b-4dff-a162-a3a05fe5b584"
        },
        "item": {
          "id": "6d937350-c786-4aac-abcb-c91d4a14238a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "33f92783-4a4e-4913-bb6c-0b2d020f9c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6352344e-e5e1-4a80-b67a-cfaca456d0e6",
        "cursor": {
          "ref": "bb51f127-3974-4faa-8458-6bc6a43125e6",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ff086f0b-51b9-48b8-be9e-4417ad72dfaf"
        },
        "item": {
          "id": "6352344e-e5e1-4a80-b67a-cfaca456d0e6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a14b2aab-7799-47bc-83c6-56872ed35a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f996b5-b68e-4bce-91b8-ea5a7862d310",
        "cursor": {
          "ref": "31427b5b-1a9d-4832-a0a7-aa4033729eb7",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "287aa880-d020-4517-b1a4-0c21bce535ac"
        },
        "item": {
          "id": "80f996b5-b68e-4bce-91b8-ea5a7862d310",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f7d7984c-782b-45a7-81bd-8924b678ed2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34eb6d4-5961-4e4f-88a9-5028d1800872",
        "cursor": {
          "ref": "c593007a-0dd5-4879-bba1-23fdeeb89857",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d0fa50d4-e205-4d16-9f3d-b3e2c22e3fda"
        },
        "item": {
          "id": "f34eb6d4-5961-4e4f-88a9-5028d1800872",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "30d45c24-b795-4a5b-99b5-d33d909bddb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04e6f7c-d7e8-4ef5-b20a-625c5000e715",
        "cursor": {
          "ref": "6a97fa6a-13a6-466b-9805-720b9e25e99c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cc6922d3-b1e9-4cdd-b6db-1e454200b349"
        },
        "item": {
          "id": "f04e6f7c-d7e8-4ef5-b20a-625c5000e715",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0acd3a20-7a4f-408c-865d-bdb1d1cfd1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1a8afc-2e7a-419b-9150-f5e7a07b72ca",
        "cursor": {
          "ref": "1cb87307-c789-4b1a-b987-fcf9284519f4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9888e8b0-7b5d-4fe9-88fa-fe5a101c935f"
        },
        "item": {
          "id": "9a1a8afc-2e7a-419b-9150-f5e7a07b72ca",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2dfa2c22-6c5e-45a5-8c44-ffd91e99afe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadd3e00-854c-40d6-8b4f-a5f69d821f92",
        "cursor": {
          "ref": "ac347311-f9de-4098-82af-5da12956ef59",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b394d952-e580-4697-bd4e-cc1e1a97ae15"
        },
        "item": {
          "id": "cadd3e00-854c-40d6-8b4f-a5f69d821f92",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "53b87dce-ac81-4774-b489-3864d56665c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7a0253-c8e1-4c04-9850-a17ba2d0146d",
        "cursor": {
          "ref": "38393cec-63f5-4d2b-8552-58801c937593",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b02dc544-839f-4541-b9eb-a0cc709c3bff"
        },
        "item": {
          "id": "0e7a0253-c8e1-4c04-9850-a17ba2d0146d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a26b1a32-84cc-406c-8039-f6488708c457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e15995-1589-4153-93a2-7ddd4c704e5a",
        "cursor": {
          "ref": "14f6cb35-6bd8-4b8c-9c47-1395a9396db9",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "73226ec7-0ce7-4818-bd0b-00a422f9375b"
        },
        "item": {
          "id": "f4e15995-1589-4153-93a2-7ddd4c704e5a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e462c37a-522e-4454-838c-64228065c746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9623d7e0-b670-4d8e-b02a-c9c6aed030aa",
        "cursor": {
          "ref": "f8afd8ad-71bc-472c-8ccc-b6d1ee2b0171",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "745a4e6f-a0c8-44b2-82ab-c5f55e369486"
        },
        "item": {
          "id": "9623d7e0-b670-4d8e-b02a-c9c6aed030aa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d158be54-59b2-4976-863e-afc9d1360a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99724b46-f215-423d-8837-7f0d5ab3c809",
        "cursor": {
          "ref": "bad943b6-3b52-462b-9fed-924e4cea1c8e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d2065b18-7835-4e71-abd0-80f9e5ad58fe"
        },
        "item": {
          "id": "99724b46-f215-423d-8837-7f0d5ab3c809",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0b15f6d1-eb2d-45eb-a4c2-3ed57f834d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100e66af-f5ed-44c9-90f1-70e323d0e3b0",
        "cursor": {
          "ref": "260cc0ca-913e-4935-ae85-8c6a0b5978fa",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4b217629-f8ca-48a2-9d05-9b47fa6f71fc"
        },
        "item": {
          "id": "100e66af-f5ed-44c9-90f1-70e323d0e3b0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "576cb117-9565-408e-add8-efc2e0b74087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1819ff2d-0479-48f0-bca6-f1583c30f861",
        "cursor": {
          "ref": "23b3bf99-19ae-43d8-8d87-ed5233861e3d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f30ee8bd-f221-4e63-8a3e-5ec2f6e92d52"
        },
        "item": {
          "id": "1819ff2d-0479-48f0-bca6-f1583c30f861",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "66de352e-dc58-4c73-be66-007ce13b0dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438b773f-e1df-4ad5-8cc2-d3d4f436badb",
        "cursor": {
          "ref": "71df755c-029b-461a-b161-b2bfbb4e9c80",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f1aa0a03-c2be-48bf-84bb-0b4100746521"
        },
        "item": {
          "id": "438b773f-e1df-4ad5-8cc2-d3d4f436badb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "68eda27a-63dd-47b1-946d-8e0755082a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8bc41b-63c7-4eaf-af20-859ad1ed1a66",
        "cursor": {
          "ref": "2eaf8c93-5365-4552-8835-432cf4eb9ffc",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "48e9c294-faaf-4c11-966e-eccfa0be2b88"
        },
        "item": {
          "id": "ec8bc41b-63c7-4eaf-af20-859ad1ed1a66",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "adac400d-82d5-4154-a7d8-f4a4ca3bae08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7122a6-1cc8-40ee-9913-a83e06902ad3",
        "cursor": {
          "ref": "a355d29d-300f-42bb-9538-2bd3ba0e9e1c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "105a237c-ebec-4588-bd36-0f1b29d0d1f5"
        },
        "item": {
          "id": "ad7122a6-1cc8-40ee-9913-a83e06902ad3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a75bafb9-be34-4287-a710-ebbcda55aef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3f71ce-7459-4478-918e-6f2241933041",
        "cursor": {
          "ref": "20310ca3-1c70-49e6-aeb7-58a305702e1a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8f946b09-f806-4915-84bb-e60d5d9e661f"
        },
        "item": {
          "id": "ca3f71ce-7459-4478-918e-6f2241933041",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "45504fbe-0edc-4fbc-8f95-1df097be5da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e99e0cb-bb28-4ed2-b81f-9a24d27cc516",
        "cursor": {
          "ref": "a7a2a02f-9693-4d14-bee6-2fae39ebd04d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "be4bc963-e9b5-4f23-9a75-13852922ec05"
        },
        "item": {
          "id": "9e99e0cb-bb28-4ed2-b81f-9a24d27cc516",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bc125833-a6e2-40a3-9ecb-59834cc82b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c257c6-17f4-4ad8-9f8b-d1df0347098b",
        "cursor": {
          "ref": "b4f213ec-ccc1-4414-b044-78df6e894b38",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1fcb8721-a8c9-48f7-87b9-0d8690503cbf"
        },
        "item": {
          "id": "c2c257c6-17f4-4ad8-9f8b-d1df0347098b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1fd35447-d564-42af-9c56-40ed8b604eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be434f6-1ba7-4eb8-9b3e-d8e65f39a88f",
        "cursor": {
          "ref": "af090b96-4ee3-47d1-8b41-8fd641b4caa4",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "29ba5110-4ce9-4563-a3b5-430f0a1e6f70"
        },
        "item": {
          "id": "3be434f6-1ba7-4eb8-9b3e-d8e65f39a88f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "89c51d7d-0fd4-4f1c-b0a2-7cbb6e1cbd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0086f0-f869-48ab-b23c-44792ea0ccfe",
        "cursor": {
          "ref": "3326d1ea-c894-4b17-9027-8c4bb84e71ce",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b9edb8c9-71f0-41f9-8163-261164717eee"
        },
        "item": {
          "id": "fe0086f0-f869-48ab-b23c-44792ea0ccfe",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fbd4f08d-e603-4b2a-8da5-ec7a3d4e9da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9dabdd-b103-46fe-9117-f9d3dc56fd8a",
        "cursor": {
          "ref": "885a8924-d47f-4720-9724-915a8907fbfc",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b3cbf1c8-592c-48c5-9f4c-00db4fd0d46e"
        },
        "item": {
          "id": "7d9dabdd-b103-46fe-9117-f9d3dc56fd8a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2943c792-2ed1-43f0-bb04-793e1fde7746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d1eb1a-6651-4503-ac9b-6ae430b37a7e",
        "cursor": {
          "ref": "ebc8c07b-3aaa-4b58-9972-2f0169ac651f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b280318d-6ce2-4a91-8ebe-d1d371d89cc5"
        },
        "item": {
          "id": "21d1eb1a-6651-4503-ac9b-6ae430b37a7e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1ed78d48-36af-4991-b583-2a6f8e2a7ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7a995d-99e2-48df-8012-44dc65fd48a9",
        "cursor": {
          "ref": "bdc1f09b-3def-44d0-8e0a-c9b9285d0f5b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d6828c46-8866-4861-9a6e-a9b2c32d3235"
        },
        "item": {
          "id": "bf7a995d-99e2-48df-8012-44dc65fd48a9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4642309a-f43d-4f78-87e4-401ad88fe511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc30a52-fd3d-47ff-90c4-f1657714d14c",
        "cursor": {
          "ref": "fe12515c-6253-4566-a713-91bf05350012",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d5a01e50-7dcd-441a-b676-1c588d4c812b"
        },
        "item": {
          "id": "0fc30a52-fd3d-47ff-90c4-f1657714d14c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "52393b1e-dfdf-45ce-80a7-54effc127029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebee5ade-697a-4b24-ae16-a0d85ac04393",
        "cursor": {
          "ref": "cfe6c1a9-4fde-4615-906f-8c6f1d338ace",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bdb3fa37-d8cd-4bf8-a3a3-74d03eccf3ad"
        },
        "item": {
          "id": "ebee5ade-697a-4b24-ae16-a0d85ac04393",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c5409943-0ee2-4f02-953b-b29e7de9f206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb34ebf4-3231-4727-ab24-2e5d0d4c3ff9",
        "cursor": {
          "ref": "feeabaa4-4e6b-4c46-8e23-2849d0bc287f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "faa369aa-be60-4d22-9f9d-732b85ae6e82"
        },
        "item": {
          "id": "fb34ebf4-3231-4727-ab24-2e5d0d4c3ff9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ad8c166a-604e-421b-87c7-2080af7e615f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca1683c-52df-41a0-8b97-34fee3b1f95b",
        "cursor": {
          "ref": "948f9fd3-3cbc-4e57-a229-a67180aa1f2d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d690edea-b8f6-4715-a865-ccad7245e80a"
        },
        "item": {
          "id": "aca1683c-52df-41a0-8b97-34fee3b1f95b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "aabed03d-61e0-40b2-9c35-af580e5f56e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaf027a-96cf-45b3-a4f9-d67cf9dc5d9c",
        "cursor": {
          "ref": "56a694aa-7f90-4822-a500-6327bd5d9a48",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d37fbc88-2407-402e-9f82-25553e294d17"
        },
        "item": {
          "id": "bdaf027a-96cf-45b3-a4f9-d67cf9dc5d9c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "be2ced7c-a95b-44c7-8716-1a60e09893ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdf597b-7b17-45a0-9961-4c13dbbd4cf5",
        "cursor": {
          "ref": "8f5df559-ac52-43b3-8587-0148eadc9bb5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "91809ac6-08f3-40be-83db-66b19286bd06"
        },
        "item": {
          "id": "6bdf597b-7b17-45a0-9961-4c13dbbd4cf5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ee8bd524-a5ed-4fd8-8b83-3a9df51651fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8460faf-15d9-4d26-a325-9114dcd17a2c",
        "cursor": {
          "ref": "615dccdf-3ef3-4c90-b640-b1c8d6eb7a8b",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cbcd45d6-04ad-4352-87b8-86aca3d13020"
        },
        "item": {
          "id": "e8460faf-15d9-4d26-a325-9114dcd17a2c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "899f9642-55ae-4309-ae49-6bb8f48866dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53606463-de90-49a0-9cf0-d587dabad94a",
        "cursor": {
          "ref": "1b491157-36c6-496f-a458-4d08c05ef575",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5f764978-3347-4893-bb29-c616da75107f"
        },
        "item": {
          "id": "53606463-de90-49a0-9cf0-d587dabad94a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "69da1209-b9e2-4d17-9f91-ee3e2f8cf833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da00b19-a62a-411c-974a-4fda16212153",
        "cursor": {
          "ref": "a80f5e45-0c8b-4bf4-af63-13afe5e17328",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0389cf0d-815a-4a43-97c3-a4e69ecf964c"
        },
        "item": {
          "id": "0da00b19-a62a-411c-974a-4fda16212153",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "79bf03b0-97ff-4583-8691-878ebba3bb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003267dd-53df-4905-a84a-ec88790bce75",
        "cursor": {
          "ref": "60b1cdf4-eaab-4f09-9015-fb4031f16ac5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "91b59b86-f994-471c-b31c-2254ef69521f"
        },
        "item": {
          "id": "003267dd-53df-4905-a84a-ec88790bce75",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6cb5ac95-1005-4a85-8ceb-97125291bf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "f4d0e3b1-5efd-4696-bb94-4a5cc34ddff5",
        "cursor": {
          "ref": "9a8e4fd1-2146-43d3-be0c-d93d4378c506",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4a034ba9-d9af-44f4-a02b-2f5dc94499e2"
        },
        "item": {
          "id": "f4d0e3b1-5efd-4696-bb94-4a5cc34ddff5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b2347a0b-bfee-433b-b355-589209f16e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "6293fdf7-4b62-4157-aae5-aba456d5491d",
        "cursor": {
          "ref": "b96f1803-b897-4818-b65c-4299c5da5516",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "89e91911-fa69-40f0-b197-a7c8f67afe49"
        },
        "item": {
          "id": "6293fdf7-4b62-4157-aae5-aba456d5491d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "37f78f85-64cb-48b7-9895-12177d28c0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "b43d5be6-ed66-4d6d-848d-2b29d3a504c8",
        "cursor": {
          "ref": "45c86cfb-5b10-42c5-a795-1763ae43bd3e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8f4ea726-8210-4b1f-9f0a-920a59a13dcc"
        },
        "item": {
          "id": "b43d5be6-ed66-4d6d-848d-2b29d3a504c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f7dd63f7-72c6-4315-9d5c-61e7dc797282",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43d5be6-ed66-4d6d-848d-2b29d3a504c8",
        "cursor": {
          "ref": "45c86cfb-5b10-42c5-a795-1763ae43bd3e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8f4ea726-8210-4b1f-9f0a-920a59a13dcc"
        },
        "item": {
          "id": "b43d5be6-ed66-4d6d-848d-2b29d3a504c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f7dd63f7-72c6-4315-9d5c-61e7dc797282",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badbd217-bd62-4a98-a56d-fe6819da4a75",
        "cursor": {
          "ref": "90135310-6c3d-41bc-9bf7-a3230d49086e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8e42397e-a42d-4c6b-b238-6f6be0181a3b"
        },
        "item": {
          "id": "badbd217-bd62-4a98-a56d-fe6819da4a75",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "71605fea-0c1f-41b2-bf1f-88a51aa64da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfa260d-3154-4cdf-8ada-907ce3f28aa1",
        "cursor": {
          "ref": "4d37b7d3-1a07-4ec7-89fe-0bef39f29eb0",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5878af52-9e14-4b35-8ab6-7e6cfecb18a8"
        },
        "item": {
          "id": "abfa260d-3154-4cdf-8ada-907ce3f28aa1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "858f60fd-6756-4b91-af9a-7a15979d5e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}