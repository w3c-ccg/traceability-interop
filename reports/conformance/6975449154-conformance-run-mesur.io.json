{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7ab933a2-68b2-42c2-a2d2-1154bd1c8b07",
        "name": "Clear Cache",
        "item": [
          {
            "id": "acf882b6-7caa-4db3-8c52-a2c16c670342",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9ab7a1d-a34a-4856-89a1-e94991785171",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "94051c1f-9c53-4883-9e48-09cc449f57e2"
                }
              }
            ]
          },
          {
            "id": "4563a378-7e2a-438a-9ec4-c04478182e00",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48e34618-facb-4c14-9237-08e6a2a77540",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "761a84ea-f363-4080-b1c5-2e090e6aee8c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "aed435fe-ba8c-41e4-a174-93474b146541",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "50f2a728-315e-4658-adc7-90e29e34b98f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "293aebe9-5800-4a66-8674-edbc3d891d7a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09cf1a0a-8861-487e-ad69-7a6b308d24b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06d396ae-ae76-4699-bd4a-31bd057a89cc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d5cb8836-bb5c-405c-bd11-fc0b708c7ec4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bedfd40a-a388-4ee9-96f2-503295fad4e1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "708c7bcd-025d-41c2-9b5b-73caf53f9ccd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c05b4a80-cb80-42b8-b060-6900cb810da7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c877adb8-1007-4f29-b244-9c323b09bced",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8c732490-4811-41e7-b2e8-f82a32100b36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "875168d5-cc50-4601-8e62-6139035358ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "506c8185-9583-44a3-aebe-269ccabd2c4a"
            }
          }
        ]
      },
      {
        "id": "3515e046-9bf9-47e8-a79c-88042538dfce",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "57dc5f9a-a736-445b-9f99-d12cd403fb2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cf37c3c-22d7-4bf1-9061-ec98821693c3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8534bf7e-abbb-46e7-9b59-31eeea0ed99e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b536271-25cc-40ae-a09c-ed69f98cb982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e96f63a-741c-4a88-a363-fbabc5f92223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f10ebed-cc19-48f9-b4c3-a469018ed649",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c294b0ab-bab4-4163-91a7-2b1dae1f7814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd01e47f-0b74-40a1-b705-c824cb3cbab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70635e57-ce35-4170-850d-5a84edb292b4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2751bd3-cebe-4e01-9d53-eeb18e353d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7395f763-ad4b-4d90-a9f1-bdf99ec1d27c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e379fc6-08c5-4deb-804e-59d5c51c27d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b75e491-e517-4230-ab43-fe6d8c3f84e3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10093dad-d90e-4387-9d6f-c18e0f7c9ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd2eb835-5e71-4c17-999b-3f277a4f06f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d78b279-5a62-4ba3-bdd2-63f8b00a16da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72875579-ae8f-41f2-af28-94ffdc177268"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bc215212-57c6-4ba9-90cb-400999398893",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea75906f-a57c-410f-bc64-3f95281bdd90",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5001f41a-9fcc-4177-b6b4-cc6b58a322a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "15f01126-e852-4b22-8792-af9c019a1fce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f326cd9-4540-42d6-89dd-3ee1ac628555",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fb24edd4-7ba8-4a2c-832f-4cbafb3f41a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70ade523-de79-43b5-83d8-435461b19a75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd51fe03-2d2a-4f37-a565-82fecf70d9a2"
            }
          }
        ]
      },
      {
        "id": "67657620-a5f6-424e-ab59-3289d87a43f9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6eb86d85-3ec0-4f01-bcf9-2c2eda066996",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3aa72284-837b-493f-83f7-5d58e8b023ed",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9946010d-09fd-471d-9eb0-b6b2ba14ae74",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d9314e-49b7-405f-8189-97d6bafd9056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36413ce2-d6f8-414a-9baf-adcedb542a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00758661-1d05-4a0e-b7c0-4fa4aec5f5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b37e05ad-2e22-4d01-82d9-5970a49bdad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d8c809-5ad8-4c3a-a009-377814c54234",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad8ace0-31aa-40f1-b23e-bb7bf8c2c013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9fe35fe-7c26-421c-bdc7-b9e701cc1f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d8df99-c9f0-4b8d-b687-72d1355d31fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fab3a3c4-5d8b-4806-9773-3e871f747690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b922ef-2363-4a37-8706-1a3dd4258246",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d6bc3f-9b22-46b3-9244-dc7b215daadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342ff3d8-a401-456c-a6e6-6c521557f43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914b4b3b-4d88-4edd-af02-fc697e44f9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f3dca4d-1db2-4c64-be62-36f78640b457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0381714e-09d0-47f9-826e-cec881a5b657",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1b96ce-150a-4c90-a0d3-4abd5f29b7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa7cb02-18e8-4f42-9d9e-17f99e87b376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95bda4b-c580-4495-88b5-34bcca688946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11d453ac-67c2-4ec8-a399-33903c79c8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6709b22-bc69-4b78-8735-d79bb91d164e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23177b6f-fc4a-4b6f-9467-7276e930c943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263edd32-cb97-444f-8388-3632939711e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7a96f6-1dd5-4657-9862-8357df7b6043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b96299eb-9b68-417c-a894-ad82c0051b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cc98d3-eb58-4730-9158-98b021c15d85",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eccfeca-2451-4b34-999a-58b8395bf19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68dd6880-feeb-4876-8548-8083710cd2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edd631b-c4ea-4987-8ce1-57d8d7540c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc92ba23-0339-40d9-8412-62808e78adfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74952a3b-e87d-49ef-bb4a-4b62a171b205",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ee6b78-d62f-4740-9821-4e4578818588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aabda93-e6b7-4548-bbf3-e6989343edfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe71295-03e9-429b-bfd3-bf53a77add9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a53447c-36e8-412c-8ab8-e2e36647ed64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd891d8f-6939-4374-a97d-0b7c57dd11ea",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688afadd-3fb4-4f76-8622-bc45b5324e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2718c2-274d-48af-8d1a-7b58da3a515e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700c88e2-f2eb-4a80-b04f-17a1e2383c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b8bde56-9096-40bf-b8d8-6b12a9ac0eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1399bd6a-4bb8-45c7-adca-b9f5371d6184",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f24b6a-2dbd-4d07-9c66-112a1a45805b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7db8a1-968b-4e26-ae0d-1a3a37ca37f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722f20fb-ef19-4709-90da-e7efe126bc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09888b0a-4b4a-4e88-9e93-da44cf00e862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cb386f-4844-4407-9838-229a1bb04c37",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb37f67-f00b-44cc-87ec-a470a3e3a3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa649ac9-df38-46bf-a8aa-f5381b922295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93aa6988-9995-4785-bb1b-c6bf5d568b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54a8fe9f-8704-4736-9c15-fe76b356b894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d602c985-2672-4161-b394-1a0953b110ad",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57433651-817d-44eb-bb3d-dcd111ad50d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d637dd77-670d-46bf-9bff-91d9c293aced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ef4723-510a-4873-8339-430899c27153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f8e1dac-4d5e-467d-9851-f39bbda38e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef760a7-1c50-46aa-85eb-a5b70aecad61",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dba545-8ace-43c9-b87c-36aa0ea02252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93dac5db-9327-4bc2-9cfe-5e78c8039189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2c06f8-eeb9-499d-941d-e66c5d60e07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9995a1f1-086f-41b8-a08c-7710da6b49fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fff13c1-e5eb-4459-8896-e034cb7325ec",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368144df-c51c-4dd3-b5aa-c4e2da960b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619c8ba5-95d5-48a8-8be9-892fb81cfe6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048d35f7-bc92-4105-aa70-c765ec43e66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33d3adbc-7604-4e6a-82c2-c2c6638fa050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b67f97-9732-4ba0-92ee-56826d0fcd96",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05089831-8d9b-417a-889c-9bbed8f3676f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4359d210-f42a-48b9-9a62-3b5127805043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3a43de-9315-4cb8-aaa6-5b8bd15ec8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de617b87-65b6-4067-875e-a059f0221962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615ecf3b-e2b3-4b35-ac5e-d3107a0e4992",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc38624-c1dd-4876-943e-4c6b3dc152ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3566d52-5445-4fee-a440-fb48f3b6187c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f27f151-1baa-4b18-90e6-869879d6debc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65fea91b-c5b9-43b1-9f20-16594353749a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9e1d60-3fc6-4ebb-b4e4-a4c10ba9b19a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6662bb8-d3d8-45ae-a060-db39e4f07da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d15f8f-0dce-4a50-af34-de7632172863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceae502c-2326-42d1-bdc5-f0006d65c8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5492a9b-7cd3-4617-b9ed-f7c38801d9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622d9514-b987-43de-b55c-ac616cce87b0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e46f727-810a-4c78-bdf6-b3e6a182eca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60613a8-ddf5-423d-b254-2ec5c619624b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba686ea-753c-4fff-9846-338f56258dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e26ef0a-fac9-4a97-b9ab-ee9505df1a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7b7e22-5056-4b6c-94a0-c7a27cede558",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc1b245-8b5e-47b6-84cd-633164f5993b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5259bf-7668-4757-8582-96fe824c209b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa4f234-dd0a-4ff7-af94-fe0be4187905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea22a438-2cba-4291-8f71-4116a2bb85f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2fb6a7-ee94-4cb8-bc3d-8dfac5505054",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333c6799-7479-49d6-8e55-364e4bec6957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a31871-30b8-463e-9a17-2f93269bcbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b733d325-d75a-4081-8361-e1c2853ba8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4ddef6-0806-45c9-8f84-3a572af77912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73ec7e1-bafa-46ec-b8a3-49505c593889",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12030994-e915-47b2-96dd-9e695238171e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405f0049-000e-4284-96d7-3b0afadca0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38c785e-e1b1-499b-a734-e2e1f0eef24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a805bcab-939e-426a-be48-7eeb32166d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2518edd3-e400-4269-9363-e441e569f9d4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de889840-a6f6-4c30-8e35-463b5914babb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00dea9e0-ba1a-4454-baad-bcd928528473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9000534a-3de3-451c-9555-621ddfab24dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a298fe5f-7c84-4feb-9949-fe33b4534291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be16dcf8-051c-4573-9a36-82fb549da885",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04f4ef6-71ba-49e6-bc8d-59a7622626aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58815894-2b48-47d2-bf8e-2fa25b960d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0029aba3-34b8-4d38-9885-d5982855cfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "540204fe-0dd3-4e69-886c-71eecc61a7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f383238d-625f-41af-9ddf-c24b2a633440",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1ae010-7be0-4506-946b-855dea3dadca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b13633-76c4-4649-87cb-630e746d77c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609a76c1-c962-4526-baa4-67ceef9b1bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b542c269-d00e-4428-9db0-b2b8103b852c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257ea624-c4f7-4d27-a23b-93ec49fef3f4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a69f47c-232a-4316-90ab-2ad412737661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff305cb-8d37-4990-b486-0f4dade09a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7ac077-288e-4365-bca0-0dde6a036d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "43774f37-54f6-4c28-8b2a-bdaea5f4f31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bcf2d9-2273-4d0d-960b-194e6fde0c21",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a396d1d-9877-49e7-a897-8d8253ecf0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58256353-8cef-4ff5-b034-862d5aa52eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccb33ca-902e-46e9-9d6a-754dba266489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6f28c0-a518-4eaa-8892-11f683e8dd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1b94b5-6d8d-4ad4-8f01-96ada9616a30",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c55b11-79cf-44a5-976b-bc87fca887af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8181488e-dc50-4280-80ea-a4f8794c2e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7548ce1-c82a-45e3-96fe-f5ccb23c8818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "349481d0-57c3-4053-9c3a-9a0b339ad3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3c4bf1-3390-4851-9659-073caeff0cfc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e207c2-68fb-4f29-baf2-39da3c266d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d62495-2150-4526-8bf3-28afd004b4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a12efb-9710-47cb-b531-9905b6d416a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46493fd7-9066-47b8-834f-25c71e691730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6d1984-7355-4f12-800c-919314860ca8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a86ecb6-c924-4b94-a523-f4eeae174d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd063e18-ca43-4c21-8772-d18399648b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce131ba-4be5-410d-92d3-df6110b81df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b964d6-1c49-44bc-ae7c-e3a3899302a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a7088b-fd1e-4a4f-8c51-8fcf09d9bf68",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84de4af4-1074-4d99-910e-8c18182a0bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0266d991-2e74-4f63-8d3d-0fa4026d07db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f511d16-5dc0-4098-9a37-6f5a63d13a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0db41446-926d-4f4f-b5f1-ce486b20911c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a3c3c8-401a-4d16-8c8f-46e09a6c86ce",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d61736-5e0e-456a-bdb6-7456d37ecdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01abfbb0-30bb-49f3-8337-af21fd8cab63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255216b9-d5d6-451a-bedf-1ba7109b5949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c00d08d2-bdf5-41c7-8f49-d0f417ef76b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0210aaab-14c6-46ce-92b1-4114e5ce5dda",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e77080d-2b43-414d-b264-8887cac0af6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2a7801-ce79-4536-b264-eaeaa7d3c47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b843a834-13a0-4811-b732-74c360216ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d53e6b0-e948-4ad3-99d6-4bcebfe9da49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdec31f-8336-46f8-9127-a42e0bd2ec7f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41340b4-3ed6-4bbe-8f1f-e823a8d3503e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3668be02-fb0c-46b7-91bb-4fbc9baf7c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9877359-457e-4cd9-a3bf-1ae7f71fd1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2975b008-02d3-4dcf-93de-b3045bd45a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b50fefb-41bf-48cb-8fc8-3307e763bc56",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbcbd78-028e-425d-90fc-0b9733846542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8485d42e-65d8-4523-b10e-3b78c39fff26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66856fd-d9fd-4b5a-a57a-c0b858faffea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51cd92e4-a38a-4fff-a69d-07e7db9f145a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709fe8d1-24d3-496f-a893-e31379bb25e7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c2933f-294c-40a5-a38f-ea68645c1153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180a961a-952f-41cc-b166-58104af943d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98f1574-3679-4ae0-b881-9602a0152abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e07ae8d-4231-4870-9897-0489ca1347a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533be87e-309d-4786-a1bc-e33c3be98001",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d861bae1-e3d9-4495-9d6c-dc4b168e484c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4030b3ac-e4bd-474b-8e8d-acb48a123a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb1de27-01ed-4dcc-b85a-e55b4ac409b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2323bc-814f-4c86-becb-fe676e7b177f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5eacbce-98e7-4324-833b-07640ec20d38",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e17b0a2-3761-496c-8de9-937de173bff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6c6d0b5-25bd-4190-a629-75d3d283cbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0269d780-c550-4dd5-ab9a-7c3572e21774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40b71e33-6f4d-43af-9411-f523d45eeae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a31ee43-aef8-4637-8c51-08c37fd460b5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953cb1cf-fa17-4be9-8793-6d6f906ae38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807987e2-5387-4bce-8ec0-119c4761f7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe63129-471b-468e-97f4-99e022f0b643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec7ba17-9d68-40ed-ae14-2a47ca3c8fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11dedc4-b0fa-465c-bd25-d1d19b30706f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f1916f-1c36-4c4d-aa57-9abd9311017b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec02f19a-df6f-4a31-a9c7-0b1bc19aed87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdb3640-f7f8-4a73-8131-f10e34340c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e783e79-8f4d-4175-8b17-23116b540579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430af696-8187-46e0-b971-6dfaf7cb9ea0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9c4f66-5bcd-44ca-8d10-5b803fa5b6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472163b3-6b2e-4340-be68-c48c49d2c5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8e7a2e-6e82-41a8-b452-fb54331ad935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d82ac9c-bdf5-4509-9e0e-d7a888c30f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35eaee1-8463-43db-8280-1753ddff7204",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8186b9e7-67bf-4b8b-9f9d-ad30ad699250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f79d2d7-3f19-4786-9184-aac1f7ffb7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f860575-4c8b-4849-8e80-793460a8e53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b83703b-f5dd-4620-adf4-261dc31909b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce50e0e8-6b35-4648-98fd-d9d4f1059345",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74da076-2fcb-4cf7-b860-7bee9bfa463e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78eb1e4-6acd-4265-9010-bcf8b08fcfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443dd100-bc51-4844-9fbb-e0a1ebb9542a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f486e07-37bf-4087-9379-6d01903e7f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a41751-e209-4535-a296-97a90e89b938",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f1b410-d7bb-41ba-88bf-234cb64a9018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188b9b58-27f4-4a3d-9f7a-f10764535f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54048dd-4cb7-417e-bf5f-7e6926d8bb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ab107454-89a9-4065-85f2-ac21dce23466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90553b02-0c59-4a74-8c3d-53a4d445a565",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ab6330-cf3b-4be9-aab5-da36e4f56395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad4fcd5-ca2a-4998-a34c-eb7948ce8516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5db54b-ac4f-41e7-a8a5-9f83576a20b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "da296268-25cd-459e-8960-f54569d56b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfeb5c0b-192c-4a96-b8b3-44d8afa18e19",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc991e8-2698-4f33-8554-0dec6ef1c246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb95f9e-ab84-478c-a330-f4377e39852b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76a26db-9011-4439-b273-fe43f371be5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6271c7-ccde-4ee0-98ac-f855c1fd4f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a23b25a-bd3b-4d17-8412-59c0d09470d4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a0472e-acfa-4bf2-b23d-1b374864cb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d79cfc-c649-4e53-b950-c05e190dec01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fcee03-64c3-428c-97f5-fd305a72721c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70590df2-467d-4616-9555-de81c7ecbeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bdee28-6499-479e-b89e-154d6d00c42d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fa1ced-01b4-4ed3-b639-5fc9930283ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342e322b-00c9-4774-8b81-1a782230cb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73f97a0-b566-4b70-a47c-5c3a3d7a09e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49c5b455-f4d4-4237-b460-1df14f44cb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8297053-4c6d-46bb-bc2e-3e13564bb744",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de50d05-c903-411f-85da-a4d1f55a9ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c7fa2c-95cf-47cd-834f-37658e6830a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c337dddb-618d-4d1f-b8ab-b413aa351207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd66b93-114c-4029-8d27-8096b7bcb78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fde2d95-a3bd-4e5f-955b-944fbb0d49ee",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a24e4e5-9b6f-41d1-b939-b0997534f182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ccb8f5-2cdc-4ea8-a3a9-e7509584789f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c936810d-5dee-4ee5-aa05-c627a2afdff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b8de02-105b-4f60-85ac-6a69da206e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449211ab-4d7b-4db1-b5fb-e6e4b13371a9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fccbb2-3f38-4b1b-98c5-5339c606f871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122d49cf-84b2-4203-95ce-340804613ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a595c42c-348f-4bdf-8fc6-32220b3e03bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "269b8aac-f460-46a1-b0c3-d6ba46c01f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbda2f4d-abb3-4b3a-abd6-78e7cd047494",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c589691-f4d1-4f06-a4bd-020b94b5b467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b75be2-ee25-4782-b729-66f09891c381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a98185-b2df-476a-b7fb-80899f86146c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76b9903f-3cd1-4df0-b466-bc9e53f121d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db80e1e-144d-4eb1-884c-4c8973823481",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e785ee30-10b4-4f9b-a427-be5c27d5ba2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac1b647-0123-4d46-94a3-e7054bf0f3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2662f2c8-3735-45b0-8ce9-65159426f163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "51320ac6-7c0a-4658-84a0-9a591d7bb7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ede7c7-2aa1-498b-83b3-8ae09fc924f3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7575631c-0c69-43e4-bfe9-3303e5eb613c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728d060c-1c8d-4f9b-a68c-73f827939731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae95345-cb31-4ba5-b3d3-38461b696a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa390cac-25ff-4392-8566-d808837558e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0b8b43-7e41-4726-8236-5244f5bf1373",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf9abc5-c99e-4a1a-9228-a6c6e8380b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5cb97d-071a-4046-9385-6a25787bef46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d786faf7-173d-4e56-9969-342471c56d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb7385e-9713-44d8-adf4-fe59c2587e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7d01f2-16ad-4af2-88f1-f6bfebb382bf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381356de-ae76-49b4-adb1-a34a8b9251bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180b5ad8-f2cd-42e4-97b7-12efdb7b9c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd066221-ace0-41d5-8864-f45ca47df0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33aa07bd-64cf-43c2-8fd7-0c8b4d39728c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b679c8c-fcb9-4b8d-a9fe-f5cfbbd32fac",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090eb17e-cee6-433d-a693-863211bcf5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2df9eb-c6bb-42fd-8c55-8cb63c17e3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fad9aec-8d3d-47be-8358-ab9c0632d171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7403c3d-3280-4f8c-86ea-821236ae0aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12de7e80-acb9-4a70-8b87-98872ed25f9e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edf13e7-afa7-4bd3-b6ca-3baa959444f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce622417-a8ed-4ef4-b205-f06e30966672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fb5f37-5d26-46cb-af0c-96a821117605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8d2664-dfec-4f52-b244-438516f6081a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d51115-afcc-4695-bf0d-eb0ed12e266f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799e6e5d-e490-4d24-86a5-e9dd2a8e90ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cebf57-be53-44ad-8526-d81a073e3ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453af384-9c39-4b88-917f-84ce41ec022a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cab0341-a8f4-404b-a625-0e67b160968b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcf948b-0f85-474e-adf8-e6072586489d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a14f31e-02d6-4812-845e-3db546ed8744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9e2db6-3174-4fb3-aae4-a56d62f2a384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96480164-6124-4406-be23-3f60acf49232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5456adf5-cbb5-46c6-ab5e-8447dbf8c968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef18caf1-652b-4f03-99a8-a971488e5200",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7247f177-cb29-420a-8e6e-fe852f2ebc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16df354-f6a5-49c8-90a2-984cb16d3360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114e23fa-9914-43d7-bcb2-b4d4062d2935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "99f27b62-dab1-4915-a34e-54c7fe1893a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28ff8bc-8a55-4569-8d5d-382787be2a0b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f574809-1037-4037-901e-369158b9513a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e3127b-03e4-43b5-8d7e-c7f9461a82f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc29c617-6251-4668-b21f-96ebff3fefda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f192e2-6fd6-4d9e-9309-47e52821ab80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27e8d01-0403-4022-ab2c-e7405654a867",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b973ed-4e02-4fbe-9c07-92727c2af79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d96de7f-61ff-4f91-b67c-1250feeb7e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ece2e2-a106-4c89-966d-947e24b9b721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aff54ca2-4678-49da-8e73-ceeb86bc5764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d624b4ae-2667-4e38-84c2-0a5fe3c2a846",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c2419d-154b-4054-8417-39748848a4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a45282-e95e-498e-a6a5-a1483effaeae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3fb970-8f32-4414-a88d-4ad292daee73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8fdb6d3-cb16-4cb9-af51-b87485259cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22433ed-0978-42e0-8ce4-e611b4d9053e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd03ef3f-131c-4787-a3ad-ba890b147039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8275987b-3427-4aeb-8990-582d7eb2a513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18975272-bc76-4010-bd6d-e78fd0d03aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "53db45a3-fb35-4f69-a3a5-3dabc53f18d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02f7526-bd8a-4537-b86f-bff931a42381",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3dfefa-703c-431a-93d3-8eb95bcba9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ff57b0-8912-4fbd-afdc-60470275e7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1930f6-597c-4b56-b6ab-04ecca6f5772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4198e0e5-4df7-4ddb-8591-02a03a39613f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0bc139-48c4-45bf-b37e-8717a3eef5f7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4ebf7d-d7d4-440c-91c7-23b1ef4fc4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2452e6-c99f-4e6f-b2c4-9b630a0bc0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575aa918-d6ba-4b19-b3cd-1b00cdeb2dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdaa4cc2-ce28-43d1-9e0b-329166c57baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2385de5-a9be-4688-8734-524c8d840eaa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814d1042-aa75-4ba7-9aa0-05af19a9b684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d6a79a-b42e-44c3-ba79-4012ed26477e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c6c78f-49fd-44a9-bb68-9b0798dfeed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "588187b5-cc28-443f-9654-b8381dddc5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab68a58-a581-474a-a64d-a6bf0cb62a7c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a167311e-e1c7-4280-90aa-d0d0325f538f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96d8865-aafb-43ed-8768-fc135b158c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34162743-5137-4f58-8b4f-d79f12b25f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71295449-8e9e-413f-94aa-1af0bcbdd7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74b708a-9a4d-4e13-b957-e823a03e4136",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1692f5ec-f155-4675-88d3-7b614d99f18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abcc3a6-0e5b-4e3e-8b1b-5b84474ee44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf42f4e2-f9b5-4e55-b838-af8a20811040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "543db117-b8fe-4702-b46c-f9b9f658a9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34801c8-e2d3-4099-8c34-6c53e1be6e5d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f724c8-fcad-46e1-bcd0-5db440bcf85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f823c62f-0e9b-4a49-bfc5-673db5e75ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ab90ed-7b99-48c5-951c-b9495cabfa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e12074d1-e4c8-4020-a846-108f4d8a3b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062daa8d-189c-4e10-8ba6-159343d8dfc5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c766ef80-3f6c-4c1d-9746-d6f16e121bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5c438e-5256-4a78-8234-12a614c2419b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d42f57-11cd-4675-a86e-177d1a2313ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2df87b4e-0df5-44ea-b865-9cc3d66aa443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542afce1-3e84-466d-91ab-c9d2c51ea8ef",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4626f7c6-ecaa-456c-9a0a-dcb778df11aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df5c4f3-dd78-45ec-866b-4eda54f3b515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc65dd7f-0f64-465c-8d48-04f2e850d42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b624d4da-a7ac-4c3e-a1c6-b2d947a36842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ab6f75-eb6b-4078-9e3b-dea71ef77654",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe79da3-f4b3-4361-b234-64b4b948f887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba10f0cf-f022-43f4-8886-9971716667fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22516029-3170-4ec1-a9f9-78a1da578c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2e7b0c-4d08-4bee-9503-f405a7ee632a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c3fb09-ec2e-4d0a-9adb-2ea9388f0bdf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29357e6f-9d3b-4be8-82d3-a7e7f99d8d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a040ebaf-0ca8-4fad-8982-fa5445fef2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdd4981-bdfb-4cfc-b4ab-6848280e1754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4d048d-e30a-4055-aa97-0bf84f955d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619a19a7-c16f-46dc-b9b5-6020f4e858d9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a756caa5-a366-4f16-aa2e-f49409f82778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceef7de3-4973-474d-aeaf-378e563914c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad542844-ef07-467f-b081-eb1037b66d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44152201-5839-4338-ba93-f82d58de0097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d898d0-1c6c-42b8-92b0-921428ff677b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce99da91-20e6-44f4-9c1f-107fe68aae49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b10a4f0-cc7a-4e0a-b54e-f6ae716aed2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295fb193-f3fb-41c2-a086-d47784ff2932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d42dc7-7e5b-4450-bcf5-790e6fda4100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ab4cf1-d093-4580-ab41-9d2c47628bf4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32e1e65-4353-4d36-ada0-3e5b3c58c2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6025c5b-779c-4e45-98e4-ee7cffbf56ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2aa64e-853e-4946-894b-d1857ada832a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db0091f2-d11c-4c24-aaee-4319020e5be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41cee8f-e488-4464-bd96-2a69a94ba8e4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a65f9c-b052-4c85-8fed-19198cbeddc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d0947d-412b-49a3-b0e5-8db7b646b9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976ad696-fd6d-4d63-a1c7-cccdd12c4a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be4c466b-96fb-4314-82cd-991f7a18ebe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6727f3d0-3c9e-4eb1-87ca-7668f993d845",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3218b82d-1ab2-403d-92d1-b777ef08c9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2caf6999-4dba-4a7e-9fd2-0a376559a89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc411bd-af8d-4d9b-b7a3-46be67d3f775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc32a784-4db4-40c7-925d-2703ab927aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf669fd-6c66-4cd7-926e-3d77c23c9a45",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdebb61c-a8ca-4709-8f46-7a01c050b2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b37ae1-fccc-4e9d-8bae-724341c68358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0a32fc-c767-4e00-8748-d3e6254cdfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1c7ab0-0db6-4138-a8f5-76efbbd157fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de811cd-884b-4956-b089-3ac77dfd285d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6716ce41-c301-459d-8c97-2ebf7ddbc7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fad1a28-63cc-4d00-9679-dd9975939ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57726836-6233-43cb-8635-48adc24e1e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2489a9-a88a-4f09-8c7b-30aebf09d2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2c8e15-f547-4e39-ad6f-90bbbf27cc03",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f13840e-4ae1-415c-b87a-3884520e5ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79a00cc-9d92-4404-9316-d895115c6fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d98223-e574-4911-b599-3dfac99f8a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa3178b-95ae-40fa-aa30-69994d4b05e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fc389f-0d82-445b-9069-da7ebdecc57b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328c818a-0c36-4c75-955a-7c0b1fc96bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c72483-f99f-492b-938e-c4b32dd7c1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09be65a9-2e3d-4dbf-85ed-d187cee9aa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a54ebd-e70a-45ad-ac4b-e694c6012b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb71f15a-8787-4345-9857-2352f496be70",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948253b4-33af-4ced-b15e-9354b31eba1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5181acc9-4cad-44ad-aaa6-57cd3f48fdfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26fda24-1a2d-405d-9a4a-36dc48050c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4894bc3e-0768-4362-ad4b-6cde4f97a077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40415466-5bb7-42a6-9cfc-d1f52323a2d7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42f6a98-9407-448a-b7bf-ddd4894f9e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0314688-6f3b-499b-bd50-316a6cc3f940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e374cd9-b5d0-4f37-822e-a822c3424213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "854638b6-2f20-44a7-bce0-bb7d342f54fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad61d63-3c92-4e90-8b75-33e84f4f4687",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb2d722-98fe-47f3-90bb-9e302cf2db0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b53f384-2098-4b73-aa28-78c0fa45f7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7caca33-605b-4287-ba0f-55d369df28e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "506f2a0d-58ef-40c7-a58a-2e9bd7a2fc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae411838-3c2f-4a84-81a5-b684e7de3819",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a464f4-8e21-45b8-9184-458b6d78faa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1cf165-9c92-4382-9b71-dadcd9b29df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f13722f-cad2-41dd-88c3-e20371f6ebc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ac0c6f-cfa8-4925-b728-a6c32666d3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a2a824-1388-4d51-b21d-c005c8d34d81",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339e573f-ff9a-4618-babe-9371ddf07128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4148b3b-49d3-4914-805e-9569723afd0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3d2da4-3eeb-4d5f-a58d-5a05340e5dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d94c349-89b7-48d0-9c1a-bbaf2144a054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a191159-0dbd-4fca-9407-cddb171f66a7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf20b4c-83ad-4618-934d-0ad398bf496a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb94c38-163a-437f-b92e-302a57191037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14fea88-0cf1-4ca6-9e31-39764f3d5035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6f57db-1359-4712-81df-cda343a04be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfee3a0-31b9-438d-be2b-42af0f95112f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf83e11-14f7-40ae-8c4a-3b6ba3e5cbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37fcf6f9-7332-4ded-9bb6-6818ff5b3dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71da7dcf-9dd5-4927-b434-1db57ad875f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "faf41cee-33c7-4158-a123-12629bd3e628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca880ae-90ca-4d62-9dd5-b846affb0dce",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e908175d-a194-4c90-8cd8-24383e8f0a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125cca18-2de2-4d81-8519-90e7e0f3f0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5250ad19-dea8-41c4-9773-a2193636702d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dad4ffa5-425a-4c98-bf8d-079e0b84e884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485c9855-a28a-48d2-b48b-9b123506274f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4af634d-cb10-4b5a-800e-daee7cebb0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1388ae9b-2126-41ff-8870-605d2f2254be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caf6623-5805-41ed-89c6-7f8f4c3a2c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d382fda4-95fb-48a9-a5ff-0ea6b04d67ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3394ea07-5958-47b7-81ae-02b47ddaa9d4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2414bcbb-966c-47ed-b9d1-6ee8416c7072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2b946bdd-a8df-49da-b360-ef09cb762492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3ea265-8c3f-4b2d-bff4-0432bf2aa5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "faddde8f-da4d-4969-b0cb-67436ba15678"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d7108080-580d-4f6b-9556-58fff2c15636",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82cdf448-a530-40d6-a2a2-0e5be2a2b21f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e42536-b62c-48d7-9727-c6035902f8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41623b79-1f9e-4cb4-a3b3-73ec6c84458a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda85752-4132-4d75-9bab-fadbaaf9d4da",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9379fcb-e1b1-4917-855f-898cfdaabd79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6444de6-f3d3-4f4b-8885-ed16f19b2fe3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d85cd5ec-3668-48ae-a86f-e2d8ffd188e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cedfaf2-76d3-47e4-a62f-92bc5844bef4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4dcb76a1-4d3c-47a7-ad0f-819e80264950"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84862b6c-60d4-46da-acbd-d4d538602040",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f1c1c16-1651-4d3b-b3bd-4cfe0dece61e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eb2c58fe-c829-45b4-b1c8-aef4d6a9a0f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bde48c16-7ded-4406-8ef9-9ddb81dd810d"
                }
              }
            ]
          },
          {
            "id": "d64caea9-4bfd-4eab-8827-95cdde12ba00",
            "name": "Positive Testing",
            "item": [
              {
                "id": "98fe582e-f26f-4ba1-a20c-3a65782d1a38",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "afcbabe9-337b-4ab7-be8b-133ed670a73a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436806d6-61e3-4f2a-bf0a-3014cfa28e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "68ab9347-e7eb-4626-8a55-ba75d171a2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59677fbb-34e5-4ca2-bdcc-f244db2cc376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c7720f-2521-41bb-973e-01353d69202f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fe1b3ef0-03fd-4399-af4a-ecdea5d7e6ec",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df58311c-093a-4e97-bb58-702cf794419c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "747c6861-d313-4580-b364-c1be0f1fe40c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c68b041-b95c-4f8a-baa2-4cfdb7beab07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d3c8fbbe-4de9-499a-8984-fd3d89f6bdb5"
                    }
                  }
                ]
              },
              {
                "id": "6e445c35-dcc5-4053-bb2e-1a138faa5869",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87945c30-f17e-46c8-99d2-3842f1c36e18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8131e36f-eb0c-4b42-8e82-f529a33f318d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "833b4f38-c7fc-44d6-b442-987a38bcb46f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04269231-466a-4210-aac0-9c9194ee76ef"
                    }
                  }
                ]
              },
              {
                "id": "be926ac5-0b03-4ce5-be17-6693895c44fd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c87b233f-7fb7-4434-b6af-29098d0ac675",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd43d101-5379-4de0-bb53-50824495d47f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c122b592-dbca-44dd-bf25-51a4673f2b94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "163c5ce7-2734-4db6-80a2-23dc574aa5df"
                    }
                  }
                ]
              },
              {
                "id": "c7e85a2e-2ef0-4a97-ae33-cc6f9a47e0e7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f825dadc-b7e6-4e94-8ba9-0d07d38dd135",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49169d8c-75a2-4fcf-97dc-10e16d25bf27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b0134d8-aaab-4720-b1b5-8353fee5a6fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4bba72e6-526d-41ca-9fae-b91ff3adac13"
                    }
                  }
                ]
              },
              {
                "id": "4a3f74e9-8926-45e6-9e57-58d7e5e3d225",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07457c03-c499-4ea3-b24a-bc4c93d1a3ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c39f7371-5ed4-48fd-aa2a-5f614700773f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1340bfb-9608-489b-9031-98bcaadd384f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7256faa2-c1db-4267-95ab-43894ce13bdb"
                    }
                  }
                ]
              },
              {
                "id": "d9d35248-c915-40f9-b6cf-b78c3ba745f9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "599224ee-7b10-4f94-8585-904c1cb7cdf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c65b942-e21e-4866-94dc-c6bc0277a9a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea524ef3-9afe-44bb-ba30-e6901fccc268",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3f70d028-c17e-428a-9924-f7e1991fcf03"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5be71726-dc49-4088-bad2-cd47a38e84f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39036d84-cd9f-41d0-9529-2d1961f80f12"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f64ddd31-90c1-40ec-85d6-0e842eac7117",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42fdbe7d-001d-4f27-81ce-8b07c82de19f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d910bca9-c997-40e1-8dba-45e1a135a9d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "579ec385-e853-410e-9b49-c0385fb55610"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62e855f0-9fa7-499f-aaa9-468843412c0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de1b9f98-eb20-4a06-9063-59fa369cfd8e"
            }
          }
        ]
      },
      {
        "id": "5af7c9e5-a9eb-4813-8fef-9a93276ed9d0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d4957a6c-6719-4260-937a-68b15e023165",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48e41a6f-327d-43f8-8447-88b49d2d36b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d0e9aec8-5fe6-4823-a4e5-da95482749a4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e96478d-bc8a-46ca-be11-26400acd641b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a61b73-9b91-4f1b-8d01-80af2b73eeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a23742-c376-4b59-99b2-8ba96aef8fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c439ef-dde9-4fd3-a09c-ed3ad91ac075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f10045-ed8b-4614-89f3-8e90c231f5bd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389b5966-b709-4fc9-a57d-565e331d4824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3f7274-7708-4551-8a20-1aa2893e5543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a256d5-3012-49ea-b701-2911956c6a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "139196eb-bc5f-416e-9440-b952935d06eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17eaa330-4e9a-4d95-b113-916798144c0f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832fb040-93d5-4c02-86f4-c44cbc47a24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8622207e-c88e-4988-bfeb-b83a3fec8446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f131f6a-aa6c-49bf-ad35-93222a0b43ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10b2ae40-47a7-43b7-abf4-28e863c069ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697c0f11-71cb-41e3-bb93-92f7b82bf25a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6403cd1-a6bc-4e6f-a959-3161afdd4c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debc1375-a314-4bde-8dc1-7ce60e869daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a617f49-bc72-4335-a0f1-2a871e1d8c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e864cda-5abe-4efd-9b40-41f1a432e889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ab51e7-da5c-45fc-a9f5-9bc2f84fa829",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67acbba4-369c-473b-99c9-371c88fe0dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847ad171-f694-4872-8189-b136e594a3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c12a4c4-1f66-49f5-8f67-d1245552504c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4756a622-4a6a-4f79-974d-244d0df28b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6273ee4-08b2-4847-abcf-25faeb330ae5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff554ac-5da8-46ec-b1af-82a217e33813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35f10ee-92d6-4dbe-ab83-e25fb85df849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f367246d-aebc-43d1-ba6f-7a81d07587b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f75b6161-c66b-41bd-ab14-c82b44dfa4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1956aa87-824d-4cd9-8923-909506e970ee",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70763ae2-35fc-4dab-a49f-eda6e9eaf3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57389bec-4785-4858-8280-16572eb06b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdae787-9296-4140-8131-edf2bd1710fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d3f35e-3051-4f9a-b65e-ba90723a4c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8145eb7-c9ec-44f5-a9d5-74a077883783",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80e2d5c-db04-462d-89f3-351cf39deeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef0fc52-20ca-4187-af65-02983f488fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a92d77c-4ed1-40ba-bf8a-ce08e5568c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e548fe6-4162-422f-b2ce-9fe567f7a454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f782ecc-4f00-4ca5-be95-cdc0e74dd01a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b725fd7d-2f27-4cbe-8df4-0e980e6de8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bfc216-d8c3-4705-bb79-f3ff23fe2aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67397cae-00f9-43f6-9fcb-1a41e9cdc095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "806828c0-4637-4688-b463-55d2cbe7b068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9e5bfd-4698-448d-98d6-a15721750b17",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c4b6ff-7b7a-410f-8307-94703355af22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b653327-6ae2-43d7-bbb0-9546400c1d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8133d63-8ab2-4553-9683-f7763a6559bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c415ab2-61dc-4566-8271-964c9b6ad743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2875e8ee-e0fd-4642-bee9-a8b940a5ac80",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54254a9-5295-48e9-a207-8aebe15f15c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3351d69a-c459-4f7b-966a-ff0c2d974e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0eff90-2a64-4b5a-8284-3b06118fbe7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "44124291-4765-49fd-b768-7d8fdb3a6b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea92aff6-2ca1-4880-ad57-e3c4f6ba946d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270e0d1b-3078-4595-aa60-860e6bd42e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac745bcc-0633-404a-8039-664ea135b594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b58d0eb-41c1-4628-9a57-7e1ecd758819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f5d637-d4cf-42f9-ac79-f239ba8477ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b252ac73-ebde-4baf-aa83-682cce448a6b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859ba49f-cdb8-4045-abf0-a7380268c841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d617ab-e130-43bd-9194-10e9284b28ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b41e95-d9ad-4685-95c0-9fa85de29cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dde9db23-bd8e-4758-8215-430387f8c121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464c4b5d-0cd6-45e5-a439-842f1c95330d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865ead4d-e1a4-440b-acf1-8f33a1753a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c0a6e1-491c-4e01-b456-30738630f20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db8f450-2f1e-44d4-bde4-9c03bc18d871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d72568e0-f8be-419d-ba56-01572ba55cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef01cd25-5095-4a22-a5f3-2aa9c4f25c85",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf716917-83bf-4444-9151-990d8f4759f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ee0808-5767-45f3-8347-ed08e4f0d3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d2dbfe-03fb-4868-8bca-72fa79a106ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7e1c5d-33e4-440b-9018-a36fe9d6c62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0976f2-724a-4177-8ac7-2744ea3a374c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2072a0-6f4c-45fc-97f9-4f6ac5f4ddba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bb81a1-b34d-4d41-b3d0-62ff608b4a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a6f51c-55e5-4061-9848-cda20020a9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb95df25-57a5-4d8f-9cf5-72c12e841a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890493a3-33cf-41cc-8c89-ac1d3033324a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ec12a5-439b-4d88-892e-3ade81ed0496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c58aa2-7cf2-46f0-a40d-7d3ce0ee649a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d8535c-ade8-4791-918c-97d3cb689a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "63e5d1bc-472a-402f-bf15-0cafb3d35d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00da573-ee6a-4162-9094-f295ad1bafec",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d18056-4449-431b-8c69-e9da1b874e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df939619-9a3e-4bae-aa0e-d2c18a5e2825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd55368-d3bb-49d6-9840-c021b58c11a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a43e33-4ca5-419c-a2e3-324166a0562d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa44e5d-2d16-4741-af1c-e0b3425ef1bc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcbdc9d-ced4-450e-aee0-d58b1706dd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e55bfe7-647b-4a90-bac4-149a440d89e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2bfb98-5015-48cc-bfc9-d0ed845b9be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71f8c170-5742-409c-b946-d7bfa374bcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9598b88b-8780-4a28-baac-b0ebbf5e8085",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af6df7d-3d3c-4972-a653-8d27f8514fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca765990-0532-4fe1-b22d-b27b435ef89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd43c7d-dc1d-43de-a783-34fd04099617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "429683d4-feea-4c8f-945c-226a575cfe52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdd77a0-e257-4be2-9716-a7c0ca0df39e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ed9dd4-bc32-4866-84bf-b3110f41ea85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436f9940-bab0-483e-b333-5dc13d42399e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75481593-cb38-4ce7-9101-30c9ae821ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1f0caf-1895-44dd-8e7c-52e3d9698e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34af8938-c18f-4545-b292-da0015908976",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0486d2-435b-452c-9b1e-8b0abd9b243b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b031776e-6fd6-4ad7-87c1-9958f1737281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97212c17-2175-4ed2-87a3-212b6e68ecf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6d1938-122c-4533-a6d2-dcbecf1172b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87595a09-fb2d-41ee-b27c-594b1bc67570",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6e139c-09be-4ed7-b3b6-5344c203cc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fdfdd9-e808-4358-98b0-ea8c66360a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec6900a-a7e7-4d6f-abb4-79965cc5106c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1701ae-17cb-410a-a3e3-292e8829a0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e81674-b633-42d8-ab0a-4f1219fa27cd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414c67ee-d897-4947-ab20-f10c270e4f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393e9799-2f60-4c46-8b57-294d37fd95f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13023b7c-1c5e-40e1-8f85-856be7af9397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b78bdda5-5ea1-4e5a-9f17-bf42b5a15a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bc8465-c8fd-4270-8dfc-ec938d8aaaf0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141c6a97-a1d5-45e6-8b85-359c23440bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c592b5-a37d-4885-8de0-2c5eee296af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d317ee99-2a05-4500-8d16-af6964838eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be7b7690-b1ae-42d5-bcb6-a001ddd8febb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2eabe09-9c3d-4c67-9843-5d89ebc4eff0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b11572-2d17-4f0a-86db-482edefed21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5b4067-6c7b-408d-bc36-cb667e5470d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11aee1a-3685-40da-bce9-2f1f5fbb5f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a38d22c5-39ca-41b8-86fa-166eef759c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e55f0b-d4b4-486d-ac7b-5103cd7d20db",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5273034-6405-4073-ac3c-0d6b22a859c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc1215f-18e5-4c82-a582-b5534d2a0a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab7ecd5-b31f-4a64-8d18-2fff1db94de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fce430f-5970-4a4a-bdff-d968304def31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e255ea9-33ab-4a14-8b29-160aab5cbd5d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b869a6f8-e47d-40d0-ab36-895dc12d6fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd8dcd1-f9d4-4c7b-99f1-5b6077553b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a2d503-0705-4367-9816-f2ff654133d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdafd63-9bb5-4d2c-9d26-a747b443d897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4170ac47-617a-4604-ae18-5e4302dc5f3c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cf6a57-c6c8-49e1-94b6-466850925f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43110f5b-0af1-4361-b315-decbb499d700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff3f7ea-a2a5-4f2f-a55c-9c6dff044c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8b5b3f-18e9-480d-9718-02b2721f9d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038c70a0-edbd-4da1-90f7-6c1753a67335",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa115e3-91d2-4621-86bd-bc7bae747ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54604d7-d004-4d67-a90f-36abe044913c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ad17b4-b8ad-41db-88c6-562a0a1bf0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "862ee78e-f43b-41b7-9e7b-df7346c77c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a263ab97-ab84-4c48-b928-c9e1ad90914f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4afd2a-ff8a-4866-a57a-551489f37d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1f8e10-36ea-4d44-b577-7f28c375759d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea8b856-832d-4cfa-b323-ad23c5945537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4795aff6-0a0a-4847-aac2-fca828c284d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92aa530c-fc1b-4af7-9c73-009b2b0a070d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaccaad-dc30-4fe6-a424-b25c8c880c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c3a8cd-e4ed-488a-85cc-62d81be30f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920cff30-09ba-4355-a81a-e4b30e849660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16104cf3-655c-4318-a25f-05f609e1aa6a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9850e910-9f3d-4ff9-9222-5d52e400df53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f859aea-dfbb-43b7-86cb-87a69b83cd25",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42eb5771-98db-437f-8bdb-fb4640fb8bf0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e23202-35e7-4a92-b3f6-672db943fe56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d56be2-50a8-43d3-8768-0bd790dcb8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2e92791-29b0-489b-848d-f227f39da984"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "015f7453-1d68-41ec-98ee-4d130fd68715",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32d5def6-0956-49e6-ab06-0677863f9c0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e97a9dfe-51b6-4811-95a7-0967ee633535",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cc74ab9-2d63-4a64-ad59-6e1a42707554"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b587eb73-9f38-4c69-bcfc-6609c4a9e22c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cb63442c-55eb-435a-8bdf-36a77f4db862"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2de67827-4f33-4ef0-8418-718fa0efe885",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "458f4468-d090-42c3-8f56-ad786a35ba27"
            }
          }
        ]
      },
      {
        "id": "9fe85df6-f2f7-4566-822e-6fac6a3246b1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "88d7943f-f204-414a-afaf-ddcfc3a65b22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09bcbb1a-9e1f-45bf-817a-25dbcc34b056",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3c52d591-d5f2-488b-8dfe-29ccf7899cf3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd01c86e-bd9c-49b3-acfa-f8bdff294b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35513c34-c6f6-4d6f-8d47-a1264ad0ce95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930633ae-5983-44c6-97b6-df33646b40a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a424ca48-41fd-4aac-82e2-ba4dcb47b8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b62adc-3b12-4a0f-8f3f-18877263874a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f34b090-0f58-4064-b3dd-b5d86b64ed31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe6df16-454d-48e1-883e-1bb8ea941585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afdaa83-46ed-4037-b679-25e59364a705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b8494c-cd84-4293-a747-f55adb3745a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7aaab58-f2eb-4afa-b0eb-7ff364ead1c7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7b52f2-000e-4e31-915f-f25054997e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729d4c06-b97d-4234-95bd-e33b42e40600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e92306f-bc29-4804-b306-6b334be455dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ade53383-79cd-4842-a545-05607e898973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255d3adb-6186-420e-9bf2-37b9d712eb09",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d243ce3-981a-463b-a29b-ecd421fda01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7648fd-84d8-428b-9449-81917c7fe13f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b804f2e-03af-455b-8533-c50780cc3734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acfeaefc-bc16-4f22-a7db-1d0302cb9680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caff7ab5-fcf2-4845-a512-cc472c7d31b6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c52e80b-b79a-4d94-8490-cd1f2657160e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8b33ef-e2dd-4022-b427-c0167539767f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da562e2e-bb4f-413c-9ad3-aacd204696b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fdb5a4e-f248-4c92-aa81-8a4a158d6550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e01301-e307-4f72-a9eb-0f20c15e9dfa",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730b4417-7afb-44fb-9c47-de43b1c93290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424e47b7-7a8e-4463-b6ec-46167542e5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81efb79-cb68-4e89-953a-dfbf652eadde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e327fc84-1bdc-4463-82f1-6cd630430bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32472f54-ff28-48f5-9608-eb33e9353daf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619c9fe7-7ae9-4b82-8796-45cf9e80e6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71190de6-79b9-49f2-8886-a88988201496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f281277-c12d-4b6c-b3e7-e270b8884868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0caa82c0-50f9-4573-b472-bc7773e738cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec06ea82-1ee7-49be-afc2-b4a3606bb793",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf9b11e-e7e0-4d64-9114-e5757f3c1c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd2aac6-7427-4d3b-88f2-474c90821449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd36b3dd-e14f-4e4d-bf42-b4d3242c59da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "881d1e25-e85c-4770-b2d9-eccf1e289d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786de219-01c4-4cde-87a2-cdeafd9b8966",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe64967-73cf-4130-933a-12282df9716e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c82b1cb-e55a-45d1-959c-8fadefdbf5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c54db54-200e-4b58-bef5-56327e30ef5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4be6fb8a-219a-41ef-b62a-0f2e69075132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1402686-7c05-4503-b77e-bac4ea79a5e7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c3a635-70cf-4635-9d78-6a38891d8c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c9208d-c750-41b9-87a2-b74534419a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a379e8-f215-4b5d-a9f1-4ec089ee1403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74dee4dc-4845-421a-bd28-efa706467c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9c5350-f3fd-4f9a-87b4-6cd6f91212b6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd2bc00-c2e0-461c-8194-5e659687f82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f705240-f3c7-4a23-b661-90ec0e0e2081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8628b0-463c-43c4-85a8-c83f06d268ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "95df90ba-8998-4c33-95b4-f59ea724cc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edaa21b-0073-4898-9ebb-3de3d20e84a9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b7c9e9-6979-478e-9651-46f919e4000d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddeec0b1-b368-4f66-adf1-d29a8b7c2cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad33312a-78d8-4899-b98a-c9c58f1c0785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c93fabdb-c587-4164-aa78-e042d662c3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ff134c-e03c-4cd9-92fe-9d4b899e0bad",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56567b7c-8f09-4e00-9cbc-77969ec2cfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a551166-8353-45e5-b733-d840e405872d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bab85d2-3348-4f13-bb7b-d94a4fe163c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f0c70c-d766-43b3-9041-682b0a8707ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f43cd25-38ba-48be-97fe-833e72f89e70",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a419a4-e97b-436b-a8a7-f6ca8f009197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db97b4e1-4c98-43ee-804f-662b4a218806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b9156c-e8fc-4f3f-9959-69db3db9db5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a82f989-e4ce-4745-916f-e89f1e978d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe77914-e19d-42bd-864a-687641782cc0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1be55a-4915-42f5-b6a1-12091ba2a0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90085c2-ef6a-4b10-b9e4-efe1e3009e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0a1d66-8188-4f83-a8e3-cf10543eb7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b918eb34-a8c2-4e8a-8add-fd0f73d75a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ebf5a5-b01b-4a1a-b3d7-fc64faad86c4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda689e8-8dee-4412-bf09-e7cd7cd47a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8919c10b-0dd0-4d0e-8696-802d8e987c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630afaed-bacd-41c4-9201-16ee84d10ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e99bcef2-89a9-42ba-95fb-8780b7c5d72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3606d3-0e85-4bd4-8f4f-4e12b1248383",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f1641e-b066-4fcd-9951-d7c8a570e5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd225c0b-9ef1-46ab-9f0e-a62073b4caa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ae6053-e138-4c15-8c1e-55c53e21e0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f15b87b7-599a-460a-b00b-df9d77645613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065b4cb1-ef9f-4a02-bd79-c7cdd31028aa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fc972e-1794-4b3b-9d6f-5486262b1697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8a8c01-7427-4a92-8e92-3d9e7643241b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8cfd1e-423d-43f0-be9b-df2608e6ac92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7206ae0-f3dc-4f17-96a7-83a86f48c210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1c920a-b395-4f3b-b6af-8d8a5409fa63",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcc8533-6fac-4a98-92a3-9c285b53fffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1734e481-2a9e-4323-bb38-561cc04e5190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8f7142-21df-412f-a9d6-43423a6350d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "191a894d-4c29-43fb-8935-20a510b82f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5afdba-db55-4a1a-86d3-47041ca03641",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb70e24-874e-4c0e-bf0d-cecc3fa8dc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4c824a-cbc4-4e0b-9b21-e2c41566f2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf99f4a-b2ba-4bd9-8979-923c67003e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7800844-e56b-4e0e-9479-2e6f03e10e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e24316-7d23-471c-b4db-3c11a4d73c7b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb63a5a1-30b5-4964-bc29-4389d225d44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba76289-151a-4715-a7a0-c1ffa23a13f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fa61e1-aaf6-479d-9eb0-40f07e280a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2a6ff8-c9f7-4005-9173-e355bf716a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cce4968-6c86-4784-bd13-1f4415ddf27a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94848563-fc62-4618-ac7e-47d27f9bb638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c01f8a-fc7a-4aa1-93e0-4561f7de8249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df9402a-c8d7-47d3-9df9-0cec5b308e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9c18d0-105e-40e9-b97e-6d104a7b8293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b169d521-e14b-4fc1-a4c5-4b3cad7aacdd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a805c75-de37-4440-8b97-6a69483c3661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672a8417-aade-464a-aa23-fc3c33035b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ae358e-99fc-46e5-ad7d-e383da602ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "746f818e-2e65-437a-a3e6-f41b2f15204a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f05a321-d9d1-452c-ac57-22381b2dc48b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e2fea2-ebe1-4251-b48a-6f0e41bc771d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe59cb9-af32-46b2-a976-5a348e2674f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46be94e4-2477-439f-84ec-2edb8855c9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94e8e147-2028-41f0-82bf-36db89cccdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac557a9-6ec5-43e9-813f-c8e4606078ae",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd1dba9-b4fd-4002-8e53-f62be4be3021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b8e96e-a188-445d-81d5-719aa7981c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b060315b-fd2f-4aa7-a73a-224881c3f1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87618017-4ba3-4d14-ba3b-d16617529297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3198f4a6-edaa-4d2c-aad2-8d4a8fad6e70",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b771cad-da0e-42b0-b739-b1bf0f49adcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ccb6291-d87b-4d5a-ad2b-bf36847c0025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec8f5db-3ac3-4aed-86d2-a9ce762a13aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7cee0c6-b22e-40f4-8a84-8dd55f0ace08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a408a1d0-4ab6-4a50-b6e8-dffe69da3367",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839efd77-00fa-4204-bfc6-87515d432988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68eb6e36-0b31-45cd-aa24-f0dfc07ed73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe70fdf2-c707-4fba-96d9-925727187b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3aac0a3-e3c5-45b8-a83f-6c209268ff90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6288e33-4931-4062-8221-2b42e96f61fc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75eb913-109e-4592-a58f-9f2041ff7f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf963fa9-d3f9-4369-8461-8e835bc89f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3827aba1-e8e8-452a-ae5f-b3f2f1e55a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdd0e72-d17b-4667-a089-277deef64ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1874ded-84d3-455e-8b49-f240993c0fe2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f968cc7-62c8-4453-92c3-76610167c096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f084983-5c2a-4d8b-b2fa-6fb62d1812fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038e0555-568b-4752-ac25-26a9076cd4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6d9ecf-387b-4367-8208-62a41d9665bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9cdb93-acd4-46b9-94dd-eef2b4d391e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fffb1d-81ed-4646-876d-7e80c1169739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190f6c8c-5c0f-4fcb-82fa-422b55008d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93f8d2f-bf1f-4e77-b6bf-eb5042435344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8271b399-ef0e-4a00-bb0d-e2ef0dc8c4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446e499e-f4df-4527-9763-19a122c66023",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b460ee-24ac-49c6-bfc8-4b0052fbf1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95abc00-e4b7-4769-917f-e7e7e7381ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adcdcff-3ef0-479a-8204-7bc1dcec6141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0b4c0b-7bd5-4344-9d3e-cf6488cbc5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6569cae2-6c86-4e8a-8901-87b32fabfc86",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c52b557-2ae4-4754-8294-79cb3d4f51fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee29cec-0da4-49ed-ac09-f807a2554c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c1521f-a799-49b5-9811-f2393cde159b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e4162b-acbe-42da-8f29-f05b6ac9f7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1e4ffe-f964-423e-bd74-a0bad48c62ac",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7f18d5-3fba-49b7-ab79-f5fa667bc729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f0cbfc-19b8-4829-8998-50842c3a3a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fe2ff2-3100-4202-8013-3a87b3d7147f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a91a130-79b7-4de6-8a1f-b6aa676a9e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eed0711-311c-4211-b229-ec37025c0d38",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0d17b0-f86f-4b81-9e5e-821837063460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c94770-8be6-43f6-91d3-e3a518f84bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b205eb-24f4-4b64-b505-c7b7a40563b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1d2fba-7dd7-4229-a2cf-068f2c2b5838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c344942-dc7b-41da-96dc-d926a1009719",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d6cb6d-dd3c-43e0-bb91-b84ee9e8b66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fa5908-e7b4-4340-a257-ebd8d04a635c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7aa14d-c546-4df8-aab2-db4019eebe2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c35bb010-7865-4ecd-bc68-79eb6bb37c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30639029-7d58-4e47-b759-f8b6f817cd16",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0c6b5f-b0fb-444c-bdf5-5cee188c939e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62cdbf39-2aa2-4382-bd7d-28dcc429e3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c265d9c6-b5d5-4987-baac-2422f886f15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "686d25e6-9253-4a88-9464-fcf5deccfc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d555babb-a1fa-492a-94b9-2aeea5c1e810",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3c9c63-25ad-4489-9009-007b5ff6dc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fa5054-1e2f-42d1-83e9-a60460bb23db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b062d89-2c8c-4e4e-9f7a-b9936c3e888c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "701af366-337d-42c9-aa2c-9ac12508913f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad0eae4c-aac3-494b-9953-6ef964306ee6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1420d3a0-09ec-4df1-8e39-93f34b3c6fde",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecf1d0b-a317-483a-9bb9-894bb65971e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c914e4fd-749c-413a-8555-879281ffa625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e283ec18-9fb1-48dd-ae1d-78fdfa52516d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4e6bead-ccf8-454e-91a5-999bf1424690"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74c05a0f-0ca6-4792-b2d0-172a11d28bd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "361dc138-9f34-4707-a3b1-de7e071bd34a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a839cd55-474e-4db0-bef6-65a52130cce9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dcbcb35-50c4-4f48-89b3-6af6a8272e27"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55432968-2f23-4453-8e8f-c7646889c3b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4e5dfb04-7742-4260-9cd7-a3096947d074"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5597f747-e98d-4368-bf30-696118a61216",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7533345f-1f6e-408a-a7e7-7c2ed29032c9"
            }
          }
        ]
      },
      {
        "id": "e6d88656-981e-46b7-b613-4dfacf88746b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "150f7c3d-f9c8-408b-9be4-ed8aa0596642",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04aa272f-4404-4696-8217-904cbf5d9e72",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "34bd18c0-c59e-4155-9838-c6924096afec",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d60dd8f-0cab-4769-9b1c-1d79104d45df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0454213a-3fcc-4bd2-9d78-8ef3e0097c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb485bd-a47e-4db8-85e4-19e1d61e38df",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03ede33-3523-4297-a9c7-14c749a205cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f29f89-ff4c-416c-b03a-1282c66e4d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093ed98d-fdb5-4306-a72c-cfce0498d83e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62036c8-075d-42ce-8b75-16d920e89ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750e213d-0b84-4534-8037-5fd6e36e3d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26597d03-9ac3-49fc-9df8-7ec17d94b9ca",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5177e031-ffb7-4662-92e8-c9a42768a03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f316ce-6607-4eba-af39-61b3df950da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee49e0c-ec21-451b-bada-18d32417be9a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4d2bae-e01d-4f89-b714-0ddb58315436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8af36f-419b-45a7-a527-9e93bbb23120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f56ff17-2515-4492-a630-6fe1d301d18b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b75dcb-833d-499a-a646-d6a6888be779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3313eb3-9919-4d14-a2a9-b47e0138ae8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072849bb-1b4a-45dd-9e15-b0c67e0bfd31",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb75bef-4822-4e02-a5c3-99eb37c9c7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3912ee4d-801a-414e-a947-5490448cc1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74db4a39-f6ef-407b-beac-7fe4d893fbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9829cbc3-6c25-45c7-bdc0-eec78c162fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44f820b-0b9c-476a-97a1-bc988984bc36",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b862a56d-b5a8-4486-be59-b4f30842069c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60c113da-3546-4d97-827b-a70670c91b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f83c75-1bb1-4822-b322-cef21d4376a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06bc1ba-099f-4a13-b7d9-a267fd3df344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508e25f1-8b0c-4b80-8504-a1c5ce4bfb4a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8f4680-7c5d-496b-990d-c897783b9a06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f0c597-a905-420f-8a4a-c5457412395f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2902fbf5-3ebb-4610-a4aa-b1335113def1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4505f1-d4cd-42c0-8ffb-4c099b348d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58c72b4-3874-4556-90a3-0067cadae3e6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7175d2bf-240a-480a-9049-19faf130c297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c071df50-95a7-40dd-bfdb-13acbbe13852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39620f2-09d9-47fb-8587-7654881992cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ee8d8a-eecc-4c3c-9b56-12bdbf97fb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c8bcb4-43b9-4525-9b08-dfa2dfb02dc6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aebedee-c8d7-417a-a152-99e6984a3522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd7c065-9e1a-4147-a5de-4e8e08dd2b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685a5597-be49-4349-b3c3-c268f92aaa51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4eeeda-56c3-4022-b2d1-98fd33493ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bf6acc-0414-4645-92ec-253541ee6c99",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7366da2-dc18-4690-94ab-2cdf0c452ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f49b053-40c8-4f9a-a6a1-646e18841861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab6e7ff-a286-4000-83cb-3e3babe2c365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3a27f2-86e3-42a4-98ae-0a35d4f56f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96076221-9e16-461d-916e-73bd2b24d8af",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f7aecf-f568-448d-966b-346487972332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99d2a7d9-e16a-4f3f-a861-bad1427cc462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09c26de-6a5c-490e-a1a5-fe65ab065379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39170dd1-026e-4ada-9d34-8e525efa7949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410e8f21-1191-432c-ba34-723799f9aed6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9da1dea-a98a-4ec7-b50a-8d994ecd1fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44d3283c-a757-4d0f-925b-c930e0b7511a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1787f1-fa81-4086-b647-0894035c0612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f974d943-0ae6-4593-8401-c3e72e8bb7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3992ec83-8ab1-46cb-bf68-797a8df7331d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a707b632-fde5-41d0-8fe3-4eb04f0d7f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d20d62c9-4778-40c1-8746-af1094aa40d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146251de-d8c3-4248-a636-a4e05e054392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d11a34d-b07f-46c5-a036-52251facd287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5268dd6-f240-4ce5-86c5-5e320bb7d8ef",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e71893d-30f0-4fb4-a8e0-531b4d3eb76d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6175153f-6e2a-44a1-b9d7-25d9855bd241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0892096c-7b19-43fb-b629-9d2a937e521a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a99684d-4741-420d-bebb-e2b62d64daab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd04a219-92ee-471c-9598-872c71cfe673",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9861345c-b37b-4f2a-9647-1f9522ab08b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014f8661-6615-49ee-9d60-d7ec6e53f22d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12089a12-8f93-4edd-9312-8d0734746c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acff76da-4325-4352-b613-31fded6e20e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777b862b-5afb-4e35-9057-738ca8abe60d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073cb6d6-6f95-48fc-885e-7a0f64ecce6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193e11a2-c743-40fd-afdf-78c4e6e199fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce730f15-c9d8-4b9a-86a4-726128e5c3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef9b05e-295d-4eae-99c2-8dc40deb5712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011a859a-7893-4b88-961e-3d0dda6f483d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb219ec9-bd6e-4e65-b566-467458ab3f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3359e856-1ac5-4b9b-b6bb-168461fa1b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460f4211-c20f-41c5-ae45-74ef1aad5ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5fa0a3-a5cb-4dbe-baaf-8c44e17029b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f4c882-0fa7-4e51-8844-808519635656",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd8e889-bd02-4f43-9a2e-b9f8a4f7423b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5818304b-133d-4056-9987-b2f763ff14fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3fc674-1791-42d2-94f5-599308ee056f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d81c4b6-2374-48cd-8553-8ad2b6468656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270056b1-61a7-4b23-95cc-7da63196c1e8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328557c2-d8ef-4202-acf1-154d6a1a49d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33b2ef3-45de-4ab5-8fb4-aa945e479177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e734b0f-a98f-4a72-a896-04f0ab2598f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134b6aec-918b-47b9-a912-8f7fdffdf5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7304e448-3f0d-49f8-9af7-f5a46c3d4bde",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06a6f33-ea8f-40ce-9ad2-b8e611f74a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c76dbb6-fd3d-4d54-a779-99a7251fda3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ce9081-335e-46bf-ad2c-5ff3a5183b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59117bc3-0397-4b4a-a69e-35a5610ce90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c221282-9433-427c-af32-e92aef341d72",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99482121-a93e-4c2f-9d0d-6728319bf8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972ea18e-a4a3-4a45-b288-a784d65eef1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc802ed-6721-41fb-a14e-cb8ce8e5b5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc8fa9c-57a6-45d2-840b-0f17218ac72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2731aa32-03a3-4066-b4f1-4fc5c5b0cba7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea45cfb4-abf4-4a88-b6c8-1091fdf3b5ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1359aedc-6a52-451f-b1e4-9b11155c1735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1851ff-b81a-4f28-9c71-b48b5c06e451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6439073b-84fe-40a3-894e-85adfbcbdc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f20411-07b5-4051-8a01-a79c7e8ec918",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539d77b0-feca-437b-8e7f-aebfc3c6899e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "284668e6-f3b3-430d-92c4-d01ed2639bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51241c5a-a8fd-4a67-80c9-b0d75f0bae81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0cd621-607d-4bef-b337-5b2fa84e98d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7807d13c-3111-4c57-b998-ee2fe3f381d4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053809c7-3e43-48ee-badb-a410c15aff4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb5569a8-1b7a-48c5-b386-cfb4306ad261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f95c72-4bed-4223-b070-7c78f12ca58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73acb5a-0b1e-40d2-af88-70e5e56b8903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49379e42-5422-4eec-9b0a-0ff3af11a0cf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10d662d-7eb2-400f-9b0b-f906c0cdd448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "609e9250-6e09-485d-b1be-d49cff4f83f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304307b3-86b9-4576-a0b1-01d86bff7fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e3970a-4e6b-44dc-8833-56c13c49698f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd7c8c4-a980-46d9-990c-d5233d1db648",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fd9598-7199-4d51-b0e8-c055954d86c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29c8f13-d85b-4d86-a6a0-db5a5ba18f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1011b85-59b0-424d-af5d-d8640ccad810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896e47bb-4d1a-457e-844b-39ef022f0a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ce9948-c745-40c2-bd1d-2632317c4efb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06de3aa-8b4b-46a1-a76a-83af8279c584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f63e3de1-9ac5-4ffb-8b51-b0be94d8a6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2d2410-eb2f-4e09-825c-7d179bc2c896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2aef19-129a-49d6-b5d8-6691e03b6526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e26a91-8b9e-4cbb-8199-b57c42dd6a2e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c27e23e-1b2f-44c2-a5fc-c8734f299de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058c80c6-6d58-4798-9a6a-aac3fed20d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b76b6ba-40b9-4ac8-bf9a-a76e47be65da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6c6613-b58d-483b-a042-14a5835315a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16e30a7-d377-411f-b2d7-148c4f505b57",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d957d4b0-973c-43a6-bb51-d0ef56fb51f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cbbfddb-0767-4ff7-83ad-e3feabb088e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7710e172-c6c4-49fa-937c-f315b4e21eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fcd15f-3830-47b6-8752-40a5237f1387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceedc117-40e3-4699-a865-026c4c899de1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a0988c-c4e9-4fac-9abd-60b183b309a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6aca5c1-a3db-43bf-9dc4-fea44594b17e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffec5da6-66d1-4f1c-a954-23737777dbb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13963aec-04a9-4469-a112-ff7b2400a959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a404a9-b0d5-40df-b039-1363f238e2a7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ff774e-9a8f-4c06-b7e6-a6183fbc4ca6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f81ba986-626c-4389-93e2-7e09eeb0fd6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc3cfbb-9f15-45e8-a90d-e20d263e749d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3179541c-29b8-4a83-a405-1e2bbd40f2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792abf00-d8a1-4baf-bc32-e00972decf1a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08124a3e-d349-4f99-9332-8327db932329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8e830b5-78d7-4859-b47a-624d07f3746b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369c6854-bd3b-4265-bc47-24fb86595adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910c6a58-372f-484f-acb1-ef338fbe0691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac04db5-c906-481b-b666-af8a7ba9a9f9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bceac9-357d-45af-8829-c40852fba18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bc053f-4ff1-4e17-8427-46a366198fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce9753d-cd06-471f-a665-2339122700b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf6dac8-b1cd-4d66-b106-c0c1f4f9a0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cd56e6-b969-4109-b6d8-c8d32d7979da",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa3ae07-c4c0-4267-8907-1cdf9e24fd42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99755c59-d351-47b9-80c2-6259c7457fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ff82c7-28a6-41fb-9d35-e5c5a32caeba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4614e8-e7be-442c-95b8-e0b028643bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786c9555-8496-4f81-8cf1-4b5545a8109f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fc812b-86b1-4780-80b1-885e4bd935d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8ead05-92b5-4d0e-8739-1fd9f7405e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba8d5f9-5300-4737-a19a-c4a6da5b04e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ad40e7-654e-4341-9243-e18eaad486a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7706246a-7f50-4ed5-aab5-3a5d74ae4333",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50a34ee-b16a-43c0-9e92-aa32d7e06610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0bc85c-8c24-49a8-9cca-9aebdb3b3fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446a4e11-c472-4648-bc42-ee9ab6ffbaee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546f2057-737e-49a9-acc6-dad410f8c15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4d4f9f-e664-4755-87db-34223c891f0e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3f5e2d-f622-46ec-966b-a8074bbee0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02308528-127e-446e-8578-2e742148cb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda225e2-82d3-40c7-b448-1acb7fde2a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f27fea-e7a1-41b1-baae-f3c46581ded3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e23f101-c242-4d5d-bad8-8d877cdfceba",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833296ba-f1f0-45d8-83e8-27e2e5fa105c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa998170-574d-4912-94ac-35102e3f69e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e22ee66-51da-4ae6-a70c-72254a1b88b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df12417d-0874-4291-9e35-1424fda1c22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a732c7-34b2-4730-9a4e-8897b132c662",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8012be29-7d2f-4679-9da6-870c0532c903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412dcfe3-e7ed-4079-8429-a0b7452a0c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1bce21-dc7e-441d-bf45-e1367baae630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a84daa-99e7-472a-b0bd-a7a0fa81b22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572da648-8623-47ae-83b1-d466b7bc42b7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a1f37b-28c9-4824-a748-759abb5a2da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06243a6c-108a-4a2e-9317-a5255aa30008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1152db-bab5-43a6-884a-8a8839657f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2e47f5-504d-44b3-971a-5cca76b403d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd426657-162b-42aa-b3ef-b4f22a0aa5e4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99f7910-4e0e-42c8-975f-ee745e9592af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10bdae8b-0f07-4ed7-94dc-5869881dc7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f3a363-ebec-40c3-a2d1-29bb6850003e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ceec4b-6c3e-48c8-a142-b59d67c98a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0296929-bcb1-43d6-8bfd-6d78b1c52b49",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981e1224-9da6-4a32-97ee-4f9426523f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df10d65-9ab0-4389-ac44-10ca054e0061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dc1330-ff14-434b-91bf-a7b05e96b908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e2e1c2-255f-4b31-8a3d-e506882a2450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26868ca-3d04-4763-9231-50477f84da3a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e452a3-2774-4450-941e-5625255479d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56cb6c1a-3c37-40c1-97f3-1955c9e3ee9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736d0327-4688-4b3a-80c5-2d141787e4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0cbe78-82e8-4401-8bd7-eeca48ca85a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d6e168-dd54-4560-871b-2082a0010fe9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94341df-cb22-437d-9567-3d8bcb4bca67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4775f195-d82c-463b-94d3-351bbe8250a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5d958d-7de2-45c3-ac45-8fa44845c322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8a3261-782a-4698-b7c4-9ead96d9fb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9575cba1-dd8a-4bef-b7bd-1e17a4a4f175",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bbc76f-6cf6-4cf3-8b30-2bc62ba21e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a201deb2-fc79-4814-976d-00e769ebf740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1168120c-ad2b-475d-9c94-23fc3d9b24ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a86fec-7c09-4a18-8b17-d09ad61f5260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb9e9db-5f18-4de9-89c7-384c2bc78d78",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da90e07-7ed4-41cb-a6d3-2e0d5dbfd847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d084c8-a376-4d09-87cd-65a7d6142552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8588b14-acea-428f-8e4f-1da656b2172e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a8e151-de3f-4d01-b585-73e49959ab65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af906a2-b1a6-44ae-8e26-f84d3a2b85be",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de6e3c3-3582-4fe1-8d48-91a94d707ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec44ba8-be95-408b-bbd2-eb166a8ab0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0705a6a-4942-465b-8c22-680905295e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b8fa5f-8485-40b2-ad25-ebb7c4b473c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8c5144-0f79-4cc3-a33b-f761d4a12107",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d9b3d4-18e6-48d0-9f1d-a09e4bfbaf6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4376149a-9f72-411e-b9df-44d0601673e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79355dfc-4d7b-42c5-b7ed-158e43a17570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d1daee-e1b5-4152-86aa-e03b7e4fe00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd364f95-2f65-44b2-aeed-f2456e83f3ba",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6ad50f-2745-4828-9a9c-cb7fbfdf937b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0545bd68-ee5d-4596-a32a-f54a34240951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92510e2-9241-478f-97a5-492ee640d458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc25d52d-742e-4761-852f-0bf70c953d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c321e587-1c2c-4aa6-a8b8-e448eab37c9e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b903a12a-60f6-498d-8a24-4062bbcdfe6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11809459-560a-4d3d-ae45-47380db5a759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e849b0b-858a-4dac-b61a-28aa379efd61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bee7737-2fd9-4cef-9453-d71a48b4d057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8a582a-2b75-4301-8966-e4371d818e35",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668254e6-0dd9-4a50-b2da-3237506d67b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c79f75-8ad5-48b7-9ddf-f05fe1a88458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07f22c9-db76-4641-8307-fc6a62588618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1fc17e-6e7f-44ce-a17c-30439b86a6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9086668-055c-4a9b-a14a-a2236f707bbc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc37c9ad-2bb2-432e-aad1-335cb4a422a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc50cdc-a695-4cfc-a8f3-9b3efd726e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c5b6ba-55a8-443c-830d-f7776849ca53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab72563-404c-4d3f-9cf7-8a8669645871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23b9bd0-3925-4102-83b5-64792e4fad44",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d20060-9bea-4e62-b8f8-f2aa6bb0b8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793fe6a4-ee9e-4d44-ac00-c778f14cfcd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77430f9d-2b5c-4adb-9f33-23c9adf6a4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d46b2c6-5344-485f-8ff1-a807e5babd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3aa4cc-2e1c-459a-bdf0-5e41ed21fbd1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90ec63a-79e3-4b02-8403-f0d3a95c31d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e18c8be-4898-4385-9322-6e8f7163a39f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244418fd-33c3-44f5-97dc-a926ba9947b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5957cde8-ea2c-4fc6-9c6e-980323092f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecd24ea-d5c1-4816-a26c-493520c74592",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6354cb1-489a-4b65-83d9-1cfaa4caa07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066baf7f-a5e3-4c9b-b186-371c1bcdf037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bd10ec-6be3-4826-a0b6-c9615b5b0ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e333fab5-249e-46c9-86e2-2fc19763d571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074bbaf3-1b0b-424c-9e9e-8fe1832e8932",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c92b81-1637-46fe-9f0b-e5757948ccf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83a66be-f6ba-4c88-b297-aa952f79308e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a993d1-7350-4c06-85e6-42f03321ac1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2193a0-d95f-4d6f-a3dc-71d62813629a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd2482c-84e0-479b-8051-800dcb457de7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d524abce-9a83-4c2c-97bd-a288e2ac10ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c050c3ab-20f0-4de0-a8fe-3799a281d1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a1af43-e313-423a-8cf8-0dda47562954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a237c2-0316-468b-ac61-a5c052651bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb039a0-8ba7-4a1e-ba54-989b23d38b85",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ce5c2f-9f6b-44e8-9d6b-cf90a9dc9bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9020d7dc-8f36-4b2b-80c2-15cc8abf0cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47cd9c7-ea30-4bd6-9198-c1f36cf1bd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01057915-0a18-4aaa-8b5d-fe4f88750782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ccb39d-5aa1-43be-a652-d833f815c046",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208046cf-2f1a-4aca-bec4-36d8663fbb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369d0caf-f8c3-4f22-b43c-99c35e6640f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da388fa6-ae60-4efb-a44e-8d25f9a3ca5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278d58a6-f1d6-478f-811d-72256d527f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d8267d-4234-4329-b847-748572715c1d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffce0e8-30d6-45d7-a512-0478896ba140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b3018e-2771-4778-a1d9-9fa71bdede28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c346e500-787b-4008-9655-9b1a88ba145c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8e76df-7432-48c7-a597-fb4863dc5a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3867fb-d0e6-49c7-bf9c-49d1be9360bb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee7d863-6ed7-4817-8391-253e9efd1110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f61b60-2dee-4aed-b950-2467561cc981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbb5f8b-a3f5-4949-b59c-92aeab18ad84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d434a7-36f2-4399-828a-7f1010acae1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a079860-4bde-455d-a2c2-e69c0a558031",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f7064c-a8a9-43b5-8d64-9b5a0f1458c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7414c558-b122-4ce6-9c86-245777ea92f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e5cc1d-0cdb-434c-9fac-0a6f4d9d791e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd76f968-7d9c-454a-bcd7-66967f51db3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec71d8e2-1d8e-4ec8-ba78-190b63cb9849",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3038432-a7ac-4aa1-9406-e69078538562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "800366c8-0d14-45c6-8ea9-58a484e5c0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75eba41c-8954-4446-b638-e36339d530f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368d59fc-46e7-4fd4-ad53-990292cbb9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c598e6f3-e8b8-434d-9010-1085c15b792c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e5da8f-2511-4034-8096-2076d3d42320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee0c14b0-d7a4-4159-9cdc-a51ec6c330bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6676354f-64bf-454f-9399-6eb67e29c0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738c6b3a-b5bf-4907-b6ce-66b631ba660c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381685d2-eef3-477f-acfd-33d9cb4f44df",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5df582-2620-4033-ad24-e38f6dc0e973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0613667-b06a-4e7a-b4ae-6690b5cd5dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68c5fc1-eb1a-4826-9e49-62f1563e58ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0065dd4-f54b-4b0e-8a45-05ab229d2806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7940d5de-b5ee-4af3-923d-467628f2f259",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6205e0f9-3495-459e-99db-47bbfa87b029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8e223e1-722f-48d6-acb9-cf0e62b53023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc83c19-94af-431a-862c-fe071e1b4b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f875c3a2-7fe0-4b05-90da-6690a73d88eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb727ef-9881-47d9-ac47-436d88fd1947",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4dd73a-ba9b-4290-bb16-51a02404c49e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bebe390-90e4-4adf-9875-27e8a8eef126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ce8594-056b-46e3-90d5-6f47c0113542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb392ff6-0d07-40f4-868c-2649ce2fa4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bf3821-ff46-4766-8166-d9750bb59cfc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8388dd66-2613-486c-ad9e-aab1a440e0c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50c30bd7-400a-4444-9504-0684ec2cf1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4211f4-3574-4206-93dd-525c5214c6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1079d3-9511-4e67-93d3-a02a328950f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c558699c-2bcd-441d-997b-4faa43edba24",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b8539b-660b-468c-8adc-9373e9372d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca1a8467-6643-47e5-80ed-640199d19e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9878a0-cb5d-4da2-818c-ab6d94613910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc036a2-91cc-4829-bf0c-71905bf01b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb886d88-90fb-4f16-9cfd-d468093872de",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96500fd9-8bd4-496b-8ef4-2b0edd4b7e07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8b445b6-0753-4ad7-8825-6e1dcac07d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbedc74a-5a90-4328-8611-04bb67661919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219037f5-017d-4d81-8c17-aaab7257bb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647bde9d-499e-4d13-9707-3d2a3879d092",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77b3049-96b0-4ce3-9f29-9739ea382667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfb181a4-4f98-4e73-adae-c1b8974d25e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43d292c-76e5-467f-9d37-d73c626a61c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fee7c9-39e6-483a-9d56-48328c8ba042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93354cd2-2b10-4c83-a2c9-16c4978bf259",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17e2e13-75ca-486b-9dbd-f3f7e6c6ab7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f22fb74b-f853-455d-ba4e-54aef955651e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0c5243-00da-4f55-a2a0-3d56a0f72dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a170c97-5a1f-491f-8b78-e40276e31a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0577b1a-bc15-49ba-8266-95cc8ea64d46",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc5aa9b-1734-46f6-bbfc-02d08c3496c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83293b8f-3a67-4ab9-b68b-6c84b2f044c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7fb7f2-dc07-41a1-819c-4a946059178f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eabdcd9-d1bc-4cf4-b5ca-201bb4af13d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8125ec-23a2-441b-8204-134480270110",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0715ef-987f-46b4-947c-6d4184cf7154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "125fb0d8-beb5-455b-a1fe-a5496217f903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e88d5b8-6994-4f81-92ad-684fff0a2230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68b6e3d-22d0-49e3-995a-f8a011b853f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2adbde8-f3da-4957-b51d-96ffa34d8523",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2141c758-6d53-4f88-8ef0-1370d096e1d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdee277c-96f3-4ab1-9d49-496fc8ae35c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7b4116-6dc6-4602-9a9d-5c82371688d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2fec5a-7012-4458-86cc-ccde947b9e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ddd2ce-7872-4c29-93ab-99fb715dd420",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2618f873-650f-4724-b564-f2aa6ae267e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e7ca6a1-c6e9-4c97-bb63-0096562cb1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ac71f2-e54f-4487-b26d-f10e330f2ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f726ecc8-6a37-4f1c-a569-412f83c0962a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea81011-ed23-49bc-9dfb-cf7e313f8ac3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3637ab-9bc5-4508-9fd2-86374df437fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec670e1-e6f2-4731-be7f-17216decee57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5321819-54be-4bcf-b8b5-aec22587c6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dc5a9a-e107-4238-8a8e-698539b3ee6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c673d1c8-f915-4c84-8e75-96051a782d37",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dff8840-8757-4fdc-a961-2ae92beafd48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cebd83e7-9ab0-447d-9ef4-e6397279747c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1dcb26-a62d-4a6f-8dd2-6f8c6a261d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ea679c-08c2-417c-b200-2320cc019510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e46e695-0bc6-4448-a9d2-bac58609162c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6495f766-55e5-4888-9723-001c9f3bab34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d223ca6-b5e2-41c3-8bdf-9f8ac4d25bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "837a439d-2130-48db-9c27-3a0207fb4fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1b8d5c-491c-4e17-9267-5c66837f8d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add15e16-357f-4478-a185-43f3a02b1971",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4e457d-bb57-4ea6-b890-af20ffa54b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14b6625c-c2a4-438b-a1a3-71af8d8d35bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db234a1-142e-4dd5-b6fe-e509c5df98af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d949d2-fdf5-41b6-a3c3-96a7c296c378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850afca7-55e4-47de-aa90-8bcdb8cac07c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b3fbff-3b9c-4d0b-a6e7-b6895489b4d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bc5f337-a26b-491a-8ee7-a1c6a2a02d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0bfb31-f5e2-45b3-aeb9-568cf4e15f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac255a2c-2def-4b83-9bbc-054af794570d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d928714-8c6e-4dea-94d8-7f837ae0014c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4aeaa3-7d5a-4395-8f66-0c2b41aa66bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f869861e-abf8-4aa8-bdc7-a7520407d378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1904032-9b62-4036-952c-ca49b75cc8b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aaacbb4-3c7f-476f-92b0-76aa9ead44ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32022a08-fdc1-4722-a8a8-ab13265fd0b1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a24a13-7ef0-4dfb-8b99-31a0b3924aa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93447752-c064-47d2-ad04-1a2840cee760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae95e564-89f2-4634-bfc8-23a6a26779a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fec6594-2bd4-4cac-863d-c496a4062463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2399893-4a40-4fdf-ae6c-5eb60636fcb6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb901f2b-cf8f-4485-bcc3-fd7071a553e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "477d23ab-989d-4a8c-bc1c-4758fd786d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381d29db-46af-441b-b975-2a0a8d52cda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48df63df-c53f-4daf-8b30-0272fe931542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cf63f6-9ff7-477a-b78c-777dd8a42f47",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e045cbb-9f65-43f8-8cfc-f3e833ba1338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd8fdeb-792a-4386-b98e-0ab5bf5f8b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a5c76c-76b2-4836-850e-c51165f67360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8ed317-8bb1-4c71-96db-f55ee85f4128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401b05d6-62c9-46ea-a302-e0eeab2f20ef",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650feae5-863d-4ab3-be84-dd47e6ed0714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ef519e2-10be-4d7a-a9ca-154397caf5cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a19218a-94ad-41ec-a8fb-ab4aaa1da4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a8e656-b5b6-4fc3-bf35-1f049d1145a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5722ff96-bdef-4de4-8e12-4783e066e66f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5587a09-e678-43fb-baae-30ff0bbe8e0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "002ac838-3e5b-4296-94f1-2eeff8a26567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4cda88-e8e2-4ca1-ae60-bda2a311fd39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948b2048-53b3-41be-8617-cc3bc31868b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb9837c-fb6e-434d-977f-f80d5564dc06",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1346ed45-2906-41f8-9a21-2278d59b5390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88df26c9-7d1d-4403-85c7-2379d451d1ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2553c290-fc76-46a7-b88e-0a7c2b20d24c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cbd787-dba8-48c9-ab91-bb8dda2cfb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e974cf-08bf-4edd-8dc3-b5d98a1dab70",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bab9ce-43e2-4a1b-90ea-833535f9da7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb889e4e-1ea6-494c-a928-c2ba45a2d1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab55d93-ab6a-467f-975d-3814fe31d514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132f8638-2bd1-48c7-926c-8ac58eafd9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb51f22e-7a41-42fb-8f9b-09fcb33efd8f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef94b18-78e4-405e-af24-9289c7ba6c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "843e64bd-cfe1-4b31-8a65-3855bc3a6148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd61981a-23e4-4a4f-bf3b-14163d3f4b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494b4ba1-f950-45a4-b9ec-052363277a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb54d2d6-3044-4d53-9ac5-5d950411040c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850c564f-1fac-4793-a700-f029636f4e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fea8686-bfcd-4328-9d86-022dbf9eef6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0883d88-152e-4553-9684-e749193e87bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3575ba-a423-40ab-adce-4c93237e530b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddb50ce-04af-4457-a525-60a3bbf315dc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef97978-4e9b-41e4-a6b7-46945018bdcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fde6136-94c9-4cfc-8acd-cba58e7dd38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bd50d5-b7ef-4733-b9b4-fb9ca48b32d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3939ad7a-0676-4c14-a383-99a0f5ea3914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582a77fe-294d-460d-977d-af5994fcc878",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179339f9-b318-4013-9e53-307fc3875ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6810ddb0-0cc1-432e-9697-e7c960dd41be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb315ef-4c46-4975-af33-dddf6c3b46e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af68fb6-b1ad-4403-96bf-c36e7041d319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fe09b4-5849-47bb-a748-a1d15240de0b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5878288-b50f-4d2d-85a1-df94ecb30671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f12ab3c2-74c8-4ae5-93f3-e6018ecd88c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50116ad-a360-4d37-97b2-ee2b754a7339",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dec14f8-4443-41e4-a85d-286da0935af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bda1f27-daef-484f-96bd-1eaa0c945e2f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02308cd5-5c89-48e4-9b23-1844ce208737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d4ee470-ef49-44f5-9ef2-a10dd3a428bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34727a4a-60be-41c7-88ab-c3732c7a542e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b302826-90a0-4467-9733-897ec547c6da"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53320192-8c31-4ae4-a000-e25f62da92ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f8d4eca-bf89-4313-a54d-b91ce0242b3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5520740e-14e4-403e-8f9b-f2881f705ee2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "166ecca2-bfc5-4fff-9b45-64105e37f072"
                    }
                  }
                ]
              },
              {
                "id": "a5e971d6-fd73-4ce8-af5f-d2c0bfeee840",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37fedeb3-94eb-403b-9d55-c36ce586c540",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a169f10-0f96-413e-93af-109b9ce701c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6fa35d1b-f6ca-47f7-8626-87767d5cb869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea9461f-79c7-4066-8a13-18578d0a43bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbf0cc51-a76e-4cfd-9819-e0a5abfe9791"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00b8fcde-4620-48bf-8ff3-a9d33af65d3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e483ad1-0c9c-41c6-b9d8-1ab84ece86a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8708674-66e7-4815-9840-6bdf6665999b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d313891-5c3b-4fe0-ba8e-2fc0e825dc3a"
                    }
                  }
                ]
              },
              {
                "id": "a249801f-744d-40f2-9574-befd66973ac4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c6922a27-7c46-4aed-a491-f2b6ff638326",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de571ac0-ef7b-4a40-906a-fc37d366ef61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "074983c7-2d1b-4b4c-a774-db92f1311cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0336ea3-b945-49ba-a63a-f8b075541954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7ddb60-39c6-4b03-84e2-0f3bdc038dac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "195fd829-81da-497f-a6a9-4f69a02553db",
            "name": "Positive Testing",
            "item": [
              {
                "id": "affbfa70-40f8-48d6-b238-0d0e371adcd1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec78ddab-b807-48ba-a67b-69e388cc20a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "437acb47-e1a1-4a59-b6a2-e4217e4049c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b27ba76-3c02-4c4e-81af-349e109229dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "580276d5-baf1-45b8-9138-9618fe872f82"
                    }
                  }
                ]
              },
              {
                "id": "5acdb0b2-067d-45f8-91c0-3ecad112dbc5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1d31a74-05f1-4a77-b8e7-d2e86160ec9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9a27fb0e-62c3-4ef6-acea-e37c8886dd1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "480f9be4-dff3-4b44-9466-d898b838a534",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09be0e9d-8bb3-420a-abc7-1137d886f4a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb10042e-3d77-4ec6-a1ad-a61ed382c0ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2ad06174-10b6-49eb-83fb-5ce05ae35239"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9494619c-9304-40a3-8c96-b25850c891a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7736ceb8-3f24-4098-8a1a-1c0e0aa66a3d"
            }
          }
        ]
      },
      {
        "id": "51f6d418-db43-483d-bf2a-402875535a17",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "274f5958-83ff-42b4-99e2-f797e699ff90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "518abd38-6ed8-4670-b855-7c58ae29b6e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "240a12c9-d85c-44cf-9956-c1fd4d2518d1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f389220-9a85-4c50-9c12-26cb665fee86",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9693c8b2-1f01-4b7b-8d5a-93f5d77e8a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77db7736-e911-4321-bc70-4c152db8f463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d84a4f5-97e7-4c1c-90b1-616f275a4ead"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1c4d4ab-9c90-467d-ba04-d29bc77658c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f1c9a68-590d-4514-b314-b2da7a4d17bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f174d745-c2f5-4516-968e-2f64a22049b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3fb4dcc-07fd-4a5f-9dac-a04bf67a0938"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8145214d-5a5f-4292-8812-f677275527fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1bf010df-9155-44e8-bfba-048cfe75db18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef3955b6-e6c1-4275-a442-4d0d1096e576",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88def125-829f-4f77-b44e-0c2a7d5e67c8"
            }
          }
        ]
      },
      {
        "id": "76ac135f-ce21-4317-b18f-285880e5a30d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "917bc605-9225-4b69-8671-728b92e72eed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ede9e34c-b4fc-4f63-adf8-65ab099b0b95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed16b1be-71b5-4eb4-8b81-545ac397bd3f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e69ec3f-c3f2-4b30-a126-8f4f6c4242d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b42f22e5-24d9-43cf-aaec-ad0d6f0bf8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec5e9f3-1de4-423f-bd4d-4e71e6b302e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0651a13b-76b6-498f-a76b-1a64bf6d8d42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef4233ee-1803-47e9-894d-ebda5ac4100c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dad35591-dd53-49ae-a006-f73cdd694c28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41550c3d-0b8d-4c63-b7c0-e6469cf01a86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d97737d-5dcd-4cce-940e-034838740062"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a5f9e1e-7be0-4672-a5af-206f5022ba44",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "87085f72-4420-4163-ae8f-e55c49c4d93c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c112df7a-f17d-4366-892e-278a92f717a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f14a5e4-f75d-40b4-af05-6d24f5cce455"
            }
          }
        ]
      },
      {
        "id": "7dc2223d-58cd-4bf8-8f24-c163fb4a2ba5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "81ab15bb-2ddc-48c6-bb80-62a9920de808",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9889706-e005-476b-8307-34cfc3646d52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28b8c096-2b54-44c4-952f-23c9e9a838c2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39d5ad2-944e-4242-8297-33001e7b6733",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d18a6ece-d040-44f6-941f-b6507b943eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4b623f-3fc3-44b1-a53a-e94aa73e5009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "250302cd-2256-4665-b029-cd579e2ed66f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e74733aa-c973-4a63-b4ee-17c786a99811",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "394221a4-c659-4389-b9ff-a0c687d74214"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc8229ec-f6f2-45ba-a214-f2190c3e71ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6cb198c-def5-4a51-b041-0ae4c5204a76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08bc050a-e558-45db-a912-25304998e8c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "24897f92-5ff8-48ac-bcae-8661ce6388b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "734b01ed-aa70-40ed-92b6-a2448b349cb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a962710-af0b-48ff-892a-40178800cb79"
            }
          }
        ]
      },
      {
        "id": "328b9a06-1998-41ed-be03-ad9fd12baae1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85498203-1bbc-4679-9040-5c92cd5aa42b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52450dcb-9a2e-410d-b582-dd4020ca7e0c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "78060e9d-03f5-4382-a452-5c05fa148535",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4ef6082-5114-45fe-9141-db56eae3172a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f619eeb6-dd26-4c47-b397-6dd8f58eca6a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 66.04561403508775,
      "responseMin": 6,
      "responseMax": 240,
      "responseSd": 19.522583146016732,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700786075795,
      "completed": 1700786103986
    },
    "executions": [
      {
        "id": "acf882b6-7caa-4db3-8c52-a2c16c670342",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "916010ec-3f71-4eb0-98e7-67f732668301",
          "httpRequestId": "1d4c5fc4-9dd2-4283-9484-eb175bcb94c7"
        },
        "item": {
          "id": "acf882b6-7caa-4db3-8c52-a2c16c670342",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1335b440-bff8-4d44-b8f2-767eb1d7ce5d",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "4563a378-7e2a-438a-9ec4-c04478182e00",
        "cursor": {
          "ref": "bca9bb59-cfe5-4806-9614-7e863c368ba9",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aa8c08fa-6c49-490d-9b17-c4f6738ce12c"
        },
        "item": {
          "id": "4563a378-7e2a-438a-9ec4-c04478182e00",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1b521cb1-38c1-4625-93d7-a6ba8247741c",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "293aebe9-5800-4a66-8674-edbc3d891d7a",
        "cursor": {
          "ref": "3cb6a527-0774-4ecc-b9f5-4fe73f20b26b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fc2e3019-86ac-4e77-9708-ae22fc13b4a4"
        },
        "item": {
          "id": "293aebe9-5800-4a66-8674-edbc3d891d7a",
          "name": "did_json"
        },
        "response": {
          "id": "824f0af9-ee8b-4c26-b6d7-a8b2fe09f987",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8534bf7e-abbb-46e7-9b59-31eeea0ed99e",
        "cursor": {
          "ref": "ac82d5a8-3e7f-41ef-826d-1cd436fedd94",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5bf492ac-1984-44f0-b6d6-0b7ab3b733b7"
        },
        "item": {
          "id": "8534bf7e-abbb-46e7-9b59-31eeea0ed99e",
          "name": "did:invalid"
        },
        "response": {
          "id": "04833254-67d8-4298-9e76-ab7cdba20012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8534bf7e-abbb-46e7-9b59-31eeea0ed99e",
        "cursor": {
          "ref": "ac82d5a8-3e7f-41ef-826d-1cd436fedd94",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5bf492ac-1984-44f0-b6d6-0b7ab3b733b7"
        },
        "item": {
          "id": "8534bf7e-abbb-46e7-9b59-31eeea0ed99e",
          "name": "did:invalid"
        },
        "response": {
          "id": "04833254-67d8-4298-9e76-ab7cdba20012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f10ebed-cc19-48f9-b4c3-a469018ed649",
        "cursor": {
          "ref": "89ad5356-c3ed-4a37-b764-09cedebef89f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "eb7cd769-f67a-4dd6-9591-19ab4bb32175"
        },
        "item": {
          "id": "8f10ebed-cc19-48f9-b4c3-a469018ed649",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "df2d90d8-e81a-44d3-abf6-6472025c603c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 105,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70635e57-ce35-4170-850d-5a84edb292b4",
        "cursor": {
          "ref": "e947b318-e5c2-46aa-a347-449b8d31b162",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "30fe94a0-e624-4bc4-87ca-4f57cc88767a"
        },
        "item": {
          "id": "70635e57-ce35-4170-850d-5a84edb292b4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7127db90-a28d-4807-a8cf-b857f5622563",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b75e491-e517-4230-ab43-fe6d8c3f84e3",
        "cursor": {
          "ref": "b36cefc6-cf5f-416b-aa13-d8980d612458",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7899ff81-c41b-4b9a-859d-ce40af93814f"
        },
        "item": {
          "id": "9b75e491-e517-4230-ab43-fe6d8c3f84e3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bac82e43-7892-467d-8e79-52928ca0f553",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea75906f-a57c-410f-bc64-3f95281bdd90",
        "cursor": {
          "ref": "b08fd8ad-b99d-43c3-aafd-0fdc4601d02e",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "155c8d6e-2716-4f1b-8ddd-ac82b6236d2d"
        },
        "item": {
          "id": "ea75906f-a57c-410f-bc64-3f95281bdd90",
          "name": "identifiers"
        },
        "response": {
          "id": "335d550b-913a-4bca-9e44-2dac750ee8b5",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9946010d-09fd-471d-9eb0-b6b2ba14ae74",
        "cursor": {
          "ref": "8b443b7e-3a9f-4b1a-96aa-0e88695fd531",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "76db7392-56f6-43e7-85e9-10b56343115f"
        },
        "item": {
          "id": "9946010d-09fd-471d-9eb0-b6b2ba14ae74",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e0e5d9cb-2dc6-48a9-be96-455a05a6f52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d8c809-5ad8-4c3a-a009-377814c54234",
        "cursor": {
          "ref": "e6a49471-3dd6-4eee-b9fb-7a40b311486f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "188cba54-bf35-42eb-8771-c34ff1cca65e"
        },
        "item": {
          "id": "66d8c809-5ad8-4c3a-a009-377814c54234",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a716363f-c532-481e-b841-cfa90531eaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b922ef-2363-4a37-8706-1a3dd4258246",
        "cursor": {
          "ref": "c874864a-055e-4386-b558-fded29d53d7f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dd071a96-c5c9-4260-8291-cd8923e05382"
        },
        "item": {
          "id": "77b922ef-2363-4a37-8706-1a3dd4258246",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7cc34f06-6d2a-4f72-ac47-6a47a271f0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0381714e-09d0-47f9-826e-cec881a5b657",
        "cursor": {
          "ref": "3062485d-219d-42e1-95cd-911ad3fec75a",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "89e6cbad-77b9-4ae4-807c-36d2c0626f4f"
        },
        "item": {
          "id": "0381714e-09d0-47f9-826e-cec881a5b657",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e207741a-42e1-4ffb-b54b-4793ce13bbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6709b22-bc69-4b78-8735-d79bb91d164e",
        "cursor": {
          "ref": "68ebd2c4-c5c6-41e6-88ad-4c19cd464424",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "83384e71-1d83-4a0f-82d4-88b14a21cfc1"
        },
        "item": {
          "id": "d6709b22-bc69-4b78-8735-d79bb91d164e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b8d5d000-cb80-497d-a2d3-135f679136a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cc98d3-eb58-4730-9158-98b021c15d85",
        "cursor": {
          "ref": "16b740b5-094a-4b45-a124-52e1d2d5f2b9",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4286278c-c468-4c09-bd5c-9dc969b68da1"
        },
        "item": {
          "id": "40cc98d3-eb58-4730-9158-98b021c15d85",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "47a763cc-437d-4ca7-aa16-c54e70cd395a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74952a3b-e87d-49ef-bb4a-4b62a171b205",
        "cursor": {
          "ref": "b2c03956-ddbd-4101-9de3-ebd23f6e796e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6ec9c340-3eae-4c82-81fa-d829303c9c8a"
        },
        "item": {
          "id": "74952a3b-e87d-49ef-bb4a-4b62a171b205",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c1bc6df0-4cd7-4c3d-b95d-163781795576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd891d8f-6939-4374-a97d-0b7c57dd11ea",
        "cursor": {
          "ref": "2d3a472f-7475-49c7-816f-6815d367a8b2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "49a3e5af-acb7-46de-8c7c-6e7003fc1124"
        },
        "item": {
          "id": "cd891d8f-6939-4374-a97d-0b7c57dd11ea",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "590e11ea-0a47-41a1-bf78-2d990f2cd4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1399bd6a-4bb8-45c7-adca-b9f5371d6184",
        "cursor": {
          "ref": "e51f72cf-c6bc-4f63-8a33-bfcd44e77319",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ed582eb0-7ce7-4a1d-81f9-5df663965690"
        },
        "item": {
          "id": "1399bd6a-4bb8-45c7-adca-b9f5371d6184",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a45c20e9-8dbf-45ea-b466-433d999378ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cb386f-4844-4407-9838-229a1bb04c37",
        "cursor": {
          "ref": "b7a6582f-9392-4fa9-9ce6-5de11102e220",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bfdaea64-a64c-408c-9417-256b32526615"
        },
        "item": {
          "id": "13cb386f-4844-4407-9838-229a1bb04c37",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5fdfff15-ae50-4105-b1e7-0138c641c988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d602c985-2672-4161-b394-1a0953b110ad",
        "cursor": {
          "ref": "061d1f88-5726-46ce-8dda-f8d7a798e022",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4d0079a2-762e-47d2-b4ef-499f1c6997fc"
        },
        "item": {
          "id": "d602c985-2672-4161-b394-1a0953b110ad",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "38f6275f-d682-4885-b006-7513acd27d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef760a7-1c50-46aa-85eb-a5b70aecad61",
        "cursor": {
          "ref": "696619e9-c30b-4678-af4c-5f1fc2f2a09c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "52ee54a9-2da3-4681-a239-d97c64abd964"
        },
        "item": {
          "id": "0ef760a7-1c50-46aa-85eb-a5b70aecad61",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e764de89-0d23-45d0-a698-092d6072a3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fff13c1-e5eb-4459-8896-e034cb7325ec",
        "cursor": {
          "ref": "a550a2e5-2d62-4e6a-8bf9-3d63bb75fc35",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d2996d4e-ee9d-45c7-82e6-20e78ddb1d91"
        },
        "item": {
          "id": "9fff13c1-e5eb-4459-8896-e034cb7325ec",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "29ce9b63-6fb3-4e4b-99f0-246d6992bb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b67f97-9732-4ba0-92ee-56826d0fcd96",
        "cursor": {
          "ref": "785887d0-9e9f-42e4-b56c-38bcf7446a4e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b1034f46-abd8-46f8-8158-52531312c3fc"
        },
        "item": {
          "id": "32b67f97-9732-4ba0-92ee-56826d0fcd96",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "30647afe-e958-48a6-9e71-97142d9aaa56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615ecf3b-e2b3-4b35-ac5e-d3107a0e4992",
        "cursor": {
          "ref": "15b8cad5-1ca0-4c83-8392-c70fef4b3993",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8de09c4e-9e68-42ca-850e-1c6d439e28d5"
        },
        "item": {
          "id": "615ecf3b-e2b3-4b35-ac5e-d3107a0e4992",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "83b79180-d544-4239-b5d2-14f0ae72cf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9e1d60-3fc6-4ebb-b4e4-a4c10ba9b19a",
        "cursor": {
          "ref": "d3a627bf-8333-42ab-b02d-c188f829c6a9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cd7ac38e-ce7a-41b4-a3f9-2cb5dd121154"
        },
        "item": {
          "id": "da9e1d60-3fc6-4ebb-b4e4-a4c10ba9b19a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e0f038a6-ec77-4094-b841-807d012bc55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622d9514-b987-43de-b55c-ac616cce87b0",
        "cursor": {
          "ref": "22a50348-03af-4c68-a0b1-5079d96e5f1e",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d3d8c524-b640-44e1-9a92-49ffa4108c54"
        },
        "item": {
          "id": "622d9514-b987-43de-b55c-ac616cce87b0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d032d35c-da31-4d13-82cf-2505a754a6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7b7e22-5056-4b6c-94a0-c7a27cede558",
        "cursor": {
          "ref": "bc3ba7fe-aa39-4597-9e18-3434302e6c17",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cdd71863-3316-40f6-a5fa-772f531e3a7f"
        },
        "item": {
          "id": "3c7b7e22-5056-4b6c-94a0-c7a27cede558",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2b5ecd9a-c0c3-4908-925b-72e3d87aaeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2fb6a7-ee94-4cb8-bc3d-8dfac5505054",
        "cursor": {
          "ref": "f781aa27-e17a-4812-8e75-abb685788544",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "db9c7c46-9d98-4e3f-b528-914fa781759b"
        },
        "item": {
          "id": "ca2fb6a7-ee94-4cb8-bc3d-8dfac5505054",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8e130470-d8db-46f3-8d68-57aba5188f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73ec7e1-bafa-46ec-b8a3-49505c593889",
        "cursor": {
          "ref": "e48e86a7-1011-429a-b070-2e9d23773211",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8acd7ee6-ccbd-4373-8a4e-50c778a876a6"
        },
        "item": {
          "id": "d73ec7e1-bafa-46ec-b8a3-49505c593889",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dab13bad-1fc3-4e00-a59c-6aa6b4e79ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2518edd3-e400-4269-9363-e441e569f9d4",
        "cursor": {
          "ref": "d3a18c5b-5d26-49a9-bb69-ed274d91a6cc",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cb0815e7-d86e-4079-ace2-e199d073a0e5"
        },
        "item": {
          "id": "2518edd3-e400-4269-9363-e441e569f9d4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "645fdff0-2743-4af4-a1c2-a3f6c2207a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be16dcf8-051c-4573-9a36-82fb549da885",
        "cursor": {
          "ref": "586f4fdc-7749-4d25-a96d-d2bf1244b470",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8a5c5167-ea0a-48a2-8fa2-4550f55176de"
        },
        "item": {
          "id": "be16dcf8-051c-4573-9a36-82fb549da885",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ce1daf9a-e96e-49bc-bf67-53d45936a5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f383238d-625f-41af-9ddf-c24b2a633440",
        "cursor": {
          "ref": "607805a0-5b19-4acf-bd4e-4d9d7f2f3854",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "be051a19-c0bc-4a24-86fd-008578632175"
        },
        "item": {
          "id": "f383238d-625f-41af-9ddf-c24b2a633440",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f98e518d-ba92-483f-83ab-a340fb89d938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257ea624-c4f7-4d27-a23b-93ec49fef3f4",
        "cursor": {
          "ref": "f7d720b1-0399-4128-9bf0-b17653f2a745",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "82c8afa1-4069-4254-b1d7-4e3b85f9fbd0"
        },
        "item": {
          "id": "257ea624-c4f7-4d27-a23b-93ec49fef3f4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6e035333-f9f4-459c-94b8-9132bcedd332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bcf2d9-2273-4d0d-960b-194e6fde0c21",
        "cursor": {
          "ref": "6332bcb6-adee-43db-b3c2-d61efed2b588",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7e8a8935-6de3-4c0b-a028-c289291f8503"
        },
        "item": {
          "id": "e7bcf2d9-2273-4d0d-960b-194e6fde0c21",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c7aaa5a6-d721-4ad7-b8d7-45d0ebe73316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1b94b5-6d8d-4ad4-8f01-96ada9616a30",
        "cursor": {
          "ref": "9c1ecd50-b150-4177-b572-e406d0765e6f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6cfc3045-ebf2-4ebc-b9a1-86b3b0ef869e"
        },
        "item": {
          "id": "5a1b94b5-6d8d-4ad4-8f01-96ada9616a30",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "af76d16f-a237-4988-bebb-2686a760fc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3c4bf1-3390-4851-9659-073caeff0cfc",
        "cursor": {
          "ref": "855b0723-9b2f-45f0-8c6d-0d9202dd005e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f06cf7b9-abda-40f8-af93-4dd96c1da9e4"
        },
        "item": {
          "id": "fe3c4bf1-3390-4851-9659-073caeff0cfc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "da0a85a5-ba84-4c0c-af53-44e7849a75ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6d1984-7355-4f12-800c-919314860ca8",
        "cursor": {
          "ref": "a4e7cb94-0b2d-443d-bc1c-2dd66aaba7a1",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d4d7cce9-0e1d-4ac6-91cd-fee155412c90"
        },
        "item": {
          "id": "8b6d1984-7355-4f12-800c-919314860ca8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "11472705-b1c3-43f8-8691-0c442964242e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a7088b-fd1e-4a4f-8c51-8fcf09d9bf68",
        "cursor": {
          "ref": "448fc3ad-ad9d-4ed4-980a-2b1e8db40350",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "86968aa9-ce35-4ce2-9238-a0a204d1ba15"
        },
        "item": {
          "id": "b4a7088b-fd1e-4a4f-8c51-8fcf09d9bf68",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "63bfeca5-93a5-4777-9803-6f5f63ae113e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a3c3c8-401a-4d16-8c8f-46e09a6c86ce",
        "cursor": {
          "ref": "f831f0eb-26a3-4533-ab6e-a3e66a7d76f6",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "00d2a374-7e50-4ea5-b886-e1a8cae39e6f"
        },
        "item": {
          "id": "41a3c3c8-401a-4d16-8c8f-46e09a6c86ce",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cfe3d3f4-a7ea-4153-b4d7-ee55cc5f532b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0210aaab-14c6-46ce-92b1-4114e5ce5dda",
        "cursor": {
          "ref": "c62fa367-ffbf-4142-928d-ec9162a20837",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "edc64029-153a-45d6-8754-d8cc224f5ca6"
        },
        "item": {
          "id": "0210aaab-14c6-46ce-92b1-4114e5ce5dda",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "294c998e-6513-4542-8bf5-00dfef770bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdec31f-8336-46f8-9127-a42e0bd2ec7f",
        "cursor": {
          "ref": "116a758a-36cf-49a4-b71e-6cc44ac9ccc6",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "162636dc-33bc-4474-a408-20a186441e63"
        },
        "item": {
          "id": "3cdec31f-8336-46f8-9127-a42e0bd2ec7f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c89b6cb9-3240-4e7c-b5c3-496f4d58d467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b50fefb-41bf-48cb-8fc8-3307e763bc56",
        "cursor": {
          "ref": "e3267889-db49-4db8-a2ee-725c8d309d8e",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5b714051-ebe7-4180-8165-52ead40d3b98"
        },
        "item": {
          "id": "9b50fefb-41bf-48cb-8fc8-3307e763bc56",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cb36fffb-bacd-4cb3-964e-2459dd4383ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709fe8d1-24d3-496f-a893-e31379bb25e7",
        "cursor": {
          "ref": "de5078c4-cf06-47a4-8a02-0633c4be9a0a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2c46bed2-9d82-4a53-be81-72e57c0b489a"
        },
        "item": {
          "id": "709fe8d1-24d3-496f-a893-e31379bb25e7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e090075b-a721-4d02-94a6-c0e00c60bd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533be87e-309d-4786-a1bc-e33c3be98001",
        "cursor": {
          "ref": "693b4b99-b14d-44cb-8a0a-3645863d19cf",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "31dded7d-c273-4d69-935b-c1b816a8c4c9"
        },
        "item": {
          "id": "533be87e-309d-4786-a1bc-e33c3be98001",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1cf7bd51-bfd3-47a2-9dd8-fb90fc8f4202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5eacbce-98e7-4324-833b-07640ec20d38",
        "cursor": {
          "ref": "c1c3b921-1b24-4d3c-92db-46abafb647d0",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1917f94e-6d42-4f16-a7aa-754800ebd805"
        },
        "item": {
          "id": "d5eacbce-98e7-4324-833b-07640ec20d38",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1362304d-84f5-4ca6-a10b-b734c45e39e8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 90,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a31ee43-aef8-4637-8c51-08c37fd460b5",
        "cursor": {
          "ref": "de4944ac-f59e-483d-a846-e72c72ebd609",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d7e4e9ef-a007-4dec-86a3-321782109906"
        },
        "item": {
          "id": "5a31ee43-aef8-4637-8c51-08c37fd460b5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a3435dfc-2789-4992-9835-c00f3697cc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11dedc4-b0fa-465c-bd25-d1d19b30706f",
        "cursor": {
          "ref": "367f1136-3102-464f-aacd-09ce3cf04824",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "34ac90de-47ea-4ee6-bab7-2bc4e07149c1"
        },
        "item": {
          "id": "b11dedc4-b0fa-465c-bd25-d1d19b30706f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6f5945ec-d8d1-48fd-9bfc-8fec4e3e1e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430af696-8187-46e0-b971-6dfaf7cb9ea0",
        "cursor": {
          "ref": "69c7a9ec-ae44-4e42-9f58-600652a7c72c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ef5381e7-9bef-4d15-bff8-02287ba03138"
        },
        "item": {
          "id": "430af696-8187-46e0-b971-6dfaf7cb9ea0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "27cf73da-234f-4cfe-9ebd-91c590f79db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35eaee1-8463-43db-8280-1753ddff7204",
        "cursor": {
          "ref": "bc694284-5172-42c6-97c9-409a9bc496f6",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e4cff393-b9ab-4eea-9486-146940ab9a25"
        },
        "item": {
          "id": "d35eaee1-8463-43db-8280-1753ddff7204",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "40df12c3-9a13-4164-896c-9f318611689c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce50e0e8-6b35-4648-98fd-d9d4f1059345",
        "cursor": {
          "ref": "80e00239-9d47-4116-b8c5-e05e372f2a23",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2d5daad5-688b-42f8-9289-3e344bda9f5c"
        },
        "item": {
          "id": "ce50e0e8-6b35-4648-98fd-d9d4f1059345",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0c213250-29fb-4e8d-90ec-8d7c0367cead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a41751-e209-4535-a296-97a90e89b938",
        "cursor": {
          "ref": "bef872c1-4252-4c65-83a0-dcb2525c53c8",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6cb611a4-208d-4664-a3b3-8a2ab0a879af"
        },
        "item": {
          "id": "51a41751-e209-4535-a296-97a90e89b938",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8699b6f1-a6ef-48d4-a73a-752510ee69b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90553b02-0c59-4a74-8c3d-53a4d445a565",
        "cursor": {
          "ref": "2af75d92-48e6-458c-bba3-443218bed1ff",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a8fbc595-dd54-43ee-8469-f42afc3fa5c6"
        },
        "item": {
          "id": "90553b02-0c59-4a74-8c3d-53a4d445a565",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ebb719f9-571e-4c25-b1cb-0b6e1f52ffac",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfeb5c0b-192c-4a96-b8b3-44d8afa18e19",
        "cursor": {
          "ref": "4a117823-ebd9-44f0-8d21-3ecebd55651d",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "54ddba72-a9a3-42fc-be89-d76727015e43"
        },
        "item": {
          "id": "bfeb5c0b-192c-4a96-b8b3-44d8afa18e19",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bdb91dfb-8662-4f33-b6f0-3a3b078b3d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a23b25a-bd3b-4d17-8412-59c0d09470d4",
        "cursor": {
          "ref": "44bcddf2-8888-4e4c-867c-60f97368b5b7",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fe3a2e37-8d63-4f29-b217-e50081b44fb2"
        },
        "item": {
          "id": "0a23b25a-bd3b-4d17-8412-59c0d09470d4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b74f543d-fa30-4631-a623-733febe3a031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bdee28-6499-479e-b89e-154d6d00c42d",
        "cursor": {
          "ref": "7443b967-a38d-40b9-bfcd-1eb9ed2abc46",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2c638623-f1a3-4a35-8331-a6c8f32c4380"
        },
        "item": {
          "id": "38bdee28-6499-479e-b89e-154d6d00c42d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "95f8a292-54b3-44aa-bf94-0cf7168a3baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8297053-4c6d-46bb-bc2e-3e13564bb744",
        "cursor": {
          "ref": "9e4096af-6b44-4644-83a4-00fa08762036",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "24c5bb21-725b-4a8e-9c03-e9cf4f0ce3a9"
        },
        "item": {
          "id": "a8297053-4c6d-46bb-bc2e-3e13564bb744",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0c6dcc1a-aee3-46da-ab84-ab25284bd157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fde2d95-a3bd-4e5f-955b-944fbb0d49ee",
        "cursor": {
          "ref": "0288d0c1-fcf6-4c2a-afe6-1e08187cc18f",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d21ff926-5e56-4cfa-b548-d573ed1cb4d9"
        },
        "item": {
          "id": "8fde2d95-a3bd-4e5f-955b-944fbb0d49ee",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b67a6076-ad2f-47dd-9664-d81c9b85c6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449211ab-4d7b-4db1-b5fb-e6e4b13371a9",
        "cursor": {
          "ref": "9a5e57f4-df00-4995-b691-1a6455f102ef",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "46cc1478-ff37-476a-86dc-f841f5898fa4"
        },
        "item": {
          "id": "449211ab-4d7b-4db1-b5fb-e6e4b13371a9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e6c96b01-a33b-48c9-a90b-54b608871f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbda2f4d-abb3-4b3a-abd6-78e7cd047494",
        "cursor": {
          "ref": "34111e20-a9d1-48f3-9c4c-cbf0de07b227",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c41c06b7-a122-4f4d-a02a-d827b8b75abc"
        },
        "item": {
          "id": "bbda2f4d-abb3-4b3a-abd6-78e7cd047494",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "230eed86-51d9-4c8f-8104-7ad773599106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db80e1e-144d-4eb1-884c-4c8973823481",
        "cursor": {
          "ref": "f6de23a3-a414-4859-88b7-b32ef2b6fe10",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "92033c1d-a213-4da3-8d66-7c85ea282ba4"
        },
        "item": {
          "id": "3db80e1e-144d-4eb1-884c-4c8973823481",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "84d5c365-4f78-4504-9110-8a3fc05b92d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ede7c7-2aa1-498b-83b3-8ae09fc924f3",
        "cursor": {
          "ref": "1a5ca1c6-9deb-4aef-8732-0dfcca1a5e46",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ec14acb1-6e69-4058-b256-94cb052a0542"
        },
        "item": {
          "id": "35ede7c7-2aa1-498b-83b3-8ae09fc924f3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "10a71ce8-7740-43bb-b16a-abe9c7a58327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0b8b43-7e41-4726-8236-5244f5bf1373",
        "cursor": {
          "ref": "9085eb85-44fb-4796-9977-df39869058de",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c8fa329c-180e-4180-beae-9a4d1f5effa1"
        },
        "item": {
          "id": "7e0b8b43-7e41-4726-8236-5244f5bf1373",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "35354990-7556-40f4-b032-7997479e0dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7d01f2-16ad-4af2-88f1-f6bfebb382bf",
        "cursor": {
          "ref": "b30b7b16-3fdd-452a-b42d-4aee2289937b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a2b8ac3a-d6f1-42f9-9d80-fd349939ef6d"
        },
        "item": {
          "id": "6c7d01f2-16ad-4af2-88f1-f6bfebb382bf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2085ce23-9e54-4c59-a59a-9ae4aa9aa8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b679c8c-fcb9-4b8d-a9fe-f5cfbbd32fac",
        "cursor": {
          "ref": "a6551487-987f-481d-a363-59a0c935ada3",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d7e63121-86ea-46a9-b2a5-afaa3be879bc"
        },
        "item": {
          "id": "7b679c8c-fcb9-4b8d-a9fe-f5cfbbd32fac",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a07da54e-264a-41ad-a75e-d5501f60b385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12de7e80-acb9-4a70-8b87-98872ed25f9e",
        "cursor": {
          "ref": "8b77b157-0d9f-4da9-a2b7-d0787e2f2e14",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "43b841c9-1fa5-4b32-8e06-d9fd4e0cd77d"
        },
        "item": {
          "id": "12de7e80-acb9-4a70-8b87-98872ed25f9e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "07205af9-6ffb-4081-95b1-6c4502baaff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d51115-afcc-4695-bf0d-eb0ed12e266f",
        "cursor": {
          "ref": "7f9a920c-d5fa-43ee-a0c6-56c6233618cc",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9719b24c-3ec7-4743-8cb7-6a675545514d"
        },
        "item": {
          "id": "b1d51115-afcc-4695-bf0d-eb0ed12e266f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1a9ea252-0f9e-4380-b3e1-9dffce935e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcf948b-0f85-474e-adf8-e6072586489d",
        "cursor": {
          "ref": "df6e4228-77c2-4f95-8f27-75a07308631f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8fcaaee0-d0e6-4046-b2ac-9d5ade7fbeda"
        },
        "item": {
          "id": "7bcf948b-0f85-474e-adf8-e6072586489d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "30800dee-3777-4fde-ba27-f624a7c7f4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef18caf1-652b-4f03-99a8-a971488e5200",
        "cursor": {
          "ref": "2edb1b46-db48-4050-a88b-7524b2be80aa",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "75f224ec-4f74-4907-9aba-b2004cd0f8e5"
        },
        "item": {
          "id": "ef18caf1-652b-4f03-99a8-a971488e5200",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8954a620-f0ce-4a3f-a008-ab7e310e6c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28ff8bc-8a55-4569-8d5d-382787be2a0b",
        "cursor": {
          "ref": "e1f3ab3c-e8e6-4765-ae94-8baa6c6b3bcc",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "46e2fb50-8a97-4ef3-961a-f413c523adcd"
        },
        "item": {
          "id": "c28ff8bc-8a55-4569-8d5d-382787be2a0b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "319a5ba8-2fdd-489d-885f-4728817c524f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27e8d01-0403-4022-ab2c-e7405654a867",
        "cursor": {
          "ref": "c4ef6764-7c10-4ab5-93b3-1739f21bb29e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a5a9e803-fd0a-4289-b434-8576bda83a82"
        },
        "item": {
          "id": "b27e8d01-0403-4022-ab2c-e7405654a867",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e82c09b3-67ab-49b6-a69b-cb4107953324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d624b4ae-2667-4e38-84c2-0a5fe3c2a846",
        "cursor": {
          "ref": "7e438439-7298-470f-a39b-846d5178ea67",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "38210a3a-525d-4e62-9f1f-d64e0e3dfa37"
        },
        "item": {
          "id": "d624b4ae-2667-4e38-84c2-0a5fe3c2a846",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7ef9ad7c-dfb1-43ca-a6d2-cb3ad06d6c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22433ed-0978-42e0-8ce4-e611b4d9053e",
        "cursor": {
          "ref": "c810596a-bf14-48fa-ac4e-8d1a63eeb508",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "22ffb59f-f6f0-4b80-bd1a-99c5dcfa6feb"
        },
        "item": {
          "id": "f22433ed-0978-42e0-8ce4-e611b4d9053e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "43f2b803-84dc-438c-82e8-2a59ba6a170c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02f7526-bd8a-4537-b86f-bff931a42381",
        "cursor": {
          "ref": "02a02216-e5d0-4a0a-9a3c-5df5bf37bb74",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "79d955ca-d487-4317-b8a5-a456b62ea492"
        },
        "item": {
          "id": "b02f7526-bd8a-4537-b86f-bff931a42381",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3ed88043-d65e-467d-b34f-bf31a01ff201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0bc139-48c4-45bf-b37e-8717a3eef5f7",
        "cursor": {
          "ref": "68b953e7-a109-4df6-a654-bb08ca2bb7ce",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9baee647-7f06-412f-bb1a-9569a2b18522"
        },
        "item": {
          "id": "cb0bc139-48c4-45bf-b37e-8717a3eef5f7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c43113f0-c442-4824-808d-11037682cc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2385de5-a9be-4688-8734-524c8d840eaa",
        "cursor": {
          "ref": "079cdcea-d684-4008-b2cf-973cce37f599",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d86d57a2-881f-4da7-9b5a-f89b487348fd"
        },
        "item": {
          "id": "e2385de5-a9be-4688-8734-524c8d840eaa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "50710be8-f6ed-4fc0-9895-5ae54b8417f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab68a58-a581-474a-a64d-a6bf0cb62a7c",
        "cursor": {
          "ref": "735deea8-a056-49f5-9b49-3cd254357e0a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "86e0745d-a34e-415c-a4bf-803e666cdf43"
        },
        "item": {
          "id": "0ab68a58-a581-474a-a64d-a6bf0cb62a7c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "190edd2c-c93d-45a0-8839-29215e2b1853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74b708a-9a4d-4e13-b957-e823a03e4136",
        "cursor": {
          "ref": "fb8bd20d-1cde-417e-b1df-6eac98ce9e15",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dc78200b-751e-499b-b5cb-fbe62be6bdb0"
        },
        "item": {
          "id": "c74b708a-9a4d-4e13-b957-e823a03e4136",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "10fc50b9-c000-4046-8012-4118f9e49421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34801c8-e2d3-4099-8c34-6c53e1be6e5d",
        "cursor": {
          "ref": "c84c66e6-a6f2-4288-bb12-4e9ed12c6f5d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ed0acf02-89ad-4e6a-90ad-5b4f907dd334"
        },
        "item": {
          "id": "a34801c8-e2d3-4099-8c34-6c53e1be6e5d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b20ec414-f74b-45c5-af5f-235928dcd82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062daa8d-189c-4e10-8ba6-159343d8dfc5",
        "cursor": {
          "ref": "3020381f-c2d1-41cc-9308-2f1f43f8d4fb",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "62d3127b-b4e8-45cd-8d4f-50ff6e3888ec"
        },
        "item": {
          "id": "062daa8d-189c-4e10-8ba6-159343d8dfc5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dbd5cfab-ef7c-4289-9692-2ae7f82cc872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542afce1-3e84-466d-91ab-c9d2c51ea8ef",
        "cursor": {
          "ref": "90775b37-b252-41eb-b122-02b238cb8f02",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "58dda465-0c70-4985-b94b-86502520b570"
        },
        "item": {
          "id": "542afce1-3e84-466d-91ab-c9d2c51ea8ef",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ae923560-003e-4c67-9cec-9319b1e1a28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ab6f75-eb6b-4078-9e3b-dea71ef77654",
        "cursor": {
          "ref": "e6c68e20-cc8c-44fe-a555-73ea7a20f024",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2c7b9cc4-62b7-4ef9-a1d3-5a0af886288e"
        },
        "item": {
          "id": "f3ab6f75-eb6b-4078-9e3b-dea71ef77654",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "897d3a8d-7d1a-48e5-9c33-a88619c11475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c3fb09-ec2e-4d0a-9adb-2ea9388f0bdf",
        "cursor": {
          "ref": "7c41c85e-80d3-4061-b5b0-4f1148da7377",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6694a25e-7340-4462-ba6f-980e47c36c9b"
        },
        "item": {
          "id": "c9c3fb09-ec2e-4d0a-9adb-2ea9388f0bdf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8ff2c3a3-c857-4e71-a25f-e150aa1cfb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619a19a7-c16f-46dc-b9b5-6020f4e858d9",
        "cursor": {
          "ref": "f9eb187f-9029-410e-b1bc-b1bfa3173ca8",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "561a9076-3c9c-4afd-bcff-7ccbb0d2fec0"
        },
        "item": {
          "id": "619a19a7-c16f-46dc-b9b5-6020f4e858d9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "472266cb-3028-47c3-ba7f-8bd80f81917d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d898d0-1c6c-42b8-92b0-921428ff677b",
        "cursor": {
          "ref": "d1617813-2ea0-4594-8410-1306cd273e66",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5dffe695-2db5-4f66-bb1b-d7c9d9849a57"
        },
        "item": {
          "id": "c1d898d0-1c6c-42b8-92b0-921428ff677b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c2af22ea-4005-4545-bddc-009566a20d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ab4cf1-d093-4580-ab41-9d2c47628bf4",
        "cursor": {
          "ref": "6e0a121f-67fc-408b-98cb-a9d40f9cc4ba",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "194eaaf2-195c-4005-9416-5fe70c11df82"
        },
        "item": {
          "id": "97ab4cf1-d093-4580-ab41-9d2c47628bf4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ce9b458d-19f0-496d-9ede-97e5be0609fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41cee8f-e488-4464-bd96-2a69a94ba8e4",
        "cursor": {
          "ref": "87097d3d-b1d9-4e2f-8adb-8b6ce1b21fd3",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4c16f597-96f2-46bf-a459-5e591965fab1"
        },
        "item": {
          "id": "d41cee8f-e488-4464-bd96-2a69a94ba8e4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "371c81f6-c9f4-43b4-b509-7e5c30039cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6727f3d0-3c9e-4eb1-87ca-7668f993d845",
        "cursor": {
          "ref": "ae2a97a4-0f2f-445a-9579-882aa134700d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a7b62c82-ff8d-49d2-9b4e-a30d7517cc07"
        },
        "item": {
          "id": "6727f3d0-3c9e-4eb1-87ca-7668f993d845",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e5d4bd07-746a-46c2-a715-45da34236334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf669fd-6c66-4cd7-926e-3d77c23c9a45",
        "cursor": {
          "ref": "9cfab8d0-a6ed-4445-9b15-e991b50af62f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "22c1fe51-ff18-4541-b229-3104ac62d8ec"
        },
        "item": {
          "id": "7bf669fd-6c66-4cd7-926e-3d77c23c9a45",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "71994382-c82f-4b63-9566-60d4240a041d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de811cd-884b-4956-b089-3ac77dfd285d",
        "cursor": {
          "ref": "504c3791-82e3-41a1-a6af-9298b382457e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f3860f1c-0b98-4f10-996b-8f73e667a726"
        },
        "item": {
          "id": "3de811cd-884b-4956-b089-3ac77dfd285d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e43f46dd-c83b-4a16-a80e-29f4e52cbe1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2c8e15-f547-4e39-ad6f-90bbbf27cc03",
        "cursor": {
          "ref": "f9f2d7d2-e11a-409d-9e74-4a5cb8d2c8f5",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a441db1e-7700-41e2-a32c-1a7bd330890e"
        },
        "item": {
          "id": "2f2c8e15-f547-4e39-ad6f-90bbbf27cc03",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ba2be6ad-1537-45f0-a96f-a4c5c7ba29f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fc389f-0d82-445b-9069-da7ebdecc57b",
        "cursor": {
          "ref": "315878f4-9328-4604-8707-1bfa55c51d83",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "be79a125-42da-4c6a-8fce-4c64e9b066d7"
        },
        "item": {
          "id": "05fc389f-0d82-445b-9069-da7ebdecc57b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ea83d38f-460c-432a-b65d-4de2f31e7494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb71f15a-8787-4345-9857-2352f496be70",
        "cursor": {
          "ref": "bf83c9ec-980d-4600-a847-22803a017c21",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3ecf6b3d-2664-4400-a8fc-2e930fbf9188"
        },
        "item": {
          "id": "eb71f15a-8787-4345-9857-2352f496be70",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9d3f324b-28c1-4108-981b-9bb725188ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40415466-5bb7-42a6-9cfc-d1f52323a2d7",
        "cursor": {
          "ref": "7af623f5-5c1f-4d69-a2c9-55948cf2bc08",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2328f1ea-dad3-4099-9643-5784916d4562"
        },
        "item": {
          "id": "40415466-5bb7-42a6-9cfc-d1f52323a2d7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ee2d55f9-5ec0-4eb9-9acd-d87ec3578e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad61d63-3c92-4e90-8b75-33e84f4f4687",
        "cursor": {
          "ref": "f7e807c8-38e5-410a-9db1-56b49c3acf53",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "61172792-6f42-48e4-bcb6-841602de978c"
        },
        "item": {
          "id": "3ad61d63-3c92-4e90-8b75-33e84f4f4687",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3179c5cb-67bd-4042-b5a7-cf7808e0e68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae411838-3c2f-4a84-81a5-b684e7de3819",
        "cursor": {
          "ref": "981041cb-156d-479d-ba32-ec5140fb34e9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "856da2dd-8fd8-4a08-af9a-cfa6ff22ab7b"
        },
        "item": {
          "id": "ae411838-3c2f-4a84-81a5-b684e7de3819",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "58c7a6e5-329f-4938-90a2-aa9ece9d5374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a2a824-1388-4d51-b21d-c005c8d34d81",
        "cursor": {
          "ref": "b9dd24bd-b46a-4c09-8458-c440f2b634f6",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "65ef3a38-c19c-474a-bd27-2b407e9cdee5"
        },
        "item": {
          "id": "28a2a824-1388-4d51-b21d-c005c8d34d81",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "441a3418-811f-4007-8b81-af7c1f7c55d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a191159-0dbd-4fca-9407-cddb171f66a7",
        "cursor": {
          "ref": "753dac02-7a6d-449e-93b0-f8d7620b80e7",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5bbcb13c-5afe-4672-a547-d49e20edacae"
        },
        "item": {
          "id": "0a191159-0dbd-4fca-9407-cddb171f66a7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2fbaae24-7535-475d-8be5-c01d5ea83192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfee3a0-31b9-438d-be2b-42af0f95112f",
        "cursor": {
          "ref": "c1bfd172-9245-451b-b3a7-aac731112d34",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9d56a392-d987-4381-bb20-b7bbedb5d226"
        },
        "item": {
          "id": "6bfee3a0-31b9-438d-be2b-42af0f95112f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "aa7719e7-c116-4232-9396-c7e6b44c5292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca880ae-90ca-4d62-9dd5-b846affb0dce",
        "cursor": {
          "ref": "2ef06bfc-272e-4b6c-a23f-87fe26e2233d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e9b4ef2b-f8ca-426c-86dd-6c1a36d5c7ab"
        },
        "item": {
          "id": "aca880ae-90ca-4d62-9dd5-b846affb0dce",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "21d5bf6d-0e5e-42a3-88e7-a58373822547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485c9855-a28a-48d2-b48b-9b123506274f",
        "cursor": {
          "ref": "962d699e-8cc8-454c-997f-8d3ba55e137f",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "242ffc2e-8e61-4c13-91b5-74a9243a5675"
        },
        "item": {
          "id": "485c9855-a28a-48d2-b48b-9b123506274f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "27c83a29-64a1-4232-ae2c-f96478a1dfd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3394ea07-5958-47b7-81ae-02b47ddaa9d4",
        "cursor": {
          "ref": "3ff69056-4bdd-42f2-b8b8-63193e24a5ca",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1c8eded9-7896-4b42-b127-272f7c366505"
        },
        "item": {
          "id": "3394ea07-5958-47b7-81ae-02b47ddaa9d4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "840e8183-88b4-4e65-b1b2-4100638f220d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cdf448-a530-40d6-a2a2-0e5be2a2b21f",
        "cursor": {
          "ref": "4cb92638-cbd3-490d-8a6f-95ad861f2857",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dc7e5ca0-7b9a-44e1-8811-d71590b1ca33"
        },
        "item": {
          "id": "82cdf448-a530-40d6-a2a2-0e5be2a2b21f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a33d0e7d-88d3-413b-bf18-093e094cca43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcbabe9-337b-4ab7-be8b-133ed670a73a",
        "cursor": {
          "ref": "a0e4f0d7-9099-4e8f-ab54-fa5c96c8f981",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cb4cf860-d92b-420c-8342-4d182c61046d"
        },
        "item": {
          "id": "afcbabe9-337b-4ab7-be8b-133ed670a73a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0b225e67-0ee8-4c38-aad3-d9db6c74ff0c",
          "status": "Created",
          "code": 201,
          "responseTime": 110,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1b3ef0-03fd-4399-af4a-ecdea5d7e6ec",
        "cursor": {
          "ref": "d6d54749-045d-4ca0-a33e-c0ed070dd3bd",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d5b9e2df-d1c7-4da7-9554-e229b93ce647"
        },
        "item": {
          "id": "fe1b3ef0-03fd-4399-af4a-ecdea5d7e6ec",
          "name": "credentials_issue"
        },
        "response": {
          "id": "47a4b4a3-980a-4b51-ba1f-3afb6c3102ab",
          "status": "Created",
          "code": 201,
          "responseTime": 240,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e445c35-dcc5-4053-bb2e-1a138faa5869",
        "cursor": {
          "ref": "189c4db8-6cc5-4938-9b27-af6a18340e84",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "93143b1d-a9f8-4f78-91a9-88d8d49614ed"
        },
        "item": {
          "id": "6e445c35-dcc5-4053-bb2e-1a138faa5869",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "79ae82b4-052a-4e50-bf9d-370200592fba",
          "status": "Created",
          "code": 201,
          "responseTime": 165,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "be926ac5-0b03-4ce5-be17-6693895c44fd",
        "cursor": {
          "ref": "448c5eb4-eae2-463d-8a34-e2cd721118e9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2c4741c8-c422-4e50-9231-100823789e1f"
        },
        "item": {
          "id": "be926ac5-0b03-4ce5-be17-6693895c44fd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6b3718a9-1a35-4e59-ab1f-94e28eea4324",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e85a2e-2ef0-4a97-ae33-cc6f9a47e0e7",
        "cursor": {
          "ref": "0cf87bea-fc2d-47a7-a019-c9e0997e378e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "eb277b35-1980-47fb-b2c6-614adc2eb037"
        },
        "item": {
          "id": "c7e85a2e-2ef0-4a97-ae33-cc6f9a47e0e7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "480e1130-9b0b-4460-905c-7e413c575b4e",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3f74e9-8926-45e6-9e57-58d7e5e3d225",
        "cursor": {
          "ref": "87aad1cc-80bf-4e8b-aa5c-b66febc9cdc2",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7e8a513a-2d54-42dc-96b4-86920a819035"
        },
        "item": {
          "id": "4a3f74e9-8926-45e6-9e57-58d7e5e3d225",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "65246301-0ce5-4745-8388-9750b595572e",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d35248-c915-40f9-b6cf-b78c3ba745f9",
        "cursor": {
          "ref": "be38c49c-a8e0-4394-ba4e-eb5bfcfa6c31",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "abe5d4f1-b876-460c-bbda-6f23b46816d4"
        },
        "item": {
          "id": "d9d35248-c915-40f9-b6cf-b78c3ba745f9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b8b8b2ee-e3ec-4334-a745-78e363ed0716",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e9aec8-5fe6-4823-a4e5-da95482749a4",
        "cursor": {
          "ref": "fe22496c-32d1-4c72-9923-1028d6e40e47",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "48b13058-e9ef-4be2-81f6-54c6a3abc1f6"
        },
        "item": {
          "id": "d0e9aec8-5fe6-4823-a4e5-da95482749a4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "078978fa-f472-484b-b980-821098fef56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f10045-ed8b-4614-89f3-8e90c231f5bd",
        "cursor": {
          "ref": "e20800ff-f63f-4111-9216-160e1a983fb3",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "591bb340-7a2a-4f9b-910e-78dbe20ae133"
        },
        "item": {
          "id": "61f10045-ed8b-4614-89f3-8e90c231f5bd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0fc08398-b20d-48fc-8014-1acda195a012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17eaa330-4e9a-4d95-b113-916798144c0f",
        "cursor": {
          "ref": "53a44a84-7513-4e0a-872a-2b0a5926df60",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c83f8a93-2d6d-4928-baf6-dcf6a4466aca"
        },
        "item": {
          "id": "17eaa330-4e9a-4d95-b113-916798144c0f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "98c7d4ca-8e3e-46aa-a1f0-013723b7f03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697c0f11-71cb-41e3-bb93-92f7b82bf25a",
        "cursor": {
          "ref": "571e8c6b-ab08-4333-b243-9e49a28e95ba",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "08a1ce7c-735d-45b9-b0ba-251782151809"
        },
        "item": {
          "id": "697c0f11-71cb-41e3-bb93-92f7b82bf25a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1e7d6a9a-dba2-4ed9-8e3a-ddf77f2284f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ab51e7-da5c-45fc-a9f5-9bc2f84fa829",
        "cursor": {
          "ref": "5994c7da-3725-4416-a9cd-8e7847a790b8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1ea0c791-0e96-4b1b-adf7-776c2f0a00b5"
        },
        "item": {
          "id": "70ab51e7-da5c-45fc-a9f5-9bc2f84fa829",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "99de93ce-7cdb-4d36-bde5-befc806d6141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6273ee4-08b2-4847-abcf-25faeb330ae5",
        "cursor": {
          "ref": "36ad2bf8-58d6-4c92-b114-d91197e33a48",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "38e7ad9b-f331-48ad-8dd9-c5a233e34bb0"
        },
        "item": {
          "id": "a6273ee4-08b2-4847-abcf-25faeb330ae5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b36045a0-0bc9-45af-845f-c3c9de728197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1956aa87-824d-4cd9-8923-909506e970ee",
        "cursor": {
          "ref": "61befd51-d754-48e6-af3a-6283c200278a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6157a0a6-d80d-4618-bde1-be6ddf017b98"
        },
        "item": {
          "id": "1956aa87-824d-4cd9-8923-909506e970ee",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b71f0270-b9a9-42f5-98fc-81f77c4d409e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8145eb7-c9ec-44f5-a9d5-74a077883783",
        "cursor": {
          "ref": "48fa2a5a-9cc5-4daa-a0bf-bd6b651bdf9c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bd5a87a2-cd5b-489a-ab4e-93726a744838"
        },
        "item": {
          "id": "d8145eb7-c9ec-44f5-a9d5-74a077883783",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "349d2742-5900-42bc-ad1e-7506f2645689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f782ecc-4f00-4ca5-be95-cdc0e74dd01a",
        "cursor": {
          "ref": "2339d55f-cbf3-495b-a3ff-c28e29d04da6",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f98e491f-c0f9-4bc0-bd01-bafc4e465cea"
        },
        "item": {
          "id": "6f782ecc-4f00-4ca5-be95-cdc0e74dd01a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "da1a6c84-544d-4c0f-9721-7977fdb007bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9e5bfd-4698-448d-98d6-a15721750b17",
        "cursor": {
          "ref": "d6761a82-deb6-4c35-be0b-6b1c4ebf9d36",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "62b15bd5-0071-49f9-a4aa-dad80408bf6c"
        },
        "item": {
          "id": "1f9e5bfd-4698-448d-98d6-a15721750b17",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1a30cd72-cf13-44ba-9759-758c22ad2120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2875e8ee-e0fd-4642-bee9-a8b940a5ac80",
        "cursor": {
          "ref": "ff86de1c-5aea-4039-9ed3-a06cabeba1fc",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "87b4b989-03f0-42d7-a030-ba4bdf9ca766"
        },
        "item": {
          "id": "2875e8ee-e0fd-4642-bee9-a8b940a5ac80",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9055e9bf-5475-4d7b-bfb6-719d2a84ff70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea92aff6-2ca1-4880-ad57-e3c4f6ba946d",
        "cursor": {
          "ref": "82476332-7c89-4368-b06f-c2c93740119b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c68b49f8-79b3-489b-a407-e87e6cbbda05"
        },
        "item": {
          "id": "ea92aff6-2ca1-4880-ad57-e3c4f6ba946d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "42242b5f-7f90-4a5c-9335-39687e0d7536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b252ac73-ebde-4baf-aa83-682cce448a6b",
        "cursor": {
          "ref": "7d1a0ffc-2702-4769-94db-cb10bdab55ba",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b9cff6c7-823e-464b-96d8-e2662c2a176b"
        },
        "item": {
          "id": "b252ac73-ebde-4baf-aa83-682cce448a6b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f4b708d4-e7ef-41a5-a3f0-df895f43fde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464c4b5d-0cd6-45e5-a439-842f1c95330d",
        "cursor": {
          "ref": "7d114a17-aea0-46fd-b2b9-d264ff5c1d0c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "351a8fd5-9baa-4234-af42-5a233dbf34d8"
        },
        "item": {
          "id": "464c4b5d-0cd6-45e5-a439-842f1c95330d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "86902648-11a5-41b6-9ad0-3d6bcd261cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef01cd25-5095-4a22-a5f3-2aa9c4f25c85",
        "cursor": {
          "ref": "b1aeb6e9-827c-4e5d-9d61-0fc5ab51d707",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "51d192b4-5c72-41e8-a8af-bbe9fc264274"
        },
        "item": {
          "id": "ef01cd25-5095-4a22-a5f3-2aa9c4f25c85",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e24b06e9-799a-438d-9bfe-8fc2cefff2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0976f2-724a-4177-8ac7-2744ea3a374c",
        "cursor": {
          "ref": "3e70faa1-ab37-494b-bab3-ac868b6354cf",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e6371152-b602-4cfc-8bcc-e9dc6bf0d520"
        },
        "item": {
          "id": "2e0976f2-724a-4177-8ac7-2744ea3a374c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "60400c16-9fad-4ed0-8c4c-adfdf7ca04b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890493a3-33cf-41cc-8c89-ac1d3033324a",
        "cursor": {
          "ref": "85aa12b5-0017-4a07-a4e5-eac0c2e7c419",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "363aa0dd-2350-4a50-bdf7-93e70c52ac77"
        },
        "item": {
          "id": "890493a3-33cf-41cc-8c89-ac1d3033324a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e4b5abdd-f07b-4433-9dd5-df909ada4e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00da573-ee6a-4162-9094-f295ad1bafec",
        "cursor": {
          "ref": "eeb6a953-81ab-406b-86bc-3ae73d2a4af1",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "37844d10-5afb-40d3-8f7a-bd1f42ae50a1"
        },
        "item": {
          "id": "e00da573-ee6a-4162-9094-f295ad1bafec",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "27110d47-be1e-4f0a-973e-b0c6ef928331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa44e5d-2d16-4741-af1c-e0b3425ef1bc",
        "cursor": {
          "ref": "95759bec-6f46-4308-8f81-09120c6f86b0",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a56c5d77-adf0-45fe-a0ce-f4922acf0beb"
        },
        "item": {
          "id": "2fa44e5d-2d16-4741-af1c-e0b3425ef1bc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3e05b52d-876d-448a-8c79-287b03264c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9598b88b-8780-4a28-baac-b0ebbf5e8085",
        "cursor": {
          "ref": "b16a2a48-f626-41f0-9732-039cd643758a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d181320b-57df-44d1-ae59-1836b8c1e2a9"
        },
        "item": {
          "id": "9598b88b-8780-4a28-baac-b0ebbf5e8085",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "02ab5307-1b01-4fdb-9a07-bd2b24a56f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdd77a0-e257-4be2-9716-a7c0ca0df39e",
        "cursor": {
          "ref": "37e7a505-5ac3-44e8-baa1-150966790ff8",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "35a508ed-5087-4d0f-982a-0a4afa04f78b"
        },
        "item": {
          "id": "fcdd77a0-e257-4be2-9716-a7c0ca0df39e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "99283daf-99b2-40ae-86a5-58f6caf7795e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34af8938-c18f-4545-b292-da0015908976",
        "cursor": {
          "ref": "ccdfbe9c-2071-4566-a067-d5a5f38881f4",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cf9bda1b-62ca-47b7-a7f5-e2677f623180"
        },
        "item": {
          "id": "34af8938-c18f-4545-b292-da0015908976",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7da81cf2-810e-4dcb-a9f0-9cd93c4bcc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87595a09-fb2d-41ee-b27c-594b1bc67570",
        "cursor": {
          "ref": "6d92160f-e349-41d1-9e33-745948de7aa8",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "397cc9f9-cb35-4263-aa69-85fab91bfec5"
        },
        "item": {
          "id": "87595a09-fb2d-41ee-b27c-594b1bc67570",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "205a71e4-a2e2-48fa-87d3-1a51dc55a199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e81674-b633-42d8-ab0a-4f1219fa27cd",
        "cursor": {
          "ref": "bb656872-a6c9-41a2-911b-38341f2a7fec",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "99702e4a-aab9-45e1-89a0-2746ff47ee16"
        },
        "item": {
          "id": "b2e81674-b633-42d8-ab0a-4f1219fa27cd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "79ec1abb-d4e9-46ff-9262-398fde336093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bc8465-c8fd-4270-8dfc-ec938d8aaaf0",
        "cursor": {
          "ref": "6b857068-36fb-4a05-a56d-a95d54e70619",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ad0ad9e5-9701-42ab-b2e0-a86558aac286"
        },
        "item": {
          "id": "28bc8465-c8fd-4270-8dfc-ec938d8aaaf0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cb7cbbf6-c265-4f62-8e0c-a8db66550871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2eabe09-9c3d-4c67-9843-5d89ebc4eff0",
        "cursor": {
          "ref": "b78584d0-aedf-43f3-955d-e1ce52404e1d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9429dd61-8fb9-480f-be98-72b08c285d38"
        },
        "item": {
          "id": "f2eabe09-9c3d-4c67-9843-5d89ebc4eff0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b813b739-0e19-4f3d-bd34-30cf4ac8ef4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e55f0b-d4b4-486d-ac7b-5103cd7d20db",
        "cursor": {
          "ref": "0f0ffedd-aa74-46ab-ac50-5bf860191205",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "41c8bfa2-174c-4437-8aa9-7ec2e86da476"
        },
        "item": {
          "id": "46e55f0b-d4b4-486d-ac7b-5103cd7d20db",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a35b2ad6-694e-47fa-95f2-bb0518aa38d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e255ea9-33ab-4a14-8b29-160aab5cbd5d",
        "cursor": {
          "ref": "825602d5-1556-46ae-95d1-6bc7a6681705",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fa39ea2c-2b6d-4473-a5a4-e709904523e8"
        },
        "item": {
          "id": "7e255ea9-33ab-4a14-8b29-160aab5cbd5d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dda83aad-71c4-41f9-8726-ed4606444080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4170ac47-617a-4604-ae18-5e4302dc5f3c",
        "cursor": {
          "ref": "cb17a04e-b176-47a7-b7dd-15b65e2153b0",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "519af6fb-c3ec-4575-a36e-d41ac4d88147"
        },
        "item": {
          "id": "4170ac47-617a-4604-ae18-5e4302dc5f3c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aeee39f4-a3da-4e98-82fe-24f4b8c5e534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038c70a0-edbd-4da1-90f7-6c1753a67335",
        "cursor": {
          "ref": "c2735958-89be-4858-8b3c-1d55398f1090",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "60f20eea-fc82-4d79-8c19-6096f3b9e7c4"
        },
        "item": {
          "id": "038c70a0-edbd-4da1-90f7-6c1753a67335",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9200c6f3-bf23-496c-ab51-399b5a97790a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a263ab97-ab84-4c48-b928-c9e1ad90914f",
        "cursor": {
          "ref": "666d8d37-6de9-44b6-9dd1-254d9ccf8f1e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6305c821-d2da-4676-9957-016feec2afe6"
        },
        "item": {
          "id": "a263ab97-ab84-4c48-b928-c9e1ad90914f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8d7e9260-2867-4b12-8a27-e46f431ef6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92aa530c-fc1b-4af7-9c73-009b2b0a070d",
        "cursor": {
          "ref": "dd2ec43b-3a41-41b5-a995-79a91db54675",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "955c8906-3cae-4493-8637-afb86f200baf"
        },
        "item": {
          "id": "92aa530c-fc1b-4af7-9c73-009b2b0a070d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b9acf98c-0722-466e-ad22-3ffea19215c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f859aea-dfbb-43b7-86cb-87a69b83cd25",
        "cursor": {
          "ref": "4e9870d5-00f3-4645-a7c2-8bd3d0208675",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c8d96677-bcd4-4f9b-8ba4-48b33c1f5166"
        },
        "item": {
          "id": "3f859aea-dfbb-43b7-86cb-87a69b83cd25",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2c052e88-112a-4bf1-ade9-55a845887c2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c52d591-d5f2-488b-8dfe-29ccf7899cf3",
        "cursor": {
          "ref": "666fa161-ac80-4e99-9bb3-996b1dd26be1",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "477b09aa-18cf-4694-b20b-8aa9a7d15356"
        },
        "item": {
          "id": "3c52d591-d5f2-488b-8dfe-29ccf7899cf3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2370a061-0892-4a3c-b281-e0303ef1d329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b62adc-3b12-4a0f-8f3f-18877263874a",
        "cursor": {
          "ref": "23ed1558-1972-4de4-8dce-15f15fe4555b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "20723bb9-b430-465d-b3cb-ffc8bd93bf84"
        },
        "item": {
          "id": "15b62adc-3b12-4a0f-8f3f-18877263874a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0cf7454c-1b9d-497f-8368-5eff11e77f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7aaab58-f2eb-4afa-b0eb-7ff364ead1c7",
        "cursor": {
          "ref": "7a9764f9-0798-4ab9-8b5f-0d49ea9ea3fe",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "632e15c2-83b8-4de2-b62e-ba10ee698d8a"
        },
        "item": {
          "id": "f7aaab58-f2eb-4afa-b0eb-7ff364ead1c7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "705ca3d5-caa1-4c81-90b0-485fadfddf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255d3adb-6186-420e-9bf2-37b9d712eb09",
        "cursor": {
          "ref": "ea8d654f-633b-4d8a-8aaa-8e4fc4a54b4d",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f6e088c4-5af3-4118-99fd-2f6e4e9f571d"
        },
        "item": {
          "id": "255d3adb-6186-420e-9bf2-37b9d712eb09",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3b9374ed-f16d-45ef-9511-9b34c8753982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caff7ab5-fcf2-4845-a512-cc472c7d31b6",
        "cursor": {
          "ref": "f6cf319a-8ed0-40cd-89dd-673886fa1c67",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9385e69a-a5bb-4823-a218-c07e4f7926fd"
        },
        "item": {
          "id": "caff7ab5-fcf2-4845-a512-cc472c7d31b6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aa3cf947-0dc5-442b-97fd-6a9cb7d2ded9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e01301-e307-4f72-a9eb-0f20c15e9dfa",
        "cursor": {
          "ref": "53166ac4-45d2-43c8-9cae-bf90415d7230",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e6f10414-406a-4caa-b76d-e600ca62493a"
        },
        "item": {
          "id": "93e01301-e307-4f72-a9eb-0f20c15e9dfa",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a2cb5ac9-aacf-49fa-befd-e405a331ba3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32472f54-ff28-48f5-9608-eb33e9353daf",
        "cursor": {
          "ref": "4e8737a5-edd4-4bf6-837f-96acf3af31db",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0e0b5753-2f43-4250-8361-ab85a370191d"
        },
        "item": {
          "id": "32472f54-ff28-48f5-9608-eb33e9353daf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b02bc4f6-32a3-46f9-8a66-d705d435d276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec06ea82-1ee7-49be-afc2-b4a3606bb793",
        "cursor": {
          "ref": "61c79171-4d35-4410-a4ef-1fc951125f47",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "621f8f6d-0edc-4798-aa70-fc07b5ee0fcf"
        },
        "item": {
          "id": "ec06ea82-1ee7-49be-afc2-b4a3606bb793",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6049add0-55be-4837-a6a0-46cda317579a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786de219-01c4-4cde-87a2-cdeafd9b8966",
        "cursor": {
          "ref": "60cdc7fd-1137-480f-95d6-e0b4e8637838",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3e3645b8-b514-4c0c-b1f4-4f37dd9e0c43"
        },
        "item": {
          "id": "786de219-01c4-4cde-87a2-cdeafd9b8966",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f79d689e-4a73-4fe8-92ab-010c0a400518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1402686-7c05-4503-b77e-bac4ea79a5e7",
        "cursor": {
          "ref": "b3dc286a-a30e-4483-81d6-1a2116246f6f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f3a4a947-3256-42d3-a0b1-a95aae749324"
        },
        "item": {
          "id": "f1402686-7c05-4503-b77e-bac4ea79a5e7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e509ece4-9bec-417d-a2f4-71870aeffef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9c5350-f3fd-4f9a-87b4-6cd6f91212b6",
        "cursor": {
          "ref": "f2290d46-e277-4ca1-be54-6e3be0ca68bc",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0566d6ea-93cf-4d2a-b8d1-d9bc4b5c5841"
        },
        "item": {
          "id": "ba9c5350-f3fd-4f9a-87b4-6cd6f91212b6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5bb1e2a6-53be-4a38-8c93-99a1dc02488b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edaa21b-0073-4898-9ebb-3de3d20e84a9",
        "cursor": {
          "ref": "f3716f14-9afd-4ace-9347-a480fdf0db89",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "71ab4552-0ee9-4c42-af6b-d32eb7dab7f8"
        },
        "item": {
          "id": "2edaa21b-0073-4898-9ebb-3de3d20e84a9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "94584b7e-f781-42f9-80ae-190c48141c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ff134c-e03c-4cd9-92fe-9d4b899e0bad",
        "cursor": {
          "ref": "01c70017-7a24-4173-a582-619263f26d86",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "06395485-fea4-484e-8c7e-1f56d0a8ec89"
        },
        "item": {
          "id": "f8ff134c-e03c-4cd9-92fe-9d4b899e0bad",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eb0d8bee-5760-4cce-9797-155a0adde8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f43cd25-38ba-48be-97fe-833e72f89e70",
        "cursor": {
          "ref": "c2b21837-930f-4f19-b767-1fc0f25e87fc",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "af593df3-f6c5-452a-bf1d-de9f8237750c"
        },
        "item": {
          "id": "1f43cd25-38ba-48be-97fe-833e72f89e70",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "71a9afc1-29c4-485d-be15-a3485ba0e662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe77914-e19d-42bd-864a-687641782cc0",
        "cursor": {
          "ref": "8fb42b39-c483-4f7c-b335-6df531440957",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "30d6ea6c-ad04-49bb-83ca-70944b9a2e8f"
        },
        "item": {
          "id": "2fe77914-e19d-42bd-864a-687641782cc0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f1c24188-5303-4283-99cd-496fe84f88cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ebf5a5-b01b-4a1a-b3d7-fc64faad86c4",
        "cursor": {
          "ref": "db3ffcbd-b62c-4ea5-92cb-c96b28b3609b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d601ec8a-05bf-4942-a775-928e9d58a14d"
        },
        "item": {
          "id": "95ebf5a5-b01b-4a1a-b3d7-fc64faad86c4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "469a9cb6-c6f0-4b15-bf4a-816039b59039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3606d3-0e85-4bd4-8f4f-4e12b1248383",
        "cursor": {
          "ref": "bc8d39f9-ea90-44d7-8fc2-b1b71f876533",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8b5c5ce2-4370-47fe-bc21-31c916829347"
        },
        "item": {
          "id": "7c3606d3-0e85-4bd4-8f4f-4e12b1248383",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "88adb26a-056d-45ed-a64f-fbccb067eabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065b4cb1-ef9f-4a02-bd79-c7cdd31028aa",
        "cursor": {
          "ref": "2a8ee783-8a46-4c76-9fcd-efa5cde8c6b8",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ce6fb2df-f1cf-423c-b5e2-1ba69f1bd866"
        },
        "item": {
          "id": "065b4cb1-ef9f-4a02-bd79-c7cdd31028aa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "07432b47-9a70-4bf1-8e60-2c1c72f784d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1c920a-b395-4f3b-b6af-8d8a5409fa63",
        "cursor": {
          "ref": "b26bcbec-c554-4863-955a-dd2c29b382f4",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "97b09f8c-d529-4f12-aeb6-e6f7ca7642a4"
        },
        "item": {
          "id": "6a1c920a-b395-4f3b-b6af-8d8a5409fa63",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "07371317-14af-40fd-9137-94035f74f339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5afdba-db55-4a1a-86d3-47041ca03641",
        "cursor": {
          "ref": "500fa47d-13b7-4dfc-b241-37bb0624b7ad",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3a6c9ec7-ac15-46e4-b087-0aedddc44ac4"
        },
        "item": {
          "id": "ab5afdba-db55-4a1a-86d3-47041ca03641",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e61b3e1f-12df-461c-849d-5fb567c1a06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e24316-7d23-471c-b4db-3c11a4d73c7b",
        "cursor": {
          "ref": "45dd8f8e-f7e5-45ee-8922-6ecf249749e8",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "da42ce7c-60de-4839-9fbe-b8a2b721cca6"
        },
        "item": {
          "id": "f2e24316-7d23-471c-b4db-3c11a4d73c7b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "883cf708-e43b-4a82-8ef4-2ad2c4f85bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cce4968-6c86-4784-bd13-1f4415ddf27a",
        "cursor": {
          "ref": "bc4e3549-4fbe-4a10-aede-2ad5084ffc23",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0e8aa914-efd7-478c-91d4-42f64cbdfce5"
        },
        "item": {
          "id": "0cce4968-6c86-4784-bd13-1f4415ddf27a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2cbefa74-059f-406d-b3b7-b009266bb5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b169d521-e14b-4fc1-a4c5-4b3cad7aacdd",
        "cursor": {
          "ref": "94ae88e7-8da1-462b-a573-ba5da154c309",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fd4809c2-0fae-4c7f-b26f-90590f5b0c8c"
        },
        "item": {
          "id": "b169d521-e14b-4fc1-a4c5-4b3cad7aacdd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d0660d8f-1cfc-43aa-996f-3cae0d52db55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f05a321-d9d1-452c-ac57-22381b2dc48b",
        "cursor": {
          "ref": "9297138a-436a-4898-8799-6f794f86a58d",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ef64593c-8a97-4a99-9454-e92ccca2d1a4"
        },
        "item": {
          "id": "9f05a321-d9d1-452c-ac57-22381b2dc48b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6567868a-671c-43f8-8a48-182f1f880c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac557a9-6ec5-43e9-813f-c8e4606078ae",
        "cursor": {
          "ref": "a9485887-4c2e-4415-a289-6e8de967d4cc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "162a66da-2e14-4952-8013-441c433fe036"
        },
        "item": {
          "id": "dac557a9-6ec5-43e9-813f-c8e4606078ae",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5db1a762-b6d1-48f3-8138-1b9057493bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3198f4a6-edaa-4d2c-aad2-8d4a8fad6e70",
        "cursor": {
          "ref": "792043d8-08c1-49c6-9226-d0fb9a201d73",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d6c3632e-d199-42aa-9212-41c65c3815f2"
        },
        "item": {
          "id": "3198f4a6-edaa-4d2c-aad2-8d4a8fad6e70",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "472e38bf-1f52-4f99-8458-4fb96220febf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a408a1d0-4ab6-4a50-b6e8-dffe69da3367",
        "cursor": {
          "ref": "dfa4a0e5-25cc-48e2-b887-990bb4c60b24",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ea7b7087-cd87-456c-9881-3b002f154053"
        },
        "item": {
          "id": "a408a1d0-4ab6-4a50-b6e8-dffe69da3367",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "68a9b55b-3649-4da1-b1d6-a2221d0e87db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6288e33-4931-4062-8221-2b42e96f61fc",
        "cursor": {
          "ref": "667b22be-387e-4435-8c69-9376898c9fba",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c53f9593-18be-4b3b-8f55-0f70de48b673"
        },
        "item": {
          "id": "d6288e33-4931-4062-8221-2b42e96f61fc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "14f4fbbf-1339-4383-add6-67abb4c3cbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1874ded-84d3-455e-8b49-f240993c0fe2",
        "cursor": {
          "ref": "cd5e9d5d-c5ca-451e-8977-efa60abac32d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "05b3c08d-afec-4746-93ea-e7b2c1090c5b"
        },
        "item": {
          "id": "c1874ded-84d3-455e-8b49-f240993c0fe2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3d614843-db4d-477f-90cb-ed408d6f5c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9cdb93-acd4-46b9-94dd-eef2b4d391e6",
        "cursor": {
          "ref": "c4e03ddd-fd74-4803-afed-a251a401b147",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "30350f94-12c2-4ecf-9856-1f4e8cee073a"
        },
        "item": {
          "id": "bb9cdb93-acd4-46b9-94dd-eef2b4d391e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "87b7f58e-1853-410b-8f15-cf2444af4355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446e499e-f4df-4527-9763-19a122c66023",
        "cursor": {
          "ref": "4d6d45bb-c373-4d8d-bb9d-5141f7cf62f3",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e228e728-38f8-415e-a9f7-189763caa3ed"
        },
        "item": {
          "id": "446e499e-f4df-4527-9763-19a122c66023",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9d6fba92-9eed-433c-8e94-3bc54b89c409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6569cae2-6c86-4e8a-8901-87b32fabfc86",
        "cursor": {
          "ref": "22be9180-9808-4e0a-a054-ca7712b707d3",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ae81f066-79d3-4c8c-b022-55917a3dbc28"
        },
        "item": {
          "id": "6569cae2-6c86-4e8a-8901-87b32fabfc86",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5103d090-4be3-4b9c-a900-bcffd0face75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1e4ffe-f964-423e-bd74-a0bad48c62ac",
        "cursor": {
          "ref": "c33b9136-a9b2-4b41-a96f-deea5749017b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9ce37f75-060b-4355-8a7f-da6f358b3b19"
        },
        "item": {
          "id": "cb1e4ffe-f964-423e-bd74-a0bad48c62ac",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "51ee8704-0c96-4809-8750-2490c9d3b808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eed0711-311c-4211-b229-ec37025c0d38",
        "cursor": {
          "ref": "aad20dee-1faa-4343-8cc1-4d3248316756",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d251f416-5cca-4352-8f32-260f1f97933d"
        },
        "item": {
          "id": "4eed0711-311c-4211-b229-ec37025c0d38",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "532e8db8-ed97-49f3-8965-29903f05454d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c344942-dc7b-41da-96dc-d926a1009719",
        "cursor": {
          "ref": "4495d38c-d00f-46b8-b83f-d5aefa79c04f",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "84f8bdbc-4822-47dd-a23c-e406ab508820"
        },
        "item": {
          "id": "9c344942-dc7b-41da-96dc-d926a1009719",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2ef2a2ee-f819-4d51-8683-82b6fec2a00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30639029-7d58-4e47-b759-f8b6f817cd16",
        "cursor": {
          "ref": "6e2731a2-fc58-4fca-a669-e1ed96e7112a",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e0556bf2-61e3-483a-a08f-ff286181b700"
        },
        "item": {
          "id": "30639029-7d58-4e47-b759-f8b6f817cd16",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "108afea0-01d4-42ba-bdf4-f4cb5efce0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d555babb-a1fa-492a-94b9-2aeea5c1e810",
        "cursor": {
          "ref": "f78b5ef3-8ced-4343-9e96-10556e3e4e8a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "927151dc-fa02-403e-9f98-ae896179c707"
        },
        "item": {
          "id": "d555babb-a1fa-492a-94b9-2aeea5c1e810",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c98e5d6c-45a7-43d7-b02d-4ce6ae66e512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1420d3a0-09ec-4df1-8e39-93f34b3c6fde",
        "cursor": {
          "ref": "50784d74-851e-4714-99ae-dac270a601d8",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "645bf968-ebc7-4c04-8c34-3c40bea6787d"
        },
        "item": {
          "id": "1420d3a0-09ec-4df1-8e39-93f34b3c6fde",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3c24b2a3-c035-4b29-8021-37bc543c580f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bd18c0-c59e-4155-9838-c6924096afec",
        "cursor": {
          "ref": "9fa3496e-7ac1-4a89-b00b-ad7976280f7f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "868beef3-2076-44be-8254-a13f49e599b7"
        },
        "item": {
          "id": "34bd18c0-c59e-4155-9838-c6924096afec",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f2e8533a-5ff7-4906-b330-b7706aa0c981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb485bd-a47e-4db8-85e4-19e1d61e38df",
        "cursor": {
          "ref": "beb229aa-c2ab-4345-94df-1c5dd7cf9ba7",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d95b841d-06e5-4376-bb11-3cdfac941136"
        },
        "item": {
          "id": "dbb485bd-a47e-4db8-85e4-19e1d61e38df",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dc7d099a-11a4-4f32-88b7-8eee47a8d1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093ed98d-fdb5-4306-a72c-cfce0498d83e",
        "cursor": {
          "ref": "90a54b1a-f3ff-4f10-969f-3e37d564f4d5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d7d68cf5-35df-4efd-9538-5edf6cb268b6"
        },
        "item": {
          "id": "093ed98d-fdb5-4306-a72c-cfce0498d83e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "10ffcad8-abf2-4901-b8d1-595384009a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26597d03-9ac3-49fc-9df8-7ec17d94b9ca",
        "cursor": {
          "ref": "2117ca50-8d79-48aa-8339-97b1e075908b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8b5979ff-c92b-44f2-ae7d-6cdb669ab032"
        },
        "item": {
          "id": "26597d03-9ac3-49fc-9df8-7ec17d94b9ca",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "20393a57-7093-4bb4-a5d7-99ee5a12489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee49e0c-ec21-451b-bada-18d32417be9a",
        "cursor": {
          "ref": "8e8eda18-f67d-4af7-a7fa-14509c9f8370",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "769e32be-8844-45ad-8efe-42fe77d56a6f"
        },
        "item": {
          "id": "eee49e0c-ec21-451b-bada-18d32417be9a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "920ae91a-712a-4a7f-918d-d77fb24db60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f56ff17-2515-4492-a630-6fe1d301d18b",
        "cursor": {
          "ref": "4dfe49c8-4514-4ded-bfa0-1ce17e5f483d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7c83b662-d6ca-4cef-9962-816c5695400e"
        },
        "item": {
          "id": "0f56ff17-2515-4492-a630-6fe1d301d18b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8ffb7afd-8d00-4509-9adb-3c1a6a7adf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072849bb-1b4a-45dd-9e15-b0c67e0bfd31",
        "cursor": {
          "ref": "57b6a4ff-26d5-4feb-9990-96293e62e866",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3b53e4e9-c856-4fb9-90be-1f3f5d6c9f02"
        },
        "item": {
          "id": "072849bb-1b4a-45dd-9e15-b0c67e0bfd31",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "44c4ba4a-289b-4376-90cf-e4cd16ed861a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44f820b-0b9c-476a-97a1-bc988984bc36",
        "cursor": {
          "ref": "0893e0d1-989c-4511-b02c-7ebd8ef25cab",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c70ff1a7-800c-421b-8f75-199e1f6abfe2"
        },
        "item": {
          "id": "d44f820b-0b9c-476a-97a1-bc988984bc36",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bbc39e62-0b8f-47c7-96f0-f980b0bb3334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508e25f1-8b0c-4b80-8504-a1c5ce4bfb4a",
        "cursor": {
          "ref": "50c336a3-f099-4ff1-b969-d09b9ca4a7b9",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "448c2de4-4fdb-41a5-89f1-e6b7c7956822"
        },
        "item": {
          "id": "508e25f1-8b0c-4b80-8504-a1c5ce4bfb4a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "22425618-c2da-48b0-9e60-e84f61c73871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58c72b4-3874-4556-90a3-0067cadae3e6",
        "cursor": {
          "ref": "417dd198-c291-4faa-beae-91b20554415c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5f30753f-91e0-4679-82b1-7fc7e2274faf"
        },
        "item": {
          "id": "f58c72b4-3874-4556-90a3-0067cadae3e6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9fc2615e-543c-4a51-ad16-da84ddb0670a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c8bcb4-43b9-4525-9b08-dfa2dfb02dc6",
        "cursor": {
          "ref": "25d3ea55-1cf7-4827-81c7-7f9c1a4b07af",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "61e26502-bada-4276-9735-0d98efc41642"
        },
        "item": {
          "id": "a1c8bcb4-43b9-4525-9b08-dfa2dfb02dc6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1dabb77c-ee48-4039-bb5d-4f0577ee6e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bf6acc-0414-4645-92ec-253541ee6c99",
        "cursor": {
          "ref": "dd0e9a89-900f-42be-9e95-bdb87de7202f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e7cf4ad6-4f7f-4f6e-8b20-b007289fc8d7"
        },
        "item": {
          "id": "a4bf6acc-0414-4645-92ec-253541ee6c99",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e02748cd-7a94-4981-a81f-18a3baea3d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96076221-9e16-461d-916e-73bd2b24d8af",
        "cursor": {
          "ref": "8b9ccee8-9035-42fe-871d-aee28b9b1a48",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6d72fcb5-a254-42de-add1-99829f634394"
        },
        "item": {
          "id": "96076221-9e16-461d-916e-73bd2b24d8af",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "06d3087e-9756-4ce2-b3d3-32dfdf89daf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410e8f21-1191-432c-ba34-723799f9aed6",
        "cursor": {
          "ref": "cbab36b8-ed51-4cea-b17e-cbdd24c8d7a0",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a7cd61c1-9d07-4330-9445-72f9f4174d10"
        },
        "item": {
          "id": "410e8f21-1191-432c-ba34-723799f9aed6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e6ca7b49-fd3d-4c1f-9e74-05e6e129dff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3992ec83-8ab1-46cb-bf68-797a8df7331d",
        "cursor": {
          "ref": "4c0f2e13-e9a7-4d22-a515-f79f5fd64b9f",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2ee757c7-00a6-41eb-ac75-c2b9846d5776"
        },
        "item": {
          "id": "3992ec83-8ab1-46cb-bf68-797a8df7331d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4468224e-09c8-42a7-8605-754d38daa26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5268dd6-f240-4ce5-86c5-5e320bb7d8ef",
        "cursor": {
          "ref": "d1ac3ad3-891a-4591-bb64-b429836e5b7d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d09262e7-1a4e-4ec8-971c-1acd8961e746"
        },
        "item": {
          "id": "a5268dd6-f240-4ce5-86c5-5e320bb7d8ef",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f358d37f-3326-4995-851d-77de0331f389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd04a219-92ee-471c-9598-872c71cfe673",
        "cursor": {
          "ref": "919926c4-7d52-4e4e-91b1-f3b8a4cbd6b5",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4a389fac-61e3-49ee-b6d4-91dfa068fd04"
        },
        "item": {
          "id": "fd04a219-92ee-471c-9598-872c71cfe673",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "014efb0b-9c0e-4f8d-a469-48e5a75d3b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777b862b-5afb-4e35-9057-738ca8abe60d",
        "cursor": {
          "ref": "95ea45c6-290e-4d2a-bc30-2b9509c37cae",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "da1fef87-f8f6-49d7-99f0-3e181b9b2264"
        },
        "item": {
          "id": "777b862b-5afb-4e35-9057-738ca8abe60d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6aa4c5f4-8fe3-41fa-9718-245714635e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011a859a-7893-4b88-961e-3d0dda6f483d",
        "cursor": {
          "ref": "d7c023d4-5ba7-4963-8d3c-5e86e7212b10",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "24ba7567-f8ea-44b3-9490-ab24ea143d4f"
        },
        "item": {
          "id": "011a859a-7893-4b88-961e-3d0dda6f483d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "14961862-e66b-4e1c-a468-6f29096ddbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f4c882-0fa7-4e51-8844-808519635656",
        "cursor": {
          "ref": "22045438-b050-4777-a6e6-28c9a2f97e9d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f4d4aa90-0388-4213-a554-4af847cf19c7"
        },
        "item": {
          "id": "f4f4c882-0fa7-4e51-8844-808519635656",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8b5079e9-843e-4837-95ac-728e578673ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270056b1-61a7-4b23-95cc-7da63196c1e8",
        "cursor": {
          "ref": "8f100330-be66-4c80-8270-9f19cd53735b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "496d0e4f-c4b9-472c-bd23-98218dc504ba"
        },
        "item": {
          "id": "270056b1-61a7-4b23-95cc-7da63196c1e8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4c504d60-542a-48a2-8ef8-fde622ea6835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7304e448-3f0d-49f8-9af7-f5a46c3d4bde",
        "cursor": {
          "ref": "4749e6d6-1b4a-4026-a13c-8319a3f72f4f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "53fbec99-7478-457c-9bf3-6367ff93e934"
        },
        "item": {
          "id": "7304e448-3f0d-49f8-9af7-f5a46c3d4bde",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "240b2d84-c69b-4df7-b284-876a610f2b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c221282-9433-427c-af32-e92aef341d72",
        "cursor": {
          "ref": "b4c3e98d-3452-49e7-ab8d-64ca1e885c86",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0d07eb8e-a9c9-4263-8859-36949dcabb6e"
        },
        "item": {
          "id": "2c221282-9433-427c-af32-e92aef341d72",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a7ca6da1-da6f-48d8-9708-c1b30ecc056c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2731aa32-03a3-4066-b4f1-4fc5c5b0cba7",
        "cursor": {
          "ref": "742b5856-7794-469a-8f10-5043ac3b28e1",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "48fd0387-c200-4605-90b8-8ba6189a3e86"
        },
        "item": {
          "id": "2731aa32-03a3-4066-b4f1-4fc5c5b0cba7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "39db7c14-85b9-4e3d-9d98-821b5ff55857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f20411-07b5-4051-8a01-a79c7e8ec918",
        "cursor": {
          "ref": "d5e65120-495a-4271-a3f0-fb7907047c01",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4810584e-44da-4a89-aa7b-f1716bb0dee0"
        },
        "item": {
          "id": "a9f20411-07b5-4051-8a01-a79c7e8ec918",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7708570d-4d48-4eb6-8f83-3ab8dd1d9469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7807d13c-3111-4c57-b998-ee2fe3f381d4",
        "cursor": {
          "ref": "4427dbbb-315d-4618-aec0-141d0f8e4239",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a4a28130-5636-441a-9c7f-768a5aee7e64"
        },
        "item": {
          "id": "7807d13c-3111-4c57-b998-ee2fe3f381d4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a51fb8a8-3830-4883-b01c-0d12aedb442a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49379e42-5422-4eec-9b0a-0ff3af11a0cf",
        "cursor": {
          "ref": "095a820d-8b22-47c1-a25c-8dbb71f1fcf9",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1c399d9f-0da4-4fa0-8054-4ed6eb5cfb7c"
        },
        "item": {
          "id": "49379e42-5422-4eec-9b0a-0ff3af11a0cf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6a81d078-e520-4b1c-9aff-0da7ca94a515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd7c8c4-a980-46d9-990c-d5233d1db648",
        "cursor": {
          "ref": "b1846f8b-3cd7-4199-9b42-9b2d3037a080",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "56d67e8c-2ace-4c45-ae4c-95bb2b90a331"
        },
        "item": {
          "id": "8fd7c8c4-a980-46d9-990c-d5233d1db648",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ef56b21b-660d-4a3c-8aa7-10b132bfec48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ce9948-c745-40c2-bd1d-2632317c4efb",
        "cursor": {
          "ref": "54d75d92-f046-483c-b498-f9fd75628ccd",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9d736801-9fa2-4b62-98bc-5c42ec41d73a"
        },
        "item": {
          "id": "f2ce9948-c745-40c2-bd1d-2632317c4efb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "65fa9db7-f5a8-4288-8406-3c7c932b47ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e26a91-8b9e-4cbb-8199-b57c42dd6a2e",
        "cursor": {
          "ref": "5d2b7aeb-9e33-4769-af67-957d0388542d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a9c3839c-88d4-4374-9f1d-f6c83cbcf16a"
        },
        "item": {
          "id": "67e26a91-8b9e-4cbb-8199-b57c42dd6a2e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c91cdb4d-561b-4066-90d6-c2f56da97c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16e30a7-d377-411f-b2d7-148c4f505b57",
        "cursor": {
          "ref": "4c21ae5b-4665-47c6-9005-8eeeb0db4cd0",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "95cb406c-8c7f-4c30-b365-c5eab12567b9"
        },
        "item": {
          "id": "d16e30a7-d377-411f-b2d7-148c4f505b57",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5af3dcd2-259c-4e84-baca-95c7832c99b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceedc117-40e3-4699-a865-026c4c899de1",
        "cursor": {
          "ref": "a6bef3e2-1826-4205-84de-612212dc3293",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "66f6e42f-8ad7-4965-854a-0a6d22f548ee"
        },
        "item": {
          "id": "ceedc117-40e3-4699-a865-026c4c899de1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9bab08d5-f4de-478f-b82b-2d9239622100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a404a9-b0d5-40df-b039-1363f238e2a7",
        "cursor": {
          "ref": "e0e391b2-28af-47ac-a28c-f802e4832daf",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ad4d3dc6-1bda-4c22-b2b0-a3e6e4fdb248"
        },
        "item": {
          "id": "25a404a9-b0d5-40df-b039-1363f238e2a7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0a4617f0-0d48-4335-97af-e2f52293a1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792abf00-d8a1-4baf-bc32-e00972decf1a",
        "cursor": {
          "ref": "5c27ae40-0789-40c0-b83e-17b0d6981fa9",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b4c4b866-6e0e-46ea-a8c5-5ac3360138f7"
        },
        "item": {
          "id": "792abf00-d8a1-4baf-bc32-e00972decf1a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b6018ed4-c5a9-44ad-8dff-4528f95d82e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac04db5-c906-481b-b666-af8a7ba9a9f9",
        "cursor": {
          "ref": "99248396-ef7b-4fe0-82c6-0dbe2621e3f6",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "54db6355-a831-41c6-b675-f94f2fe5670e"
        },
        "item": {
          "id": "6ac04db5-c906-481b-b666-af8a7ba9a9f9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ddd41bd0-9485-4c01-a24e-ff93a3ccff13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cd56e6-b969-4109-b6d8-c8d32d7979da",
        "cursor": {
          "ref": "473254f5-4444-4cbf-a23e-9c43fe424ef8",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d5c61325-9a15-4b16-9024-b3a9efe03d99"
        },
        "item": {
          "id": "86cd56e6-b969-4109-b6d8-c8d32d7979da",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9cfdb236-17e1-451f-9478-99a482f7f203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786c9555-8496-4f81-8cf1-4b5545a8109f",
        "cursor": {
          "ref": "2c038235-a840-4215-8500-4bdee253d1c0",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "113f06c1-1ee9-4728-886d-a9f274ae8853"
        },
        "item": {
          "id": "786c9555-8496-4f81-8cf1-4b5545a8109f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fd2ff9f5-d63c-4667-92ea-7285cd6041b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7706246a-7f50-4ed5-aab5-3a5d74ae4333",
        "cursor": {
          "ref": "bacfdb7e-8107-4b84-891c-6a2c4003e12d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "32327be4-1c17-42d4-b2b6-648565a72caa"
        },
        "item": {
          "id": "7706246a-7f50-4ed5-aab5-3a5d74ae4333",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "46f42e34-e100-4884-8743-9e807a82307b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4d4f9f-e664-4755-87db-34223c891f0e",
        "cursor": {
          "ref": "fbdd874c-0730-40a5-a32e-70d1bbfe29fe",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "62d530ad-764f-42bc-aac0-3a66e177211c"
        },
        "item": {
          "id": "0f4d4f9f-e664-4755-87db-34223c891f0e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6e6e9f2e-c234-4b42-b797-09d170677c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e23f101-c242-4d5d-bad8-8d877cdfceba",
        "cursor": {
          "ref": "d1379d3c-4119-42e0-8fbd-7e0ed824adbe",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "06fae944-67de-4f40-a26c-614d8af777d5"
        },
        "item": {
          "id": "6e23f101-c242-4d5d-bad8-8d877cdfceba",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ce221d19-426c-46f0-97cf-b9b147e028c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a732c7-34b2-4730-9a4e-8897b132c662",
        "cursor": {
          "ref": "3e1de463-136e-4672-89c7-29dcec04c2c6",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0cb460de-5830-4222-885b-39d7a3247440"
        },
        "item": {
          "id": "01a732c7-34b2-4730-9a4e-8897b132c662",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cc191930-ce3f-4038-926d-dd976a142864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572da648-8623-47ae-83b1-d466b7bc42b7",
        "cursor": {
          "ref": "d2123726-7a0f-40ce-ad88-22b85a9620ad",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c106442e-060d-4b15-950e-194a6b7215c5"
        },
        "item": {
          "id": "572da648-8623-47ae-83b1-d466b7bc42b7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1b5e347c-2e94-4960-9c36-8ae0e96495a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd426657-162b-42aa-b3ef-b4f22a0aa5e4",
        "cursor": {
          "ref": "55babdcd-2135-4be6-9fec-8c09294aa2a3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "eca5a8b4-5fa2-4bb4-913b-7e94c76da461"
        },
        "item": {
          "id": "bd426657-162b-42aa-b3ef-b4f22a0aa5e4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5bf42edd-1e18-4212-a8a5-4cb4c45e5578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0296929-bcb1-43d6-8bfd-6d78b1c52b49",
        "cursor": {
          "ref": "9c5aed70-a488-44f6-9164-db3937efe303",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "daccef89-8ae1-4135-8410-2939eee38c31"
        },
        "item": {
          "id": "e0296929-bcb1-43d6-8bfd-6d78b1c52b49",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "19dc01e1-2cc7-416a-9493-7b89fe9f4f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26868ca-3d04-4763-9231-50477f84da3a",
        "cursor": {
          "ref": "e676e086-dd2c-4630-905e-90e9860da05b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "14c2ac2c-943a-4e0f-b270-1e7fd0467c6f"
        },
        "item": {
          "id": "b26868ca-3d04-4763-9231-50477f84da3a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fa3d463b-37bd-4b74-956a-2f0d75898450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d6e168-dd54-4560-871b-2082a0010fe9",
        "cursor": {
          "ref": "bef915ca-63a6-489a-a9bc-6c737c7f90bb",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "def1bc49-82f3-4e80-8b10-1a80942bd441"
        },
        "item": {
          "id": "22d6e168-dd54-4560-871b-2082a0010fe9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bfdb3078-a9ea-41ed-af65-7c1070634c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9575cba1-dd8a-4bef-b7bd-1e17a4a4f175",
        "cursor": {
          "ref": "584fa692-df3e-4be3-b80f-fc7f766dbb3b",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6dd4259f-bfba-4533-b45b-8199e1007604"
        },
        "item": {
          "id": "9575cba1-dd8a-4bef-b7bd-1e17a4a4f175",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6987d5be-66ab-4a1d-814e-368ce153575c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb9e9db-5f18-4de9-89c7-384c2bc78d78",
        "cursor": {
          "ref": "484ce0f2-3df9-477f-85e2-0e2800bd7cb1",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "941a9a67-4990-4497-a418-20635a51b86d"
        },
        "item": {
          "id": "dfb9e9db-5f18-4de9-89c7-384c2bc78d78",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4a7c9333-b000-4e87-aad5-6efef2e908cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af906a2-b1a6-44ae-8e26-f84d3a2b85be",
        "cursor": {
          "ref": "f0a96f05-bda0-4455-877f-978627c7bea9",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "237bfdca-e16c-44fd-b7a6-f755a878b808"
        },
        "item": {
          "id": "8af906a2-b1a6-44ae-8e26-f84d3a2b85be",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "adc9db38-7d93-471d-b519-8e2ead067112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8c5144-0f79-4cc3-a33b-f761d4a12107",
        "cursor": {
          "ref": "ca020da3-c62b-40ab-b80e-1daa3192c308",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1e1e4158-2973-465e-8bbb-577305bdd870"
        },
        "item": {
          "id": "3e8c5144-0f79-4cc3-a33b-f761d4a12107",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4d98d279-75c8-4c0a-b54b-d6db61e075cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd364f95-2f65-44b2-aeed-f2456e83f3ba",
        "cursor": {
          "ref": "067c99ca-58bd-4bba-822f-c64afda16acc",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "90bcd349-3613-48a9-8544-efde62776e63"
        },
        "item": {
          "id": "cd364f95-2f65-44b2-aeed-f2456e83f3ba",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "51fd6c72-f611-4392-819f-8a721d028b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c321e587-1c2c-4aa6-a8b8-e448eab37c9e",
        "cursor": {
          "ref": "49ba89f8-42c5-4608-acaa-9438837def94",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7db134d4-0655-4ea0-a6ab-f28d7317ba06"
        },
        "item": {
          "id": "c321e587-1c2c-4aa6-a8b8-e448eab37c9e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "af43f07a-401e-4c07-891a-63cf2f2772da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8a582a-2b75-4301-8966-e4371d818e35",
        "cursor": {
          "ref": "c43a4735-bbe8-4e3b-be45-a79c67745f05",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e6713d60-d9d0-4d9e-98cd-bba6a3bb4ea5"
        },
        "item": {
          "id": "bd8a582a-2b75-4301-8966-e4371d818e35",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0ab2549e-fe76-4979-bf55-e9281770cca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9086668-055c-4a9b-a14a-a2236f707bbc",
        "cursor": {
          "ref": "fd667efa-1fbe-447e-bad0-95c2e6cb96fd",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "31d2ecd5-630f-487b-a4a4-ee1dbbdff281"
        },
        "item": {
          "id": "e9086668-055c-4a9b-a14a-a2236f707bbc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "736020dc-963b-42c1-9a8c-a6e4f2fca756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23b9bd0-3925-4102-83b5-64792e4fad44",
        "cursor": {
          "ref": "45e87061-e38c-4fb1-9e72-0157cf96e03c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b2c46697-9b60-4a1b-a6bf-362debf74dde"
        },
        "item": {
          "id": "f23b9bd0-3925-4102-83b5-64792e4fad44",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4b2a7722-2772-45cf-9d2c-3d34f027eaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3aa4cc-2e1c-459a-bdf0-5e41ed21fbd1",
        "cursor": {
          "ref": "9fd6505c-a32e-4a73-8d92-c8f3728170f3",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a837f1cf-2c7b-454f-af46-6ec7545923ac"
        },
        "item": {
          "id": "dd3aa4cc-2e1c-459a-bdf0-5e41ed21fbd1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "16dd0adc-f678-4fe5-b7a9-11734b668f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecd24ea-d5c1-4816-a26c-493520c74592",
        "cursor": {
          "ref": "c8226a0a-d456-4f52-8796-7ab0b5af130e",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a7e0d08f-ddcf-4829-9295-88e553b0d99c"
        },
        "item": {
          "id": "eecd24ea-d5c1-4816-a26c-493520c74592",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "efa14d77-f2bb-43c6-9a36-3e8793bea47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074bbaf3-1b0b-424c-9e9e-8fe1832e8932",
        "cursor": {
          "ref": "b3894999-c874-4457-aa4c-8c3ee5d04877",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dc885f01-2979-4fab-b2c7-f19075e47d1e"
        },
        "item": {
          "id": "074bbaf3-1b0b-424c-9e9e-8fe1832e8932",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "54d8b8a9-6bb6-444b-8d54-0afde1b25be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd2482c-84e0-479b-8051-800dcb457de7",
        "cursor": {
          "ref": "de9de488-9d1d-4137-9248-b2a63052968d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "317658bc-761b-420e-b7de-a7d8d6990de9"
        },
        "item": {
          "id": "4bd2482c-84e0-479b-8051-800dcb457de7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b96c1477-05c1-4ace-9f77-24230b77fd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb039a0-8ba7-4a1e-ba54-989b23d38b85",
        "cursor": {
          "ref": "56025de3-6f46-42e2-82e7-534a3d8ddfd5",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4408fa3b-00ed-4488-b44b-df39037e4921"
        },
        "item": {
          "id": "7eb039a0-8ba7-4a1e-ba54-989b23d38b85",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0cf8e9e2-d5a9-4557-b366-21869d95770e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ccb39d-5aa1-43be-a652-d833f815c046",
        "cursor": {
          "ref": "2a135205-edf4-4d40-bfa1-ab313922c8dc",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4f34f2ec-2ecf-4cb7-84cb-ec75aace4e7d"
        },
        "item": {
          "id": "f0ccb39d-5aa1-43be-a652-d833f815c046",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a707464a-3d13-4629-98d3-c7bce38cebc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d8267d-4234-4329-b847-748572715c1d",
        "cursor": {
          "ref": "22603947-f24c-40f5-9c95-1b864fdab93d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "69b79c9a-6ec4-4e44-a40d-d1eb058be77b"
        },
        "item": {
          "id": "c3d8267d-4234-4329-b847-748572715c1d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dc0b34e8-9037-472d-bc6d-5c14659f4b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3867fb-d0e6-49c7-bf9c-49d1be9360bb",
        "cursor": {
          "ref": "06121a66-92ca-446c-87a3-25e39f55654d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9b234361-dd31-4a92-b554-d647af1dda38"
        },
        "item": {
          "id": "ad3867fb-d0e6-49c7-bf9c-49d1be9360bb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "83846fb3-a7c8-4544-a803-fcaedcb1b183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a079860-4bde-455d-a2c2-e69c0a558031",
        "cursor": {
          "ref": "d57cb44d-3f58-4bea-be70-089367fba395",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "63641b05-6408-41c5-9c3a-509cd24d0be7"
        },
        "item": {
          "id": "7a079860-4bde-455d-a2c2-e69c0a558031",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "83e7e200-7d2f-4ebc-b162-6db653cb0ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec71d8e2-1d8e-4ec8-ba78-190b63cb9849",
        "cursor": {
          "ref": "93c52efe-a8fa-4a9a-bcdd-c81559d6dc4e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c1c7327e-2ea1-4196-8281-5e2c241fbb65"
        },
        "item": {
          "id": "ec71d8e2-1d8e-4ec8-ba78-190b63cb9849",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bf35535d-4752-41fa-a786-ca72e77b8f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c598e6f3-e8b8-434d-9010-1085c15b792c",
        "cursor": {
          "ref": "c4171e11-7106-4127-87a1-7750a0bfc1b7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "562b4195-c8c5-406f-a476-2c5ca1e9cc5d"
        },
        "item": {
          "id": "c598e6f3-e8b8-434d-9010-1085c15b792c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "41102a87-e621-4035-a4d1-589b3fff65f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381685d2-eef3-477f-acfd-33d9cb4f44df",
        "cursor": {
          "ref": "2b8412d7-9085-4c8b-bcaa-2f52a3388deb",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5e677adb-ab28-436d-b39e-bc4153a09114"
        },
        "item": {
          "id": "381685d2-eef3-477f-acfd-33d9cb4f44df",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7a2c780f-d43d-4ae9-95e7-4bda26021a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7940d5de-b5ee-4af3-923d-467628f2f259",
        "cursor": {
          "ref": "5521e18c-b190-4343-bebf-9d08fb50f376",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6810ba3f-757d-4c7c-b1ea-27ffa7c41b55"
        },
        "item": {
          "id": "7940d5de-b5ee-4af3-923d-467628f2f259",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "528df2db-f902-43a4-9e14-99ed6f7a208f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb727ef-9881-47d9-ac47-436d88fd1947",
        "cursor": {
          "ref": "dd0f6486-b0b5-4e30-ac60-cebe16d15e69",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1e4db3d6-3407-4190-b844-7b6316b15718"
        },
        "item": {
          "id": "0fb727ef-9881-47d9-ac47-436d88fd1947",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "995ed5e8-df75-43d2-ae43-0bb82b7088b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bf3821-ff46-4766-8166-d9750bb59cfc",
        "cursor": {
          "ref": "b247bd62-162c-419a-ac4a-0c693d003b2d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4ed38030-62b1-450c-a266-a8f06737a498"
        },
        "item": {
          "id": "d2bf3821-ff46-4766-8166-d9750bb59cfc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e4a2d4df-959e-4297-9149-3e571399ce75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c558699c-2bcd-441d-997b-4faa43edba24",
        "cursor": {
          "ref": "efb77434-0506-4b95-9141-a25843f79bf9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2c543c94-0ffb-4080-9e79-1268f4ab2ba1"
        },
        "item": {
          "id": "c558699c-2bcd-441d-997b-4faa43edba24",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2e848775-ce4a-4d54-8f0b-b6e22bd23f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb886d88-90fb-4f16-9cfd-d468093872de",
        "cursor": {
          "ref": "02ef6220-640b-4333-b9a3-7a6455f7d517",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "30cfb1e8-ab42-4dbb-800e-4ad45cf1384e"
        },
        "item": {
          "id": "cb886d88-90fb-4f16-9cfd-d468093872de",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9432cf9a-41b4-4ab0-ad7a-d6fdb6bb2136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647bde9d-499e-4d13-9707-3d2a3879d092",
        "cursor": {
          "ref": "433e3a20-d2e6-4351-b0ce-c305088e2deb",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f984e472-bbcd-4b47-83e4-8d94a44c2eda"
        },
        "item": {
          "id": "647bde9d-499e-4d13-9707-3d2a3879d092",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f8e169a9-ef0d-4c10-b6ca-d907e12c7ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93354cd2-2b10-4c83-a2c9-16c4978bf259",
        "cursor": {
          "ref": "d8ff1371-895b-429a-8526-26a06221ddca",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "844f061c-b3a0-4426-b3bb-e5a47a0c36db"
        },
        "item": {
          "id": "93354cd2-2b10-4c83-a2c9-16c4978bf259",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2965e813-e239-4389-960b-2f023f2e949e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0577b1a-bc15-49ba-8266-95cc8ea64d46",
        "cursor": {
          "ref": "f5ca4055-9517-4d3d-9cb0-8eff6dafcfd2",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "828e2498-5525-45ab-96ca-0a13eeef1b02"
        },
        "item": {
          "id": "d0577b1a-bc15-49ba-8266-95cc8ea64d46",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ef00c491-5a13-421b-8e7d-4bedddc2cb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8125ec-23a2-441b-8204-134480270110",
        "cursor": {
          "ref": "7550f4c7-ad00-4809-921c-2ad1461106eb",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0d77ce0c-694f-4c0b-b3f1-d07eee8f4e17"
        },
        "item": {
          "id": "4e8125ec-23a2-441b-8204-134480270110",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "855fa2a0-d898-48b0-81ad-e61998e8786a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2adbde8-f3da-4957-b51d-96ffa34d8523",
        "cursor": {
          "ref": "fd23c893-19bb-4e74-a271-3439cf4b3e99",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ed361fec-fc6b-48fb-b120-5e0c81bb515f"
        },
        "item": {
          "id": "c2adbde8-f3da-4957-b51d-96ffa34d8523",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "072ec78d-1f8e-4375-b91b-7e44720c5f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ddd2ce-7872-4c29-93ab-99fb715dd420",
        "cursor": {
          "ref": "6df05ee6-0cbd-4ceb-ac52-74094519a8a8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9654e721-2f0b-4f82-a608-fa530f0a433c"
        },
        "item": {
          "id": "54ddd2ce-7872-4c29-93ab-99fb715dd420",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c47947d6-09aa-4aa7-ac46-42574e9ea05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea81011-ed23-49bc-9dfb-cf7e313f8ac3",
        "cursor": {
          "ref": "ae4e5155-57d2-4809-b7b8-7255f5ed2fb9",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5ebe4b8a-6032-47a6-87e2-5fbc0ea75a3b"
        },
        "item": {
          "id": "3ea81011-ed23-49bc-9dfb-cf7e313f8ac3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b097f3c9-07d2-4f11-9383-cdca5bb83c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c673d1c8-f915-4c84-8e75-96051a782d37",
        "cursor": {
          "ref": "7ca31297-d45f-49f0-99c6-4e281881770d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "01ae5cc1-c15e-4eee-b09c-28e2937d1380"
        },
        "item": {
          "id": "c673d1c8-f915-4c84-8e75-96051a782d37",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e60ec036-b4cc-4410-9d8f-71b0c5d4060a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e46e695-0bc6-4448-a9d2-bac58609162c",
        "cursor": {
          "ref": "e64a7ba6-70c3-4e2d-9721-9f97d6aa4faf",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "bcfd1d30-727a-4cbd-9e98-1746982c4bc7"
        },
        "item": {
          "id": "3e46e695-0bc6-4448-a9d2-bac58609162c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fde5e148-e767-489f-aa55-3d6aec8a96ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add15e16-357f-4478-a185-43f3a02b1971",
        "cursor": {
          "ref": "622575e7-af6c-4020-8829-046f2ebbc646",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d28c4190-fbca-4d5c-a069-d30244719443"
        },
        "item": {
          "id": "add15e16-357f-4478-a185-43f3a02b1971",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4570d1a4-d084-4345-b5bb-f669e29685e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850afca7-55e4-47de-aa90-8bcdb8cac07c",
        "cursor": {
          "ref": "81a43ee1-abfc-4664-9392-a597e97b9fc5",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d50b0681-fbac-4484-acc3-a0e9a6773945"
        },
        "item": {
          "id": "850afca7-55e4-47de-aa90-8bcdb8cac07c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "73b546f6-bf36-41a7-9c9b-f9d4f32b162d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d928714-8c6e-4dea-94d8-7f837ae0014c",
        "cursor": {
          "ref": "9ec33c7a-5224-482d-a86a-09f061b5f6a1",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d85ec291-dfff-498c-ad0d-859415d2456c"
        },
        "item": {
          "id": "8d928714-8c6e-4dea-94d8-7f837ae0014c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bcefb8dc-81e5-42c1-8184-bc26e33b5278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32022a08-fdc1-4722-a8a8-ab13265fd0b1",
        "cursor": {
          "ref": "3af45cde-865c-4c16-be22-a4423800d070",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "24694855-2e9d-4acc-b242-bbe535a3c241"
        },
        "item": {
          "id": "32022a08-fdc1-4722-a8a8-ab13265fd0b1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "60889504-44d7-4bf9-93bf-30802a2106fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2399893-4a40-4fdf-ae6c-5eb60636fcb6",
        "cursor": {
          "ref": "9546ab0b-0426-4c50-8480-cbc31603e46a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e6cf6cc4-9c0a-456b-a0ee-571baa48ed1c"
        },
        "item": {
          "id": "c2399893-4a40-4fdf-ae6c-5eb60636fcb6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ce6149cf-cf69-4ec4-bad6-3672cb00d1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cf63f6-9ff7-477a-b78c-777dd8a42f47",
        "cursor": {
          "ref": "b7f26a45-24e7-4bbc-b893-e1d1950ce7b6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "579f347e-ecfb-4285-9a21-9d0637302452"
        },
        "item": {
          "id": "41cf63f6-9ff7-477a-b78c-777dd8a42f47",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7cd270ef-93a8-4a20-8b08-5e2858a0c853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401b05d6-62c9-46ea-a302-e0eeab2f20ef",
        "cursor": {
          "ref": "381672a8-51f1-4796-ad11-6824d3f16dd1",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1603326b-df40-4afa-a02a-4a4327552e01"
        },
        "item": {
          "id": "401b05d6-62c9-46ea-a302-e0eeab2f20ef",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a1e1389e-d3f5-4536-a57b-34cb28e1ba59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5722ff96-bdef-4de4-8e12-4783e066e66f",
        "cursor": {
          "ref": "656d1c5e-cf0b-4391-b5a4-0c1af2b08a97",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "95b7ee21-e90a-4efd-aff4-edf75d93bb2c"
        },
        "item": {
          "id": "5722ff96-bdef-4de4-8e12-4783e066e66f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9c1603b0-f1b7-4e5c-9210-0cb8a1f192bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb9837c-fb6e-434d-977f-f80d5564dc06",
        "cursor": {
          "ref": "b06d9f5b-f11b-4173-90a0-8d696067f476",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "29f6cb8d-76d9-4c05-8171-c88b2b33c4d5"
        },
        "item": {
          "id": "4eb9837c-fb6e-434d-977f-f80d5564dc06",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "faf228d4-90a8-4adc-8b19-cd8edb13b781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e974cf-08bf-4edd-8dc3-b5d98a1dab70",
        "cursor": {
          "ref": "7900162b-3c1c-4ca5-9557-275e1988294a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4395b7bc-53c5-40e0-aa63-433dc96a6e44"
        },
        "item": {
          "id": "91e974cf-08bf-4edd-8dc3-b5d98a1dab70",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "24d5c163-911e-4fe6-82d6-956563299901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb51f22e-7a41-42fb-8f9b-09fcb33efd8f",
        "cursor": {
          "ref": "862e2034-c364-4141-b9f8-a8e411db7fc4",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b66da304-961b-4ecf-aae8-5722edd2be29"
        },
        "item": {
          "id": "bb51f22e-7a41-42fb-8f9b-09fcb33efd8f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e6d95588-d8e0-4650-82fd-3aa85c02c636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb54d2d6-3044-4d53-9ac5-5d950411040c",
        "cursor": {
          "ref": "36d78a08-c102-4cb1-ab44-5ad3e75128b2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f2e241e6-faa8-494b-abe9-d3602a9b533b"
        },
        "item": {
          "id": "bb54d2d6-3044-4d53-9ac5-5d950411040c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fe86a167-79cf-46fb-86eb-a02e0eb4dc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddb50ce-04af-4457-a525-60a3bbf315dc",
        "cursor": {
          "ref": "d7567b52-a644-4379-8fee-b54185287af3",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a06e98e2-8777-4c82-b4a7-3e2eab9bc436"
        },
        "item": {
          "id": "fddb50ce-04af-4457-a525-60a3bbf315dc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8a50d0a7-6b29-43d2-821c-9aa2c1a17bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582a77fe-294d-460d-977d-af5994fcc878",
        "cursor": {
          "ref": "172b41f8-7f56-4b7d-96e3-89a804592ac4",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "eb287597-0c7d-4d90-a2d2-3feb9eded9b7"
        },
        "item": {
          "id": "582a77fe-294d-460d-977d-af5994fcc878",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "63cd9524-7125-47a0-9bdf-50b03cda23ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fe09b4-5849-47bb-a748-a1d15240de0b",
        "cursor": {
          "ref": "8dca17c4-c8c0-4f75-b5ad-e31af998efa1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "69176248-17ba-4e9e-8be1-b704f7eadb49"
        },
        "item": {
          "id": "32fe09b4-5849-47bb-a748-a1d15240de0b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "24f536cc-6140-4ecc-ac00-380128d49b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bda1f27-daef-484f-96bd-1eaa0c945e2f",
        "cursor": {
          "ref": "a9335390-a76e-4117-9738-66fcfdb564e9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "48d38c8b-72ad-471a-807b-ed9ee67450c5"
        },
        "item": {
          "id": "5bda1f27-daef-484f-96bd-1eaa0c945e2f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3777d67c-98ed-41de-a6a0-ef4dddbd4fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fedeb3-94eb-403b-9d55-c36ce586c540",
        "cursor": {
          "ref": "729057f6-58b6-4a1e-8383-53a50fcda38d",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "460131f4-fb6f-4677-bfe6-6ff5db7080b5"
        },
        "item": {
          "id": "37fedeb3-94eb-403b-9d55-c36ce586c540",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "59445b1e-566b-46dd-9ebf-4e8381dd9dba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6922a27-7c46-4aed-a491-f2b6ff638326",
        "cursor": {
          "ref": "cac9c060-c98e-4fe0-b578-bf44007f314c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a928ee5e-af4a-4bc8-b1b4-6f2e1a1599cb"
        },
        "item": {
          "id": "c6922a27-7c46-4aed-a491-f2b6ff638326",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0fc90a61-af96-40ff-9f7c-ab6f8d41e234",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "affbfa70-40f8-48d6-b238-0d0e371adcd1",
        "cursor": {
          "ref": "d5e9e0b1-1bb8-4d14-923f-e68f49f7ffd2",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6ba62daa-f114-4263-ac4e-cfc6a90857dc"
        },
        "item": {
          "id": "affbfa70-40f8-48d6-b238-0d0e371adcd1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b9543747-c99c-44d9-8614-ef25dd3483e0",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acdb0b2-067d-45f8-91c0-3ecad112dbc5",
        "cursor": {
          "ref": "aeac6bfb-2894-4353-862c-bc42275364e8",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7d20c393-8229-45d9-801a-f32ee6cfc656"
        },
        "item": {
          "id": "5acdb0b2-067d-45f8-91c0-3ecad112dbc5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d58dde65-6a8d-4e96-8381-fda6695e332d",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "240a12c9-d85c-44cf-9956-c1fd4d2518d1",
        "cursor": {
          "ref": "1331a161-5283-4506-ac09-08a6eb5fe1e4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "af1c39fa-3e70-4738-9341-4bff9113842c"
        },
        "item": {
          "id": "240a12c9-d85c-44cf-9956-c1fd4d2518d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d11a019e-d1c2-4009-993c-832cbe4fa1ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240a12c9-d85c-44cf-9956-c1fd4d2518d1",
        "cursor": {
          "ref": "1331a161-5283-4506-ac09-08a6eb5fe1e4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "af1c39fa-3e70-4738-9341-4bff9113842c"
        },
        "item": {
          "id": "240a12c9-d85c-44cf-9956-c1fd4d2518d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d11a019e-d1c2-4009-993c-832cbe4fa1ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed16b1be-71b5-4eb4-8b81-545ac397bd3f",
        "cursor": {
          "ref": "8b07bac7-76fe-4fa6-8028-90fb2f1be2fd",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a6374f41-d136-4e13-9eb0-b162f33c7d98"
        },
        "item": {
          "id": "ed16b1be-71b5-4eb4-8b81-545ac397bd3f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8b876816-c4ab-4027-ae88-ed806396416c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b8c096-2b54-44c4-952f-23c9e9a838c2",
        "cursor": {
          "ref": "7ced0ed8-0625-482b-9f61-3ace1ee796af",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e17287b7-7f28-47e2-afb2-638b986dce88"
        },
        "item": {
          "id": "28b8c096-2b54-44c4-952f-23c9e9a838c2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6ebef444-a6ed-43e5-9162-451553dbfe63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}