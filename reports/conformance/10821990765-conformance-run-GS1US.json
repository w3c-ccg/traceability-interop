{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8905eb63-a508-4c15-84b9-8aa20096367d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5129c039-b106-4243-91e7-c59d9960fdae",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a87148d-8f1a-4f27-9adc-d3071a95a485",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5dcb0e64-0182-42f1-afb5-efd5bc140079"
                }
              }
            ]
          },
          {
            "id": "08e691cc-b130-4425-8157-1fa772d61b32",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "141683f0-100c-43a4-bed6-818447fbeccb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "70ddec59-3850-4b9c-9a43-22a616efbced"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "70e0a538-2c8b-4469-80ca-a38675f3fada",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5eca1039-0abb-4f75-a3a1-08567605dc64",
            "name": "Positive Testing",
            "item": [
              {
                "id": "479accf8-ba96-4c0b-b0e8-12ca9d256014",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d11b9797-d7d7-4546-a29d-9affc8e856ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "deb78cf1-8279-48bb-b535-53b269d3ffef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a573a08c-1aad-4f3d-8c3d-c55b2ab07a88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aaa09287-fa1d-411f-a172-d5c72fdc30d3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "813b8c1f-7f54-4aab-9bd6-98981f688bf8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40504633-50cf-42e6-89f8-f117f290ac59"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97e8eaa3-a912-44e7-92ea-359064c3ec2e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e4c2aa74-b9ec-4cd4-9c53-6c03286e1c63"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72ebe3b7-9bfc-4015-a635-67a5ec260174",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13ea0984-178f-423b-bcf6-7d4456259d44"
            }
          }
        ]
      },
      {
        "id": "4ba7e703-e423-42ec-931b-dd5166265c15",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f293fc1e-0747-4bb5-928f-18a2ded4f1b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "feee4140-975b-4861-8366-7c4da0577bb7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "caecd80b-5eb5-4c00-bc80-9c172ea5d5b3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd186b84-f343-437b-9fa1-3cb773b2bd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b423bf4a-4462-4a0e-9b90-3d5169be587f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff39ca2-5ad7-4e41-bccf-c942429d3a91",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0511bf61-e3cc-4126-a7ea-a49c726dd199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f96c3ee-43e0-49cb-90aa-c72a1e9260fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e440e493-9cf1-48d3-ba35-eb4c507f8852",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c37b047-b4a1-4472-a1c5-2b7417fa6aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ce8c9c4-b122-482d-b64d-6d22a1a3e622"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "62a45d87-b397-4e79-a447-43d0aaf897d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d32d9f95-e5d4-49eb-93ff-c4d316cb5261",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0becaf09-765d-4e03-81b0-1600afdecb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7741c043-00c6-440c-b29c-63b3b42046ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f7df91-421c-439c-9576-1e4f714c18b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6218955-d533-4f81-b8e0-b0a248d7a397"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "faa0b2fd-7139-4048-a739-387b68cde378",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d6bdcfae-f236-47f7-baf8-d922bd3a585f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66d6ea98-62f4-48a7-bcf4-6e409709175f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "81565b0a-53b3-4be4-88ee-f5b1a91cc54a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83dab095-3e56-4dc7-93d3-60db008b400e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e9d36e06-f324-4778-9aa8-b145ca1a320f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "550fea92-88ef-4cd9-82af-368564db7a45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "689fad0f-fb00-4a26-96df-8f61c5ebb7ee"
            }
          }
        ]
      },
      {
        "id": "3382a0d6-9104-4c6b-85e0-4090b3948f29",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c8788cf5-a7be-46fb-ba75-2bf61b93f07c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "537c957f-5399-4993-8681-9a7faa157556",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "db0c1e25-902b-4e4a-a1fe-8ee07fc7207f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283280f6-ad86-4020-a0b9-96b264f1d3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00121c3-a994-4c38-aa25-1532916bfd9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364d1408-0c82-40d7-9e27-a54473abcb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd72a4f2-e2f5-4ff6-846d-929f5f81b8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651fbd96-468e-4a53-9a86-8d8420b17187",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7523611c-10ca-40d3-9af0-28056a98aeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2e846d-d3f6-4cc0-9720-168a40d224ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c234ef02-85f3-41d0-82db-510083131edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73e31066-4342-4e77-af1d-17abf71a79a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e06327-01af-47ad-8bfe-c42510311a85",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f5d0f8-1b2b-4cd3-87aa-3f9a87d5fb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ccdfc6d-b838-4aef-9cf8-4cd9765de03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a831b242-9379-462f-ab9d-4f0a4b3caf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55f5ed3e-7912-4fd5-a2a1-a2f1eb7edba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7a90ae-592c-4ee5-bbb5-f4dcec39412e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add92af6-aa5e-4e51-b1af-04650fa60672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef8f8c5-7da1-468f-b15e-ea7222848e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd59a23-a10b-4c66-8bf5-13e756db46f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daa0c032-802e-4b1d-9a1f-9f590f61cbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc5d9b7-64e7-4687-b0e3-041461771568",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb3d4bf-7b32-476b-b4c6-28259a51861a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144c7906-3587-4242-a81e-35d3ac937881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a20eba1-2b74-4c89-8b8c-13107d46da9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9a4cd25-1498-4b0c-8136-96fc49d111e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123882db-8898-4bf8-990c-2b6c53f8cc90",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bf5c53-2a04-44cb-aa0a-8558fe54f739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08c00a3-fd58-460b-bc91-826409e0ab00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f74f21-f411-4b41-9ff9-179c1779d42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8ed6c4e-add6-4ef0-a064-6d2621c1a77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028487e8-735b-4715-b8ad-2bfc776354ee",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4f4e6c-d4f6-4614-9721-d36aac685f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2be211-2653-49f1-9344-34b0e7401e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3198b1-7c11-45f1-854f-1c9c41128668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66828380-0fef-4a26-ae1e-ee765200570e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b08c4f-6ad8-408c-a206-d5389538089a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa683d3-ff85-4991-9f63-ca8c83e46b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0687bf8-e0fe-4b08-9d42-9012186a7166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24af79ea-93df-4a6a-80da-9d5100f6b57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f00b5f48-13b9-4799-8be4-df0c28387543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbaa1ae-9173-430b-a18a-348df879f38d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d5b024-ee44-475b-98c5-e1500ea67939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939ffe61-cc1f-42f7-bec2-9514efb85598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faee19a-2672-49aa-89a8-db86fbb35f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "369ed187-1351-4a92-9175-bb1484a93d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d1ca46-c1f2-4732-a2e6-3b650be122c1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de527202-e1c1-4ba6-93c3-3d80857bfebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfbf189-510d-4bce-ac05-26b045670563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e3cfd3-f92a-4a18-a1b2-d8f873db3704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55daed19-d2f2-4033-bae2-dbd0280d9728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a64866-1c74-4ce4-856a-4d6e84893ee2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c187ed-90ef-4733-996a-7648da84b51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5a999c-6de6-4837-b251-1223d95813ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139c7ab4-03fb-45fc-aa18-e7e8b89fcf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e73e5bd-1f58-41ad-b2bb-74faf64e32e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5ac6f9-64f1-4ce3-b4d6-19f2590c5019",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efec71af-4886-4036-94a3-e37ea2501019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec9eee8-c5c5-4ae6-9ffa-282b16f6e387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b17ff37-70ce-4d5f-b279-2a9a4730a64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57264cd0-a4b1-4eeb-81ee-515ff3592070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9b59db-ed60-49d2-9680-f5deef04033c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1fa96e-0fac-4d73-adc0-8d7a353c0d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5eb6b35-6fa0-446c-ba65-7044f7081d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb3ac68-700d-4c92-817f-0df326b0a514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e74ac022-3cc1-4299-ae74-094f8ad03e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc97d876-dde0-45f4-a922-87d370d9a457",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcf718a-13f6-464c-929c-2a7408c50329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2ea44c-a944-4515-b55f-802920cab481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4655d46d-2a88-4b37-9280-e43f84d0034f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3bfe984-c423-4764-a8d1-32265c709c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc02d237-1e22-44ae-be1d-04b96fa48ad8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f660eb-352e-4f71-9ea6-dc3f9232ab76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb5f043-cab9-45c1-b661-96c4a568af27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e8bf73-c362-4b4f-9f98-adeea065a8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ce6b057-a069-4864-879a-faa1af3d98ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938b7c50-bafe-43e9-9f6a-25663417b96f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8269864-5a46-4261-b377-cf71ccb8f857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14263918-a1b5-418a-9d6a-0eb9fc19b832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42158bd0-f60f-47ca-bfbb-725d489e42bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d0faf7f-d8c4-45fc-b7a4-bcea628e00a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7650550d-a7bf-4ea5-8b6e-1368efe426d1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acafd575-9d92-40e1-8f72-9f3b9ddbc3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f364a84e-1c01-484e-bf1e-8a99339e7d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1802397-3bba-456a-a639-a1c173d960a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a6ed38f-b2a5-436d-8320-3de4a9f57fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bce607a-8f91-4fe1-b499-3653f6cc3626",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c4308c-5c25-4d5d-a759-8933f9f1fb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62b7765-a123-404e-a18a-be872c45cccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13d1278-70cb-4d50-8033-f5dce0d3a41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "db3f9788-64e7-47e6-888f-2cd4b30a5d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438df12b-d75f-4f04-9811-8c72e8fd8fca",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab160591-380d-4ebf-899a-4e7a05cac280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f2780b-f275-4611-9c55-36a8c8e024fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e09b86d-f54d-4109-95ce-431e11d49646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b54657c7-7867-4cc9-abd7-4ad217ddac1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7120106e-d901-4244-9b2f-83c18b41fe84",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ccb3c5-dbd8-448c-b1f1-2aa6407401bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33462e49-1a50-43a7-b6a6-189cf9f67668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1455ec94-a696-480a-afa8-c306411ea05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9c97b0-4f21-49cf-89d6-a408edc9819c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c43ddda-f891-4191-ade1-37b43dc86cef",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d7c4a7-cee1-4ebd-ac36-a756bf4fab25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3481a73-4eb5-425f-b433-cc22da424168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5782f117-df0f-4239-8a86-2943ec976533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca8c505-bb4c-4502-bbfc-c9aa87cd2bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4bfdf7-ce81-40b4-a37c-904531fc4158",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1ba8bf-e34a-45b2-9b09-bc7c941c85f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9891767b-9a15-481a-ac79-d886b94bf450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c74e9ca-f3c8-4559-8ee3-020d566a3403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6f0fb7-8738-4df6-ab15-97f0e2b5bb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1de7a87-24e0-4562-8374-26dd24bdc13e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63729a1-1e67-4239-82aa-7f5ffa4d4596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c98c0f-f55b-44bb-839c-c35b10a0ec83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a11e41-eae3-4256-801e-ce6e4195e139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60f0d00d-5b54-452f-aeef-780245ceadbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cae211-61e8-499a-9ae5-9ce4c81d5b72",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a583606f-2a2a-4511-8d89-ae37bc0a570e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93194004-d2c6-4eba-a950-370d83e1a80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ba7785-6ebe-4bcb-81ab-8a4425dee39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "106753cd-b61b-4ba3-9c13-850a321bcdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb08e64f-550d-4afd-b397-c356bfb43843",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a10852-35ae-4ae0-b2ca-d923b24cffa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e642ee00-c6ff-4b0e-a448-31a50d6f1fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2797dcd-aec9-4678-8907-b001c898cd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1475927-6236-4d05-9127-f7381c7853f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fad5b04-0ade-4136-ad2d-cf6d1063c3b2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5d9474-bd4f-4bc8-86bc-f9c08997b694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0eab9a7-b0ce-45e1-8b87-01c7f557b48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674989d5-0d7a-4849-9208-091619755da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec496afd-e4d2-4ee4-9fc1-7ab2df3994fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e002634b-d38a-4efd-9da3-abf99f1d8b17",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca10741f-d9b7-4c6f-83f4-fc0b0cbd20de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5251aad9-1833-445f-b8ac-d2634ae4b536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3530fe1-96cb-43dd-9896-fd87d8919233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82f59d59-f028-4934-b14c-e90fcb31ef03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d6bce0-86f2-4696-a049-ae662faef3aa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193fe73d-5e24-4d0e-b368-09b7f9664829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e62cbaf-bba9-4fb3-8bad-c392d8e1c0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12926b4c-f6ff-4ddb-a2ff-43e15517fe61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef2dbef-f168-49c8-9d56-52b4147a055a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e28fc6-ff31-41b2-9975-24a0a1a4c49c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbc911c-6e2d-4cab-b1f9-0bfed53494c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47b7c80-fd2a-40ba-90cf-acce9345835a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c8fbdd-89e6-4b85-b761-4636ce198482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89df3fbb-a323-4122-adf0-c62dd26d316b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e014a7b1-68f5-4d15-a995-eacd0fa54955",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc3d840-8d9c-462d-9a5d-09bdbd053f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dbf4960-4e8c-48ff-b236-2879a55616ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9910c66c-abad-40cc-b733-1fd74c5a165d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8748cd79-44d6-4b8d-ae9d-099c6a8c95cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e72ad7e-d9a5-4785-9f31-656456891a08",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2d100f-a9ef-42b6-b54a-02cce269c9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44215740-ba8d-4e8d-837e-95ea6c89125f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ab02a9-988c-44a1-9bfc-150e50c65382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47cc8865-94b7-47bd-b93c-c9bbd25f6f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6da511-36e0-401a-a522-efbdfd647043",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24d439d-1d07-4d85-936b-55984951abc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b1d0d1-4b6a-4861-b997-cf698b90b152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074d2732-520d-47c1-ba3a-b85ee4c24fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7dbf407-3766-46f3-8ff9-51c9c946571e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26f24cf-7482-4352-9c82-e9d9b39d6cf9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cdfea0-b695-4000-a3f0-992c9133829b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6314669d-a993-4d8a-a394-d19ec92bbd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d69ab3-e865-4d33-adf6-9cb1a5b84b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5694b5d-77c8-4a4a-9d70-aa485e254473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7f28e4-389d-4658-af55-c7b48352f973",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c84adea-de0d-4ec3-a2ec-5aaba35933f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fa1f69-b25a-43d6-9db0-28d8b76fded1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a8adce-18d4-4e4f-bf90-c795bf2f105f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4cab1a-74b9-46ca-890b-910776353fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10789f8-752b-48e8-b175-f6a4eec46ec6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a1a35c-2b9b-483d-b47e-21b6daecc703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e6e177-29fb-4c27-ab8e-6e6182d7f187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c327311-281d-4c53-b047-cb31a01b7a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9168ed-8b2d-45bb-9cfe-62e4d36d20fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90bc1f2-b51f-465e-bb9b-e253ec8e086d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e1c165-248b-4c67-8855-2c24c09d9ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e33eee2-9508-4e16-9b42-c859db5b9539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a3383d-1437-426c-8feb-0e75096c1394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd0a576-58ea-42da-8a04-7c99f1e92862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e926d37-d0cd-4e4b-8d20-3a4da2ed3280",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f1f957-ebf4-4f8d-bba3-41b4f92a6d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e45921-0fea-4a1d-a90a-524d7cda49ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fd32f2-6931-4246-b323-fd181ce4b420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd28d10-030d-4087-abd6-226f416ee8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f5125d-ecd2-4263-8dd9-192761af6798",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8547248b-d55d-47f8-a14c-b593e6e5dde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0598643-30b5-475b-9c98-df854d7c5ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799205cb-b149-4309-b84c-a3d16d21fdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6745dc8-9081-4261-b48c-84cc8ef9f562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b51fe1-d6c0-47ec-96d7-72c427ad1dc0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aecbf2e-69c6-4484-9b15-016ab4c16780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62653363-1034-4159-abb1-24457668789d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0342f6-d72d-4504-b62d-d13424219b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c175c0bf-048e-41c1-9504-2fd9dc7a2901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2bf49a-28fa-40b2-a36e-078b82e4f3b5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7b0870-e7f6-4257-abfc-52a8cf1a4da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addda7ec-c17b-4821-ac7e-6a52422e8875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8657d1-531c-4b32-b6bf-cfb2c0c49c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "140d05f1-ac0f-4872-a188-c8dc4a59e161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fced1ef6-10d2-4643-ba78-4fb958efb45f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d314a5-6028-4b58-9928-1ef2f360d5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d193be6-0f9e-4ee8-b34a-3021cf65affd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d488a131-7c34-40be-9593-024e7a2b5dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8172c3f-b10c-4977-8ab8-9bf89087995d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a5af25-d533-4218-9960-da450e7fac67",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf11225-555d-4b3d-8895-97be4237bfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18609912-14fe-4d1c-8510-13608a60de30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a16f7dd-9166-41cc-b416-c1717a147fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "abec3a14-a309-4fe4-b68d-258612ddd7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c250c415-adc6-4a52-840a-e1b06528d28a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ec9bd7-cd33-46d2-93fc-5d97ca656e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee4ccf0-2958-4666-9fb0-d5b4e6ed98e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1450768-65e7-4860-9061-8fdfca316c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "60686af9-e143-4136-9ead-d7f0b111b841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adb5d7a-94f5-4691-a539-100658142ee8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d4ff4e-cbf4-4ced-aa83-64582878a2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f10d415-7965-4e74-a835-c248bd5c554d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2685fda-67ea-42a7-bfd6-c99899f4e950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "204a9100-cd4b-44fd-9802-134246b8711d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3c832e-cb09-4c48-846f-984c30c6436e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f762bb4a-2c77-43bb-8ce0-c8a89df9cf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b4e592-a5dc-4324-9b78-9e7955a52ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810f67a5-36d8-4ab4-9270-bafeb8ba6001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d33c27-aa51-4455-a5e0-e51b960ad003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbba3205-7867-4291-81d5-c78a6eedd8e0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703ef47f-8e2c-48ae-892c-73271d54b23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e15d03-5866-4cbd-9822-0202de7f3300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236e3fd1-f1e2-4af4-a090-116413390837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1a76d8-420f-42ac-a769-37cfd8684931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38abd569-88c2-4e07-b412-035c377cca26",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff00758-e5f6-4496-bc2a-c3dad65b3b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9d7bda-4c8e-48aa-9aed-870ce6a56555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f9207e-835e-41be-9584-741b3af94a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb8686e-964e-4217-ba29-6575ae7772c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52fa079-cb3c-46bb-bb8f-9518c60e765f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaf8835-6ab5-444a-acb1-5a673465eef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbed275-6a12-4b09-be04-499fcc2fc289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dc92c4-0901-42df-9ea0-06a7ff795275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "603f87c2-ea8a-418e-8bbe-38009c8f6bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396bf4e9-9ca4-43a2-aa8d-ca00fdaafb91",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2c2a70-83bd-4374-99a2-51143c22ec33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a433ea-f300-48b8-8bf5-c2f19123d229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129969e2-ef3e-4082-a42b-102c00af0e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87d1207d-9153-4981-b937-5d8bbf180dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c41a3a0-fce0-44d0-b80e-22141a8bd035",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276f181c-e4c1-4453-a07e-90482de2d83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe793ad-e7cf-48b5-8f48-23ad6bea0035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a4cf4e-edae-49ee-be11-7708b1490a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6938e0-ee5c-42c0-a879-6cf20f2ea89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ee00c9-acab-4542-995b-48380950ec29",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7ca0cd-023b-4817-913d-2079e66743b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad4662c-5fc9-4f46-b11f-e26f99080efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b773921c-f246-45a1-a290-b4f3056a1804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca11929-c59d-4afa-86a5-3045f61379cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0470ce-35f4-4909-8a2a-e1ea5ff97351",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057d3148-4313-43ce-92a6-e03881b9d53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daeb83e-070d-439e-a2b9-b9884c44e162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527932b3-fbac-4c30-99a0-66120db981cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40ab9bb3-c76e-4b56-8661-ef4e38cb1e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6888793-ba6b-4696-aed6-f70005f98c86",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71705fe6-b745-4168-8afb-958537457669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ad1cdb-43ce-4101-8424-498cf93807f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f1f2b2-3f9e-4cfc-bb76-57fff7ec783a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdf962e-c628-4888-a9ec-fcb3929559b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f401ae50-2f91-4cac-8a23-76156a002690",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5146c32-c872-41b9-bb84-6b2ec5e4adc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c830186-a6e2-4a83-b6ca-2385e27aacfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81fe778-75f8-489c-9517-7762aef905fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e5c515-ff16-4d4b-8191-80d1e821e811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40034c3-3e0d-4b2d-a2e1-4e66950d90a7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b75831-4163-4066-af2e-b76de8a1d6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904b6aec-9b86-49ba-a5ad-f59e5a307fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513c8ebe-3286-4cb5-8bec-697603f1aece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abfbcb4d-609e-4d2b-9f00-6a4d6549b0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa77d83-a126-42ce-9904-9657631ea34e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6718e97c-5c95-408b-90fd-3546eb06321a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14de0bf7-0a87-4a15-b752-194a0f70b0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ec3e88-d2e6-46d7-83a1-da3e7fb4a784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6af412-0fe9-4828-93ef-86e700fd5758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d1df63-ea89-404b-a14d-cdc291fd755a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aaa00ce-bfe8-48aa-a2b3-64251a0e0a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0519730-5221-4526-86f6-f5b00bcd994b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1f8616-830c-4308-a94b-944e2dc010a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "afa1b431-6d3e-4707-8428-b7af274894ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1f8648-6680-4e81-ba57-6ab59b6b266b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86b3125-0364-4175-b8c8-58e7db99ea87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103638bc-22b2-4edb-aa07-b31402580ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1acf70-5b90-4f05-86be-3529ce75b2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e72098e-8ad7-4dde-af0d-6a1ef3af1b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40f296a-ad0e-4b55-8ea4-62c0915c264d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e21a12-3384-4077-aab6-c6f5635732a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7735d7b1-bc5c-4086-9f31-2786fb4c0e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8e28ee-7d3b-4f82-9379-1d8a5d86f739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88ca97f0-6f14-40a6-9d84-541c8e6d498d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f202cb3-1292-4ab6-8c3a-3f26b3b41c95",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54c0d6f-5896-43ff-a359-c5884fbd2d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a86fa76-6a14-402c-b834-959cb657a66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bce2e9-c2d3-4d45-87dc-b09d7911f64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fdb1f4-179c-47cf-bb08-ff304ef9b7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bd751f-c2ae-4b5e-a446-cce2302d8062",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5995664-d367-4441-a438-a248be206742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d0ff1e-190f-4965-8dd6-fee18d985f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40e0c07-2b13-402d-8a2a-cf918031445a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a538959f-9c22-4793-86ba-7940e4b6264a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a925438e-4e17-4048-855d-20927171b656",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775fb454-03fb-445a-9d3d-477095c72053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558270d6-97b8-441d-b96b-21a3d53baa61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70f8bca-4c59-44d1-8bf1-20274a85565f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3a5bba-4e0f-4c9d-b77b-28d83ea79c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfa68cc-8047-4c10-98c5-55c52142aaa2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da38c51-5515-4f3c-b04f-c3d71dca7c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14986024-0bed-4ff2-83e7-6c6c3225e426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69748e9b-d841-466f-8848-44d2a76e6f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8809edc9-2aa3-4be2-876c-869b22de6c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ce1820-499f-4b91-b716-40d44ef44275",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33862099-c924-40c6-9177-275525c02dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d1982d-52b7-4a1e-8672-b210ba971315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5f44e5-8cf1-4c99-812c-978bdb53ffee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5a96d7-9048-44cf-8cc5-52183d73f72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d37ac7-cfff-4e4f-bd17-1033d86b8d51",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367ab6a3-9712-4030-ae99-9f5b102e6b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836465a0-e331-43ba-99b0-68c3a12bc438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a154b79-31f7-4c4e-ab26-37355f3812a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "119097fc-26af-45c0-936e-3f79a41b0118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f324e13-a2ef-4979-9a46-d61f0e7de37c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7ea311-4b26-4a41-93f4-a9bec39eabb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9770b256-b3fc-4607-be60-7cc367397a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e475fe2-a6f6-4a74-b212-654bc5e9147c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0be9d2-ce0c-4bfd-8aba-d95d5c9c8791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f3ee9b-5a48-451d-8b29-72990ea455e6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f536d12e-7e43-4797-ae73-126d7a611a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979b4710-c19a-4d5a-8fd5-8cea1b1c4e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76adf29-9a88-4481-a24a-87ec96e63b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5dec9b9e-4579-45a2-9e8a-3ef4f5b99f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121ddf20-63fe-47ae-a6c1-a15516628b46",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a770d99d-0783-4b51-851f-8ccb2af5f331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3798e0e-d3c3-449c-893f-b24b94db8eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f59a20-e3bd-4c6c-aa44-db379a2fdcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "77a03d30-f297-40d6-9549-253a7a72f989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499f64d4-8686-42bf-9dec-94c4646767a8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbd49d0-762b-47f6-9908-625458764c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9532f0ac-add5-415a-be81-de805a21415a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9b3ec7-f8ae-4a74-ae39-75cb054f902a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "290b0402-368d-473c-bcd5-876bb1fb0b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e5f9a1-6889-48f9-89e4-16f74e21780b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88ea72a-5b53-43bc-a622-14a630d06753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c2490b-27e3-44bd-a480-d1b72db40a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0402866a-7cca-4f8b-8bf5-54fc1282a7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37107cb3-792f-42a3-b6bb-7df7196a0066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3c79f6-387b-4fe8-8db4-e13585ea0a8d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16566f97-9fd5-4ee3-802b-e86b3d6d4f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dddadc0-859d-41c1-a2dd-37a8a4d531be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3574af83-eb1b-4194-af49-537577509b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "711beaf9-c744-4be7-9ef5-9abb0bc52f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2d9da3-953f-4faa-b601-38b39ee72c94",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465ce8fb-1c58-45fa-98b7-b20e8324e217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfba330-320f-4ffc-aa73-dca11f72a61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d276f18-8142-4a0d-90c6-d82b1709d5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d47389-2695-4819-8fc2-fc3048b3f113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e27b9e3-7aaa-4af2-a0c0-20497ecd5ba7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14ffe50-3a33-4a02-8007-bf347425a3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da20794-7ada-4d8c-a1e0-eba83b8ba9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854a81d4-497f-47c1-9b4a-5848fbe690ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c0cb9f-37e9-4dbf-ae42-5afac2cca1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a382cdac-6462-4bf7-b3a3-77d89f609e03",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150aaa4f-b260-4634-9f27-bda8cd9413a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f482d2-7e39-432a-849a-4285492f802d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97ccc6c-113e-4534-8dbd-582449c61311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4ff9ee-d413-4000-8e13-16281f53b1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129f6393-39be-4d4a-aa53-631b99bfd1c8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ed2b80-6bf0-43f1-8f89-d7b15aaa5c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa0b007-ff6a-479f-b911-7417eff86079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c470be-c4a0-4844-9496-04c830c3891b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9bff10-eae0-4ac3-b1da-f905515f2145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e82eb58-977a-400c-bed7-a292c8fd5117",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26486d8-1bda-414a-8ec9-bbe92e6c5869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d2c370-53bd-4043-af6f-bc9a5c9fde21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cd6275-6c53-4f12-afae-d8cbca2dad3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63f6c6f2-18d6-4c55-a379-ace2a7ff34f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f57c19-d35d-4bff-bc77-b62f9a5c676f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca9147c-b91b-42d3-816a-d0dd05bd5640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea222dba-a1be-4cad-bbf6-405bff66febf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507e810d-eef3-4cbb-86f2-31ddcea08771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4285d16-748d-42dc-8cf3-cc5ac71e252b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe951717-1a0b-4d46-a738-55c1818db425",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6579f13b-6270-4389-8381-1191b499009e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da956fc-9888-419e-ba35-cf1d4689d016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0784365-4524-4c90-b15d-5a6afc34758d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7aedce-9747-4ac0-8295-a1899fa132fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0206d00e-6aa2-4b24-82df-b7686a94ded1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8a3dc2-c32c-4cd9-95a1-19f435c8b040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0733fd1-834c-44fe-addb-756ed6690669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25372ab8-bd1c-4fa5-8fbc-fce28b53a0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82a46075-916f-4caa-bfca-c9b80277d772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fd9ca6-73ab-433d-8e11-629082d7224c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412f6c41-9d60-401d-b599-175e68c382dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf92531-6ba1-4cf9-bc05-a129b12bb34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ec27a1-859f-461b-bbba-3417058f2978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4154eaa9-c6b1-4d74-b824-9766af9db57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35bb889-954a-41c5-9f23-ddfec7e5ce73",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cd92de-2875-4042-85e8-195d6d401d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81df19eb-dbeb-46a1-bdea-0cb0dd1dde80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476b021b-1241-4694-8009-3cc58e658cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba95beee-00a7-45e1-ba46-09ef4d3c0bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b35ebc-282b-488c-a9d8-006ef47ad362",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8066c9f8-a2fc-4630-941a-76d46ecfffad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d2c49a-93a7-4baf-b59d-88cf40d774b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ddb8c5-f4b4-4b4d-9db4-377e6937a40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19239e4b-a506-4100-abc9-b02ea5778fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c8f7e4-5bb2-4c7f-aa0b-9bb3df10bab7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d33082-52a4-44a6-97e1-0394df68e1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a55f848-b826-44be-abde-68b0ee648528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a2a902-5fbf-4293-a456-263b2f207fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a73013a-144e-4ae0-8d42-61dda69abe2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48737834-3d7e-4b17-80b5-4ce4f575620c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fceb37-4e00-42fb-9657-c8d755dd5f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f33de1-5c99-43d4-8f6f-2c23b0c22377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adfb229-b6e1-4b20-8bd8-244eec2c899e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c598bf0f-6f04-4813-981a-48eaef4a28bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8314584-0ffd-4af7-ac51-4ec69771bd14",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433217df-438e-433a-b193-71adf5c88dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005bc950-39ff-40a8-85f0-d8bb3ac2c79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ee541e-50e3-4ec9-a6fb-4a494f6f071f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "590449a2-ac1b-41db-80ca-6149a5495bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbeaf496-9217-4e4d-89fb-3f62e86940a4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb67873a-05d7-4e21-8757-a8ab23c9dc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d4f055-d0ee-4231-b3be-ee97d2375bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0ee1b6-b7a3-4dd8-bc58-96ab5e344ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae31ff7-8732-4c4e-baa7-16d0edb43c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549ec2e4-3e46-42ae-a6de-c8e25dae0958",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390f7c8b-7610-4589-9630-020d4da89125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ed9174-4e26-428f-9166-5426eef74a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a2edc5-8610-4483-afc1-1f00ebc970fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a81382aa-69fc-4e68-bf4d-a17864668b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4478f52-10c3-43df-b745-7887e6dd2ea5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96800739-2e2d-4d6f-9c0b-b3e09651ea37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e233ec-2862-4cf6-a1d5-450058d84bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19467467-4838-4e02-8320-308a7dc64339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3041c258-4aee-4602-b341-cb270c7ea4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f82abb-0397-4170-80d7-812faaa9ddea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bdddfa-81da-49fd-b576-4453e47d0d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7dff38-d805-4b9f-b1aa-df6e542a536b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c965cdf9-55a6-4a56-8568-cbe4365f0806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c76b37-1d2e-4f7b-9379-693d4761923c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13585336-36f1-455b-8656-0271a89287c4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbe7ede-a11b-4a36-b0f6-e50becdffda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1cb5815-a52d-48dd-b8a1-3ec8e7667a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41fa287-0b7d-446f-9821-9de300c7bcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "41adf7d0-40fe-4074-9859-34678d2143bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc74793-1fd2-4ecb-be52-329df3fd60b9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8461ba2-78f8-4088-97c4-4ecdd8c55827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3a38ab-eadb-4e7c-b81f-b76bfc5a5dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15614c5e-de05-4a29-803b-1befa3d01333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dadf30c0-9cca-4f0e-adff-b3518e55c0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08017ec1-d6cc-461e-844a-36749d6d12d0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ac7d49-9844-4984-b686-da0ced1dbf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2d564f41-5568-43f3-9326-15f48b399eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f49fa47-0302-4d69-9942-0749ef8f8bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a48449dd-1840-417a-ba17-aa2994fecf7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "564d6d4a-0985-4f27-b074-dbac3e6f8427",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d238357-714f-4984-8f13-ec3c11c8afe2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5021fe03-4780-4e60-bf2a-7a753f4b96b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a960856-0f5c-4a7d-a8b3-0105c3e88cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda8068f-2dc7-4f28-92c6-7253eb2ccb81",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef9e21b2-9e48-4e06-ae14-3fb1ba05749e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72c649ad-5a6b-4931-ac44-726f705adb85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4f9046e-166e-4c30-93aa-35d776ccbb37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c425f971-4613-4f82-876c-45ea541dcd1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a23bcce8-cd6b-473a-aeee-b27e50ebb936"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2c0f5bf-248e-47d2-bb9e-a94c2dd13278",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "924103a2-4a63-48b0-a721-9325af84da49"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6b35f3e2-7337-43de-ac8d-eb0a2895761b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "079658da-1f44-4da3-a267-9778c2142000"
                }
              }
            ]
          },
          {
            "id": "d52c73cb-f2da-4b33-a92b-7705b3b8699c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2b2f768-8bf3-487f-addd-4ce870588562",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8a927732-9798-4091-bd41-90be71eed3ae",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba768353-d704-4524-8930-ccc192af0f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "70f66579-5a92-4982-aa02-d61964b73be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4b0a8a-dcbc-4674-b6e6-d6d1f3cb4927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527b6e64-4580-46bb-94d5-1d8d911ab00d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5497c37b-f4b4-4bfa-94e3-109307023dc6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "848dd94d-4634-4cce-bc22-6629eb7b2b1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84d3ad6c-bc5d-4e9d-b6e3-6b9671c39a0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fde5ca8-51de-4885-931c-8d63d29465ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd5a033e-294d-4a58-a243-2663c6482d86"
                    }
                  }
                ]
              },
              {
                "id": "d44f403c-0eb9-4de0-b323-5784b8b797cb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1fb7280-7eb4-46fb-9ba8-d71fa2df6bde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed298edf-f0c7-404e-8075-65df31b2f947"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a121f3ca-b86e-4dbd-8c07-638cb5b495b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b2f717d9-69d3-4456-99b3-a92ea06746a7"
                    }
                  }
                ]
              },
              {
                "id": "0befa520-8e51-4b19-97a5-dcc49f60183c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "366aeaf6-cea6-4a3b-828f-06622ff367a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34ee9e00-9c25-48e6-a2c4-51d3702613e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b4788fa-45c5-4697-b0c3-d0da57bf3571",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f806d54-bdf2-4ffd-b271-ffb865fd4c77"
                    }
                  }
                ]
              },
              {
                "id": "2adbe73e-4a0b-4066-9180-29963a849fce",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9401166c-797b-4703-becf-400148ff18bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48bea3fb-70cc-470c-a63d-a06d29653f5a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2c6f911-47a0-4f78-9143-0c6d2e171a51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d41963e9-e3f8-4882-a663-2a30ffb7dd34"
                    }
                  }
                ]
              },
              {
                "id": "44e59489-3412-4f6e-ab84-4a5a23e54e37",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50dacd4a-62ac-4306-b680-98d88a68036c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2643202e-49e0-4298-a62b-0b3cb4a72fad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "442ce576-14fe-4fb4-86a2-f2f074335353",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3686b307-b365-4d4a-9eee-84bbeb4025e1"
                    }
                  }
                ]
              },
              {
                "id": "cadaed5e-7144-480f-8077-f1270b21a0b8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "117d3993-5b5e-4cf1-b4e1-4bb5c6d92002",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f756504-22c7-4d38-8dea-4507c836fe9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a64b8d11-b264-4056-b1b6-5459d2817c74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f844475-e187-47ca-a64a-df76aac25099"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f626cb39-46c8-4dd6-9187-8eb062852a9e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56118028-2b6b-4f78-8397-9e98122a559a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d03400fd-942c-4a32-ad49-78ce02ebe81c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cfacc101-26e2-4594-89ea-d5b3033e6704"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c20f6849-3e9a-46ef-a289-7084410a14d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "98d68114-25c9-4d45-b556-d96478a23764"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41568d40-8fd1-4455-9f73-3f923e54bb84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e015fec-4aaf-483c-8ec5-c58efda4e093"
            }
          }
        ]
      },
      {
        "id": "e359510e-75a2-42d4-954d-c42fd6842d95",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7d25799f-0e6d-4633-8a29-07d9da0a037c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8fd97d82-3a96-48d1-8fa7-16d3256394fc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8cc2a2a4-13e5-4a3a-80ac-790c0f1b3672",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059155f6-3b72-43ba-9a0e-2c273fd0d8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9bf506-ad1d-4970-8272-a01fdc7baaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e24326-cf09-4047-bdca-9b99d4998135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9d2103-2370-4c86-bb8f-b331001839d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35ccd39-46dc-48c6-a851-480095103de4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33992b24-0188-4d10-b095-5c7ab768b5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77d9b73-d413-4283-af75-8b6150e5e69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27566092-77b9-45a1-aaba-24ea46240863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb8e624-81d0-47ab-a97b-41304545fff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf780f24-dc6d-4fd7-8395-320e3f5f4dd0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0211769-82d3-4122-8250-7a498a71f740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec63c22c-f311-4076-bed3-2a449e7d0ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3fb6f3-7b37-40fe-bd95-cc253c8c3a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92434860-2224-4375-9aa1-3e543cc197e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eb9228-0c1f-4afc-8fed-94df0f7f779c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec93c57-a037-4589-ae7d-52a13d952109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9833fdcb-0b7a-4a1c-8e12-565fd6e0de00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3c2e7c-0cfb-4621-a106-6ef67e764663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e9e4cc-975b-4f8b-985f-1c58dfa640b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493cbc0f-6675-4b14-bb8d-576e9f3010b3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4436686-5788-4827-96ed-d6428a403995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84dfaeb8-7698-4e59-b921-caacff2c65d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a216d7fe-10cc-4dcb-beb3-07f007814eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9695d3-97be-4ae0-8711-dc817c987d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1404d3f3-7161-408b-b273-acfc1475a77e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3005997f-2866-492c-81b7-ed24d2dac256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8e8142-0983-4bc7-86b3-32cc398f1f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a37b481-4d2b-4a98-b19d-7162d93b570e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3029fe08-432c-4159-b139-659d04dca976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782065ab-cf6f-407c-81f6-548a61acddca",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae000510-8d32-4965-9da8-f3fde2f38bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de91597-1c30-402c-ad87-8a2a99bb89e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6644767a-b52e-4301-94bc-ccc3af5e0c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "893fba5f-3103-46f6-afdd-09f736fa03ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3229ddc-c3b6-4158-9076-0d06f01d5e3f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ccdd61-2d50-4fea-a87f-a2675c069118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6296769-3aeb-4fa4-96da-93d7b44fb887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db12946-502e-42f1-bfdc-59a665d64b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07bc9beb-f6b2-4893-943d-7e40fd8beb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4436e7a5-ef8c-40a7-aa00-f9b3196c31c4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdfc73b-2fe4-4c83-a229-dc2dbddaf4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c40a3b-8b47-435f-8bb8-84525efcff68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7087c30-ad8c-464a-97a9-6a170bd555cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8ca6fb-c4fc-49e6-ae38-b7786c916c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18139f65-bf42-47f0-adf9-7926c5e40422",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a115a0-a2cb-4d9c-93fd-baf222f7b379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6dfed22-8d89-4d0a-8354-e5ec0070a482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbe04e4-8bcd-43d9-a650-0c522eac03e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58cc956c-1249-4b89-9043-225a6e7841d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86634ff-eac0-4e75-b7e7-57f42978ed7e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c1cf5a-a381-4320-a600-71ddf5630566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd736a4-0216-4b72-8467-9551c3078f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74871513-5281-4c8b-8703-2dc8da594b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "db5c5c99-4fc3-449a-94e4-646329ffcfa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870edad6-344e-4ffe-ad7c-4df0ab7a882a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb353db-a0a8-4b76-930d-f2a927c69d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ff020e-b151-4358-b23e-7fd5dabd2eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e1788f-d10b-419b-9398-631dac2d7077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "444db082-3321-4d1b-8169-e4d749eb101f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589e4520-71c9-4f2f-86f5-fe70e4aa7fe6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfccd53-b444-49cf-9160-84b63ffcc2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd94924b-99f1-4d91-9b20-1689f898c6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a2b331-ac92-41a6-9f91-60533291ba6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2a614f-788b-4363-8d2f-eb18470e20e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed0bb01-350e-4005-80fb-bfaefd9a00ed",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c57403a-0d5f-452d-813d-40564156d1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fc1d37-4183-471c-a12a-10aa65e2bd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bba7c2-20d0-42f0-ad09-868e24bc6938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a998b9e4-fa30-44cc-9195-d164ada4cedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc2ee3d-c0cd-4eca-bf22-98960226326d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c57c7a1-e1cc-4fb7-9aba-0a04f5e63077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d9a611-6dec-4148-9469-36cdfac5e530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc926144-1b6d-4ed2-86fe-64485dbd8387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f549f32-943b-4885-8f6c-4bf74667418a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd577381-a3fa-4a9c-8329-2e88aca64dc3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed63e8b1-88a2-4b96-b9b5-84d511131842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f593c981-b410-4845-ba74-4558bf6bb076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dd78bf-b8ea-4cde-be7a-2eae4f1e96cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "891deaff-ac93-4496-ba3b-5c32b6a29efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df544593-cae2-4fed-989b-2daad338c554",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcabb26e-2f6e-4dad-ab2c-08f2385d81d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a74e73-58c4-4029-b1ca-49296b87b14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe77828-f772-4eb8-8c61-f79ce6d7a24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "252f8a03-4737-4762-8474-be51af3626d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac69d2eb-96c4-4425-b0cf-0be871512562",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70a2fca-e40f-4546-9891-eb9c5f4de037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c4c045-7dad-439e-8564-2585f538f536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16ca997-f412-4f45-b1e1-b66e2bb1a116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aad0c8b1-0562-49dc-a2ea-d9cc04a08bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48143da0-172e-41f2-a42e-58ae0c9b95b4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c9a734-2324-40e2-b724-578b1e5a3157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76abeaf-8dcb-4067-bf85-45b15847980b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad29e4a-8454-4aa7-9c28-d517936be566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38a0f237-f98f-4493-be6d-9805e3306ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15520627-93be-4675-a89a-25d13397c657",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50601ff-94dd-4ef3-9d5b-5bea0cd98904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d846e7d0-29ea-4e8f-a779-596116464223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5303d2-3c1d-4c35-bfa4-2bc18826770c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54c586d7-6b78-4a3d-8ded-0e52793cdf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77b31b9-9798-4670-a674-f75d366c29ce",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f03634e-65d1-4661-b4a4-b5877fc9530e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73649fd7-9134-4b0c-b0cd-396ea75db456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3754ac-b49f-40bc-8713-064eeb296885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42629f2e-54d9-44bd-828e-8fc889cfa6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd3e84f-f917-4b9a-b6cc-13b1e9b688ba",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6291fb0b-53fb-4bde-8df9-c908c0d186f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e3db29-72c4-4726-821b-af61e952764c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0ddb80-2667-44f3-91e1-e0c4b71c826c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3809bd7d-6282-46de-bb77-901f40b24493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dd6219-191b-42db-b7fa-91edd0735725",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fbaede-b740-4b4c-9ace-15f661f17a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe265ef-f30b-498c-8dcc-881e2dc4ace0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890daeb7-087c-4395-ade1-49602bfca42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26034dd5-be2b-46e1-8c05-df8c11665a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89af294-a80d-4b73-9f90-9842e0ce9273",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc2774a-6347-4294-8a80-f0f26a2b771e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c16801-0090-44e4-a5ea-a51fc0aab77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f780da-bb8c-4d2c-bd45-8f910043aec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "932984d7-1fa9-4e4c-9705-3a4ee4cb3ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb9d7c5-dfc4-4a4f-942e-345e19db0c84",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbab6fda-20a1-40fb-ba9e-06d0096e9b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2f81e3-1576-439a-b7a6-1cf30ba2018a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0eac7e-0547-4f6e-b77d-ed4d983a778c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54fa07fd-8cb1-4ba6-8f5e-0f8603436963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adde9450-a23e-4e6f-a1eb-0f4430de01a3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0935e5b-dca1-415f-a8c6-1e6fc4ec59ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0740a062-a1bd-4fa3-823e-876e2dfe1fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1953fce6-cde4-4d0a-b691-2a533d5821f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9166c4cc-d937-43b2-9ec7-bdb7300ba979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b22b84b-1a58-4822-93d7-c9aa817e2c67",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc1907f-8fb8-4fe2-bc38-a04c9017afef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9cb7f7-51c3-4412-ba15-d213e66e9354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e185bb2a-9e5e-49ca-b172-f6c5cd6a6878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4a79e2-ce2d-4b21-a06d-61395d0d14e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77643dbf-9301-400e-8c45-da22097886a2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338863ef-f81e-4704-a8f5-e4db4d08e84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992ee999-4d8e-41b7-b5c5-0ea798dc33e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73123c6d-fdd1-432f-b67c-76a3b24857ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6a9420-af9c-42da-911c-1d1fa13c3a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b93b1b7-336c-40ae-9e5d-5d751ebbcd20",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45093fc7-404d-47eb-aa61-e4f9c8e2891c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd97060-a344-4467-9f1f-4d3363897d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dee45f4-a752-42f0-ab8c-a95432cadde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d18c5f-a423-41c2-bf87-12963d35a42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d1d743-e1e1-4619-9552-43bc40413051",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6f4534-b51a-4d48-8dd7-605d7755a038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd1f402-8937-4525-aa97-daece5a5f260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec46e5b-accc-47f4-86f0-906da76e0f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "378f8912-332e-40ce-97f3-21e94ebf6804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27ec3e4-30dd-4632-b3f0-4010fe4ff5d7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ad17fd-a6d6-427c-9cff-e7065846129d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deff3fad-57bd-4c36-939f-6362639bdeea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c9aa1d-2f9f-4b90-bedc-268f153a9e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5302c3-3c21-4f91-9a00-39b05ff453fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991b2759-0c7e-49db-82b0-545e63e493f9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24548d3d-91de-463f-afa1-035e0ca4d307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fe5038-28f2-4c68-8782-8d10a79f1657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1040df9a-2c31-4371-ad1f-3c2d602da6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5578d68-59e1-4b99-a50e-2b3e4ec538e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d80af6-0628-418f-a6cb-55601544e6f1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc346b8-fddc-4ab0-9038-4e822d87703f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ecd699-3212-49f3-a107-8898d1d3c9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6be2853-9829-42d4-826f-1761364f72a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b49e8fa9-fcca-4549-97f3-9fe6bba24812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fa46be-975d-474a-af59-a7ccde49bf56",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f07a823-2a21-4fc4-b182-d6ce5b3f2759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea7eb92-91d4-4d91-aa89-8d78011bff34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90eb706-ef1f-493d-925a-9a39b5777a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd7a1b7-3225-46e8-a5ac-25db51ee00f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e3d045-586e-4d64-b3e0-714ef089b42a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e786da57-422b-44d9-8682-abdc5ee7b8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5ea2a8-e6f9-49a6-a1c5-bcccdc931ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b47344-2e8a-4196-8283-21452a2100ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f8507a-6133-4be2-bcb8-326b39c35043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15557d8e-3c0d-4236-a398-2f5ea8012dd9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa57cbd1-008c-4054-befc-987ea904c8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15cc3d9a-74c0-49aa-9cd8-ba937fa8c8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf7d6a8-ebf0-4e01-976c-e35925e70ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c81cdfef-746d-472b-80f9-eb12fca0fa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77f2821-156a-4cb1-a74c-a560c07916fe",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b244ea57-f27f-41bf-a03d-e942fba07f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475dfe20-f2d5-4f83-9304-ad66c1a8307c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759d27f4-d139-4d80-a65d-25a6173b6849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0640e462-0c46-4105-9110-2b531580e417"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aa8b5bac-4f8b-4e6d-9c73-0343df83a43d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "696352f2-7085-4d35-a89b-5fb136b1f289",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a061506-8751-47e1-a75f-e4ab074f25d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc87ec1-b9f5-4808-b4f5-fb40671dad16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4792cf9-ae5d-4e11-a157-929d05c24031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43e29b3e-776f-4428-8773-bb2e06c75af3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba8cbfda-02a8-4d28-adb7-781e0956bc3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81ec91e8-482f-4494-bcde-72945439069a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82be4c97-e290-479f-99f9-8e9b6fd25ed9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bec0a9e2-2b86-47d0-9e11-be8fd1085f06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ed3c96c-8cd8-4b8e-87a6-7dbc31dfaa53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "01c4c177-63d4-4063-b482-74b23b9041d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20c8cd51-a1b0-4b24-827c-cd68ae9e0bb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "215879f5-04ee-43c9-9595-53dbb8a2d960"
            }
          }
        ]
      },
      {
        "id": "32f681e4-0bd4-458f-a444-9d6e728395f0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f53b6886-3e5b-4fec-9af5-199edcb90f1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11452b2a-faa3-4f8f-8bc9-2a968203672a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7073cf32-4d59-4245-88e2-99b95f9bad53",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1664a183-a6f2-4ca8-b4de-938d9e83fd12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5202db-0abe-479e-ad80-381245252bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625f472a-ddf8-4121-8529-1519a243b2e2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834372bb-4a08-449c-a936-ce49ec022439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad346bf1-ba26-45a5-9ad5-b9d3cbea608e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71278c2-ca26-4f17-8329-0380af8e412a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062e094b-73dd-484b-8350-a40fb9b00d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308ac4f4-737f-4079-b19e-ade4f1600216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7145142-3fde-43ec-980e-77ccb44748e4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58528960-ef82-4cc7-938d-80e59a042ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07a8ad7-1f02-405f-9cdd-731ee7657762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75d6d56-4038-4453-9655-fc31bc81d9a7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2268b14e-3285-4f58-8e97-b44f384ca6fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc690d1-7c22-4ca1-a5a1-821cc0feff9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7492788f-c3af-4ad2-b858-9d35da6d3dd9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3a09ad-4e91-451d-80db-7911f4fa8ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f42cd0-fd3b-4f59-b49c-d7264459faa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d3813b-b20e-414e-a3a2-cd5cb2fce7b4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ddca7b-5ce8-42c8-aeed-d32ed4b569ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb053ba0-7cfb-4d92-b82a-09a90ceb89f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6e8585-89f5-4c3c-9475-07c32741a977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814396a8-8d4b-456d-b0f5-150a99decd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1a8038-4e57-4c30-aaf3-d2989dafe3ca",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d11119-aa06-4008-8f98-02ced77e447a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3749770-37ab-4c2e-ae62-31a39f455d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d595be9-c7df-49ce-b22c-092a80fd5469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0430da16-80c8-4cca-8305-b27742815a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28be4231-48d6-48b2-8eac-77c32d9f28d0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f51a684-4540-4bf1-b8a0-2e6a1dda21e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d6d8844-567b-4b83-8993-0d4e41baab1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a04616-fe1d-4775-af33-a8011fc1cf4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab1e7a4-79d0-4859-8911-e898fa75c997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e2f1f8-4bdc-4dc0-93f4-2d7bf5042c16",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356d17e1-a9a0-44e1-b5fa-247aa3b316e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c2c2bf-cffc-4658-963a-8286f2ba2990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed6df57-f696-4603-b4da-85c070af15b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1886a62c-2783-4b3f-94e2-08056b6325e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2705a4a-a6c2-42b7-8ed8-1f654cea53fb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5366308b-6855-47d6-af42-0a0deb748808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6b02d6-e074-41f7-9a67-905203f0822d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06505e0f-3317-43df-acfb-208c582b1690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81641816-ca6b-4558-b6b6-3fae189bdb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee0632d-fd47-4347-a000-1c532d3f998d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba48fc6d-b8e1-49d3-9eb7-c48ecf51cb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2531eace-8d42-47d4-92f3-a5942e498890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c4ea6c-a223-4619-ae97-00f9e623119f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73960c79-7cab-44bd-b62c-5a44f2d1a760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e47bb85-5192-4d7e-9899-9401d31b8c38",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86d9589-4770-47a5-982b-f5fe37688a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ac7632b-3c57-492b-a8f4-4d82c2422f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f3682c-f6c9-422d-a6f0-fc1770712b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba6d067-2093-4ed4-be5b-57e8e2f41aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ce2d38-1f21-4737-96ce-33f59ca21b74",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49688dcf-1ba5-4adb-afb9-32b327ed834f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3b068d6-2e19-43b9-8416-d83f76c835b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd42e8b2-0f9d-4140-bc57-93a85c387b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2213eb09-d39d-4439-865d-2f3a8f642209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e2735a-e490-4343-be2f-2f1fe7d52609",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab651d6-811e-4fee-80a7-429073ee08e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57857292-fb96-48c2-9c50-c6ce28c976fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98f52bc-c5a3-4d18-9b9c-3c06d454f03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c5550d-b996-4480-9902-f45c75815a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfee6aa7-f799-43b6-bf8b-fd41ceb08cc2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9454e825-482d-4f2d-8c2c-7d982fa7648d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9386b7f8-d1db-4c03-ba2a-ced99109429d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdc57d5-1458-43c7-b482-04720ccd6f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517e796f-78b4-47e5-b1e9-cf13c0365bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1806941c-94b5-46d0-a8dd-608b083294b4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4b915f-2c87-4912-9a52-2d5b389a7be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac04620-afa5-4851-bcff-ac0d4c003455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452738c9-6803-4c65-af12-72ee337b4cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be68e318-2971-4ecd-add3-51cad7797abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48b44d7-5d10-4fec-b0ce-5e041df97d3c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e14ddf8-d18c-4690-9b06-48f478e001b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4526f7-ede5-473f-9092-f020945e9e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a9b585-7240-4f6b-a211-2faa2e28aaf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b92344-36a6-4bb5-a957-862e88819585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67145b3-c095-4228-8e73-01b5f286e107",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eabf49-22d1-4c48-93e2-ac3fd961cbd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b849c839-6907-4567-97e3-ff8433a0e4e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "797799e2-ac20-43b8-8731-826c12aeeba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e591e2a-3337-4077-814e-5c15e56fef3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908004d7-2a24-40e5-a8f7-d3a4a1ff2981",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c7b3ea-553d-44b7-978b-dddc38603bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808006fc-50cb-4d0d-a959-99c6bccb5bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfb1c7a-fac8-4db5-8d71-94df80d9f053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392206f5-c85a-4f6f-9543-e12b4df30f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c2169e-8b00-4434-8186-6584fdcdd1e8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba672201-2739-4ae3-8714-6681d6131e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6e02b6-a2a9-4451-840d-252d1279895e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776cb954-86b9-4dd0-a3ad-dc0d2a69a6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518b3238-bc2d-4468-b8d6-4d9d0e356fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62f751f-24db-4d3d-9734-e7d54872ffa4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457faa8a-86f4-4be2-b37e-ee3c458caf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5ea3b7-e4e7-4dfa-a86e-1488e1e876a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e47656-45d6-4696-852d-d74829f6e904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a877a9a-c055-4aeb-9ff3-e397a3165df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222a5fba-dfc7-40d2-9602-3e0a2bde4a4a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f713347-2b2d-4b64-9bdf-7d8845887ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eedc94a-ab6f-4196-a58f-0c83d3d87bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63910af7-64a2-4ffa-bdf4-ed7ed87c426b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab4367c-8af0-4799-875a-8203d9a27e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c8736f-650d-4ce1-8ead-ec76a429846f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe6c8a4-aaa5-489e-9728-6938b06556ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "486426c8-df58-4612-aa5b-efc3b3c3bbec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4933d2c0-d8ea-4419-9587-d767dc4b2c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad9f55b-674f-4b68-861f-742b9e66559e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af88f453-aeca-4c6b-8a82-460c7cf12aa9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f1d5dd-840d-4835-92b3-87b9bc831318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a3ff2ce-81e0-45e2-bf2f-67c34b26d587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d103dc-f20d-401b-a6ef-ec3e9d15f3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451b40e4-f47b-4cc6-90b4-832680ab515e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d684270-c82c-497e-ae81-279e03ae65be",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f78119-5aef-48c9-94b7-bea50cd85786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2fa88ec-d204-4cf3-bddc-0ef44cc63127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b923a33b-4891-401f-8645-ad588521e159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98213790-39be-454d-a04e-6fb6d19e8e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5577988c-3cda-48c3-a15d-1a417f85d9cf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfee37bb-05d8-4e1e-9e10-90395e2f8209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d96a977f-d3ce-491b-a731-e88a7891ef0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf10c8f-56e2-42cf-ada7-8b6fca6ff396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1e54c3-4ca3-4cb4-8178-6c442b21f37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c08628d-5aa3-4579-81f1-0615e3452881",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa117e5-9861-4e33-a88b-086cec14a4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc51852-d20c-4d7a-b737-eac664c331bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce108bac-0a42-4405-954d-5a3451644111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31439cfb-f6c7-4547-a838-89af29485737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a05deb0-e392-4efd-bef3-ceba88fe229b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9528eaf-76a2-4e54-8bdb-468d8aedb6b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "553aa03b-012f-4cb7-a90a-c999d20bd65a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7b8566-87ba-4a03-b69e-4ce04f4e7969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c44181b-3751-4a90-bbc5-1c7f181b59ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103c56c3-1667-4e9b-8ef2-eb8727622ea8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0259077b-cccb-414e-a463-5e71ca77e4e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d39d0c-4f29-461a-ab2d-3f0d0331b39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c78d2d-49a0-4f1a-9d35-9c480be15da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca5c498-64b6-4d6e-8d6e-9b9b67752600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaac861-092c-43c3-a52c-310129ef5cb1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b02f62-a4c7-4893-9443-a943de2ac51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a588bf95-e998-4684-850a-f56a3d07ce5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b8b20f-e2e2-418f-806a-b7198de998e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6dd788e-f5b6-42b3-8659-be95cb4f99d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf1443f-8a5b-4aa9-afd4-01ddc0ec3ee3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a97267-b29e-48af-aa5c-1d3be6ea40a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b06e7a43-dbbc-4e81-bf3b-0b5821fa00c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee632f76-395b-4f21-af88-25e2054a1b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ea5d83-75a4-4273-a92e-3c422f53aab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c8717b-fec5-4585-8b94-9ddc55220cb1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a221cb7-8bc4-4d37-aa45-b92a3535180d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61ea1b76-2287-44da-9869-2e8916652a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb4c070-88e8-47fe-96ed-e1c3bbf1f16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a8c02b-625f-465a-b714-7e491eb570ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb0428e-d8a7-4b01-b463-1b3cf9c2b570",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21511950-6d71-4fc9-817d-34ac32da3484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2495b785-8b8c-47d5-8db5-c0284ff21ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bf2df8-9d9a-4ff4-a69d-e58bb300b65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8cf36f-f18d-4dc9-bf80-f19fdb01c02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d1e9dc-31cb-4f1f-83a2-be549e4c4f51",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01a23ca-88cf-4bfd-acf7-1585c409a601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b08841c-2d0f-4d57-8134-34b309aec4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd38a3a7-3818-4370-9009-5d1bb127e9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acc873a-dab6-4d96-bd41-446572813bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ccc762-55cc-4ec0-865f-965cb97cd3e7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298886fd-6dca-4809-b1ef-87162c0d7d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327f3149-9df5-499b-99a9-f366bdbd4f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02be7eb-a22d-4374-b5b5-7368f17d0fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77a5cea-bfa0-4cf4-ae5a-cfcb87dff40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabcc8ae-9edf-4dc4-a38d-a10abfddd926",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e945ac53-399c-41ea-91d6-627a10c70091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58516c84-f37e-49f3-84e8-398a66805e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3518b6-d896-4f61-8851-a496b8386a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5997ca-8609-4d4b-be5a-ab68d2370633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f58e07-0c81-4928-8d25-6feea2c5f1c0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344ed858-08c9-4e5a-8c65-82a27cc28836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d67739-b1dd-45dd-9244-fe587b1459d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e37673-6ef8-4ade-acbe-cbb6ab24ab0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ba5988-2e2c-4fe1-ac49-4f760d3a4364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9974ef42-6080-4828-9bdf-454087b57450",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31e9d4b-89b2-4da1-8ea2-d4edb1ce9fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6a10aa-aa54-4b65-bd9a-5046608ace10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59666ff5-43af-4ec3-a64b-f97375747e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0da474-770a-432b-aeda-f7038f666423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863422d5-d2ce-4358-8dbb-b3775fce7d52",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65384f0f-6045-4dfa-a615-8d7972386356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa84453f-fcdb-4b1c-b715-e7890a1c5ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6076d5-d257-4456-8508-46ebd508edb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b2f534-4094-4ec6-a560-866e847cc0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1989ab8b-e4ac-4b45-818e-7f11d9a7fc3f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a731cbe-5a56-4257-9c18-54385a24849d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a28d1bb-6057-47c8-93e1-5e01f231dbba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaa4f9c-11ea-4b62-a25d-36eda1e28205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe0b037-04c4-4cbc-8407-5f5d6a0d9ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd774e3-f7e2-4691-90e7-4366016665d5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c8bda5-e3fc-4a05-8972-a4694c9c8438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddec5f41-a64e-4d84-8133-e90a18720caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb1a99b-7f9a-40e7-93de-6014d008b9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff07cc2e-46cc-4888-b71f-47f56b64d29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d291e4-bcfe-4b40-951d-1ebfaa750666",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce8f6f0-99de-48aa-8afc-3922b5656bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a520d9d9-d719-4c57-a319-9e607204f341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf1e7a7-6148-4d20-93f8-b4d6fcd8e3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b338d74e-e4e9-4044-8ff4-e3d297a27267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1448f190-1e89-42eb-b955-9649bbf7681c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8d8320-254b-4837-9d34-8d17f7155b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae43ef4-f047-42ec-951f-79804b2bc466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe4dd25-88f3-44fa-bb33-6bcb3d072341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9d13a7-c402-4af0-9e36-e8a636295c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c5d261-c847-4d9f-b1ec-37b98a3bf17c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15081c87-adb9-40ba-be5e-7ee1a11289fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af42b7c9-1ce6-4bb2-8ddf-f82750f0b89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cafeb0-25a9-4204-a871-a6892cd86d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f788dd-8fab-42c9-8526-3cc1c8f23bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60b78fe-f1c3-4473-aebc-5864cb58ea5e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a77a11-031b-4ea6-a85a-38e36f0c1815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd3ac38-9fa5-439e-af06-c8d77100e76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ad2523-b255-4b68-955d-f731a5fd32d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520c69a2-bd28-41d1-8cc3-1c0c4e75848b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5744c67c-b651-449d-ad5e-42b36fc1a4c3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd064de4-7c8b-4df1-be68-784bf12fc3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad485d8-45c6-4914-b1dc-a7d229c7c78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "797e2296-1217-45bf-8d67-bcfab1a98c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0adb079f-f198-4831-965b-f988490e4f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03ddd97-b57f-4c17-832b-a8010286e0f4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ca1bf7-95e0-4465-b956-b0b480ffa65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698f44a4-91be-4245-a8d6-48130af84547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b87e38a-6d75-4120-a51d-9e86e0e36e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16595d0-9402-462e-a951-dd958c62faa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceace0a4-388d-4816-9090-db7e8f5c5bfd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d944e9d-0a7c-4a92-81bc-faf723eacb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442a735d-eb0b-41a7-b463-fecfbf6f21fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd11d2c-467b-4301-8f5d-f7d053be2c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd705afb-c5f9-46af-87a7-7168f25ff917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972c028a-dd9d-4278-a1c2-6c4931702556",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf25209-48dd-477f-956a-463d0ea4227b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305a929f-ac40-4c28-b1f2-c35cc5158523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9f6b52-d2d8-429c-9a53-f98b4180a8b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e35eb01-98ca-4748-a4f8-22d2fb0e944b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11db1db-33ec-4c2c-9268-7af579c49907",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc1095b-65e0-44d9-92f7-8fdfb3166dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f34f926-128c-49a9-8347-cc83ecc613d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab956b70-6437-41a8-9b8e-95957a542b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380de623-79e7-4eab-82e8-a322d2483639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8747c20f-f048-418c-a2a8-b506a52642f7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d4aabd-bdb2-447d-929e-eb26dce4e051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90a392a-b84f-4cd0-beb6-c3352efbb561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b057e864-1ed0-44fa-9a23-93e122798c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2edd9f-1fc6-441a-9c92-bb52ded45409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de14deee-b2bd-4b59-9670-9445d1efde14",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a95d25-6f8f-4f1d-b1b0-81c8c2413bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4a9f9f-8bb1-4ce8-a211-0f9aee586451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21717883-613c-4dee-91b9-72c8ff86bf65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8040a831-2e58-4ebe-b60c-4fbd4855db82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46e0b1f-5e68-4fb4-8c65-6da20775cb74",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74abda14-62a6-4edf-8699-f7818f712013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb84fd3-6579-46ca-920b-7c81845a6348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7639c7c-88cc-4e53-9340-ae3fc7dad8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bca0aba-2ef2-4db0-a639-70278283ca99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a484e93-a014-4f51-a8e4-1f7ce192c45b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920d49ac-4482-446f-aa7c-d3efd1f8fbd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da79b6a-ec87-4662-bfa5-a77c289986e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c407c43c-4885-4102-b880-dad5480c8ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e353aee-f830-488e-b927-f0ef2904697b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb48efa-5600-4a7d-99e1-8aa124af5259",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac17532-d60d-4540-a56c-889d5579e174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbb3351-a15d-4103-964b-7e4ccc025ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3400f3f7-0467-4a9e-86d1-67afca490e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55265a3-a945-484c-9620-c884d3362ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e41b6d-ff4f-4f6e-8f7e-8583dacc401c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a12b725-6f3f-4646-9d2a-b4f4357273e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91664929-0d88-4e0f-970c-914cbd72dc7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817e38cb-6118-43da-ba1e-51ed9c36379b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d431cbc-d52c-4278-a41f-7e2c31e32daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa6d8d0-20f5-4601-ad63-72519bfa0fca",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2b1d5d-dc6d-4993-9f88-2694ac917fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdeb7b16-2d13-41cf-ba1f-ccbac82b8c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7414820a-d905-4117-9ee4-ac783600e1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d41c01-5df7-4120-ae6b-7fcf26c59ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d35632-c818-403f-9080-116d539de27d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d4c868-14df-4d8c-937b-da58895f5ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484c0a3b-f0cb-44b7-8be5-6d5775aa1554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e38cc2e-a337-4867-a898-7ca968ffb94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36980ad-954f-4b43-b692-d80b59dfda63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b773c5-f83e-4955-a1dc-916d9517cd48",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48209ab4-f420-4249-8e1d-cc4b4a527ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1689050e-8b8f-47f4-9194-8b79b3c8474e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be6265e-4a62-40b2-ab0a-b83887957671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5daa8917-7d06-49f6-93ec-2de2ac6633fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0aaf2d-6b0b-4ed8-aed1-6729b8529d8e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d9d974-5ffc-4459-b67e-38ab616e5fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520f4102-941d-4c17-952a-a366d8d00645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5485e4-a42a-4e68-af79-15cd4cffeed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ae00ca-bdc8-4410-8128-0625fc0f801e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f00c8a3-62d7-455c-8658-4f3aef935519",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fded6d-f369-4534-b47f-af057b9e3092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921f02ad-3778-4a92-947e-048f2fe25cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac1f3d0-af80-455c-b662-da187f14bcbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79a6f0d-fd02-4832-9d58-e8679224ca49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85197824-275f-4a75-a468-7163d2c77c94",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3631bc8-2363-4367-b8a4-09ceb60d06f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cc7151-cc1d-4fa0-aa4a-cb2e71bfa675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7938e2a5-7008-4614-a1ff-481b5285f09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1093c2f7-c252-4597-8bd9-10d721f885f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f3c158-c5f5-4fa6-91db-854f48278119",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35107701-101a-45cc-b63a-972a0df19990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07a77ce0-f370-4c4c-8df4-f6726ceb6903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b527562-f53f-405c-84a0-0d04f9c21170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393799d5-7a83-4bd5-9b31-c21d1fc5d470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f453e4a5-3f76-49dd-aa21-caeb52382e3c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d622504-9dfe-4a2e-a0f2-9011a19a3d93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5771c5e3-8767-4d90-b4ad-7667b5891d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09dbcff-5fbd-4230-82d0-daa9977a272e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3085040a-0890-45b7-9632-1ea057b207f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cb6216-e221-48b8-820b-a6ff1bdd6f72",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b94bc7-747d-4b92-b3a9-72745e303c7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d2ad44a-7838-4125-8dc9-fa3820cf9c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ff639e-1b53-4ad2-86f6-41f673f4f6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab703ad1-51c5-4456-96d2-984aeaed5c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be59628-6d82-44c1-9017-98b885cd35f6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e2e3c7-f027-49ac-897f-3bc4cc4c7a7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7591d0b-e141-44bb-a6e1-6ad4ae8c8bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd8e9f6-2df0-4f8a-822d-d97cec5e34e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9851c53b-4172-4f5b-a459-0b0e8f8c626b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e0d864-d868-46b0-8bea-4217f0469af2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb944d3a-1ee7-4e3a-b6a8-185a7e035002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f729a134-cd2e-4900-8733-57e02e1d10fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e837f270-9e44-4cb9-abfb-9fbed8633981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c048a4d-51c3-4f3e-9348-e3898d0042b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60b3fd4-e263-4853-bd6e-16377178cd7d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9b2d74-ac0c-4275-8604-94152aa585d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "131b7244-a960-4ed4-a8d3-089ffeafbf6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f31e739-03da-49b5-9b80-a47ad58f868e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8414df47-a08d-4c76-9fa4-4c4c33422849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0306f6db-b5d6-4109-a6d1-16f42b5d4d73",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65aa74b7-b441-4e97-97cc-4032014d284f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c14c59-6ec8-4a49-89a2-3d613d360e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b490c703-0514-400f-986a-c24543a0033c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150f640f-2fe1-4832-907a-f32edc484542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ba8704-a394-4875-80ab-61f6c43d5751",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd146ebc-4ae4-4595-9518-c554d6af9dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a71f66a4-fc80-4be3-90dd-00aa19bdd6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c2c58e-2924-4121-8dd9-86d5995039c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7205a7f3-f682-4e3f-bb25-226a0a88c56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6cd46a-8065-4a99-af06-2e9300f60e2b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0ffcf4-2057-4d72-8c37-ef267aa02893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8626122a-8d18-48c5-88aa-71c96ac8bc8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af057c5d-1f5b-4aa9-93b3-f026a486205e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1877ae40-061a-4b4a-b528-87cf61394fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a62f3f-35a4-4712-afc8-64625571a8ea",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4751f2b9-5122-421b-bbc7-71c6b4c71727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fc50b5b-e365-4aaa-8b3b-53517050347c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa32909-33fc-4bfa-a1c0-fcf6071c4ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5009bc6e-ac1c-4c88-b2e6-7c0b0b79580d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9d6478-91a1-4710-b6d7-71b02f0e65fa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047aeffe-ffb3-4bae-a675-9f51a114c174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad0efe0-8492-45e4-a910-e3958ca0a5fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441090a5-0b40-426a-a58b-4e90d9c070cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e4157b-ac0f-4c64-8e29-3f7c71c92ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b043dd3-9310-44b4-9c32-cca505580cc2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cc6fac-45da-43c3-8a88-bd33c66e999d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54a3a427-c503-4ebe-89da-965d0b0b2b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bc01a0-1350-46c0-b043-e1d2acd176df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78241f36-a9b1-4599-b79d-b02133a7cf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c0cb46-f5f7-4454-b187-484ae1c41772",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed8f92e-b8f3-4c07-94a5-65654f9c33cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f89059b-9d86-4648-89c4-8963bd63ea33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0dbfe0d-b070-4232-8e9a-cd94a7e0d6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8080badb-5d24-4a05-a207-29a0a8dbf32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abea81f-1628-41e1-bb00-6cdd49bc0f3d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04109bf2-02d6-4cc3-b81b-ff6b3fcae8e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28db948c-08b8-4a85-9de2-b473c0dd7bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4496efdd-0eee-423a-9eae-74706ef6cd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96edc68d-9e29-428f-b48c-d76a44f9d220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118df782-2fd4-4e2e-9563-e284082441b7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524eef46-5cac-486d-816a-411e2ae56900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4ad7bb9-942d-4744-b9b4-4964a04e3daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6b50fa-8c93-4abd-b38c-2164c74a4f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d67895c-7097-459a-a1f4-429a36810964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdc73d9-da5c-47b0-b1d1-fd9b339c32c1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d77c82-8015-4ccb-a208-e4a5a524f131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5b437f3-6f28-4f69-a970-97c283c161ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0a340c-0896-4762-886c-1cb0cfe7687b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588856ed-a901-4a1e-a9d8-c7e861a457d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7c8f8d-cd7d-4fad-99b5-59637e4cfb3e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2988ced1-6837-4b86-b93a-fba087172060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0583b9b6-c7dc-414e-92d5-08964db3250a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe1befe-6e0f-4b08-bfff-9f0830365283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba00ced-4695-4945-bfdc-0d160962a302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8b53b5-fca0-4b80-9e86-6f2f7060696a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01ac410-a469-4fe0-91ae-d831887acf08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35de2989-be86-4a3d-9920-dca34a912dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08db8d3-52d1-42b6-88c7-57f30ce454eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23917344-a890-490e-9b7a-251c70baa587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c93d31-a373-4c02-ae95-abb7f1e94ea2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a77789-9746-44c5-93e8-9a7339431f76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2ba94e3-f87f-4403-b26b-1f42f499a358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5022d63a-0f10-4da9-ba9e-4ca914e025ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b4630d-313f-488e-be03-bb1ea367434e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b803116-b1ed-480a-8268-0bf6816fbcf5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de1bb16-cbbe-436a-b3c6-9d7a9832c0eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef9279ce-8738-423d-a044-a1cd0f9b1b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcc474a-5ce7-4566-90c4-226d11b3e43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520a680e-9beb-4c26-979d-9330540da584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffcefc5-84d5-4364-8645-d1d2320116e2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1042faba-ca37-4de4-bf2b-b5d0bc32a85f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f298bbd-b9ee-4ea6-97ee-227f08a6da79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4e6b4a-317a-47ca-94f1-edb19189b797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bbfa77-3273-4fc9-a78c-4233270ab59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780afa49-213a-4ff4-a771-eb47d50bf48c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dd731f-0b68-4563-a7b9-d136c33e13c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb92539-1e56-4b31-85de-94ce59c3c90e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1cc8b2-5b14-4cba-81a2-fa979ad2f79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbdc9e3-b051-4ef4-8205-cf32ed396083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a311741-92c0-4615-b941-e8a1316640f0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad4c401-e87f-4638-adb3-dd60216b9e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1430c709-ef7c-4b1a-a3d2-8a8e5e5f35ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee296133-18de-4f5b-bf18-b3a5931c3f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251d0405-20a4-4983-bc5c-4c8cfe166f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2dae2f-67b0-4188-aadd-f6c0790d137b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be24015b-f935-4767-a5eb-d6ad6d201892",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea8da15b-d047-4ebd-b16e-3888ab414832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c61adf8-1e99-443b-b1fe-7c8dd68973d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4aa9e53-792b-455c-bf92-c9e3c9f65cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900ce65c-beb6-4e0c-b462-9398264f441f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dd88ef-c6ac-42cd-b6e7-74b00c78ef82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d07375f0-1eff-45ff-a633-b16afa20aedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc50bdaa-e1c3-4476-8cba-288d3239fb84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314e3ab2-1b6a-415e-911f-c7808fb23d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070e52d1-696e-4c8a-be1c-43c802bfbc31",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5f5743-aaa5-4262-9155-4c69c57e29bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77e228d2-7e96-492f-9f9a-442b140e9680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad29cc3-eae2-4001-9ff9-3becb55e248e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9063d7cf-ee66-4877-acc0-a253e0be05f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c58e68-7ea7-424d-b2a2-ce9af62cdcb7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc07bf5-a463-4c5a-a555-d045526be754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6a0c4fe-291c-410f-8b6f-e424b412b5b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995a045c-49e0-469c-9502-c6b8c3060d06",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebdc049-d8f2-4146-ad13-c293ccb713b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37576f7-a074-461b-a10a-acc75d41002a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96733bf-c024-4c3d-ae13-43bf0dbe5168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a1550e4-fab1-4a9d-a567-572414de97b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34be98c5-8ea3-4144-bdd9-a5628b59f264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088b1025-5bd9-49c7-9261-9f70d500a785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e345ba3d-0368-4c5a-be98-1433e5cfec53",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37478918-4193-455b-94a3-43b888ce98a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0ee089d-c30a-477f-b10e-14e259b317f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfae523-8528-4ecb-8988-6c080929bda7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73b6648-68cf-4e08-9f5b-3bb4119dcd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c19d3ac-bcb4-4514-9ffa-f160b477fe5a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d29077-b404-47b7-aa49-501d5ff7b969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1103eb4c-e600-412c-ad7c-9a0d2a71c0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ff4fdd-4178-4472-b33a-29a1138fb3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29547077-f372-4cdd-ab21-54b6bdb957a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed53898-dc61-4056-a45e-3f67e70d5469",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e62ae7e-eb8a-4abb-872f-87113d318b5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c3a0a0-36a9-4af1-8424-1c366d2800aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90c1c41-d452-4bdd-87ed-436f2fcafdd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1373247c-9994-4ce4-a24f-d103705b0269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3011e9be-8788-44f5-9cc3-b94b22dfe437",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89c0479-9078-472e-b56b-32843975db4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "302c5553-4dee-409e-a4e4-5fbdaa42418a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dce3f5e-7287-4007-b111-f4d80ac55e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93559ab7-7355-4cc5-aa56-7d2bb4d1be07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f39dc4-72c9-4ac0-a2bd-d1027fdd7640",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f53b033-48ec-4e1e-869d-f02a44fed314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "468b1807-b520-4541-bde3-6472b0b67eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efc64fa-8e95-4fdd-a887-e47d36f222c4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97883b64-f920-4933-a025-f8e128840ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9adb028-df71-46e4-ab27-de66de2abd64",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cf4d50-3b72-4d03-9122-2ea9df8631f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af9e8732-7954-40ef-8cfc-dcbdffc0d9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcf9da5-0e27-4739-a344-2c2ad0b02134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1110d368-14e7-440c-a27f-2d0d78dc25c2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "944c4faf-0251-4e71-8f20-888073b53c12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70a19e8d-f1d1-42ee-b080-0b48ad41db9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17b295ef-9711-4d27-96cf-cd20021a7b8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3876de10-a62a-4469-b7f1-8085f1a1ef81"
                    }
                  }
                ]
              },
              {
                "id": "e74dd40a-7ab6-4e75-9687-f3398b208636",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f816f2e-9f8e-44e6-971c-bb4ac4b8b7d7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec38f5c3-09de-4b9a-9b42-0220b9f63259",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b075ce46-74db-4d31-9dda-4299d9a674ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b96eb4-56e1-4ebf-afa6-9f3b1b765822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12a46976-af4c-418c-8283-1bcbf3fe86bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "484de936-8ce4-4327-913d-bb3d38e2ae7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac4213c8-d16a-4071-b474-9d4c0f99cc32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "206d3237-f401-49af-a515-459b7c2e6a49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f9b8e4c-0c81-4645-a882-adfa03c869d1"
                    }
                  }
                ]
              },
              {
                "id": "8f5c852a-b45a-4e38-8fd7-006248adb1d1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "52c30818-fd4e-43a2-8ad7-ed2d9660627e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c07d46-e89f-4d32-b5d5-f518b55e8506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0c8bcb4b-c7ac-46dd-ba5c-6849a5678ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba3695e-03ce-496f-9349-d64d3923b6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e46a46-a087-4e40-b1a7-3b5b19d7c0d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e988969b-7051-4b2f-8d49-3d1de1db968a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7b7aa83a-8fb5-4f04-a74c-d21ebcabe51f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "284e4dcc-4612-4aea-8b39-1f4cdda3330f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fb71b047-03c7-43af-bb8f-b03acee7f356"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3840fc2-e97d-4ad3-808c-33372e310484",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb16d020-ff0d-450b-9b9b-5a6e8115dc81"
                    }
                  }
                ]
              },
              {
                "id": "c1fbf7ff-6a8b-49d4-8fd9-4b88422bde00",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9baa607c-263a-4f58-8005-946ca548b85f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "21059d62-3ef8-4d08-b2e4-5240f71dcf3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "224bfad8-49d7-46b6-aee8-f2d6cad7c3eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c6cd360-2168-40b8-997d-aa4ff8c67062"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2474c167-2447-4428-9596-7d2d15b0d8f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b8de835b-7705-45bd-84ec-041ff12d6e8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e341ba78-8a21-4a11-8215-48a71f877ffc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68bf1611-e10c-4edf-bb8a-6759b654a167"
            }
          }
        ]
      },
      {
        "id": "69f0b19b-9223-487c-b576-27c99196c6da",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "94957834-c29f-42e4-b070-a3df47e55493",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c7a95c7-e49a-4720-bd95-42abcd76737f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43a9b93e-947e-4017-8795-7c68f4372956",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e6163b-ec16-4169-ac28-d411039d4326",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cf7cf696-1b05-45c0-809f-ebbac7fd88b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0eaa225-6d51-45c9-b009-8a68028c44ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "988ad12f-6165-4b03-bc06-69e1dccaac8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5268b219-e062-481f-b01a-673f3d7453a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "737356fb-82d9-4adc-bdf1-71a7f162e8d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c791bff-e15a-4aa0-a2f4-82388695dd02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51a1ab16-178d-4af0-867d-dad66c42dc51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e49eb160-b2e8-4e6a-8f0b-99e673941d79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4d8e9a8d-4766-4ed5-bbaf-f4c48845dafb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de4c6066-7d33-47d6-821c-0c7899504ea9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9b37280-7e3a-47fe-8285-9eb26756cde1"
            }
          }
        ]
      },
      {
        "id": "3cc60d2a-6da5-4190-b598-162acbb74b15",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "aa273a02-50ee-490a-be59-5f9434c0d33a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c9bef7a-d365-45ae-b31e-0597e5234041",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e53ce91-c47c-4fec-ae79-63aff8016009",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce44b28-b6c1-4ab4-a5b5-2db77d2f3980",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "514ba738-22ee-4eca-b678-1bc3b6761d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6aae9a-9cbe-4bb2-98c2-001dde659978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c6d4ab9-4ed2-4fcd-a5b4-be9b1aa6350f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a463e92c-d485-4e1f-9010-a4a458ba19ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed37b652-5538-427b-965a-ba35dd28594e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51ca5841-26d0-453d-a3e8-d4820377b6c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29b0da8b-0a68-4e24-81c5-bb1c64c0ef0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5537d01-7db7-4a4c-bb6b-43851e4e6b97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e14e28cf-da65-4ecc-a7a7-32d54cd09270"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73578fe9-ed89-4d8a-b2c7-5a9b9dff095d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbb5aa93-3a88-401a-aeb8-2ef2351d6cb1"
            }
          }
        ]
      },
      {
        "id": "5513b9dc-9a0b-4626-b54e-72f8d9a0281d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c7bfac80-ef9b-4fab-817f-cd92cc3f9769",
            "name": "Negative Testing",
            "item": [
              {
                "id": "716e3f1d-604e-4a06-86f9-d938daf58abc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a30da89-291e-4a06-8dda-639b55d2f5b5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5343c7-f334-4b38-940d-ab3bc84543df",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9452e06f-94f4-4dc2-ab8e-459474983215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e495106-73a0-4685-b486-f4f38277f8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ad889f3-df59-4628-a52f-df856d6fbf23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33306cc7-9624-4627-97dd-77982710baf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "133cb6e1-f402-4a08-94bc-09eedece1aea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c08cb87f-07e0-4f37-af99-650c4650f65d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "589059ff-c517-49e7-8bc3-801d51adbc04"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17e6dead-1704-4c8b-bce2-593366e284e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cde2dbe0-2e53-4407-819f-99b0a21641f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b1d2a00-4d9e-4887-954f-b0fdc4a768b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb80993b-8629-4d1e-8dd4-174322005b1d"
            }
          }
        ]
      },
      {
        "id": "1ebdef7b-b2d8-4561-b213-71c2a08a9289",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f263d9f5-0b63-4c0b-afda-c2a46061e503",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efe12073-d21a-4ce9-ac4a-0eaeba5761cb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "13ca34dc-cf6b-4dd7-8edb-d288d123dddb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "baf99e0b-2fe7-4fe6-a178-b86e66bf4348",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b050244-627b-41f4-baf8-a965c3f1c5ce",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 130.7738095238095,
      "responseMin": 11,
      "responseMax": 11323,
      "responseSd": 764.5122060003894,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726101786634,
      "completed": 1726101827598
    },
    "executions": [
      {
        "id": "5129c039-b106-4243-91e7-c59d9960fdae",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "22a75ea8-a617-46bb-9596-ba974e894dc3",
          "httpRequestId": "3f7997bc-a511-46a1-bd87-37d9a56a4cc8"
        },
        "item": {
          "id": "5129c039-b106-4243-91e7-c59d9960fdae",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a3661b00-5d4a-46c6-8b81-01340233ab7b",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "08e691cc-b130-4425-8157-1fa772d61b32",
        "cursor": {
          "ref": "fed186ea-f8fe-40c2-a10e-ac61d214d545",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "db9985ed-42fe-4cf5-8ed1-965815d366a0"
        },
        "item": {
          "id": "08e691cc-b130-4425-8157-1fa772d61b32",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "634d8493-de5f-40b6-b7ea-a6f8f56c15f5",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "479accf8-ba96-4c0b-b0e8-12ca9d256014",
        "cursor": {
          "ref": "d01b8d89-a4c6-4b54-adb1-2c281d8ba685",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6633be4b-f91b-4995-bc9d-1e2cfb751e6a"
        },
        "item": {
          "id": "479accf8-ba96-4c0b-b0e8-12ca9d256014",
          "name": "did_json"
        },
        "response": {
          "id": "cff48368-5ea0-43af-a9b6-452b3d5bd649",
          "status": "OK",
          "code": 200,
          "responseTime": 344,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caecd80b-5eb5-4c00-bc80-9c172ea5d5b3",
        "cursor": {
          "ref": "507ad897-2f36-4994-a1f9-04b35125b142",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0e6cb540-e84e-41c1-8f98-1d6da358cc11"
        },
        "item": {
          "id": "caecd80b-5eb5-4c00-bc80-9c172ea5d5b3",
          "name": "did:invalid"
        },
        "response": {
          "id": "6b7ddab3-f508-4701-888e-b874ab04ac13",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1309,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caecd80b-5eb5-4c00-bc80-9c172ea5d5b3",
        "cursor": {
          "ref": "507ad897-2f36-4994-a1f9-04b35125b142",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0e6cb540-e84e-41c1-8f98-1d6da358cc11"
        },
        "item": {
          "id": "caecd80b-5eb5-4c00-bc80-9c172ea5d5b3",
          "name": "did:invalid"
        },
        "response": {
          "id": "6b7ddab3-f508-4701-888e-b874ab04ac13",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1309,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff39ca2-5ad7-4e41-bccf-c942429d3a91",
        "cursor": {
          "ref": "3cd83020-ac1d-4dcf-93d0-ece578ec5186",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e8eb9f6e-67eb-438c-bf0f-e267eac80072"
        },
        "item": {
          "id": "aff39ca2-5ad7-4e41-bccf-c942429d3a91",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d48a01c4-4445-40de-ab17-bc87e0b346f6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e440e493-9cf1-48d3-ba35-eb4c507f8852",
        "cursor": {
          "ref": "a45cdeaf-43bd-4bf2-9354-25a49d0d4dba",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1db3c539-0a91-4d22-affb-6e58b5f6b6e9"
        },
        "item": {
          "id": "e440e493-9cf1-48d3-ba35-eb4c507f8852",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ea84c1f4-5a3c-4bcd-803d-fb91bd727db7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32d9f95-e5d4-49eb-93ff-c4d316cb5261",
        "cursor": {
          "ref": "42f20730-4b04-42b6-ba79-690dfef9f5f7",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8b8ac85a-5c62-4f09-8ca3-54e500540b1a"
        },
        "item": {
          "id": "d32d9f95-e5d4-49eb-93ff-c4d316cb5261",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4acbe4e6-cc0d-4131-b9c1-ea9b1c6048da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bdcfae-f236-47f7-baf8-d922bd3a585f",
        "cursor": {
          "ref": "abeef315-a5a4-42b7-80f1-817c12774fd8",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "04820076-060a-4e96-9bc5-c794065a65a2"
        },
        "item": {
          "id": "d6bdcfae-f236-47f7-baf8-d922bd3a585f",
          "name": "identifiers"
        },
        "response": {
          "id": "0cd38a88-e976-43ec-8d0d-636e49986b5e",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0c1e25-902b-4e4a-a1fe-8ee07fc7207f",
        "cursor": {
          "ref": "85368f2d-a305-446a-88ad-e4c3704bf498",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c3efae2b-d196-4a5c-b279-0ea4d689d35c"
        },
        "item": {
          "id": "db0c1e25-902b-4e4a-a1fe-8ee07fc7207f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "94d8b472-df59-489f-97fa-c3e052ca96e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651fbd96-468e-4a53-9a86-8d8420b17187",
        "cursor": {
          "ref": "392878b9-6165-4abf-ae2f-df574b4b6d6a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1d96ffde-7a64-47e3-8e08-8f0d89980f89"
        },
        "item": {
          "id": "651fbd96-468e-4a53-9a86-8d8420b17187",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "be25dc3a-a103-4b00-8393-c89a4de6e486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e06327-01af-47ad-8bfe-c42510311a85",
        "cursor": {
          "ref": "07b8b1f5-f070-4761-8aa5-9f3d928ef69d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "12835638-668b-4832-b6ca-060d340938ad"
        },
        "item": {
          "id": "44e06327-01af-47ad-8bfe-c42510311a85",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "946890b4-4258-456b-935a-370a0ca71ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7a90ae-592c-4ee5-bbb5-f4dcec39412e",
        "cursor": {
          "ref": "1a364cf0-8f24-4a04-8169-60d9bb04c304",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5ba2d285-f7f1-4a47-9637-0f7abb64ee47"
        },
        "item": {
          "id": "7f7a90ae-592c-4ee5-bbb5-f4dcec39412e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5481a6a4-618b-4c1a-952f-9facffba94e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc5d9b7-64e7-4687-b0e3-041461771568",
        "cursor": {
          "ref": "61771965-9737-4df7-84d3-f5f94247eaaf",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "77bfbebc-8786-4f79-9c65-5af09d1c4dac"
        },
        "item": {
          "id": "1bc5d9b7-64e7-4687-b0e3-041461771568",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bf8113fb-7466-44dc-8ccd-b6c22aea4096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123882db-8898-4bf8-990c-2b6c53f8cc90",
        "cursor": {
          "ref": "4e10ff1f-3ace-4728-a5e2-7a337d1d4dfc",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d9b7e02e-f70e-48cf-b018-b5bb2bcbc5dd"
        },
        "item": {
          "id": "123882db-8898-4bf8-990c-2b6c53f8cc90",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "504315f2-636c-4458-9d10-80992deec27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028487e8-735b-4715-b8ad-2bfc776354ee",
        "cursor": {
          "ref": "52d329a4-3114-4269-9535-5185a12c936b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6c4a38b2-f9c2-4115-8788-a744b872458c"
        },
        "item": {
          "id": "028487e8-735b-4715-b8ad-2bfc776354ee",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "95deb9e8-640e-428e-acfb-23b0f146cc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b08c4f-6ad8-408c-a206-d5389538089a",
        "cursor": {
          "ref": "f71f6ffd-8454-490d-993a-8a1b7421d7f2",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "318b35c4-1ce0-4b17-b06a-20f6d0b0fa68"
        },
        "item": {
          "id": "85b08c4f-6ad8-408c-a206-d5389538089a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "25eb3e43-7bcc-4ba6-9275-f7cfddf968f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbaa1ae-9173-430b-a18a-348df879f38d",
        "cursor": {
          "ref": "f05a8f5c-667d-42e5-acf4-8462f5acdedd",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "946eaeda-0e22-4eae-8797-d313520a1e67"
        },
        "item": {
          "id": "4fbaa1ae-9173-430b-a18a-348df879f38d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ca08ffda-f288-44c8-acc0-c4d1c3822d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d1ca46-c1f2-4732-a2e6-3b650be122c1",
        "cursor": {
          "ref": "dfc546e7-4488-43c1-bb5c-3de8fc286e93",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "113fd61b-a824-443f-b7b3-0b6f58d8e0df"
        },
        "item": {
          "id": "81d1ca46-c1f2-4732-a2e6-3b650be122c1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a95efc4b-e315-4fdf-a1d0-7c858abf6ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a64866-1c74-4ce4-856a-4d6e84893ee2",
        "cursor": {
          "ref": "aadf8de4-bba5-4a39-a262-a5b2abb01056",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "51cf7590-3ce9-451f-ac2e-16d08449fa42"
        },
        "item": {
          "id": "62a64866-1c74-4ce4-856a-4d6e84893ee2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7bc5ba18-8c9c-45d6-8b1b-d858c8f96af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5ac6f9-64f1-4ce3-b4d6-19f2590c5019",
        "cursor": {
          "ref": "4ee69dc7-2632-40b9-b104-93f16fb3bab6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "69085479-4a73-49b6-80b2-2cc3625a613b"
        },
        "item": {
          "id": "ea5ac6f9-64f1-4ce3-b4d6-19f2590c5019",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a29fb807-338d-4a26-acd6-b3b08c710121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9b59db-ed60-49d2-9680-f5deef04033c",
        "cursor": {
          "ref": "3b6a150e-5e16-437c-ab99-3a621b2ea452",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "31aa1194-8bb9-4e90-a554-fe16191452b4"
        },
        "item": {
          "id": "0b9b59db-ed60-49d2-9680-f5deef04033c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "79f7df13-075d-4566-a757-d39836ddf23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc97d876-dde0-45f4-a922-87d370d9a457",
        "cursor": {
          "ref": "58aa3d6d-1533-412e-b1f2-46429f4464d0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d829d7ea-98fd-4c86-909b-5e0cb4590d98"
        },
        "item": {
          "id": "dc97d876-dde0-45f4-a922-87d370d9a457",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d426c82a-73c2-4e3f-8cb0-d72344fcf8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc02d237-1e22-44ae-be1d-04b96fa48ad8",
        "cursor": {
          "ref": "a1dc4a9e-5c7b-4b5b-aefc-1564239f14ba",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "664f8631-acc6-4e3c-9ac0-b3c7f7e23641"
        },
        "item": {
          "id": "fc02d237-1e22-44ae-be1d-04b96fa48ad8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2e9b9edc-b0d6-4572-b73a-735bb60accda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938b7c50-bafe-43e9-9f6a-25663417b96f",
        "cursor": {
          "ref": "62439dd0-d733-401a-bd20-ff034fe4e85a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e35d2026-52c8-4983-bd16-67fbd887e47b"
        },
        "item": {
          "id": "938b7c50-bafe-43e9-9f6a-25663417b96f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "966244a0-6825-4165-9213-37bbe576b741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7650550d-a7bf-4ea5-8b6e-1368efe426d1",
        "cursor": {
          "ref": "e84efb06-dba6-4289-875a-0eacf9eebeba",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4f8211f2-3235-46b5-8983-9b8152348883"
        },
        "item": {
          "id": "7650550d-a7bf-4ea5-8b6e-1368efe426d1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b01598df-f3c3-45d8-b3f1-57579f203482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bce607a-8f91-4fe1-b499-3653f6cc3626",
        "cursor": {
          "ref": "60939660-1b3d-4200-86ed-ec56ae48a797",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2a1c19b0-f80c-40dd-8140-7b32633296ac"
        },
        "item": {
          "id": "9bce607a-8f91-4fe1-b499-3653f6cc3626",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f7c3c60b-08a3-45f7-9ca3-37399c7aa67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438df12b-d75f-4f04-9811-8c72e8fd8fca",
        "cursor": {
          "ref": "ff7431d4-e7d5-416b-99f3-453978e85201",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "69406dd3-d5c5-4f40-b6c5-1933d86ec53d"
        },
        "item": {
          "id": "438df12b-d75f-4f04-9811-8c72e8fd8fca",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2cf1a3c4-b646-4a02-b981-646fc23987a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7120106e-d901-4244-9b2f-83c18b41fe84",
        "cursor": {
          "ref": "9ccf3b2d-932d-4780-8006-e6b855b4492f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fab6712e-aa37-4794-906c-85a7e024dbd9"
        },
        "item": {
          "id": "7120106e-d901-4244-9b2f-83c18b41fe84",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6a5c0a5d-379b-4774-a467-128e844742a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c43ddda-f891-4191-ade1-37b43dc86cef",
        "cursor": {
          "ref": "5df73a1d-ede6-4a9c-adcc-0bb6b3882a58",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "12a86e78-7162-448c-a23c-0b52d8ccd053"
        },
        "item": {
          "id": "6c43ddda-f891-4191-ade1-37b43dc86cef",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "153bfe3b-7240-4d04-91f8-8d83777e586b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4bfdf7-ce81-40b4-a37c-904531fc4158",
        "cursor": {
          "ref": "4a7b35f5-202c-44c1-b442-0beb7872b98a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "24fa8a11-5a26-4367-9945-090704597602"
        },
        "item": {
          "id": "bf4bfdf7-ce81-40b4-a37c-904531fc4158",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "efef15c4-a2f8-4535-8e2b-3fd7908fdebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1de7a87-24e0-4562-8374-26dd24bdc13e",
        "cursor": {
          "ref": "d9d58ec9-d7fa-4744-a7c0-45c161f75f92",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b99143a2-6ebc-4b75-bd42-aa5eaa55b5e5"
        },
        "item": {
          "id": "d1de7a87-24e0-4562-8374-26dd24bdc13e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "32763d9f-f80f-49ca-b20d-67b65062c25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cae211-61e8-499a-9ae5-9ce4c81d5b72",
        "cursor": {
          "ref": "8b1ebe50-35e1-4bae-9673-a3c59c7bee74",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0e8e2d81-69d8-4e6a-bb2c-7972c6ddf5e7"
        },
        "item": {
          "id": "39cae211-61e8-499a-9ae5-9ce4c81d5b72",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9cc8bbe1-5a86-4f1d-9054-b11bb29020f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb08e64f-550d-4afd-b397-c356bfb43843",
        "cursor": {
          "ref": "8626acff-0972-4b30-8c7f-829d6e5030e0",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "201f8179-3fbd-4870-bff6-5457f3d586cc"
        },
        "item": {
          "id": "bb08e64f-550d-4afd-b397-c356bfb43843",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "83b23742-19c6-4251-8289-2ddc16f26f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fad5b04-0ade-4136-ad2d-cf6d1063c3b2",
        "cursor": {
          "ref": "11511da0-30fe-478b-8616-9d29193c4384",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "80b6a895-95c8-41c7-bf64-58570c35919d"
        },
        "item": {
          "id": "9fad5b04-0ade-4136-ad2d-cf6d1063c3b2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ec205f79-4648-42ad-9ecc-ce29f2805d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e002634b-d38a-4efd-9da3-abf99f1d8b17",
        "cursor": {
          "ref": "476044bd-480b-4c3f-a381-70b9be964f47",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a3181df4-6e30-47b6-b0d8-096d98c0e9e2"
        },
        "item": {
          "id": "e002634b-d38a-4efd-9da3-abf99f1d8b17",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "65ee339b-8d9e-4723-b243-6b21be2933c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d6bce0-86f2-4696-a049-ae662faef3aa",
        "cursor": {
          "ref": "9a1c80f0-faf2-4245-a3f4-5af2405410d3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "758f7880-77c7-498c-ab39-fd666ae4d1a4"
        },
        "item": {
          "id": "09d6bce0-86f2-4696-a049-ae662faef3aa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "26a6b44c-6c86-4e30-8293-97bfb103e720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e28fc6-ff31-41b2-9975-24a0a1a4c49c",
        "cursor": {
          "ref": "316e40e3-0d57-4524-be9d-c89d3d6af5a1",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fef1726d-70bb-478e-8bc6-1efff51f16b2"
        },
        "item": {
          "id": "97e28fc6-ff31-41b2-9975-24a0a1a4c49c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a54a7cb1-4711-49a0-9e6f-90b0da716cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e014a7b1-68f5-4d15-a995-eacd0fa54955",
        "cursor": {
          "ref": "1d8923e3-b94f-4d85-a511-a6429908b1da",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "42963a0e-2f3d-47e3-a03a-28e449a8709b"
        },
        "item": {
          "id": "e014a7b1-68f5-4d15-a995-eacd0fa54955",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7452cc36-5e1d-4b00-a11d-d53a6b1c5bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e72ad7e-d9a5-4785-9f31-656456891a08",
        "cursor": {
          "ref": "2720fc93-77c7-42d3-8b86-7e2865b9f2a4",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e942fb0c-e057-4709-ba31-9d99387c972b"
        },
        "item": {
          "id": "8e72ad7e-d9a5-4785-9f31-656456891a08",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "771167e5-3ddc-46db-b17b-7dc04193559b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6da511-36e0-401a-a522-efbdfd647043",
        "cursor": {
          "ref": "fdc9872f-cf63-4d22-b8d3-724df3414aff",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "33ab2c71-2dca-442a-9d6f-7493a6964e3d"
        },
        "item": {
          "id": "5b6da511-36e0-401a-a522-efbdfd647043",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3651a8d5-ed9d-449a-9e3e-60aa355d22a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26f24cf-7482-4352-9c82-e9d9b39d6cf9",
        "cursor": {
          "ref": "b6f70ff1-f061-40ab-8cf1-db753634c892",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7704cf03-7736-4488-98a0-2db033f329e8"
        },
        "item": {
          "id": "c26f24cf-7482-4352-9c82-e9d9b39d6cf9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cc7ce346-c488-476f-9538-60686538a284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7f28e4-389d-4658-af55-c7b48352f973",
        "cursor": {
          "ref": "566a9bba-e294-4570-bcf1-3202fe624a8b",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "422178c9-e24f-4399-a6ff-8d1e8bdeabfb"
        },
        "item": {
          "id": "cb7f28e4-389d-4658-af55-c7b48352f973",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a609c7b4-902c-4fe7-8cea-d7bd2bb38cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10789f8-752b-48e8-b175-f6a4eec46ec6",
        "cursor": {
          "ref": "2d56b774-7efe-4cb8-94af-031bc8d2ccb9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9630f9fd-7e7e-4af0-82fc-091c30a8c457"
        },
        "item": {
          "id": "e10789f8-752b-48e8-b175-f6a4eec46ec6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a4832ef3-7c08-4642-a635-ac194a2b7fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90bc1f2-b51f-465e-bb9b-e253ec8e086d",
        "cursor": {
          "ref": "a3492e53-e5ac-4bac-84b1-6344cb0d401a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3fd7e019-a5d0-4bf1-8392-a7020bbe92a5"
        },
        "item": {
          "id": "d90bc1f2-b51f-465e-bb9b-e253ec8e086d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "857d30e3-be08-410b-a775-d0ae197ea916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e926d37-d0cd-4e4b-8d20-3a4da2ed3280",
        "cursor": {
          "ref": "2e24e815-b8e4-4596-86cd-a51c9503cf61",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a13b31e3-bb80-4219-a8eb-cee2a04f3253"
        },
        "item": {
          "id": "0e926d37-d0cd-4e4b-8d20-3a4da2ed3280",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7fd695c5-375a-4b09-a1d5-35f3a0fa6282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f5125d-ecd2-4263-8dd9-192761af6798",
        "cursor": {
          "ref": "7ff24e83-bf02-4023-a87f-c2472fa643d4",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7dca6465-f0f5-4552-8489-458219836e3a"
        },
        "item": {
          "id": "99f5125d-ecd2-4263-8dd9-192761af6798",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "be5da6b8-cfbf-4429-92de-f42be7014066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b51fe1-d6c0-47ec-96d7-72c427ad1dc0",
        "cursor": {
          "ref": "d61ac242-2275-4472-9c06-8cbb485901e2",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "366d06b1-3168-4892-8cfb-aa1c24ce3297"
        },
        "item": {
          "id": "c9b51fe1-d6c0-47ec-96d7-72c427ad1dc0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0103d164-7c71-4470-9f81-d45a370ff535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2bf49a-28fa-40b2-a36e-078b82e4f3b5",
        "cursor": {
          "ref": "6ee5b306-0630-4ec4-b3d7-e3c82449ea75",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5439cb12-aca8-4275-ab08-5c2b3b088034"
        },
        "item": {
          "id": "2e2bf49a-28fa-40b2-a36e-078b82e4f3b5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "90cbf30d-62f7-4ede-b857-05898ce98d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fced1ef6-10d2-4643-ba78-4fb958efb45f",
        "cursor": {
          "ref": "9872acf6-b2e3-4ba0-beb5-18bed8080ed2",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8b54f010-ebb5-4e2a-8471-5a50ada58882"
        },
        "item": {
          "id": "fced1ef6-10d2-4643-ba78-4fb958efb45f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9cff85f9-e5a2-481c-8484-b4f821ef10cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a5af25-d533-4218-9960-da450e7fac67",
        "cursor": {
          "ref": "7c273d7b-3c25-4f70-aae3-cd8218c0f004",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0a45ae64-4e9e-4f2a-bdd2-e11314c0b41d"
        },
        "item": {
          "id": "69a5af25-d533-4218-9960-da450e7fac67",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4c4262d9-e312-4199-9ec8-0beb13bfb3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c250c415-adc6-4a52-840a-e1b06528d28a",
        "cursor": {
          "ref": "64dec633-2784-4894-a13c-16eb5cfe5dd6",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "44873c7b-00f5-479a-b7a3-92fdfc03f3cf"
        },
        "item": {
          "id": "c250c415-adc6-4a52-840a-e1b06528d28a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e61f5130-f92c-49e5-86ee-885b4413fc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adb5d7a-94f5-4691-a539-100658142ee8",
        "cursor": {
          "ref": "25e268d5-94db-43ae-a548-c4c25edeacf2",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "67d23b46-033a-4080-81ba-0a58a58d22d5"
        },
        "item": {
          "id": "2adb5d7a-94f5-4691-a539-100658142ee8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1191e9e0-e608-4daa-8ecf-ddf4c3a60ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3c832e-cb09-4c48-846f-984c30c6436e",
        "cursor": {
          "ref": "a4fb8516-dd5b-4eb8-a968-602e5c2d95f7",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4ad18385-9c5e-453b-9e0d-45596fe7f102"
        },
        "item": {
          "id": "0c3c832e-cb09-4c48-846f-984c30c6436e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "291a19f0-01c5-471e-81a2-1b3d85e1d525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbba3205-7867-4291-81d5-c78a6eedd8e0",
        "cursor": {
          "ref": "94b02cca-a4f2-4747-9129-80cf23334f89",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9018952f-33fb-416e-bb6f-1a3a4f785b2d"
        },
        "item": {
          "id": "cbba3205-7867-4291-81d5-c78a6eedd8e0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d4260218-1eda-41f1-bb69-081f5e0b961f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38abd569-88c2-4e07-b412-035c377cca26",
        "cursor": {
          "ref": "c14fc641-3208-4406-b270-43586c6b35e5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "04ab05ec-134a-4794-bb0e-839aa5bf591f"
        },
        "item": {
          "id": "38abd569-88c2-4e07-b412-035c377cca26",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "67951ebb-be09-4815-9561-297a01cb7997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52fa079-cb3c-46bb-bb8f-9518c60e765f",
        "cursor": {
          "ref": "67b22759-d25b-48d0-a514-14518f2caa50",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8764d9fe-15c9-439b-8156-c75af1ed2465"
        },
        "item": {
          "id": "b52fa079-cb3c-46bb-bb8f-9518c60e765f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3fad4498-81ba-4916-bfa2-97a181edb242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396bf4e9-9ca4-43a2-aa8d-ca00fdaafb91",
        "cursor": {
          "ref": "8cca2a8b-707f-4b9b-9320-9c0586df258c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "89753097-2fbe-489d-b475-ec31e8cbd9c6"
        },
        "item": {
          "id": "396bf4e9-9ca4-43a2-aa8d-ca00fdaafb91",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "777801c4-622d-4955-a2e3-704a5351a8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c41a3a0-fce0-44d0-b80e-22141a8bd035",
        "cursor": {
          "ref": "8dd6318e-b64d-4af0-a5ed-dbc43e191fe3",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "702b638a-38af-40ec-8a5b-c2274aa1c045"
        },
        "item": {
          "id": "8c41a3a0-fce0-44d0-b80e-22141a8bd035",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "24d3dc2c-d799-40fa-aca1-f3103e4f72e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ee00c9-acab-4542-995b-48380950ec29",
        "cursor": {
          "ref": "09449b15-e164-4929-8803-178defa97504",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "68d87b92-b89f-4683-8e6d-279813c9dee0"
        },
        "item": {
          "id": "e7ee00c9-acab-4542-995b-48380950ec29",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1e9c8c87-d5f9-4b3a-9603-7adca104fe53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0470ce-35f4-4909-8a2a-e1ea5ff97351",
        "cursor": {
          "ref": "59a604b3-ea05-4e59-983c-105eb0d8b19c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d2e271a3-9dae-4321-9946-b9dd5ff401aa"
        },
        "item": {
          "id": "2a0470ce-35f4-4909-8a2a-e1ea5ff97351",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "87cff2ac-66cc-415c-965f-87072e211235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6888793-ba6b-4696-aed6-f70005f98c86",
        "cursor": {
          "ref": "470c73a1-7126-4a5e-94a9-9693f239cf67",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8429e1d8-31bf-4e0e-a76c-bddbc3db35aa"
        },
        "item": {
          "id": "d6888793-ba6b-4696-aed6-f70005f98c86",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4f237da5-1349-4c0d-af75-38bee3e3c940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f401ae50-2f91-4cac-8a23-76156a002690",
        "cursor": {
          "ref": "66547c7c-34a4-4ac8-9f07-485bb7dd62ee",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "162548bd-f853-424c-aaae-e7c51b197527"
        },
        "item": {
          "id": "f401ae50-2f91-4cac-8a23-76156a002690",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4c786362-0246-4521-b6b9-99809f343c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40034c3-3e0d-4b2d-a2e1-4e66950d90a7",
        "cursor": {
          "ref": "5ffef705-66c8-435f-8a02-5f5fbdb8ef49",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f24c1bc7-70b0-49b5-8be8-5dd516d88efd"
        },
        "item": {
          "id": "b40034c3-3e0d-4b2d-a2e1-4e66950d90a7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3e25d7d3-1a38-4b4d-bc0d-1c23e3740f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa77d83-a126-42ce-9904-9657631ea34e",
        "cursor": {
          "ref": "efbbdf5f-4024-4b6f-b008-96f1bcbe847b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d23b7cab-b06c-4e5b-9f49-41a903c88a79"
        },
        "item": {
          "id": "eaa77d83-a126-42ce-9904-9657631ea34e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a6eb95bc-61d4-46c0-a6ba-acb864a4f39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d1df63-ea89-404b-a14d-cdc291fd755a",
        "cursor": {
          "ref": "7811c806-e1ea-49a1-a879-83fe822f372e",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "76463de2-83a7-4d5e-b50f-d9f17ab8a84b"
        },
        "item": {
          "id": "71d1df63-ea89-404b-a14d-cdc291fd755a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "178c446a-6e97-4b3a-97af-be752d1c3b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1f8648-6680-4e81-ba57-6ab59b6b266b",
        "cursor": {
          "ref": "0d0dc125-a2c6-4b8a-9ac5-11e070b959b4",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3e75c1cb-77ea-40ca-8b7f-a8a25fdb0451"
        },
        "item": {
          "id": "5a1f8648-6680-4e81-ba57-6ab59b6b266b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6b47be1f-c8d4-4b6e-a221-80507fc09607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40f296a-ad0e-4b55-8ea4-62c0915c264d",
        "cursor": {
          "ref": "4fff2fcc-6742-4e73-944f-50d9a49ed0e3",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3cb8c59f-1fd3-4efc-bc12-2b339202f815"
        },
        "item": {
          "id": "f40f296a-ad0e-4b55-8ea4-62c0915c264d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "86ce077a-7c14-4cb5-abe0-86376856fd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f202cb3-1292-4ab6-8c3a-3f26b3b41c95",
        "cursor": {
          "ref": "fe9dd26f-81c7-4dfd-a6ea-e50abf62fad6",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4e7be537-a076-49f5-9b2d-c47497357c35"
        },
        "item": {
          "id": "8f202cb3-1292-4ab6-8c3a-3f26b3b41c95",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "52ad0d85-5419-498e-9d16-55af2f622008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bd751f-c2ae-4b5e-a446-cce2302d8062",
        "cursor": {
          "ref": "14936c98-d15b-45fe-9c41-cd771f2e1805",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "840ba3bf-a154-4544-93e2-7f75aee778f1"
        },
        "item": {
          "id": "a4bd751f-c2ae-4b5e-a446-cce2302d8062",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "be603f3e-fc87-44a3-9726-f0f046a86134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a925438e-4e17-4048-855d-20927171b656",
        "cursor": {
          "ref": "1d52e908-05b3-47fe-8244-0fb5a550b49e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5bdbcda3-8279-4cc6-800b-4036d83313e6"
        },
        "item": {
          "id": "a925438e-4e17-4048-855d-20927171b656",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6b8f4f1d-f32b-4130-aa47-4cc774592690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfa68cc-8047-4c10-98c5-55c52142aaa2",
        "cursor": {
          "ref": "f17ca31f-549b-46e4-acda-5506485d054f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a73a442e-831b-461b-828d-b61218be30ee"
        },
        "item": {
          "id": "5dfa68cc-8047-4c10-98c5-55c52142aaa2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f4212cdf-0aef-4d2e-83f3-434e328e0aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ce1820-499f-4b91-b716-40d44ef44275",
        "cursor": {
          "ref": "daa69f04-65c7-4ef4-88a2-0ce68f79a578",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "edfd1391-6eed-4658-86a0-e3b7d1fa9703"
        },
        "item": {
          "id": "17ce1820-499f-4b91-b716-40d44ef44275",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "62fd36cf-3ce0-44db-ba65-81d2d0d8f6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d37ac7-cfff-4e4f-bd17-1033d86b8d51",
        "cursor": {
          "ref": "b1adcbc5-6cad-4483-863f-3ece24eb14b6",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6881bd36-469b-4f9b-81e1-72ec351b218b"
        },
        "item": {
          "id": "16d37ac7-cfff-4e4f-bd17-1033d86b8d51",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "247f10f2-9cec-4fe1-a6e7-3a099d555d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f324e13-a2ef-4979-9a46-d61f0e7de37c",
        "cursor": {
          "ref": "61a0cc48-29b6-4959-808f-7bbeaadc729a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fdf1323a-f708-47f9-812e-f1c15b8dd4ab"
        },
        "item": {
          "id": "6f324e13-a2ef-4979-9a46-d61f0e7de37c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f0ccd6cc-a259-45b6-839b-93aea3cd0a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f3ee9b-5a48-451d-8b29-72990ea455e6",
        "cursor": {
          "ref": "2b41d479-91e6-4484-8a9b-41ee877545ca",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c10ba408-557b-4c67-a38b-057166bae412"
        },
        "item": {
          "id": "c1f3ee9b-5a48-451d-8b29-72990ea455e6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fa0086d7-e0c7-4100-b92e-1c2acb81a8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121ddf20-63fe-47ae-a6c1-a15516628b46",
        "cursor": {
          "ref": "8f06c9c3-2f3d-4fe1-8419-53547cc87194",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f6de57e7-c8e4-4e9d-9008-2d7140ba9024"
        },
        "item": {
          "id": "121ddf20-63fe-47ae-a6c1-a15516628b46",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "04b6d40d-b3f1-4a97-bb91-a7e4c90760f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499f64d4-8686-42bf-9dec-94c4646767a8",
        "cursor": {
          "ref": "24d49885-28ea-4bcc-b981-8b59ed113ae5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2c9ff584-23a3-457f-b41a-e0c84e6ebd31"
        },
        "item": {
          "id": "499f64d4-8686-42bf-9dec-94c4646767a8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ef8997c2-3622-4bc3-b1b5-caf1fcefbea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e5f9a1-6889-48f9-89e4-16f74e21780b",
        "cursor": {
          "ref": "68414665-8b0a-4790-a331-4b4b6d964106",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2ede3473-b701-477b-bc8b-aff5b0024a4e"
        },
        "item": {
          "id": "c2e5f9a1-6889-48f9-89e4-16f74e21780b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c2231249-a601-4714-aa88-666fdae18a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3c79f6-387b-4fe8-8db4-e13585ea0a8d",
        "cursor": {
          "ref": "e1817d03-a2d7-4aa1-b878-14a082a8e66b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1ccf2252-550f-431f-b8e7-fee7e839e522"
        },
        "item": {
          "id": "1d3c79f6-387b-4fe8-8db4-e13585ea0a8d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "493350f8-9633-4679-a1dc-16f19e2cf4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2d9da3-953f-4faa-b601-38b39ee72c94",
        "cursor": {
          "ref": "8aa6253e-2ace-4736-8f51-6a3ce812630b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "41641022-cb57-4c64-917c-7be5c5c8232e"
        },
        "item": {
          "id": "3d2d9da3-953f-4faa-b601-38b39ee72c94",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b4f02238-7081-46ec-b5f6-917c4400dd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e27b9e3-7aaa-4af2-a0c0-20497ecd5ba7",
        "cursor": {
          "ref": "5a04a5c7-7a79-4bd5-942b-50acf2390fda",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8a97de94-a4dc-46cc-a8fb-badaea7bd38c"
        },
        "item": {
          "id": "4e27b9e3-7aaa-4af2-a0c0-20497ecd5ba7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ff7a6087-411d-452a-a26d-93a20b65a66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a382cdac-6462-4bf7-b3a3-77d89f609e03",
        "cursor": {
          "ref": "2771a3d3-f898-4570-9741-008b2047690c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "90481243-634a-4e73-804e-a9323c072fdb"
        },
        "item": {
          "id": "a382cdac-6462-4bf7-b3a3-77d89f609e03",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "38c22345-3f34-4060-95a9-64bc9d3d0605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129f6393-39be-4d4a-aa53-631b99bfd1c8",
        "cursor": {
          "ref": "6bb40876-baf9-4b8c-b361-055fdad54e99",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "059b0668-2731-4231-8897-6a2dcabb4a9d"
        },
        "item": {
          "id": "129f6393-39be-4d4a-aa53-631b99bfd1c8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8ce2166b-309c-4b28-91e0-4399b2453c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e82eb58-977a-400c-bed7-a292c8fd5117",
        "cursor": {
          "ref": "c4bf7f7e-f4cd-4d08-a8c8-fe4005e39add",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b7d220e9-dc4a-4881-bd97-3bd6940e0a0a"
        },
        "item": {
          "id": "3e82eb58-977a-400c-bed7-a292c8fd5117",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2d166bd5-f9ca-43c5-9017-2043fb2e08ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f57c19-d35d-4bff-bc77-b62f9a5c676f",
        "cursor": {
          "ref": "fe2cf8cb-bd73-49c1-a4c4-3aac4492b519",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cfbfd405-4040-4e0c-b1c4-6c2fef002e62"
        },
        "item": {
          "id": "24f57c19-d35d-4bff-bc77-b62f9a5c676f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "16873d16-8b4e-4c79-aed9-59a3748c80a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe951717-1a0b-4d46-a738-55c1818db425",
        "cursor": {
          "ref": "0c0a6249-99df-40f1-802d-848278149b1e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a3b113d9-c5db-4c0c-9f48-a0610d865fec"
        },
        "item": {
          "id": "fe951717-1a0b-4d46-a738-55c1818db425",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f357635b-fe94-4ca5-874d-3431c7e55707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0206d00e-6aa2-4b24-82df-b7686a94ded1",
        "cursor": {
          "ref": "024872aa-983b-4f6a-a67e-9d515aab7759",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d56220d9-42cc-40e3-b5c3-8bbd7828a931"
        },
        "item": {
          "id": "0206d00e-6aa2-4b24-82df-b7686a94ded1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "afa216f4-dc31-4a12-91f3-060d1f054f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fd9ca6-73ab-433d-8e11-629082d7224c",
        "cursor": {
          "ref": "f33cc33f-8d71-4104-afd1-80ad380e6b53",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cbf5c424-f684-4309-afc8-d594b11583c5"
        },
        "item": {
          "id": "17fd9ca6-73ab-433d-8e11-629082d7224c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "481904cd-fb70-4882-9152-cddad343bcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35bb889-954a-41c5-9f23-ddfec7e5ce73",
        "cursor": {
          "ref": "706b4465-158a-4590-b329-7a0c93ec1a65",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0a88d4f2-961f-492e-96a1-b3c053ef5d38"
        },
        "item": {
          "id": "d35bb889-954a-41c5-9f23-ddfec7e5ce73",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e3a63ccc-300e-4f09-834a-f5f190cec3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b35ebc-282b-488c-a9d8-006ef47ad362",
        "cursor": {
          "ref": "669801d2-a93c-47d7-9d0a-8e99ee021c6d",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4e9778d5-9a2c-4d5e-b790-840d5e38982b"
        },
        "item": {
          "id": "88b35ebc-282b-488c-a9d8-006ef47ad362",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8a694b4f-3ee5-4336-9890-aa45cb03908a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c8f7e4-5bb2-4c7f-aa0b-9bb3df10bab7",
        "cursor": {
          "ref": "6957b23c-bbdc-4912-ac52-e95f2ef5a31f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6b9c5873-267d-4374-b33b-c355bc6a1b6c"
        },
        "item": {
          "id": "a7c8f7e4-5bb2-4c7f-aa0b-9bb3df10bab7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a7f8056c-5199-4dea-b547-d8b59d49cf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48737834-3d7e-4b17-80b5-4ce4f575620c",
        "cursor": {
          "ref": "2beeeee6-cbd7-4ef5-ad91-7964a7c7c655",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7b1315b9-22f6-46ab-aa49-206631b81d24"
        },
        "item": {
          "id": "48737834-3d7e-4b17-80b5-4ce4f575620c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "791a8916-3220-4b94-9972-90c005c265f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8314584-0ffd-4af7-ac51-4ec69771bd14",
        "cursor": {
          "ref": "b38a8698-e257-4b29-aacd-162b4f6c866d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "997c4c99-0171-4a4f-9f4b-d4f3d1db4d3f"
        },
        "item": {
          "id": "c8314584-0ffd-4af7-ac51-4ec69771bd14",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "28cedb0d-a2d5-4a12-8df6-9dc635ef0ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbeaf496-9217-4e4d-89fb-3f62e86940a4",
        "cursor": {
          "ref": "d8a12759-c37c-4f46-a888-c9ad9a3fac4c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cef347ab-3bc5-4d70-b6cd-3a5f3303235a"
        },
        "item": {
          "id": "cbeaf496-9217-4e4d-89fb-3f62e86940a4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3bbbb506-4965-4e16-81bf-b3648046dd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549ec2e4-3e46-42ae-a6de-c8e25dae0958",
        "cursor": {
          "ref": "586419e3-f90e-4ec4-bc0c-70d5fb43576a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "81bf9b0c-39f3-426a-bf79-1ce1a8fddd23"
        },
        "item": {
          "id": "549ec2e4-3e46-42ae-a6de-c8e25dae0958",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fb273801-d7b2-47a4-a8c5-7e233e6abfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4478f52-10c3-43df-b745-7887e6dd2ea5",
        "cursor": {
          "ref": "b74060db-7f15-4a95-92d3-62d14c857c7b",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4a624951-e637-4de4-8b5c-34896dd1deea"
        },
        "item": {
          "id": "a4478f52-10c3-43df-b745-7887e6dd2ea5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6f414850-5729-4b0d-b759-fc149b9593af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f82abb-0397-4170-80d7-812faaa9ddea",
        "cursor": {
          "ref": "b3192895-595d-4b00-9419-a6594befe915",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6f3672d2-3cc5-4ca7-b039-c13e4cb6680e"
        },
        "item": {
          "id": "54f82abb-0397-4170-80d7-812faaa9ddea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "382f246b-47ad-4f0b-abef-b9334c46b0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13585336-36f1-455b-8656-0271a89287c4",
        "cursor": {
          "ref": "769e5841-e848-447e-ac88-a08dfc03ace2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "33fb7d24-e75a-4b35-94c0-c9ae0c6f89ed"
        },
        "item": {
          "id": "13585336-36f1-455b-8656-0271a89287c4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "28e67858-1b55-41d2-8425-c7d3b45c4df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc74793-1fd2-4ecb-be52-329df3fd60b9",
        "cursor": {
          "ref": "58d2bcca-2205-463a-bbf3-7945b30cc541",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "92c02404-4b9d-4145-81f8-569294e208f3"
        },
        "item": {
          "id": "2cc74793-1fd2-4ecb-be52-329df3fd60b9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "29435cfa-0299-479b-8e60-4f47d74aa6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08017ec1-d6cc-461e-844a-36749d6d12d0",
        "cursor": {
          "ref": "37447eaa-da97-43b9-b2be-1fb46da13644",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2d9f99b2-420d-45b7-aa2d-f352bac78ad1"
        },
        "item": {
          "id": "08017ec1-d6cc-461e-844a-36749d6d12d0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e3672af6-9724-454c-9124-1023d77ebd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d238357-714f-4984-8f13-ec3c11c8afe2",
        "cursor": {
          "ref": "fd20192b-9a7a-43a5-a41d-0e56aa3c9e85",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0112499a-f350-49ef-91f6-d82761ab4e7d"
        },
        "item": {
          "id": "6d238357-714f-4984-8f13-ec3c11c8afe2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5d10d9cd-a381-4d4f-95c9-6d55f899793f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a927732-9798-4091-bd41-90be71eed3ae",
        "cursor": {
          "ref": "6e864e70-d7a6-442c-a0a1-47469f2d7e47",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "06cf6bb2-0dd0-4c36-a960-6009e631eefa"
        },
        "item": {
          "id": "8a927732-9798-4091-bd41-90be71eed3ae",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1acba71f-8f91-4e4b-99be-6f5365d0a426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5497c37b-f4b4-4bfa-94e3-109307023dc6",
        "cursor": {
          "ref": "17415b4b-bbcf-4636-85e5-fe603db86210",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8deb1201-f2d5-4341-b424-f935b1af6bcc"
        },
        "item": {
          "id": "5497c37b-f4b4-4bfa-94e3-109307023dc6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "23062b51-a3b9-4d5c-8806-c33073894833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d44f403c-0eb9-4de0-b323-5784b8b797cb",
        "cursor": {
          "ref": "a18754fc-4820-4c7d-b75a-70b31e91afab",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e4968bfd-975a-451d-a4c5-b9dc62879e40"
        },
        "item": {
          "id": "d44f403c-0eb9-4de0-b323-5784b8b797cb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "673b9c07-3acf-40f8-a294-ea2fb6642bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0befa520-8e51-4b19-97a5-dcc49f60183c",
        "cursor": {
          "ref": "314fa735-f4ca-45e1-955d-43ec5ef84aa9",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8d4df540-f953-4af6-89ef-8932c510aa1c"
        },
        "item": {
          "id": "0befa520-8e51-4b19-97a5-dcc49f60183c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "02c53a68-ccd8-4ba8-a47a-7f7c2ebc5005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2adbe73e-4a0b-4066-9180-29963a849fce",
        "cursor": {
          "ref": "139b3ff4-c816-4610-9cbc-965be90dd611",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "df55899e-b48b-43f1-92c7-aebc6581a071"
        },
        "item": {
          "id": "2adbe73e-4a0b-4066-9180-29963a849fce",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1028dd53-502d-4a6a-89c4-349863e2885e",
          "status": "Created",
          "code": 201,
          "responseTime": 11323,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e59489-3412-4f6e-ab84-4a5a23e54e37",
        "cursor": {
          "ref": "238f8202-d5d6-4f22-acd6-2e9ab4ed2f98",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "558db0e1-c431-4689-a816-ff256de25633"
        },
        "item": {
          "id": "44e59489-3412-4f6e-ab84-4a5a23e54e37",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "85021d80-7b69-4c0f-8792-6302c7921630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "cadaed5e-7144-480f-8077-f1270b21a0b8",
        "cursor": {
          "ref": "635a8c6d-cfd1-4db1-819d-2b41fa84ee66",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "903e9c8d-afbb-4b15-8861-a8660dfc7c19"
        },
        "item": {
          "id": "cadaed5e-7144-480f-8077-f1270b21a0b8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7f625680-fb86-4937-9765-0f6310efc2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8cc2a2a4-13e5-4a3a-80ac-790c0f1b3672",
        "cursor": {
          "ref": "5814131b-7dcf-447f-a418-cb9c4abe5d9c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "58fed8c7-ed50-4bb2-a092-4fbafd7d1665"
        },
        "item": {
          "id": "8cc2a2a4-13e5-4a3a-80ac-790c0f1b3672",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "02098618-a89b-4b0d-adb3-5a48f8644c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35ccd39-46dc-48c6-a851-480095103de4",
        "cursor": {
          "ref": "6800697b-a731-4e6a-8fcf-928c29b87b8d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "113ff6eb-3ffd-4bb9-9148-0b0bf72d56d1"
        },
        "item": {
          "id": "f35ccd39-46dc-48c6-a851-480095103de4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3b32f632-1bc6-4b5d-b8dc-58074340bbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf780f24-dc6d-4fd7-8395-320e3f5f4dd0",
        "cursor": {
          "ref": "82573eec-5e1a-4171-aa85-39a3488345f8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "99c955ac-38b7-444d-8c8e-7e6526155f94"
        },
        "item": {
          "id": "cf780f24-dc6d-4fd7-8395-320e3f5f4dd0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ca960ad0-58bd-4653-9814-456c3cc912cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eb9228-0c1f-4afc-8fed-94df0f7f779c",
        "cursor": {
          "ref": "824e090c-ea16-4a1d-a525-3a5b88881b1a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7c35cb82-24b0-4f4d-91d0-06b5937cc305"
        },
        "item": {
          "id": "d6eb9228-0c1f-4afc-8fed-94df0f7f779c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5cc928bf-3ee8-4018-beac-0e7d5175d30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493cbc0f-6675-4b14-bb8d-576e9f3010b3",
        "cursor": {
          "ref": "66728e3f-0cc6-4311-9100-196971d620ab",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "099947ca-36ec-4a83-95a6-7b385c5e670c"
        },
        "item": {
          "id": "493cbc0f-6675-4b14-bb8d-576e9f3010b3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7c22a6e0-7bb1-4571-9a7d-d6c5456940e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1404d3f3-7161-408b-b273-acfc1475a77e",
        "cursor": {
          "ref": "ca010fe3-c176-462b-99e0-c6a8d2b873e2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0b07403e-44c9-4cf4-91ac-566c66b56ec4"
        },
        "item": {
          "id": "1404d3f3-7161-408b-b273-acfc1475a77e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fc2eb378-16ce-4f3d-8987-f0b8819a0e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782065ab-cf6f-407c-81f6-548a61acddca",
        "cursor": {
          "ref": "bbdd94df-97ac-479b-a1f9-2f95f057e81a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c6844b90-555b-48a7-b16f-9007a70f9408"
        },
        "item": {
          "id": "782065ab-cf6f-407c-81f6-548a61acddca",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ea104052-d704-47a1-8ccd-763a51601d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3229ddc-c3b6-4158-9076-0d06f01d5e3f",
        "cursor": {
          "ref": "2b964850-6dfd-46e9-b19f-8e0b944d9f13",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "99f0a7e5-6afc-4d0f-98fc-43353b294091"
        },
        "item": {
          "id": "e3229ddc-c3b6-4158-9076-0d06f01d5e3f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ce226637-a497-440d-9325-d7935228d4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4436e7a5-ef8c-40a7-aa00-f9b3196c31c4",
        "cursor": {
          "ref": "2211a247-b6af-4cf5-8300-df95c9ac8b7e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c01edae2-3945-4880-961d-be83da85e639"
        },
        "item": {
          "id": "4436e7a5-ef8c-40a7-aa00-f9b3196c31c4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "425a9bdf-06f8-44c0-9b7e-d38a06886d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18139f65-bf42-47f0-adf9-7926c5e40422",
        "cursor": {
          "ref": "2b0ceea6-7cb0-426e-9388-3e44a45f0e1f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d028045d-b21b-4e2c-aa2a-ef9a27ae041d"
        },
        "item": {
          "id": "18139f65-bf42-47f0-adf9-7926c5e40422",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7186421d-9e61-4db9-baad-fc38ecf7b5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86634ff-eac0-4e75-b7e7-57f42978ed7e",
        "cursor": {
          "ref": "10b70f65-1954-460e-ac2a-94e40d400e28",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "51ff86b7-255d-4e80-b218-208fdfb8d719"
        },
        "item": {
          "id": "f86634ff-eac0-4e75-b7e7-57f42978ed7e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2ce3a5d9-b8a2-441d-a045-d7fad7a616c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870edad6-344e-4ffe-ad7c-4df0ab7a882a",
        "cursor": {
          "ref": "621fa76c-ce5b-4ea2-8da8-d9fc5c4e5dc1",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6cf7d295-f1f2-45bf-b53e-2b132cdb27f2"
        },
        "item": {
          "id": "870edad6-344e-4ffe-ad7c-4df0ab7a882a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9b25284c-9cbb-41cb-8846-bbbb25159fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589e4520-71c9-4f2f-86f5-fe70e4aa7fe6",
        "cursor": {
          "ref": "07c1bfb7-ab50-4d5f-a4e1-45ad8b271cea",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "31690080-e486-40bb-8dee-724a090f069b"
        },
        "item": {
          "id": "589e4520-71c9-4f2f-86f5-fe70e4aa7fe6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "df3ff956-5f08-4414-b07e-9e8dc3e510f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed0bb01-350e-4005-80fb-bfaefd9a00ed",
        "cursor": {
          "ref": "1ff0b710-dc69-4a29-ae49-503863367d25",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b3eb84dd-40d9-40d7-aa3a-f3349d1c3838"
        },
        "item": {
          "id": "5ed0bb01-350e-4005-80fb-bfaefd9a00ed",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ae44389b-24c9-4907-911b-940cda84ddff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc2ee3d-c0cd-4eca-bf22-98960226326d",
        "cursor": {
          "ref": "52ccea55-7707-4cde-98df-bc3c121a65a7",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a39a78f5-9bcd-410e-82d1-64f1a77b5740"
        },
        "item": {
          "id": "dcc2ee3d-c0cd-4eca-bf22-98960226326d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "34b1744c-86fd-4244-a1ab-4630c07c2aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd577381-a3fa-4a9c-8329-2e88aca64dc3",
        "cursor": {
          "ref": "3ae8ec7d-7dbf-4571-acd1-39227fe79805",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1870aa87-00f0-42c1-abea-21c9a910f55d"
        },
        "item": {
          "id": "cd577381-a3fa-4a9c-8329-2e88aca64dc3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c6d20469-1879-4077-9876-2850771e515c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df544593-cae2-4fed-989b-2daad338c554",
        "cursor": {
          "ref": "070f33d9-27f7-425a-a177-fa7af6a03789",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3ba5a962-fc55-4898-87bc-951457b410d1"
        },
        "item": {
          "id": "df544593-cae2-4fed-989b-2daad338c554",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f0defbd7-9d96-44d9-9349-43558a577dfb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ac69d2eb-96c4-4425-b0cf-0be871512562",
        "cursor": {
          "ref": "fedcd93a-d8ef-47f8-a6f2-12684ea12de7",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cae45f33-d6de-4eec-b951-d4a8475b6d02"
        },
        "item": {
          "id": "ac69d2eb-96c4-4425-b0cf-0be871512562",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b08b8fbe-e217-4569-ae97-d82609a3c409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48143da0-172e-41f2-a42e-58ae0c9b95b4",
        "cursor": {
          "ref": "92cff2fe-ddb4-46e5-9e76-d4f91cccd900",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "56ec88ab-4624-4508-ba0c-54ade70a0720"
        },
        "item": {
          "id": "48143da0-172e-41f2-a42e-58ae0c9b95b4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fb92d1ff-cb2f-43b3-898f-7cccf4d7834a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15520627-93be-4675-a89a-25d13397c657",
        "cursor": {
          "ref": "c03d413a-2f7b-4d54-9d70-94b55a88305a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "41b36888-ebca-466c-baa4-15a69399809a"
        },
        "item": {
          "id": "15520627-93be-4675-a89a-25d13397c657",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d999f517-82d5-49f2-ab4c-4687445d3ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77b31b9-9798-4670-a674-f75d366c29ce",
        "cursor": {
          "ref": "7d7352ee-35e9-4637-832d-60a680a6a035",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e42a16a3-5b29-4a41-872c-5a4f39ee1552"
        },
        "item": {
          "id": "f77b31b9-9798-4670-a674-f75d366c29ce",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6826fecf-5b5d-4c74-ab39-c029d828bd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd3e84f-f917-4b9a-b6cc-13b1e9b688ba",
        "cursor": {
          "ref": "0cae9afe-146c-418a-a324-d976f278608e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "433a5a22-fc8b-45f4-93b0-77530cc64ce3"
        },
        "item": {
          "id": "ebd3e84f-f917-4b9a-b6cc-13b1e9b688ba",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "41b6b9b6-98a4-443b-8aa0-1bd3643c7b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dd6219-191b-42db-b7fa-91edd0735725",
        "cursor": {
          "ref": "a208a195-fdc9-419d-b41c-216817bffced",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1eb93d77-8cfe-422a-8262-70774c8e9707"
        },
        "item": {
          "id": "a5dd6219-191b-42db-b7fa-91edd0735725",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "83172ba5-6ac0-42f9-a898-a632d9a3284e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89af294-a80d-4b73-9f90-9842e0ce9273",
        "cursor": {
          "ref": "d1923ff0-1429-4d82-b277-d08de2f53460",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ac181486-a807-4002-8ad4-9e06017867f8"
        },
        "item": {
          "id": "e89af294-a80d-4b73-9f90-9842e0ce9273",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1f1e90ac-61e9-4e46-9271-5e726db5c125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb9d7c5-dfc4-4a4f-942e-345e19db0c84",
        "cursor": {
          "ref": "c6cd19cb-2688-4178-bbc0-72d4043e3e06",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8c81b7b3-6657-4433-8760-89ae95fa4f9c"
        },
        "item": {
          "id": "3eb9d7c5-dfc4-4a4f-942e-345e19db0c84",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f4245e9a-174e-42ac-89d9-96b61023b6dc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "adde9450-a23e-4e6f-a1eb-0f4430de01a3",
        "cursor": {
          "ref": "f9f31fe4-17b0-444c-b8a2-3537f48cb5e3",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b26dbd32-93e9-4402-9a1b-02af3f2eca5c"
        },
        "item": {
          "id": "adde9450-a23e-4e6f-a1eb-0f4430de01a3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2ab9213b-5ebf-4d61-b6e3-016f742314eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b22b84b-1a58-4822-93d7-c9aa817e2c67",
        "cursor": {
          "ref": "2b739a58-4bb2-42ef-9ba5-0837a2b6398e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0be0b20c-9699-4b95-9080-9fc3b2a83575"
        },
        "item": {
          "id": "8b22b84b-1a58-4822-93d7-c9aa817e2c67",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "418bd5dc-a9dc-4dbb-ab5c-99f441e0153b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77643dbf-9301-400e-8c45-da22097886a2",
        "cursor": {
          "ref": "43684464-cebe-4ea4-b7e5-5a43a3ca1e0a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f91f1b43-23be-456f-9dc1-4e31203c95be"
        },
        "item": {
          "id": "77643dbf-9301-400e-8c45-da22097886a2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "be44f55b-dc76-4486-b8fa-907cef2ca693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b93b1b7-336c-40ae-9e5d-5d751ebbcd20",
        "cursor": {
          "ref": "6d185a32-2838-4507-b1d4-718a17614bab",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5ee89872-a80d-427b-9ebb-6ad95a8e02e4"
        },
        "item": {
          "id": "1b93b1b7-336c-40ae-9e5d-5d751ebbcd20",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c085bf54-f4c2-445b-bdc8-904c649f9dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d1d743-e1e1-4619-9552-43bc40413051",
        "cursor": {
          "ref": "fd1bb62e-52e9-436f-bca4-0408082242eb",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dfe7a0bc-17b1-4afd-85f2-da29b7281133"
        },
        "item": {
          "id": "f2d1d743-e1e1-4619-9552-43bc40413051",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "91001f31-f45b-4354-9b7e-6fda4ef20485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27ec3e4-30dd-4632-b3f0-4010fe4ff5d7",
        "cursor": {
          "ref": "801f6f5c-9bf2-4ac6-9641-cb2e6b9fdadc",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "95068599-e01f-4c88-88d3-3deec9f896da"
        },
        "item": {
          "id": "a27ec3e4-30dd-4632-b3f0-4010fe4ff5d7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0c2d5473-524e-4523-a21c-d0289d8cb399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991b2759-0c7e-49db-82b0-545e63e493f9",
        "cursor": {
          "ref": "a0663255-cfed-43c1-bb7f-55121a2caf31",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9468d607-b6ab-4ce5-aff3-f29edd2b18b7"
        },
        "item": {
          "id": "991b2759-0c7e-49db-82b0-545e63e493f9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bdaa0521-173d-4f0b-8337-bb67d0cec8a8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "55d80af6-0628-418f-a6cb-55601544e6f1",
        "cursor": {
          "ref": "9f68e9e4-c37d-40a9-a417-b5eb6b09d602",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "50abfa13-8bf1-4eb2-8b3f-972dff564978"
        },
        "item": {
          "id": "55d80af6-0628-418f-a6cb-55601544e6f1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ceac4e2f-dcb4-4b09-a058-84458e889733",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "f5fa46be-975d-474a-af59-a7ccde49bf56",
        "cursor": {
          "ref": "4ec5d1e7-ef7d-406b-8af9-e11bc0618c48",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4a7e9057-f791-4015-a5a2-b3b4ea6e41bc"
        },
        "item": {
          "id": "f5fa46be-975d-474a-af59-a7ccde49bf56",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "15672f9a-d671-4977-92dc-af2cdb2bfe0a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "91e3d045-586e-4d64-b3e0-714ef089b42a",
        "cursor": {
          "ref": "4a69d987-9951-43c7-a601-63c83b4d1570",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bbfd4307-c697-48bb-b6b4-2ecf88dc8f53"
        },
        "item": {
          "id": "91e3d045-586e-4d64-b3e0-714ef089b42a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0177f6a7-69ed-4053-9c94-211c23e8f533",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "15557d8e-3c0d-4236-a398-2f5ea8012dd9",
        "cursor": {
          "ref": "c5925d21-3099-4ec1-ba5b-2cea528df64a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "853a86db-d220-41e8-84e6-f451593cccd3"
        },
        "item": {
          "id": "15557d8e-3c0d-4236-a398-2f5ea8012dd9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7555b3cd-9c1c-498d-a005-68473130ed2c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "b77f2821-156a-4cb1-a74c-a560c07916fe",
        "cursor": {
          "ref": "c53debdb-f0fd-43ce-a776-8fcbe992a7fb",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9c137bc3-4a56-4b7c-9a43-095a9a711709"
        },
        "item": {
          "id": "b77f2821-156a-4cb1-a74c-a560c07916fe",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "746e0494-81e1-4d0e-be6c-aab5c7bbd131",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "696352f2-7085-4d35-a89b-5fb136b1f289",
        "cursor": {
          "ref": "e88c7f1f-0bbe-4fec-9fdf-413b4a2c1c16",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "915997f6-d4d3-4845-9e7c-66cbce2cc8e2"
        },
        "item": {
          "id": "696352f2-7085-4d35-a89b-5fb136b1f289",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "80e9b7e2-0060-468f-80da-e5f506213bd9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7073cf32-4d59-4245-88e2-99b95f9bad53",
        "cursor": {
          "ref": "6ec43c09-e108-4174-81a7-104f2855b7e7",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "377be9a9-2b4e-42ad-9df9-550d1c9f3f2c"
        },
        "item": {
          "id": "7073cf32-4d59-4245-88e2-99b95f9bad53",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "210f5f51-be65-4eb6-8b88-a2fceb95806f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625f472a-ddf8-4121-8529-1519a243b2e2",
        "cursor": {
          "ref": "77c0ec82-2937-43ae-830b-15dc312d2039",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c9f67d3a-26cc-4808-812c-eff9d6bc3a24"
        },
        "item": {
          "id": "625f472a-ddf8-4121-8529-1519a243b2e2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "006a31b6-215e-4d54-ab36-442e59d64daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71278c2-ca26-4f17-8329-0380af8e412a",
        "cursor": {
          "ref": "ee9e15a7-7c20-4131-bf1e-efd4a5a5eccd",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e9895c5a-21e4-4fe1-8898-d4849211d7d5"
        },
        "item": {
          "id": "f71278c2-ca26-4f17-8329-0380af8e412a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "65159344-68a2-4ad4-995f-c58df52e3a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7145142-3fde-43ec-980e-77ccb44748e4",
        "cursor": {
          "ref": "fdecf14f-3144-449c-a79e-1374724bd6c3",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1ab6eb46-bf12-4f25-9fb3-5c06b13786f4"
        },
        "item": {
          "id": "a7145142-3fde-43ec-980e-77ccb44748e4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "49a25a9f-17d4-41fd-aaf9-b65bf10a66a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75d6d56-4038-4453-9655-fc31bc81d9a7",
        "cursor": {
          "ref": "7441b7ec-8004-45ea-9e50-76b6d0517097",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2269922c-0158-4ddc-96e4-70ac807d85fe"
        },
        "item": {
          "id": "a75d6d56-4038-4453-9655-fc31bc81d9a7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a8e4cdc8-d20c-42ee-8765-ebaa5e989bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7492788f-c3af-4ad2-b858-9d35da6d3dd9",
        "cursor": {
          "ref": "d7ebaa79-8ef8-44f5-b51c-8817986bc64f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bb32cd30-7008-495c-aab8-1c82dfee14c2"
        },
        "item": {
          "id": "7492788f-c3af-4ad2-b858-9d35da6d3dd9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b74a4e8d-6fd6-4a60-a29d-eb6d9d5f0108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d3813b-b20e-414e-a3a2-cd5cb2fce7b4",
        "cursor": {
          "ref": "d426873e-d8c0-40f5-8507-24492be8512e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fd3ea97d-7499-4ef5-8b97-4a7c555bc650"
        },
        "item": {
          "id": "25d3813b-b20e-414e-a3a2-cd5cb2fce7b4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6992d59d-0a5d-41ca-a077-ab2b15da6653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1a8038-4e57-4c30-aaf3-d2989dafe3ca",
        "cursor": {
          "ref": "81c7a87d-0258-4a40-970c-adc7fd3362d6",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e51fd572-dc73-46c4-b094-572c850323c2"
        },
        "item": {
          "id": "bc1a8038-4e57-4c30-aaf3-d2989dafe3ca",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "30950457-d6d4-4388-8371-a8967defa251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28be4231-48d6-48b2-8eac-77c32d9f28d0",
        "cursor": {
          "ref": "9e07e652-3b8e-43cc-8ec0-9ecbd29a8875",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "69894a35-2daa-4c1f-858e-daa0d19b8af5"
        },
        "item": {
          "id": "28be4231-48d6-48b2-8eac-77c32d9f28d0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d486f190-8394-467c-9819-b4ada54340ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e2f1f8-4bdc-4dc0-93f4-2d7bf5042c16",
        "cursor": {
          "ref": "423c2294-9b9a-49f6-8178-6ad263cb39ff",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d04e5802-0936-46d6-b736-2e7020ab7c48"
        },
        "item": {
          "id": "16e2f1f8-4bdc-4dc0-93f4-2d7bf5042c16",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ca599a15-1aaf-4b77-a672-297b82685e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2705a4a-a6c2-42b7-8ed8-1f654cea53fb",
        "cursor": {
          "ref": "c237fade-e7c4-4e65-8d92-e45c3144de26",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9e8dbc72-8e01-4092-8ddb-ce5fabfc64e1"
        },
        "item": {
          "id": "b2705a4a-a6c2-42b7-8ed8-1f654cea53fb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "41040845-bf22-4e43-8683-6646b909f320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee0632d-fd47-4347-a000-1c532d3f998d",
        "cursor": {
          "ref": "827d330a-e328-4ca6-8a59-4084377d57fb",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6d06d08e-a49b-4e5d-9cd7-48986c61ebfc"
        },
        "item": {
          "id": "2ee0632d-fd47-4347-a000-1c532d3f998d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e3c2104c-1145-4168-b66d-aab09dbbbdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e47bb85-5192-4d7e-9899-9401d31b8c38",
        "cursor": {
          "ref": "98a58cef-1e45-48d1-be52-506884c6f6e8",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5b7c8c07-92db-4ce3-a5bd-4180fbcc7aa3"
        },
        "item": {
          "id": "9e47bb85-5192-4d7e-9899-9401d31b8c38",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "501da5f8-cf5a-4642-bf7e-d37e59c3ac1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ce2d38-1f21-4737-96ce-33f59ca21b74",
        "cursor": {
          "ref": "9184adb6-82ed-490e-ba7e-1c3b82350bea",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e3958aa4-5501-4c27-a614-f56ec3e29212"
        },
        "item": {
          "id": "75ce2d38-1f21-4737-96ce-33f59ca21b74",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3211ff88-e812-4834-9fa5-db77ebb3d224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e2735a-e490-4343-be2f-2f1fe7d52609",
        "cursor": {
          "ref": "3e434ed5-a134-4cb3-9201-a3c899ed5fd1",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "566d3600-9687-40af-a86e-d78c05f960f9"
        },
        "item": {
          "id": "e3e2735a-e490-4343-be2f-2f1fe7d52609",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "912b5e0d-f5e4-447e-b7fe-265c0d565e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfee6aa7-f799-43b6-bf8b-fd41ceb08cc2",
        "cursor": {
          "ref": "a014d079-8fe8-4702-a28e-5656955d1073",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "510643ff-8d31-4add-9d8b-fae535b6f90d"
        },
        "item": {
          "id": "bfee6aa7-f799-43b6-bf8b-fd41ceb08cc2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "63841a1a-be00-4b30-87e6-18ed3c32f965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1806941c-94b5-46d0-a8dd-608b083294b4",
        "cursor": {
          "ref": "e35b8b5b-4a74-4d8a-936b-04e86daa1442",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0a9e0055-b8ce-4567-a0fd-fbea6eca5197"
        },
        "item": {
          "id": "1806941c-94b5-46d0-a8dd-608b083294b4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f33eec8c-32ba-4e4e-b79d-437c6dc3922d",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "e48b44d7-5d10-4fec-b0ce-5e041df97d3c",
        "cursor": {
          "ref": "dadd47f2-0aad-4e07-b273-af6164887b49",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b35dd4a9-856d-481a-91f0-3d9d07a0301d"
        },
        "item": {
          "id": "e48b44d7-5d10-4fec-b0ce-5e041df97d3c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0830f1fa-e931-40fc-9a1a-d60ddcf530ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67145b3-c095-4228-8e73-01b5f286e107",
        "cursor": {
          "ref": "28cf62fb-b395-4d1a-9abd-492d65e99bc0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f3b3e59e-b907-4476-9464-d02b48d71399"
        },
        "item": {
          "id": "d67145b3-c095-4228-8e73-01b5f286e107",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a2582593-b06b-4768-8c6e-db6191389945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908004d7-2a24-40e5-a8f7-d3a4a1ff2981",
        "cursor": {
          "ref": "b4643cf1-642c-4d09-bdcb-ca43834a6acc",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a66bdf81-8ba4-4e70-b256-041b0a55b042"
        },
        "item": {
          "id": "908004d7-2a24-40e5-a8f7-d3a4a1ff2981",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7630c055-3956-4174-b2af-61a833ae6564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c2169e-8b00-4434-8186-6584fdcdd1e8",
        "cursor": {
          "ref": "8ccd41b5-b278-4679-80f0-cc205d992380",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5cb136ec-3e3e-42b1-b394-dff7b7137605"
        },
        "item": {
          "id": "56c2169e-8b00-4434-8186-6584fdcdd1e8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "259a6d1c-5032-4700-b6c9-2ec84a9c8db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62f751f-24db-4d3d-9734-e7d54872ffa4",
        "cursor": {
          "ref": "f4def707-a03d-4bf8-bb1d-f94f28143958",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "74e69b70-bac5-46de-a347-eb9a2b5454a7"
        },
        "item": {
          "id": "a62f751f-24db-4d3d-9734-e7d54872ffa4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d86962e6-dcee-46ae-bdf4-c6d90854c430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222a5fba-dfc7-40d2-9602-3e0a2bde4a4a",
        "cursor": {
          "ref": "52ed2602-8d70-4dc8-8956-4b85957f7e94",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "31dcadb9-cecc-4c40-b36c-3ad1511d3967"
        },
        "item": {
          "id": "222a5fba-dfc7-40d2-9602-3e0a2bde4a4a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f79f676f-f585-4770-8be0-dabbd76b75ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c8736f-650d-4ce1-8ead-ec76a429846f",
        "cursor": {
          "ref": "7513fcbb-eb3f-4cdf-9797-88b6569defbc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "37b95406-90fe-4955-aea8-8f0d06aa2c93"
        },
        "item": {
          "id": "e4c8736f-650d-4ce1-8ead-ec76a429846f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "da61fea9-5400-435a-8b61-d25c5d1e27df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af88f453-aeca-4c6b-8a82-460c7cf12aa9",
        "cursor": {
          "ref": "4a4338c0-f355-4969-8e4c-b3cd8a7ead29",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d00edc3c-7b3b-416c-8efc-32f00409d6fd"
        },
        "item": {
          "id": "af88f453-aeca-4c6b-8a82-460c7cf12aa9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2f7f396e-635c-4ec9-b02d-400cc65218ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d684270-c82c-497e-ae81-279e03ae65be",
        "cursor": {
          "ref": "aafc19d7-6a88-4bc7-8954-d52c2563a341",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c376ff94-88c8-411d-9492-c62799d0f5e2"
        },
        "item": {
          "id": "4d684270-c82c-497e-ae81-279e03ae65be",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ecee488b-8567-48b0-9b2c-e6c655342612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5577988c-3cda-48c3-a15d-1a417f85d9cf",
        "cursor": {
          "ref": "5e9c8681-f5ff-4bce-8e6e-8b241cef85e2",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "deaab231-0063-4ee8-b1e0-040a3246e6e3"
        },
        "item": {
          "id": "5577988c-3cda-48c3-a15d-1a417f85d9cf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "90a009c5-fc55-4105-857f-70f2f11ac27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c08628d-5aa3-4579-81f1-0615e3452881",
        "cursor": {
          "ref": "f73dc0ec-3c8f-4fef-97b1-2cc4af226df0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b730b911-7173-4b2b-b49d-d09f0fd46e08"
        },
        "item": {
          "id": "6c08628d-5aa3-4579-81f1-0615e3452881",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "093f0a6c-4b1f-444e-8aa8-ab1620bd1cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a05deb0-e392-4efd-bef3-ceba88fe229b",
        "cursor": {
          "ref": "f5163ee2-96be-4d07-a782-4211bf723967",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c537f96e-f399-459a-a4b9-fbaad6115537"
        },
        "item": {
          "id": "1a05deb0-e392-4efd-bef3-ceba88fe229b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "eebe85f8-bf5e-41ec-a11b-ae34288b529a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103c56c3-1667-4e9b-8ef2-eb8727622ea8",
        "cursor": {
          "ref": "73b399da-1d7f-42f9-afc7-8944abee17c2",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fee14833-5df3-434d-80f3-2e8cc59d9665"
        },
        "item": {
          "id": "103c56c3-1667-4e9b-8ef2-eb8727622ea8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2ccea17c-5c1c-4c95-aa2c-5a37d6f89750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaac861-092c-43c3-a52c-310129ef5cb1",
        "cursor": {
          "ref": "fb35eee3-2d23-44bd-8bfe-f019cdf850ed",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "054dd272-8e0d-45a1-9741-9cb46d577e95"
        },
        "item": {
          "id": "abaac861-092c-43c3-a52c-310129ef5cb1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "36ac553c-c123-431f-a605-27e0cd8ae687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf1443f-8a5b-4aa9-afd4-01ddc0ec3ee3",
        "cursor": {
          "ref": "5b0faeca-b500-4f09-874c-aae4d8abf5bf",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "17c3c0c4-9284-427c-ae40-f9ba75806f2b"
        },
        "item": {
          "id": "aaf1443f-8a5b-4aa9-afd4-01ddc0ec3ee3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b93c9c1b-bba1-448f-8716-ff9efd031d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c8717b-fec5-4585-8b94-9ddc55220cb1",
        "cursor": {
          "ref": "32bf129b-fd75-4660-ab24-cf3ed06b3acf",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "92e63f58-dfa8-4403-89ed-d4bc00fb929a"
        },
        "item": {
          "id": "12c8717b-fec5-4585-8b94-9ddc55220cb1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b6b0a92c-3209-469e-a3ba-b3fd6df89bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb0428e-d8a7-4b01-b463-1b3cf9c2b570",
        "cursor": {
          "ref": "a18bcd00-a501-439d-9829-316b04da8c31",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "011997da-5453-4ac8-83b6-76a72875c929"
        },
        "item": {
          "id": "bcb0428e-d8a7-4b01-b463-1b3cf9c2b570",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f8bccc1b-2ed6-4b5e-a257-ec8fbe563cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d1e9dc-31cb-4f1f-83a2-be549e4c4f51",
        "cursor": {
          "ref": "197b4090-b5b6-4d4e-a96b-2e0f61fb7215",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1b3d9a2e-c0f7-4e39-8486-c197ff39eaec"
        },
        "item": {
          "id": "a5d1e9dc-31cb-4f1f-83a2-be549e4c4f51",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "82e33ea2-b7d6-4e7b-acad-6cd67d012493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ccc762-55cc-4ec0-865f-965cb97cd3e7",
        "cursor": {
          "ref": "46f1f869-3761-4c8d-8657-8f7d43642f35",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "13bf412f-6538-498a-9022-c4e17a257c3c"
        },
        "item": {
          "id": "98ccc762-55cc-4ec0-865f-965cb97cd3e7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "224a87c6-4c09-4516-b1dd-65c796ab2e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabcc8ae-9edf-4dc4-a38d-a10abfddd926",
        "cursor": {
          "ref": "0729b2a4-f4ab-4510-b324-66f2745ae45a",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b46f2f59-30f2-4a39-bef8-6a1e71f15ff8"
        },
        "item": {
          "id": "fabcc8ae-9edf-4dc4-a38d-a10abfddd926",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "85672b84-bd98-437f-ab25-644b11308390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f58e07-0c81-4928-8d25-6feea2c5f1c0",
        "cursor": {
          "ref": "4b190be6-df2e-4421-aabf-406d64f27575",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6bb95dee-3c25-403c-870c-b234b501d87c"
        },
        "item": {
          "id": "f3f58e07-0c81-4928-8d25-6feea2c5f1c0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "57ac351c-6693-41ad-920d-91b741398636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9974ef42-6080-4828-9bdf-454087b57450",
        "cursor": {
          "ref": "281ad14e-8f93-41d9-a713-741a5686dea6",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ada09b1c-f45a-4931-9093-8246d1e6043a"
        },
        "item": {
          "id": "9974ef42-6080-4828-9bdf-454087b57450",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aaec43d7-8bb1-41d5-8682-01d59b7b5bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863422d5-d2ce-4358-8dbb-b3775fce7d52",
        "cursor": {
          "ref": "6881fa84-cab4-4ce0-b93f-8cccb4b236e0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2881c3d6-e79b-4d84-8386-461eebbaa63f"
        },
        "item": {
          "id": "863422d5-d2ce-4358-8dbb-b3775fce7d52",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1b6c44b7-2910-463b-b328-3a55c7b53a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1989ab8b-e4ac-4b45-818e-7f11d9a7fc3f",
        "cursor": {
          "ref": "5a30b870-ba5a-4971-b809-d081d7ff539f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5261fd7b-bf1a-4a40-a01d-a1462627f8f1"
        },
        "item": {
          "id": "1989ab8b-e4ac-4b45-818e-7f11d9a7fc3f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2deb669f-2aad-4763-945c-36552b990fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd774e3-f7e2-4691-90e7-4366016665d5",
        "cursor": {
          "ref": "df3b7378-7702-44d5-ab21-b555ba0a04c1",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d739f0bf-b7c1-49d1-96f2-fc2489aa58a2"
        },
        "item": {
          "id": "6dd774e3-f7e2-4691-90e7-4366016665d5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a97891ec-e521-4bf6-b6b8-986bb13629db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d291e4-bcfe-4b40-951d-1ebfaa750666",
        "cursor": {
          "ref": "1b366523-48a0-4676-ae53-dd5093412f9b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7cc32ee0-4bb3-4e85-9519-f57317deca98"
        },
        "item": {
          "id": "71d291e4-bcfe-4b40-951d-1ebfaa750666",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "25f29c98-3586-4269-a836-3b6ee9db3ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1448f190-1e89-42eb-b955-9649bbf7681c",
        "cursor": {
          "ref": "b732a082-fc68-4884-99f2-1bd7ccfdf9d9",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3e0906a0-8eed-43bc-8768-5673d94cf7b7"
        },
        "item": {
          "id": "1448f190-1e89-42eb-b955-9649bbf7681c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ca3cc2ee-d7c5-4113-ac32-6576f95545a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c5d261-c847-4d9f-b1ec-37b98a3bf17c",
        "cursor": {
          "ref": "9883afab-d88f-4a84-9865-46f6e0a3a7a0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f42109a3-1e38-402e-89d1-538a204e588c"
        },
        "item": {
          "id": "e1c5d261-c847-4d9f-b1ec-37b98a3bf17c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b66b15fb-70d0-4cd8-bebe-f0940b5a4a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60b78fe-f1c3-4473-aebc-5864cb58ea5e",
        "cursor": {
          "ref": "ddc2254e-ef4e-419f-a069-bb23eee679b9",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "41f6323d-b20c-4191-882e-a1584059f12d"
        },
        "item": {
          "id": "e60b78fe-f1c3-4473-aebc-5864cb58ea5e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "26e54a73-77b6-4187-a276-7795e48b512d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5744c67c-b651-449d-ad5e-42b36fc1a4c3",
        "cursor": {
          "ref": "9ee606f8-ff2c-4bfa-8ee4-b1f65f66db5f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "be6476a1-00d2-4136-bc23-f876e2215f79"
        },
        "item": {
          "id": "5744c67c-b651-449d-ad5e-42b36fc1a4c3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4092ebc6-b210-4682-859f-828fab8c49bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03ddd97-b57f-4c17-832b-a8010286e0f4",
        "cursor": {
          "ref": "8be553d7-a169-4b57-b7e9-5752adc088c7",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0852ec85-96c0-47d9-a678-0aaf257201a8"
        },
        "item": {
          "id": "d03ddd97-b57f-4c17-832b-a8010286e0f4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "908d1b98-55d3-41af-a685-ae758fb961e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceace0a4-388d-4816-9090-db7e8f5c5bfd",
        "cursor": {
          "ref": "f0ffb2b7-0402-4751-ab89-de04e00031c3",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9ab4ccf8-0386-4d95-b568-e121fbcb0dda"
        },
        "item": {
          "id": "ceace0a4-388d-4816-9090-db7e8f5c5bfd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "99b2384b-05ce-4d6c-801a-ea92575e742d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972c028a-dd9d-4278-a1c2-6c4931702556",
        "cursor": {
          "ref": "99fbc444-70cd-4d94-9542-898558ca7de4",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8d30795b-4f24-4431-9df0-82fae2a2276c"
        },
        "item": {
          "id": "972c028a-dd9d-4278-a1c2-6c4931702556",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8724c814-1b58-45dc-b81d-02e03c064a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11db1db-33ec-4c2c-9268-7af579c49907",
        "cursor": {
          "ref": "ed47a630-4062-4d15-a61e-263ed807d1cd",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "71fb93de-da4c-4dc2-bb2b-e3126e302f08"
        },
        "item": {
          "id": "b11db1db-33ec-4c2c-9268-7af579c49907",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c0206803-4935-470b-80d5-76eba34872ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8747c20f-f048-418c-a2a8-b506a52642f7",
        "cursor": {
          "ref": "5608c083-1178-4fc5-b8f6-7852104ecda3",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6d87b3c2-d58a-4a6a-a506-cab3f380cd1a"
        },
        "item": {
          "id": "8747c20f-f048-418c-a2a8-b506a52642f7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "81c3f0fd-18d0-42af-84d8-c1ecf8ac0abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de14deee-b2bd-4b59-9670-9445d1efde14",
        "cursor": {
          "ref": "5fa87e40-c800-4436-b3df-e55bb9ee7aad",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6c541d9c-0c0d-40d4-be1a-e2809ca96fcd"
        },
        "item": {
          "id": "de14deee-b2bd-4b59-9670-9445d1efde14",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "86363d51-3dad-4d25-87c8-db5e7e6c5ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46e0b1f-5e68-4fb4-8c65-6da20775cb74",
        "cursor": {
          "ref": "170bf44b-c371-441d-ada0-3b96798af7bb",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "dfeae639-f7fc-4346-a199-ac5fefd5ff1b"
        },
        "item": {
          "id": "d46e0b1f-5e68-4fb4-8c65-6da20775cb74",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a265a97d-e0d6-4da9-997b-ad5d010c0a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a484e93-a014-4f51-a8e4-1f7ce192c45b",
        "cursor": {
          "ref": "aa1f465c-da7b-431f-bf17-c11fb7fffef3",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e4fda87c-561d-4fde-9cba-702687eb5929"
        },
        "item": {
          "id": "1a484e93-a014-4f51-a8e4-1f7ce192c45b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bb8aac22-8cc3-4925-8a86-9be21ca6880c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb48efa-5600-4a7d-99e1-8aa124af5259",
        "cursor": {
          "ref": "050a92ae-faed-4b68-8680-6f3d5e05871d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "003b75b2-d7e5-4bb0-8493-5d9634f23494"
        },
        "item": {
          "id": "afb48efa-5600-4a7d-99e1-8aa124af5259",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e760bba7-c9cf-49bd-adec-50d8e533d403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e41b6d-ff4f-4f6e-8f7e-8583dacc401c",
        "cursor": {
          "ref": "1d8788bf-ac72-4526-84d3-cdab01c9a9d4",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3af6e671-015c-472a-bd3a-346a04bcd36f"
        },
        "item": {
          "id": "f3e41b6d-ff4f-4f6e-8f7e-8583dacc401c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "16540c51-3bb0-48e5-a09f-4a5bd847c373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa6d8d0-20f5-4601-ad63-72519bfa0fca",
        "cursor": {
          "ref": "91e99e8d-dea5-4395-aece-685709c1260f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e2acc39e-2b3e-479d-8532-d489db1af2c4"
        },
        "item": {
          "id": "baa6d8d0-20f5-4601-ad63-72519bfa0fca",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "09d0c3ff-bb85-434c-8747-69969e28e1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d35632-c818-403f-9080-116d539de27d",
        "cursor": {
          "ref": "a19cf454-d4da-406e-ba7d-4effc6b67fe7",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "749b7d65-98fe-4f7d-b947-0abdb5d3ae67"
        },
        "item": {
          "id": "65d35632-c818-403f-9080-116d539de27d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8f5601b9-1ff9-42e1-83f7-7547c03e644d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b773c5-f83e-4955-a1dc-916d9517cd48",
        "cursor": {
          "ref": "b662dec8-f06e-4455-9a00-199f0070637c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bf612099-50ac-4ec2-9637-31fa3ed44775"
        },
        "item": {
          "id": "78b773c5-f83e-4955-a1dc-916d9517cd48",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d799276e-c5f3-43b9-9542-e398de8fc874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0aaf2d-6b0b-4ed8-aed1-6729b8529d8e",
        "cursor": {
          "ref": "922e21a9-278e-4912-9d69-e8da99634b68",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "60c4354e-4af0-4c53-ac1a-9cda05eb5670"
        },
        "item": {
          "id": "aa0aaf2d-6b0b-4ed8-aed1-6729b8529d8e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "667c6a83-62b0-4474-8e37-3a57a831e6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f00c8a3-62d7-455c-8658-4f3aef935519",
        "cursor": {
          "ref": "9551458d-a365-4205-abd0-f30ce9919606",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e5fdcd17-383d-4341-ad1c-cca3c0d04727"
        },
        "item": {
          "id": "7f00c8a3-62d7-455c-8658-4f3aef935519",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c7ded06e-087a-4c7d-a1bb-68f068481935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85197824-275f-4a75-a468-7163d2c77c94",
        "cursor": {
          "ref": "cda32c01-64e3-4781-9d63-9f1e06c8345d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ddbfc016-bb45-40e0-8d15-cb1840ddaae9"
        },
        "item": {
          "id": "85197824-275f-4a75-a468-7163d2c77c94",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1016ffd6-27bd-4b4f-965a-badd168fbe79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f3c158-c5f5-4fa6-91db-854f48278119",
        "cursor": {
          "ref": "4de335cf-1bab-41af-ab05-3aa9d4c1bda2",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6ff06591-5666-4dae-b1b5-c1886e88043b"
        },
        "item": {
          "id": "43f3c158-c5f5-4fa6-91db-854f48278119",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a6d02955-8c0e-43b3-8d2b-f5a92d280a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f453e4a5-3f76-49dd-aa21-caeb52382e3c",
        "cursor": {
          "ref": "2754ded7-d88f-4af7-bf27-a487ff6db527",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d0f48096-365e-413c-a975-26ecc0c05c4a"
        },
        "item": {
          "id": "f453e4a5-3f76-49dd-aa21-caeb52382e3c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d56129b1-8e7c-42cd-a9a1-4ba182894e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cb6216-e221-48b8-820b-a6ff1bdd6f72",
        "cursor": {
          "ref": "4161e906-9d29-43bb-a78d-5e2a36753946",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "930ba427-11fd-47a0-98b6-c669096b140c"
        },
        "item": {
          "id": "a1cb6216-e221-48b8-820b-a6ff1bdd6f72",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c25dfaaa-0017-4717-b56e-61a6352c1c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be59628-6d82-44c1-9017-98b885cd35f6",
        "cursor": {
          "ref": "5f3efb86-c2fa-49d9-a04e-4eb50549ea83",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6c46d77d-e798-4ae7-a90d-5796c594cd10"
        },
        "item": {
          "id": "3be59628-6d82-44c1-9017-98b885cd35f6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "78f038ac-86f5-4410-9f42-aaa4be5a4e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e0d864-d868-46b0-8bea-4217f0469af2",
        "cursor": {
          "ref": "85b94866-c5a4-42ab-a4df-0f58164f552b",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9aa53513-2a27-47f4-add4-dc9a214d58aa"
        },
        "item": {
          "id": "69e0d864-d868-46b0-8bea-4217f0469af2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d072aca6-c26e-4153-8225-81dd546688ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60b3fd4-e263-4853-bd6e-16377178cd7d",
        "cursor": {
          "ref": "f67483d0-9761-4f73-b033-50fabe38ed92",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "248a3587-f055-4ac8-b0e1-ca239b2f1577"
        },
        "item": {
          "id": "c60b3fd4-e263-4853-bd6e-16377178cd7d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f3844757-ea9f-435b-90ad-731fbfe9e171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0306f6db-b5d6-4109-a6d1-16f42b5d4d73",
        "cursor": {
          "ref": "12d9ff7d-1ca0-4c12-b237-852659eba877",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e83aa197-c109-49a5-88c3-2f15ea549410"
        },
        "item": {
          "id": "0306f6db-b5d6-4109-a6d1-16f42b5d4d73",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3610f416-e901-409f-99c2-6aef4d8870b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ba8704-a394-4875-80ab-61f6c43d5751",
        "cursor": {
          "ref": "fb4925a7-334c-4093-b29b-641b74ef05b0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "40f26cc7-d857-4dd0-ba35-ea24bede5acb"
        },
        "item": {
          "id": "85ba8704-a394-4875-80ab-61f6c43d5751",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a139f356-e61c-48fe-886b-d56d6da832dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6cd46a-8065-4a99-af06-2e9300f60e2b",
        "cursor": {
          "ref": "19e2133b-d1b6-40ef-b324-7bf482b24489",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "48416e1e-4b1d-49cc-9466-ff5e6d0a36fd"
        },
        "item": {
          "id": "bf6cd46a-8065-4a99-af06-2e9300f60e2b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "98f0367e-8a0e-40c8-b81b-3af4c9a719a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a62f3f-35a4-4712-afc8-64625571a8ea",
        "cursor": {
          "ref": "c22c82cf-96b2-438b-9386-1394e6100cf3",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "07acff72-f086-4c2f-a97a-3c3e173edb13"
        },
        "item": {
          "id": "73a62f3f-35a4-4712-afc8-64625571a8ea",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2a48d566-4ad2-4a71-9042-21d9ea60de7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9d6478-91a1-4710-b6d7-71b02f0e65fa",
        "cursor": {
          "ref": "4f4f8214-6ae7-477a-b1f5-ccd5bf306e59",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "607c1aa2-cf43-4e51-89b5-5e99f7505ce2"
        },
        "item": {
          "id": "eb9d6478-91a1-4710-b6d7-71b02f0e65fa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ea3a0446-0f5f-43d4-ab1f-69e2be098444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b043dd3-9310-44b4-9c32-cca505580cc2",
        "cursor": {
          "ref": "6fc18260-9c6f-4a73-96c0-e1bb9882e224",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a2e531d4-96d4-47cf-9a34-7c9f25694534"
        },
        "item": {
          "id": "3b043dd3-9310-44b4-9c32-cca505580cc2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dba08434-514d-4a11-aa04-bdf5dc8a92c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c0cb46-f5f7-4454-b187-484ae1c41772",
        "cursor": {
          "ref": "0404f3a7-f0f8-469b-b56a-05fdf6b720bc",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "74732e2d-fed9-4bb5-8695-7219008d158e"
        },
        "item": {
          "id": "80c0cb46-f5f7-4454-b187-484ae1c41772",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "eaa0ceb6-69b1-4673-bb12-13a4cccd151e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abea81f-1628-41e1-bb00-6cdd49bc0f3d",
        "cursor": {
          "ref": "6e3a204a-914f-4485-927c-ae0ded231a90",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1b1a68da-18b3-4ef0-9df3-efd4e91ebd4b"
        },
        "item": {
          "id": "4abea81f-1628-41e1-bb00-6cdd49bc0f3d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ad12352a-0bb1-46ba-8e90-abfb1618395b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118df782-2fd4-4e2e-9563-e284082441b7",
        "cursor": {
          "ref": "1f69b3ec-2a7b-4561-9cca-c40619fa2760",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "42bb8148-43b4-4d00-80f6-bbd6f89b6840"
        },
        "item": {
          "id": "118df782-2fd4-4e2e-9563-e284082441b7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "83a32c5a-a905-4ed1-b331-9030699616f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdc73d9-da5c-47b0-b1d1-fd9b339c32c1",
        "cursor": {
          "ref": "8be727d0-86cc-4539-82b3-430732c26a48",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7f7ff8a5-b047-4099-960d-267d327a3e6b"
        },
        "item": {
          "id": "bcdc73d9-da5c-47b0-b1d1-fd9b339c32c1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "79c76381-7a5b-40d5-ae83-52ff8f4fab73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7c8f8d-cd7d-4fad-99b5-59637e4cfb3e",
        "cursor": {
          "ref": "89a81fb1-4489-4faa-b2df-b3a9ddb21aaa",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8430c224-3445-4fac-ba48-78e358c81186"
        },
        "item": {
          "id": "5d7c8f8d-cd7d-4fad-99b5-59637e4cfb3e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a864d931-5732-447a-bbce-998ee138789e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8b53b5-fca0-4b80-9e86-6f2f7060696a",
        "cursor": {
          "ref": "ffd0a0a9-b178-4081-8511-bba052ab8b3e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8f59d40f-268e-4625-be0d-f8be0c78fe6c"
        },
        "item": {
          "id": "1d8b53b5-fca0-4b80-9e86-6f2f7060696a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3e5cc256-a05e-4121-bc3d-b5e178c0f287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c93d31-a373-4c02-ae95-abb7f1e94ea2",
        "cursor": {
          "ref": "73701b96-7b67-40bd-a6ff-62bdbc48f115",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "204b5b76-ee1a-490e-ab86-e1ee5fe421a3"
        },
        "item": {
          "id": "52c93d31-a373-4c02-ae95-abb7f1e94ea2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "170f34b1-ac0b-436e-b90a-e9eb0a980a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b803116-b1ed-480a-8268-0bf6816fbcf5",
        "cursor": {
          "ref": "22204409-df04-4ca2-a78b-c33eb52a3b8d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "74cb757c-df05-423d-8a33-5624093e8e68"
        },
        "item": {
          "id": "7b803116-b1ed-480a-8268-0bf6816fbcf5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "88b8bb87-0139-40c0-a302-f3b9c24ca88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffcefc5-84d5-4364-8645-d1d2320116e2",
        "cursor": {
          "ref": "bbe6555c-0267-4834-bdbc-14f06c43705c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "26260944-0171-4041-809a-b48ec1d4028c"
        },
        "item": {
          "id": "4ffcefc5-84d5-4364-8645-d1d2320116e2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3323bb67-57c3-4875-9e6f-e3a8dac800cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780afa49-213a-4ff4-a771-eb47d50bf48c",
        "cursor": {
          "ref": "8e86f9b0-bc3a-4451-9f77-5704283a0f11",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "444c6230-a6dc-429c-bba6-e0b5122d86ab"
        },
        "item": {
          "id": "780afa49-213a-4ff4-a771-eb47d50bf48c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0ba6d91d-3036-4e55-8cb1-c5396cf626fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a311741-92c0-4615-b941-e8a1316640f0",
        "cursor": {
          "ref": "fea00c7e-df24-4d7c-9baf-cf35ab5623fd",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b32043c7-4376-4e36-921e-9309c4e36aa9"
        },
        "item": {
          "id": "8a311741-92c0-4615-b941-e8a1316640f0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "85e321f5-297a-40bc-b899-d2c104979893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2dae2f-67b0-4188-aadd-f6c0790d137b",
        "cursor": {
          "ref": "d3957586-06f7-4e27-acb7-cdb66f2fec1e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a0938cd0-6541-45b7-beef-cc1ac49282f1"
        },
        "item": {
          "id": "ca2dae2f-67b0-4188-aadd-f6c0790d137b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "759aec05-7a39-44dc-acbc-e400564f0593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900ce65c-beb6-4e0c-b462-9398264f441f",
        "cursor": {
          "ref": "5e0fbc14-a53f-4b23-8b23-49ff803236dd",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c2e81d3b-4399-47e4-ae9f-0373b779fe63"
        },
        "item": {
          "id": "900ce65c-beb6-4e0c-b462-9398264f441f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ec5089a4-57e5-4a68-94e2-82a9e6c32956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070e52d1-696e-4c8a-be1c-43c802bfbc31",
        "cursor": {
          "ref": "6e297494-78b2-4284-96e5-facbfc4161d6",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bc8ac131-67a3-4bdf-8ebc-9999eda752db"
        },
        "item": {
          "id": "070e52d1-696e-4c8a-be1c-43c802bfbc31",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cdf22597-88bb-400e-a56d-65df0d17b158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c58e68-7ea7-424d-b2a2-ce9af62cdcb7",
        "cursor": {
          "ref": "abf3e8bf-4aa2-4b80-a2be-31c7ba6bf819",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6087a29a-b315-45b3-8637-52f5f58d6172"
        },
        "item": {
          "id": "c6c58e68-7ea7-424d-b2a2-ce9af62cdcb7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "854ed7ae-3b8b-4b8a-a8dc-92dfdc3beec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37576f7-a074-461b-a10a-acc75d41002a",
        "cursor": {
          "ref": "66184907-7587-42b3-a7d0-a99875d0682a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "541f5eb6-7c21-4707-b6b2-c8dd0050e8ac"
        },
        "item": {
          "id": "a37576f7-a074-461b-a10a-acc75d41002a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "75dbadca-92d4-49b5-9a5d-b099921c7b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e345ba3d-0368-4c5a-be98-1433e5cfec53",
        "cursor": {
          "ref": "19e9152a-af05-46b3-93f7-a7af59b6c581",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "451ececd-1882-4f5f-911c-3e647e0f0fff"
        },
        "item": {
          "id": "e345ba3d-0368-4c5a-be98-1433e5cfec53",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "72a8f5de-811b-495d-9b90-87408bd02c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c19d3ac-bcb4-4514-9ffa-f160b477fe5a",
        "cursor": {
          "ref": "f021672b-f14b-4943-b00a-6164069934d2",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "db8caeaf-b59a-44bd-b926-fe34cbaa8090"
        },
        "item": {
          "id": "8c19d3ac-bcb4-4514-9ffa-f160b477fe5a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ba6023ec-a5aa-451d-85ce-5991f9443ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed53898-dc61-4056-a45e-3f67e70d5469",
        "cursor": {
          "ref": "47748768-5825-449a-87b2-e4ec37b3f62d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9b1240b7-7438-4480-b5ab-9dff2763adee"
        },
        "item": {
          "id": "6ed53898-dc61-4056-a45e-3f67e70d5469",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b87764a6-b153-4a27-9c67-b5ed93e4c33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3011e9be-8788-44f5-9cc3-b94b22dfe437",
        "cursor": {
          "ref": "d9c9afb6-fa23-4b4d-b75c-8b00266ed568",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "eecb591e-cbcb-4107-a9ca-f85d1463b3e4"
        },
        "item": {
          "id": "3011e9be-8788-44f5-9cc3-b94b22dfe437",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "55fd1837-d110-4dbf-bd08-6753d5a24389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f39dc4-72c9-4ac0-a2bd-d1027fdd7640",
        "cursor": {
          "ref": "2b2fc502-7469-4414-b5b3-3d620b5968fb",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f4b9e1d9-00ca-4fba-8024-fc5a178b7b47"
        },
        "item": {
          "id": "10f39dc4-72c9-4ac0-a2bd-d1027fdd7640",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "21781138-849a-4ed1-9a14-9900a421e49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9adb028-df71-46e4-ab27-de66de2abd64",
        "cursor": {
          "ref": "e853eb38-e8d3-45d5-bbba-78217d661602",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f2ff9fbe-3d46-4c91-8e85-a6c609046434"
        },
        "item": {
          "id": "c9adb028-df71-46e4-ab27-de66de2abd64",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a110314a-175d-4bf1-a2fa-0327ca82407a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f816f2e-9f8e-44e6-971c-bb4ac4b8b7d7",
        "cursor": {
          "ref": "66393c73-84f6-4957-846e-4d4037c364b7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a10b0203-8237-49fe-9315-a95e82fe11df"
        },
        "item": {
          "id": "6f816f2e-9f8e-44e6-971c-bb4ac4b8b7d7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0b9afbb6-a4b7-42a2-814d-0486744d82f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c30818-fd4e-43a2-8ad7-ed2d9660627e",
        "cursor": {
          "ref": "794256d0-4438-4371-b163-e8d8f3472fce",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "71022e5d-c471-4424-a4d3-b73fa16b46a4"
        },
        "item": {
          "id": "52c30818-fd4e-43a2-8ad7-ed2d9660627e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a9fb37d5-fa24-449e-96e3-d40074297dc8",
          "status": "OK",
          "code": 200,
          "responseTime": 328,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7aa83a-8fb5-4f04-a74c-d21ebcabe51f",
        "cursor": {
          "ref": "7a6474bc-7d0e-4598-8b61-eea1462693e0",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "30e8fb50-df0f-477b-a754-ce633ae2a255"
        },
        "item": {
          "id": "7b7aa83a-8fb5-4f04-a74c-d21ebcabe51f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c891fef6-8518-4dba-94bf-fd4b38541fdb",
          "status": "OK",
          "code": 200,
          "responseTime": 2859,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fbf7ff-6a8b-49d4-8fd9-4b88422bde00",
        "cursor": {
          "ref": "baa7ff56-2d99-4fe9-8972-515712b7e28e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4e418a9d-5c41-40e1-97b6-a21cbb7566f2"
        },
        "item": {
          "id": "c1fbf7ff-6a8b-49d4-8fd9-4b88422bde00",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cd49027e-7277-48f2-9cfe-4a9cc1ae5647",
          "status": "OK",
          "code": 200,
          "responseTime": 3197,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a9b93e-947e-4017-8795-7c68f4372956",
        "cursor": {
          "ref": "fa3854cb-6a48-4d1b-a631-699853dfe4e5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4a551bdf-42aa-4e84-b39a-87fee2811a30"
        },
        "item": {
          "id": "43a9b93e-947e-4017-8795-7c68f4372956",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a087b809-6f79-4a8e-93d2-8545bea4a4da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a9b93e-947e-4017-8795-7c68f4372956",
        "cursor": {
          "ref": "fa3854cb-6a48-4d1b-a631-699853dfe4e5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4a551bdf-42aa-4e84-b39a-87fee2811a30"
        },
        "item": {
          "id": "43a9b93e-947e-4017-8795-7c68f4372956",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a087b809-6f79-4a8e-93d2-8545bea4a4da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e53ce91-c47c-4fec-ae79-63aff8016009",
        "cursor": {
          "ref": "bfaae678-3360-4f8c-a0b0-e5b9c9437fdb",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7e172029-55b4-4907-924d-e0fed28e4152"
        },
        "item": {
          "id": "8e53ce91-c47c-4fec-ae79-63aff8016009",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5b07df06-c93f-4822-8f6c-0798d3c1934b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a30da89-291e-4a06-8dda-639b55d2f5b5",
        "cursor": {
          "ref": "d0a87fb1-bfb5-4b03-8779-c51c58fa6c41",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "74019247-5d3b-45f7-85a5-c136dae8833a"
        },
        "item": {
          "id": "7a30da89-291e-4a06-8dda-639b55d2f5b5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "522b5a8f-5894-41e2-bb79-f8339e71ab24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}