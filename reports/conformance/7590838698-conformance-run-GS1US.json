{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "35ea99b4-2c7d-4afd-bd9f-d1dc4ef6f208",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f44d96d0-54c3-4218-8c63-4bec2d3cbf98",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3534e8b7-90cc-45b3-9e9b-640fd025566b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "35a8237c-7aab-4409-95e1-b8747d1c425b"
                }
              }
            ]
          },
          {
            "id": "44c89f61-4304-4b86-86ee-9e21165b813c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1dca4717-7b05-472a-95b5-c25fdc180301",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5c18d416-4b2c-4df9-94e8-965b6e752a86"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9f819e0a-c8cc-495b-a8f7-d3b8d7cb40c7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3ec2256b-4ad2-417e-9810-eb5ca61abb4f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb3ccc48-b7b1-4765-a216-5826cf1e1eb3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9052a64-5730-4b92-a12c-ce5190c7a2df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "320596a7-a971-444c-a781-dea7ab0b4adc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78502b51-d242-49be-8d6c-f811993f77ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb2caafd-7b71-4aea-a5a4-86659faffec7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bd7d0a17-0a10-49f7-904c-8b9e56f20b93",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16cabdad-3f3d-4d54-84cf-bf6f0966f3b1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3a4a86f-876f-4221-bc42-9d1a334e7185",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "870610a5-47ee-4c5e-be64-58f1be366141"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a63e8e77-9d2a-4f12-8f48-002529a22229",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "888d5246-c6e1-4ae0-ae26-aad4827b128c"
            }
          }
        ]
      },
      {
        "id": "9011d432-7b79-4417-8f4b-b96f21ee326e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c80d7c5f-340d-4b38-bafd-569cf1d87b6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04cfc66d-5d42-4963-95a8-298b165bd4ec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "27868004-7546-46c3-9eed-83b4081ca65d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a23b06-e488-4a6d-bc3b-2cc5061a7dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d56c91f-e884-487c-8804-02f967c56a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d174b91-0bee-4209-b5d8-ddeeafba32f8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca195001-0658-4e0c-b5fe-693cb95f235c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c09dd01b-1bc9-4926-8abb-c98bb997a051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8d0355-ed3f-42a8-b6ab-7ef5059d9b5c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acb279d-0263-4d7e-8291-d6a660c58ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccbcf4c6-d914-4e71-8d4c-489d1498f6f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "11b5f69a-9310-4268-be16-06c73ce33623",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "189232a8-b68c-4a27-9766-3fdaf88bc403",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f85481-2d41-4bd6-b5b4-69d5b2945475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "519df38a-5384-4ded-8718-d5f51a4fea86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f562d086-de27-4ec2-826a-3e5448258418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732bd773-f133-42f2-be35-7fc56ef74b4d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4855bcd3-9b4c-4c64-a359-ecd7e2a13e5d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e7b4895-bd7f-460e-8aff-7fbf46ce2ca8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b754e774-9693-4407-aa99-9f6559f3e913",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "563759aa-58f1-4957-9d27-97f476b15627"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27120419-a837-484b-bbaf-f244369d218f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "246a60c2-9275-4e55-aa35-4979adfa1091"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc6ae6fa-11fb-4e18-b8d3-d7e19597e46d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39b56e0c-3b23-47c2-989e-eac8f2f22176"
            }
          }
        ]
      },
      {
        "id": "80d012c9-ee5a-4617-83ce-9b3d6482b941",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "679dd51e-c610-4ce5-bf29-8c2b27fb6c72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51fe0c25-f81b-461e-ae15-568f5fb856b2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f21cf223-3993-4403-ae52-409aabffe464",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c575db8e-11bc-4ac2-b944-452c2d898c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ee89a0-8879-46b4-adc3-181bc1063eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7860f849-e364-4695-b5fd-49e589395a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e0d482f-2f6c-46ff-804a-614aa39dfb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38a5b18-26e1-42f1-8d4e-099551b31e77",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11344b27-0618-41fa-b987-6cffd7e9c8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fac1f4-5630-4b2e-87b0-2199c4018504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb854b0-fcf5-45cc-ae83-2a980d3206c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10cc6b54-c81a-4b35-ab71-3f80edf3297f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0536422-3237-4293-94c1-a60465b30f3a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494d73cd-f722-44b2-ae69-d60a3f5f4e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eadebcfb-396b-43f2-a474-ae75ce07a17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a643ce-9d9c-4f33-9eb3-0ce189737316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8006e0f0-f88c-48ca-beeb-2a8543297184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc6b36c-5acb-425d-ab8a-aad742ae64bf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1b281a-463e-43a0-8c40-5b63efc2f242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d48c71-05a2-4373-a270-17f53eb58487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bcccc9-3248-4509-b204-8354036e39e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "355becd4-6350-418c-86ee-caf8050f00d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6230614-9312-4388-9a27-2eab94b32123",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6a05ea-5492-41e3-bb2e-a03062f72ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82695694-7a76-418d-9d72-ed98db8fb97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0121f67f-1ca7-40ee-bdc2-09eb9257ef20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "151f38e7-5ab5-494f-a75d-f95ee145f371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fc4d7c-06f8-4719-8299-8064c04dd2e8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e91348-8488-4771-a644-0edeb612a604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd341248-fc65-4169-8a0b-47f4b2a84b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e5d2a1-8909-4b4a-b95b-f38727ce5b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b9052d8-0e25-4676-bdbd-f7c435e5a842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a536a4a9-99a8-4467-a74d-43a91341e3c1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345df53d-20b6-4bf1-8de7-2406812ddf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d2f918-cc21-42fc-ae20-695335e8a23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693f6d55-70ab-4e15-8895-ac1e708e887d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "015d57a8-e060-46b7-bba6-623208b2088f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195e3dd9-ac07-492e-81fe-7b306624c16e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cbb39c-7966-4237-91d8-064eef51f08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e95af33-c6ac-4339-889d-85ba96cdff53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff35f19-c1a5-47df-8129-24aa2a1de1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b65fbe9-6dcc-4c3e-8f15-537fbeddbf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2aca4c-b624-4b67-baa0-0b61e6cbf722",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1412dc-38af-494f-a424-5661b8a7c62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ec9b40-1812-4bbd-bd8c-f6f9c9585981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0832188-b36e-4dae-afbd-48efae9b22aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e2fc5ea-64db-41cc-9398-fc05b90578f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b88164-6a98-4d09-98c8-0cc07988545a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae478451-3a03-40e9-9d9a-93a2f72f5a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597e8fc8-d07d-47aa-b29f-c1f41bedacf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9da765-a388-407b-a60f-73347623641b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf568a15-6459-4ba5-bf6c-0ce599707708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d32b52-249c-4915-88c0-bfff72c11e51",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7db2dd-4a7d-41ba-bf4a-16618db88613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03db919-c167-4fd7-9a72-e4fc4eb02724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dabfbd9-e710-4d94-99f4-a64780728bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d799b72-df1a-4703-aa38-da27d280f054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db912e4d-2f67-44a6-9220-33055c77e051",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1f8d7c-ae56-4822-898d-2e8d95dd01cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6690d689-5a8c-411b-8a20-5a6b6d9b143c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c0fd80-6acb-4212-9282-4b011ab7eee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df3da0c5-ab64-42ea-bf8b-1f061f7d0abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd8c431-8408-40e8-8898-9c90375ecb34",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6540cd-a2ba-470d-ac31-a6ee65610ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280200a5-5280-4c68-ac1b-16f88f711110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43688e24-bcaa-4c9f-b27a-488393f9f73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af82ddb5-75d0-4af4-8876-bf2b1c225a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a49a801-5d82-4692-a325-98014e17ffa2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6caff48-3641-48b7-81f6-d0bcda193b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed671689-7cc0-4275-afb1-ce3a8d449e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce9cdfd-71c6-4bb7-a56b-f881ef835499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4eda1d73-e63e-4a88-99da-7193e207fd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a38e9c-bcd5-4018-9252-eecbbc8ca4fa",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fbb922-ecc2-47aa-b624-52227c37894b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60229d7b-6841-496a-ab2e-3b9e6d304986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64c9728-68eb-45a1-8d43-ae10a9897713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c64a95ec-3346-4eba-b21c-8755bb99024c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40405bd2-f7e8-4c9c-8da1-b04c2eb2883e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76206e3-3d60-47b8-ac9f-0c4748aa2b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11879853-1ef3-4f4e-8888-c59ab9babfcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3fce68-f39d-4bf6-90f4-9669a1632787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca1a4ded-2ec6-4503-870d-e8a9a2261231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb80d0fe-c64d-46bf-8ad8-b192161cd3e8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7b167e-c304-4d2b-be3b-df9bce3985ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ead1a8-cdea-4ee8-972d-c39107f2e3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33b5eac-203e-4b52-85de-b94a0aed3286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d3628e3-f77c-4b18-bfda-ab6ad3974940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c49f855-3526-4581-b630-56103f4f0abd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db852a7-aa57-401f-b21c-f0b7b5e977da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f161f19f-4b86-435e-9111-dd8cbdaaa553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a71f38-7653-4355-93b0-bcf7da4e1e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf2565c-5486-4fca-b677-3790317d9a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7914275e-059a-475d-95ae-937b5478ad2d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc3a8a4-7c5a-40a3-851d-fc9c24282929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8121e14-9c5e-4965-a8b3-249efb3a391a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb0a730-371b-4e51-b586-0cd329c8c78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0938669f-0d17-485c-90f1-3779ae808c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138109d2-b2f2-40ec-af5c-2cea3d0ce064",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c26139-b4f4-4406-8500-ddd0b3b675f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15aacf4-7c91-48da-b5f3-561e96357549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1580b42d-7dfb-4512-9d3a-4c2fa6e35577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0667f0-124f-4e1f-8f54-55bec23c4c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce8bfdb-1654-4c97-a708-5a52104bbe82",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33e72d5-89eb-484a-a459-73cd3023a740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40325d15-301d-42a7-beaa-c1285b9132ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe282c1-fd20-42ba-9129-df5cf41645f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e30220-f7db-48d8-a6f5-7290b4258f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae58ffbf-41ce-47de-943f-d18f04dc60c7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a2f1b1-b1bf-4ed3-84cf-753fea17e474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ef1c7f-8456-4f19-bc83-52d1b8da8864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa3a8d0-df7d-4664-b163-9d43913cc1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3dc46c-5cdd-488b-9a92-0afb9aa7e20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd568e18-abc1-46a4-9a56-22f591f8fe41",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1f6c69-3f0e-4f78-929e-01c5c08308c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0565a233-9ed9-4f83-8614-c07cfaac0cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4492c1b-9bad-4575-a243-21423c382065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b19f9952-6044-4b21-933a-03961f2b4c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52f03e5-f39e-4a48-98cd-e95cc0a70c49",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f916eb67-04f0-44f8-be37-d9ffd8463a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21257cd4-ee8e-46c2-a07b-2df76858f6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bd655c-ea32-4d37-82a8-6431009e23c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8bc7fa-b405-4df4-bc6d-820270e2b2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615cb47f-4835-4e5f-a901-2c337832895b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4492db34-0a92-4b16-b4e1-1f2cd3d36229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2594db99-ef15-45ac-877b-aa03ec2c7859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6933fabc-cbdd-434d-977a-f739a7314366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3301b44-86d7-4287-a140-b5aaf9e097a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b9b2bc-985a-4816-ad2e-20c267c6a8b8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd2870b-9166-45e3-9f76-15c223cf90db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29036036-5479-49b6-bfb4-7c7b82c39956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ab036c-dfce-45bf-814b-c5ab0c58eadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcb056b-9066-4d48-b544-634d72535006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8f57be-70b2-4f18-8747-1e7c067b7825",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886f0618-c3c0-48a8-9af2-fcb3a932a860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1a2992-f713-4f93-be3b-fba59a915509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de7ddff-e5c0-4af5-971d-ed84202ce5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f242894b-5de5-4992-94e5-3eca9eb9bf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d678e7-378a-444c-a092-72577637063c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b469f8b-850d-4c5c-b2ad-8472a08d20d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342d6828-9fb9-4d72-8747-cb604101a055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6de70b-322b-4f18-911b-816c8420af15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ab7295-2658-4cae-acd8-dcfbb60d7e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c6dbaa-972c-48bc-b7f7-7a6a511e1fad",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418d366d-487c-4b8d-b80a-07b55535f06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883d9113-572d-4954-a408-3ac1ecb41522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280962d9-d7c6-4de6-a09e-bf6bb018e003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d6cfd9-96a9-43b9-b867-161edb977ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d02b7f7-89fa-451b-a4f6-c6e82583417f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014038d1-6430-428a-ac26-36389ee81d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9d4234-bb7c-46c3-bd1c-a584575b07e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5675e8b5-2aa3-4261-b702-63fe9a64a242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "33372342-e2cc-4123-9457-01c67fab9c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0250d81e-a91f-4eb1-a735-4552c20b1727",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff831247-99b0-41c9-99f5-6a4b05304305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9119b8f-99d5-4e57-a616-df4389b8afbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010ebafa-aedc-47a4-a881-328633cfa4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dae330a6-976e-4bd2-aa1e-ac33a062b198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d5d464-327f-4496-8bad-755ffde5e955",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f08bd8-8066-4616-9078-e402c1bcad35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7d6ced-7e9d-4982-b241-56a04bc2a8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e267ff-3e80-43e3-b1c6-96722481c2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18e14e04-5a8a-4354-94e8-b2830ecdca65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99296f8f-0a64-4791-8ccf-0d586dda445c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a57b8e-1417-492b-ba0a-93a79feec6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2f81fe-fc67-4bae-b6a6-b8919fc3a69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d66d5c-c9c6-4c2a-9dbf-cc98f53382ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8333ac9a-c9c2-41b5-9471-ea19fd38022f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8487d68-c6e0-4b3e-b9c3-8caeaeab838b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63fcb31-fede-4ee6-9ffa-15026baabff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b38fd3a-6ccd-4f5b-ae63-4af0dfa164c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edeed422-cad0-46ce-b88b-f4327f67b2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11693b34-87fc-4142-92ef-7163e0979af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c792049-7957-4e09-9264-ae6a794c9e98",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac95de8-0ba8-4729-89df-c6e7d87573da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfe15b0-2992-4e78-9b51-7e5ef5a056a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4d8946-65b9-4b31-8b1c-02c55234375c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "814da55f-f0df-4f99-a13e-47a0f57c19ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b50f29-0a4f-4330-933a-30c3fca340e6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766baf5e-31c7-4e71-bb46-8a7030a2c8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecd8e186-4357-4185-942e-ce2b5135606c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f48ba2-72e7-4cd2-9318-a0271fa94295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec2280c-3c88-4bab-8448-eca5d03cc681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dd0950-dbfe-4290-b3fd-51f0faff4bee",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d43498-255a-40bf-9163-a7b325735cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c904dce9-5b90-4998-be93-35ede6066c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c725f4a0-3760-4598-85f3-257b2773b1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cec6b0ae-c5fe-4ef1-a4e3-ab3e503a422c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15462145-58cd-4275-afb7-62cfc11c3339",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba9c25f-3ad6-4e42-8c47-545b31d4aac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8588a54f-97cc-4937-a457-1c901df69c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40e3850-087d-48fe-a2ca-4ef3cf35909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9511cbd5-3719-4e00-a9f3-dfeee5543e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c660398-073c-4cd8-b48b-005b845d10c0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249205d0-c01d-4049-ade3-d98b56f27425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d1b643-e93a-4f8e-86fb-f4f66320bb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28bf49a-17a9-400f-8d6e-79d2324429f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d261e177-f585-4a48-8bdc-7da153c76b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1d81bd-2318-4e16-a3a9-476c8fd00436",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ab844d-8ad1-4bae-b5e9-4f048d57eb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3189f6ce-9574-40d5-8018-b01f2561a761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8bfe2f-67ad-4ced-87af-3018fc0f670f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa12438-5314-435e-b653-fefbe3b12531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bbc61e-e2cc-40d6-9cb9-75731107e6e8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba04a53e-75e6-459c-bf53-c23955f41514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbd5f57-625f-4a79-a862-4a014493d3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8d88c5-c04d-4a86-a9eb-0aab9c811431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "769ff1ea-5212-42be-8368-e0870cd7d80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9500a6-4f7a-43e8-aeee-9163c1ef32bd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c17a70-9645-4505-a3e7-df155e8ad58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e928b92-54b9-46f3-adbb-c411b959ed85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863b5072-9dbe-4776-b648-3f8cacbfa5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd822aa-35aa-4e52-ad02-9c462aa04579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b185c45-a038-4bc3-a368-b23cf62f3dca",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b2a498-d9f8-45bb-8736-60674e07c510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c3eb9c-2f92-4ed7-bd8c-7870bd36b9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2debfa78-cd95-4cbd-bba1-148a6711c7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d623de4c-0c09-4883-be29-b840f84d03dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fe6490-6c2b-413f-89ee-35d88ef7d20f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a3be31-2ecc-41dc-a747-58ef74930f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8a99fb-5391-43db-a550-3b71c9e0a91a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e3c7a6-29e0-454f-b92b-a93cd12d4685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e1831f-6969-4271-856a-533134bdfd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c565f8-8284-47b4-ab52-50c3c80059a5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d088fb-90fa-47f2-aab9-63bcca7042bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d121f8a4-d5e4-4f7f-bb5c-08bbda1f15fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f8c448-57d6-4504-aec2-0c61d47bac4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71f57478-f667-434e-8a22-268291a238b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd65cc9-7e8e-453e-a691-c72f864aa1fd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc72a50-17a4-41c5-82ae-92982dca64c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b67cf56-4e73-4568-9711-b11aea077fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfde99d-d246-4f12-8ebe-f8b70075c513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47441e8e-ea42-4aef-b7d6-8420d7f8724c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34e9cf9-3f58-4fa4-ae93-c8e54e06c566",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76061a02-ecac-4be5-9902-ae24d22926ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f02af9-a8ef-4ee4-835d-43303e99d324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d0f45e-ad52-450a-bf72-ae20c05a03e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83e8d99-d344-4b8a-b3ab-67b4ee238c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1d7d0c-af69-47a2-96ba-050b98899089",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f679bbf-36da-4285-b9af-812f0fd40ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449f9a11-5b72-4bc9-a91d-112522757a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff846f0-9fb5-4ac0-8326-d08155b5822d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d489fc72-31be-4c12-892a-05c92a858d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a05c3b-54ff-4e3f-bb98-0061aaf5aabf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb9b737-7682-4b11-b315-9d4304d2d9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6310db59-86c2-4320-8ce4-4b90d1b3d619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0238e834-e65f-46b6-a14e-ca46e8217a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95b68cb4-1316-44a0-8c76-343ba78592ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601e8fbb-c09f-45da-8c8a-0b13c58bdb33",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd1309f-6d39-4834-894c-e0cb291f9bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af3a21c-cd96-4cfb-aa0e-5038cab1ee2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b337e5dd-6e7a-4f0f-b9e1-6329421ec3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8676ee1b-75e2-4413-9038-924c97d06f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a797163-df57-477c-a53d-4f9eb7d10384",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47481025-cf67-4892-be48-4cdb7cd1a2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12176cda-8e16-4ae1-a7c9-ba80ca2b8b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61680f5-5e6c-4590-a42f-9ba23e684dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "650a10ff-9999-43e9-b36a-010662528810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7d30ca-b7a0-4e16-9efe-9efad73a443e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1318a40c-d8ab-4eed-ae08-b35c3736b95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9955b5f1-5c3d-43af-b612-b839749d8424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7760816d-5cd1-49fb-a2a8-7541a4cbc7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0cead07-7ec5-4ad0-9cf5-d5d786f13ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7cf825-e79d-46e2-9f69-96189f7c6e9d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0945e0c-fa58-447e-b54b-5353bfdb7c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4fbc556-abdc-421a-a6fc-4cb15ed1215a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62acebc2-e6bf-4d2a-8fdb-66d0b4301d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70c02216-ad4b-43d1-8697-e8b1d36c1fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191288d9-f8d6-466b-8823-2864d040a558",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb0e10e-7485-4383-a0c7-47b13fe16590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c3da8e-d861-4dee-94a6-b30426688963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc00c473-83eb-45c9-8bf0-2c67942c6f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e15a94e5-669a-4c92-8eff-4d0c9b92bf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ec1ab9-4a16-4186-b233-652c6b42033d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d15d22-2449-4ffb-856f-1e68ea881024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0d4fde-5139-4515-bfda-c53b16ba497f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171dddcb-9e23-4d97-ac6c-da317a1af935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b594717-f0e6-4608-86f1-6f783e89fe4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404963d2-5db3-459e-851f-125d30584ddc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad7caff-f439-4acd-a090-b8336661f11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c149259-3c7f-4d21-8b36-2285f996287d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4025ab72-38f1-4704-ba67-1b7ad545682b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fb041d47-69d6-4844-ba95-535c95a8f097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faff22b2-449b-4cb3-bdda-406b1006e302",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a3c444-0a42-43b2-b1fc-a88bf2e6b8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1808cc2-bec4-4e70-b8c4-38dc80b3a7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfdaf28-41ba-464d-ae32-a21a428813ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "670bcb9e-216e-4acb-bd40-574b6b29ddfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80160eb-b56d-43f1-a149-52abf4ef6b78",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9093fb1f-261f-426a-9f7d-babca23a4977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182c1425-5f38-4500-8e24-345abc4244f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0054d69-2b0a-4f58-a008-a0e0dc4f4cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "79c3727d-cebe-4553-b22c-ceb7f203a9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43023d44-c2d0-488e-80bc-872f79ac49ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6841a8-f532-4807-88a1-51cce084379e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99281ce-cc2f-4714-baaf-e57e9eb4e6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0e6953-aeed-482b-abc8-e2885db007df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e19c9127-a4fe-495d-a174-435e3fb82bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1693beb2-ed97-464a-bbbf-8d8806fa4db8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81401fd-6316-401d-bb11-8ffeb2bc3b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584ee1e5-d095-4894-8751-7ca41ec96658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6032ce3c-5f7a-469b-bf8e-917c65eda5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3407a86f-e7d5-4d4f-ab63-5a3a44d33e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b66ced-ea25-4397-929e-6f16c73343d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60aeb720-3553-480b-923b-a26182387200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35e27b7-c5f8-4a19-9929-32ed7e450875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ca7506-76e5-4495-a058-cb3ed5c8ff17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0459b99-786a-4b10-8cea-367946a36c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607e233a-7602-457d-ae3c-0d8958cd2f4f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8e00bb-427a-4050-bc98-aaa1e8ccbccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8ad0cb-3cbb-4086-b544-555297712bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19d08b3-364f-408f-8e47-5bc04d1d572f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b4c05a2-3ca0-4d8d-8592-3022ae2cd878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8aa2de-f25b-4de8-be80-dfb88d002023",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d13714b-174c-4c28-aa8a-961f037bde40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90498b9e-2197-4941-ae56-c4ff16866650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5eec70f-aedf-490b-996a-6734fee28713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7666873-1573-4007-b7f6-6f633970ca2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dfe8a7-a432-4ec3-b19c-3ad5e1a581c1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cd7359-cc02-4726-a88c-60abe3f006eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de8b419-aedd-4818-a2c4-a51b0d8e69bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fe0d63-399b-41b6-96ab-180786102c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86feefde-57fc-4236-9452-f862838c4477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3ca457-287e-49f4-8d18-a8f43e51c144",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074285fd-2257-412a-b1bd-2d7479c8a3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1983bd-b4a2-4380-a569-a3b0da547a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9be325-60bf-416f-b972-bf267140adff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c418dee-41e5-442e-8418-a8fe7edf9de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e60c624-80c1-4636-82c2-2877d5aeeec4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65533999-cf94-4143-8539-113353ad8fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558b8e66-57e3-4561-8c72-7f5f7d686d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9146d92d-8295-4f05-9bc3-820f2080b394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9cb46ea-f70a-470d-8e6e-640fea120808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854b9afa-abac-4f81-8813-231881203495",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65ef03b-b550-40f1-a512-0a2395dc93ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e70f43-fac6-4f72-a6b9-d2b009e19299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5e9bfb-1818-4dea-866a-77e1d0636655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b17c90d-425f-4074-8270-673edefe85ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437ab337-f99e-4090-9cb6-6df1a41b85b6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7077f9-fed5-469a-8b95-dc936cfe0ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c79b9c-4142-4ad1-94c6-33c040c2b062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19a30b4-7c02-4bde-b1eb-60259cec5dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff4427f-a0e2-4d7d-9b91-f02821edeb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d982c80-46d5-4a92-9f04-feda9bf1d07a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919f6db9-34ea-4231-9a6d-f483bed5c837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada5add0-48f9-46eb-858e-0048572d6bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd305b1-38c3-42ff-9db2-cd72d9a14c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2517019-980d-479f-b198-8860651c6de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab6606b-babf-44ec-9510-3919f48010c7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606d5580-5062-431f-9c9f-7e1a8529bb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d269448-4357-4654-8cf5-2617338d7801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e88f43d-acc2-4499-a048-c937950fd6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9af315b4-9559-4f4b-b6a8-f1ccc7a331c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4419a42d-3bfb-45e7-919a-0564e4bb270a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d192d467-4eb0-47b2-bc8d-1353a5fc5dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a8cd4e-f1a7-4a3c-a774-a87d01801a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4611fc74-d517-4a52-a1a1-daf2c628d0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e795eb1c-3380-4736-b8f8-e09df2cb84e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdb0275-1712-4522-800c-165975331cfd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d559e993-0bb0-45c3-bc5b-249d3a84c5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07370c60-6b15-43fa-a1d0-49874f1aed89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c09c8e-1ca7-47d9-9b02-07cfa44efbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8cb869-378d-4186-901c-b408f3692620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fc1933-a269-4b8d-8d42-4ea87ed5a45a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d9497e-fb0a-43c2-8d88-758983b83bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8d6aa6-0b6d-438c-9fa9-dc0b7eb99efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648f0489-6bac-450a-9706-4952e934c8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec64d74-15d8-4609-8bfb-d7dca83c0ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0606d66-6a80-45dc-bd89-740722555d4b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5f6646-f7db-4569-a156-612232ffb78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbbace3-7bba-40b8-be4e-023a9f2e33bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f366999a-a774-4a4a-9899-7ad22dc92a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38225cb6-9b6e-4361-a879-6e9a26017e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f5d175-1107-40e6-99eb-9bb31206efd8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0598f63-7712-4fe7-8959-228c7baf5a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff845a8-1d1c-478f-907b-dfe49c6cba3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9417e5-a092-430c-8383-97958292ba27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e77a1d-17a4-4e2d-9d77-58c83eb7490e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d366a2d-47c5-4dac-a9ce-c8967f6287e3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ebe927-e2a4-466a-839c-323e4caceadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c7316d-a9e2-454a-838d-efe7685f0c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8cc01f-4b87-4307-87e6-8fae12e1ed0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d3ac27-42ea-4e51-8851-f40caf3a51f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4269d38f-5922-41bd-aa8d-84291c411c5c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b740630-8da2-40e8-93a9-cc6a735a95e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881bebf2-45de-4a9b-9c0a-1b841f959241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d67b5c-163e-4bdf-af06-d137cb2e55b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e77f12-62da-4c85-b772-246de15d42b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611aa7ab-1e0b-45e3-91e9-71b9936bded8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306331f4-fae8-44b5-89cc-c863d7f84016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26722085-c764-4b64-b245-5e47e7924374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d869ab-c660-4254-ab03-dfa734e0656d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2034a49d-d820-4f99-b7df-2903583707e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0cba9e-94b7-44bb-9694-2ba63f75c574",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbff460-84f3-44b4-80e7-6b338821a6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4561785b-a6b6-473e-952c-c0214ffb3f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0913f657-ceee-48b5-909c-f25ccd47e0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f644917-529c-4363-bfc6-d3b1e8634e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2962e66c-6334-46f8-8d1f-6cbd5e574fbd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec81ecdf-d047-4a11-a844-46b025d4351e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1494235a-e4b4-48c0-8993-fd9c18e69c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb46c70-8477-4849-a4e5-751e32b2f855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "550bad07-f3c9-4728-bff1-84ce8bf35563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0639469c-0c83-49fe-a8e1-0d8ee3abd2ef",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab218ef8-74b0-470b-b7fb-adb493c2b404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e7c5e3-8ba8-4812-808b-2a3d6b83b519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da72ed87-2e66-4c03-8578-f9e07c127cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5436f977-922f-4710-b4fe-130ffd2b8b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52494a6-678e-42b1-abcb-f52213501903",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40630d6-ac01-4d02-bcd3-d705a17cdaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de466cf-f6ad-436b-94b5-73010b45b58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f9eb82-aad5-4e78-9427-9fe6d718cf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9390f3-3816-470b-ab8b-c67fd79136af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0847f36e-6509-4887-b5b4-ca797bea7dc1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6906ba95-8dba-45e9-ab90-a26fcf62583a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f103643-3570-420b-aef1-e5f9a94b778a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae875786-e499-4265-a975-e987f76b6890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccab63ed-a8c8-4488-9b23-af4b9a409201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94e5810-d346-4590-b34c-781ac4f0e7ed",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f6d69e-90c0-4277-b6f5-57ee3d1946ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4465ea85-5b66-493b-aaf0-83673eddbce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e80c84-e783-4291-a6fa-adc75deff2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b75ee9f3-6310-444b-b702-d01244cbf927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2795822c-6d86-4c09-a528-602f09df4cdb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bf0252-4dc6-4f57-a806-5864710c5a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac89af7-0d8c-4084-a779-89c0b9ccc2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13096be0-ddc4-42a6-b8d3-b3ddccdc17a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b61ef6-9939-4b2b-ae53-73f5fbd982f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc248eab-ca15-43c6-a658-dc8bbd51425c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56efbb3-ca0f-4239-9077-e9c44d4ef0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6ee92f-7d42-44a0-a12c-49de6b7188bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac891a74-a5d5-4504-8e96-c1321059890f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7734125e-f350-47a7-bfaa-7c294589b7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e458f68-bd4a-4eed-ac5e-81c972b9d33b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c153643a-edac-4ff3-b0d0-207da937b389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4972e058-1451-4662-abb9-763ee48cedcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b77f0e-f63c-4803-8610-e8e07746ba83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b29c5e5b-d93e-48d6-8f17-b5a54a59b6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6df370-77df-4ee4-af9b-b78d8a9f015b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0754601-b5e3-463a-bde7-4872b086f5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850704c8-3a36-4efc-9d97-f1e95a2eda2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6316cf-8400-40b3-9ef6-dc6c4f8500e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6aca59-f76c-4098-879f-01b33187774f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e497ad-681a-410f-9245-49fdde7bf941",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7535a5a8-321c-42cf-88f1-2a68ad84ba33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f37ef7-1185-4d78-96fa-7d9d4af80be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfb94a0-4c56-42f4-9a0b-74ec6021e4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1108cd-e016-4730-a025-14d5e4067ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ef9d48-0726-4155-a298-874f68fae8b0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f976e1-eec1-4aa2-9eb9-4b259aa75f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aecfbdf-a4d0-4dd1-a6a9-d52ce5d916e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbcbe3b-7324-4e94-a649-c32fb3b35f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c888f3f8-8d94-4984-9320-9943b138b89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5912d739-30d6-4cb2-964f-9466d57e16b4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd312f87-066f-496b-a9ee-f47ac3010e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120d1d3d-ce71-490d-9884-8dd3129ca9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063b5841-8009-4bf5-827f-8cc631056334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b141a78-ed4c-49c2-9da2-3e364db814c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336e3f9a-f0c2-4783-afca-2ca0d41d4741",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994254c2-c6b2-4d95-b640-2d566d15d2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a36b02dc-b4e3-4a25-8655-82368323672b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67aab47-a62c-4572-be3d-a5f95d0f85ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f925dc-f03c-4a7e-ab99-401d4e9dadda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "792fb336-efc9-4a1d-b006-5649c4302f2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e41ca00-6bf2-4daa-adea-20cf9f9a85c0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4c168e-0bb4-470d-9a26-6400ef02a09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c049f190-3714-4924-bb1e-3ed4707b08d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c2a8f4-7088-455b-9e1e-3541409a9a8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d76df273-d4b4-45ec-a4e6-1bde4694eb0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35c8a3bf-7c65-4273-b71d-e13c8d43f425",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "198c1ff4-069b-45d6-a39e-be5c72f3da2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "372862c7-9954-4b6e-ba91-54ada6f766e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4798827c-4887-4ba6-8b9f-c2eda81beef4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eed7f583-9a7f-4930-8b49-a32d5ce09058",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3eed9ef-f67e-4356-8add-e8b4b84df981"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea81c867-4c59-4c63-a58f-2087b7682b59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "120ef3a5-6f8c-47f5-8d03-c91701892955"
                }
              }
            ]
          },
          {
            "id": "4621e58b-4338-4ae9-aad8-edc1aaa36f78",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e241970a-3a42-4fc1-926e-0ccdcbd42c11",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "389e2424-9b2e-40f6-8ace-c7e8cebd7e55",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2bf702-402d-48b3-b7ea-24d045a6fd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8aa58e2a-980a-4074-a16b-654d765144c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85853ba-355e-4189-8e72-6839c3002a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4561084-8f9e-4d34-87b2-a651856db1a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "935b6854-de38-4f09-b15b-f06e5d007fcb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d87abce-158b-4352-8428-168618a7a755",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3116b732-4b6a-4fe2-9fc6-49b9e28f26dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d1c5af9-9d8b-48ee-9301-fdad2bd76a71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "054d80dc-262e-407a-bf3c-431ea79ee07d"
                    }
                  }
                ]
              },
              {
                "id": "409f8e3c-7de1-43d9-9eff-e27dbb05f9cd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eeded2f6-95fc-4b59-901f-adad322ed238",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d1c0e33-1f3b-4cf8-ae4d-ea75d9c2c38d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "984243d4-88fb-42fc-a237-9314f7768356",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6d9623b0-0bc1-4a0a-a267-373c094580e2"
                    }
                  }
                ]
              },
              {
                "id": "8a5d4af0-7050-42a0-8500-670c20183865",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78392de2-c823-47f2-8c02-956328ffd0db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e4ef2df-2810-4093-bbbb-23e056e22f37"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8f15712-76b5-42f5-9d2b-d815258461e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc956995-c08d-4d93-94fc-8f21489b599a"
                    }
                  }
                ]
              },
              {
                "id": "c65afa2a-b9d1-4ff8-b60d-32ef3827db00",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e069b3d5-3fd0-4f7f-b667-18e1393166ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6328b3df-3c99-43e4-a747-cc4362e7d3f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08edcfe1-a25b-4688-ac5f-9bf7a438c0b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fa7e06fc-fd09-484e-91b8-64e5f051e136"
                    }
                  }
                ]
              },
              {
                "id": "68f3d089-fbdb-4706-9e78-b82d7f3906b5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5938acd-b858-4d94-a2bb-661b76d3cdcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a6f83ae-aad9-416e-a213-08a9c8616939"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d201c10-12ea-4475-b781-93c44cb3e4bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "45ee0c63-2659-4ad9-8e9a-f4d9940edb7f"
                    }
                  }
                ]
              },
              {
                "id": "a58a95b5-4045-4b43-9e7c-f49744e00b63",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7abf11e3-de30-4fff-989b-447a9af65682",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "132f0139-e06f-4243-8d2b-96e8cbdfe7d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2825b709-e02e-4cec-9d4c-7c6e7cf738c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "384c5154-b7d8-45ac-b308-9e133b3aa996"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "68092056-de88-489e-beb7-e3750b37957c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbfe3449-9a03-4107-9fd8-64c39c348a78"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5dd57bf6-4992-4e9c-ab81-d0556dbb5b35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7c91a90-cc15-4b42-a0e7-520dfee944cd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccee1368-238f-4d47-9c97-7f4e66d7b5f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a4c693f9-eea9-4ff3-8010-316d3089bc65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d4f349b-0ebc-4253-b24c-fca9823486a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f4f5a90-536d-41af-820f-f79947ad3bab"
            }
          }
        ]
      },
      {
        "id": "4dbab29a-6bd3-4a73-b184-41b70eac9c40",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7547ced3-8982-491c-b257-349a094163b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8db84a8b-74b0-4d13-aa70-4d438e73f8b5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7d4ea27a-e85a-4122-be93-d1851d89ce03",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3271654-0b4b-4fbe-a1e6-a33872080511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668e431c-e096-46a0-825e-4999afe4b95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7939626f-4128-45d4-88a5-4fefa6935b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "36862b82-e72a-4536-ad27-c8acf52cd779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6b0298-615a-488b-93d4-41e11c3fbae2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fa251d-486b-43d6-bc8e-8d67883ad5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362c3303-9ada-41f4-8025-3c52be269352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc9fbcd-4892-4110-892c-c13e32ba8c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37690a6b-97ff-44e7-9a48-58345882f377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a776eb-6f9f-4a53-95fa-9434095f054e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a87e31-2693-42b6-9a15-a439017c7a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301c516b-b3b9-40c1-acc9-9bfb19fb3746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6addefc-79e4-4b3f-9475-d2cee6616ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e4db59-cf25-426f-ad85-85a1d3850315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007dcf01-796d-4563-b1d9-4c07396f6b5e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b134774c-9e39-4c98-b2bf-80279a117fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0c9041-9916-4652-a352-3ee23d48236c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a1eb4c-4fa9-446b-a8f6-4ec8e794e6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db96f5c8-ec23-4414-986b-63cd9ee06ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac65f6c7-2b67-4054-bb44-f77819ecae69",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a34b962-ffac-4532-92f1-eda654953793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65581c5-c492-46c2-ba3e-8b780171fad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081e8d0a-37bc-4031-8868-58f23dcba785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db203576-2d37-4f24-90c1-a7f3621a0185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225d7d21-2373-4488-beb1-651a7f1ca02d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dac429f-8a85-4db2-8c9e-b593a6ea5245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5bd549-3069-4cb8-9dbf-1f91ee072186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22579a2-ebe1-4996-a2fd-c243cfd7e0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c36e40a-194c-4d42-8200-2f2ad1be389c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9543e06e-4705-405f-b001-448e19009962",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6245e67-5449-4965-8ce0-8cb6c5891afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513469d7-6a91-4950-8f66-6a790d598079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019ad879-46d9-4018-885d-2c6e4aa39554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "809c212b-6f13-4086-b412-c6a674154647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b592482-9cf5-46a6-a89b-4a1a515de4ae",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f5f772-c007-42ab-8a08-10d33a13bcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c79269-0061-4ce9-b384-e6d6e62e6a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07173824-c920-47e4-aef1-e4e064c6ed0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a08926b-f860-41ad-b6d3-3e6821d63c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fbfe38-ae2f-4f33-ae6d-e56227314080",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d70837-db0f-4c68-9f4c-0cd0950ef132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908090bc-8d06-43fa-9659-87aaf9c95688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f758018d-ec27-408d-bc40-21269d3d96d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6603e4-678e-4b8d-acb2-1afdd15cbb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917f32fe-6598-4f4c-92dc-50c20a1212fe",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbba95e-ef65-441f-be1c-83c17042210f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4902b1f5-2693-4c1a-ba43-b3e466287537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b937ff-d464-4617-940f-5dfcb2c8f118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2589b27-1470-4254-9e04-6097ee918799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1d6a9f-30cb-4f55-b19a-1fc89cb42d12",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b457ee-2951-41a8-b914-02823d369996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee81f5c-c67e-47cc-9240-fdbd1da7db8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f1aabf-970c-4307-86ca-55bf173904dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a5677c65-4edc-4845-afd5-60ca42dcc3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c680a2ff-b233-41e8-af0c-7bffc30b26b3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0f9343-db41-49bc-83bd-577db700939a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a51830d-1aa6-4239-a3ac-141111d8f2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e818556f-458e-45c8-a7db-88ecb0070557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e26b3c3b-65d8-40d6-8d3b-34bbbf87713c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70874da-0c04-4aed-bba3-615b726d3a36",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fc8de3-c08a-4a00-a08c-79ac9c46f009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d540578b-3db0-4a3b-a6ce-e99651678a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0491ba0-6033-4d4c-832c-58daf1faaeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0043594e-cfae-4e5e-8bee-03ddb3a010f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfb2e19-1252-41fc-bbae-a365faa5d8c6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361d221e-fcbc-48c7-824a-a48061e9b91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edbccbc-0b86-430c-86ba-293bd8ea00a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd49b66-67fc-469a-980f-1cc81a9e7478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "10cd94fd-097c-4d1f-b5a4-58c61f4b078f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9b6a26-4964-4261-8671-bf0b0af5d53e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199ca7d3-f394-4550-a41c-a0bdb9f80378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0a9027-c578-456b-b8fd-6f6d40b066c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd1c2ee-3c9a-4468-ac52-7d9c424eea1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3067da5-7b55-4e20-ab97-b51598f8b719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37cef57-e663-49f1-b5d4-ee83acf6832d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a888289e-0f7d-4ab7-b9de-9cec2c56f5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb1d4d8-474b-428d-bfa2-885911909cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128aa294-4935-46bd-ba6c-0cb39fa906a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "59154343-f08a-403e-9d40-f938679f5830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ee69a8-05a1-4d82-b799-a2c78326a158",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6e6ba0-c644-407e-a363-ac49b0fb1ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6992dad1-26ca-494f-b601-936242d91b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78915546-b414-40c0-9c40-68065b39c734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "398e705f-7232-49b5-8f28-9e875c98486b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f0d69d-c160-453d-b048-0664d1e86fe1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25d3b55-d422-487a-904c-443573119f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e5c37f-f625-4658-a1e0-8add98cb9dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739326c6-79a2-4929-aa7c-7954b3e2821c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d01fb88-cddf-4fd2-99be-53735c43822b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b709cc7-4f8b-4911-b4e9-cd34b7500454",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef4b440-ce36-42e0-9727-7272e6858d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16516fc-7645-41c2-8424-d3b0b88f28ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55356f69-ebc3-446b-82e5-b19a79c64e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6137cf30-eae3-4492-95f2-0fe65d8d72e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd28898-122f-461d-8f1d-a898f97280bc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e92dbb-48cd-442d-b362-bd16a4ccec0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08cd89a5-ab08-45c2-9a26-0c83f08918eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80c032d-1e34-4e83-9f93-7fa957cd5d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db54283b-afa3-4c29-8740-0ec9c8aa6305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca74f17-5e58-416c-aa16-9a540cd190c8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e61fcc0-2992-4fcc-a51e-04a2c5a1d136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbd81ee-afa7-4870-a4b3-d3e12e4644df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a314a0-0ee3-406e-8a64-7bd620d882ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94f23339-dfb7-4d7e-a9a3-1f345522f578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2748069-d470-4171-a43a-c8907c4218f7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eeb4a24-1087-4af6-8cf5-b83b94026eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05832953-df53-4c24-8048-58c511f5bd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d98427-46b3-4c06-9969-3bb11b3d41e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aecb1640-85b9-4608-a93a-55a137ef7bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7ebdec-9029-41d1-869b-3c62b4b7e378",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9500ac8a-a8e4-47a0-bdd4-8b2a24c4ae88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a42759-65c9-4cab-8845-b3147312667f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254dad42-6ee7-45d2-84bf-0778680abffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12a1db7b-1295-45e0-a690-0bc9d312de89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda1e08c-7239-4be7-ba3c-0d77e476580d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906d49ee-1520-4c47-9ec8-81f6e7cfec1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2da6a5-ead0-45a0-ab6d-132b000ebaa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a7e2d8-d115-45ec-a667-335a6b1d6916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f99ebc-9332-427f-85f5-403c68ccc36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7912415d-2ea3-4ab2-b391-22883e4c13f4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d0eefb-3979-4eb1-8991-c2f7823f88e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9844307-b04a-4a4c-b42c-7597d8102560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c85e5c8-aa43-454b-9bd3-344580177183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b18539f3-6cfd-49b8-8e6c-80776e1ed30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1b88ff-0637-4461-9e97-bedf27b943bf",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322f1664-b558-4271-88f9-95f9062030b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8085edfd-9a11-4e96-bc9c-8c7266c00057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b32e8e-6a89-4781-a012-0494d6ec8de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc6615b-049e-4b70-8965-568e862d1fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6a5eee-534f-49b7-bde2-95f58039ef6e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d73c43-e86b-413a-bfef-bc61638d7ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe87b57-7ce2-4b09-ae65-aa892ae78c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc2c346-3a4d-48fa-903f-2eebd637b1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a55a51d-feac-4e7c-87cf-147c0596262d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40439f6d-473c-48f4-9543-9755877fd5de",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da227aad-4a74-4691-975d-db8c801732be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6d5f0b-7762-486b-b6cf-8169218fbbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b655f796-14ba-495c-a6be-ad47b5f00003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5377c488-7b5b-4b6a-9230-ae64a02a7de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffc2744-579b-4f5a-8a8d-f8aaea4f620e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797cef00-a0fb-4622-bc6a-711788b40f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49189ca-a1f4-49da-a856-be238d30e8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13eab84-0ea0-454b-8028-a02c50d3d5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5309780-75dc-4b39-bfd7-6063b47b5651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb24980b-a77d-40ec-978e-9fca646188bd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c666689d-0da9-409e-b080-82c32b3e9fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e026853-dffc-4b79-8386-fbfc7cbdcc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c01be8-d23c-4e51-a83c-d97cc100cec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3b3869-842a-4b03-a17d-1b7d30a72719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b2acb7-a8a4-416c-b319-af90d89dc052",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88fa90b-0018-49c5-bb37-080f6878e15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f14f0ea-bf0f-45fe-b0d2-13dd42ada58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6167c84-c6f8-4941-b3a1-297313754550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29fb01ac-cb99-4ed9-b11e-66c7772d0678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bdd8ef-0365-4198-8463-bf92d9b22f57",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c849784f-77d0-4a52-b7a6-562072e99dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1704594b-95ac-4044-8169-abff7f0a1a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90b6933-e2b2-4e6a-b681-72058c9c0e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3af041-f5f6-4f2f-9036-db100762f8c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "070c6cea-6e03-4a5a-819f-d14414862957",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26d4476c-9714-4210-8f62-a172ce62f0de",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731dd33c-d72a-4585-be30-50ce5a214154",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0338b3ec-8c13-4190-bbdc-1abfb0435802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2ba568-2c27-4fb5-9310-4dd7abe4b7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59b4a493-1501-4c5a-b2e4-63163a375758"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed54d9e3-4f76-4a61-b4a1-ad1ea69e25bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90fe503a-ff57-4b62-a4a0-4ac75a5dbac1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff509f05-a796-44fa-9ac0-2187741b8bb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd9c1f51-9c28-4f45-8f34-cab893dc91b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7d67e7f-2703-4fb6-b7ef-174320a07d88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "18cf8445-987c-44c8-a421-b7304e5dc30f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf30dedb-281e-41c1-b63d-fc600485c683",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fccfb5e7-46d9-442d-aae0-c3ddcb51cf2c"
            }
          }
        ]
      },
      {
        "id": "1cf2d93a-43a5-4f70-b948-a4fcfc7f1821",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6b2f0481-a802-47c9-9882-2f948a113093",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60cf4aa6-15af-4721-9f94-c866f9696329",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4de61693-8dfd-41db-a961-54c931dc3dba",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a735e3-f86c-4f77-b04a-131d3dddfd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49093611-32ef-4083-9e8d-89659bb6bdf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5b9e6c-5a6b-465d-9e19-00f8abbc9663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d008ea6e-175a-476c-bea9-c3f59f910c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5931fc41-ebb5-4e72-8653-26cc2d8edcdf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d0c5cd-2c78-4375-9cfc-872419416ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5911760b-2302-4760-b5ab-7ccb50580062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf8c0f8-addc-4b98-8833-db51d75af162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b86692-833d-411e-9a4e-8daed33e4e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcd4c3e-5ad1-418b-9ba9-fdd45a0f8c94",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799685c5-b417-4e1c-ba6c-a408a78e9f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6f9812-f0bd-4d63-b7df-45e1f7cabbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9910bfbe-40c0-424b-a82a-0b1c02eaa4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4893db7f-aee5-473b-9336-632e272475df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31557629-1b19-43f3-8e35-b6a736129505",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395b7987-371c-4889-8337-4714a3e4a299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c22714-d30a-4f30-9b94-cc34378d0983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f694147-3fe2-4938-9b77-07ca91f033b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d9c989-f4fc-4f6d-bfd3-3fca7b280b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91327b8e-895a-4187-b96f-56a5054d2aee",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f509797c-ca72-401f-ab64-d5ccf966a8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a77fe9-784d-465c-8763-984e0f975831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddea830-fb50-47c2-b4e1-861c21762fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdbdf7b3-0791-4edf-bd6e-f8a77c11b3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4c88c7-22c0-42e6-a2c5-f0a5efb6d58c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e9789a-9f43-4de6-83b3-041bf2b52626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a20cb7-fb34-4452-979e-2718a5f5c730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ff80d2-54da-4644-985d-3dbec63cfd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10819133-1bf5-460d-8cee-5fa8ad8c9648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4cac97-9345-49c6-baf8-c6d325f1d6ec",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260521e4-5be6-4e96-b353-9ad247362c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa0a2b7-999b-47e8-bbb7-1bbfdf7986f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842cec20-aaaa-4ad2-9240-56a10a0a92ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e705dd9-ea70-4e6b-92cf-0f61458fa766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7637ffbd-ce89-4f12-9ac1-fc6917a9319d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824e758b-6520-4b46-9840-e4d1cb241b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e0e540-88aa-429d-94e5-4067134f4c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1679d4f2-1721-4dbe-9586-a6def4bb0602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "869860d9-72d1-4afa-aafa-73ed0aaf1ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be3483a-4410-4923-8560-d176b9c01b59",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef86d8c-d51e-498a-92ee-1e23d171b303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c97e53-a2f3-400e-98cb-b5229b9f9dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c88cbb-c3b0-4ae4-9a4c-436e03192807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80601f71-3bdb-4ed6-8030-263795e04936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8850b933-5ef2-42ff-87b7-66d6e4ae9af1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d331879-61b5-48e0-ac0f-900c4d8e70a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1290e1f7-550c-43f8-9074-f161ccd8762e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a05fb3d-3b9a-447c-b0ad-cba7603168ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "569b9a02-305a-4109-b84b-2e7072183c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3625b2db-61c4-403f-9a62-2ff4ec80f692",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7786df-f338-453d-8f14-5d02087bb721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351fdc82-0db5-44cc-9486-4e7af20ad368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af901685-f88c-4a3e-a5be-21c8ba1779a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a275c5b1-4ae4-4b07-9800-6e5865a0dfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6ff948-ecd7-4383-96f7-2769bdc0605c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332f6303-6156-49c6-977f-04c4001197a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea20e6de-96b3-4037-88f1-693049016727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3099011-3dff-4d2c-b113-723187031402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f930996c-d7f9-4f17-a1ba-10a7c889c076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff16dfca-34a2-4318-86be-3ee1aa798f06",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec70e62-7023-4d57-9459-c6e2b887949d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e86cecc-dccb-40ca-a441-c789b9efdf53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb1d2a2-2c21-4d3e-99be-636143374282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "566e09ee-9057-4419-a084-7f734ed468cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26063a4-48ee-4a0c-9aec-f937b9d21d4a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fda06b-f1ad-40c4-b057-7e747dd1411a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7f5c03-4d5d-48cc-ba14-3f0404b645e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1516768-d612-45ba-a348-79f386b11f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "61ce7b9f-6f99-42c6-b7d7-9be49a01d493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831a7e42-fe4e-44be-b0af-78147aad82cd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff7935f-3202-4236-a59f-fe5aeccd7875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f6543a-dd0c-4c17-8668-11435d3a9ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63ab281-7e41-4109-8aeb-551035607428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "09b8be4c-9bed-4259-b825-4a5737341cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da1d67f-4887-46f8-b641-594e8b3d5a9e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d6d399-7da5-47fe-8150-22f332a10d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310db55d-3a69-47b5-96cc-60d9def32613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f80801-42e4-44af-b841-d6fecfb0a378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d63d38-4c61-46d8-8239-3dff09a63ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c774527-9000-4479-a29b-26f4b932ceb9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1485b373-dc6c-47e3-9dc6-ee323a9c35b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54cc4c43-e9b0-4cb8-82e4-b071d047c463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e6fa55-47f7-4431-843e-8211cd33fa01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4786de-9e12-41a7-b470-591f518ece63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1343a0-8a72-49b3-ba96-87bdbbee66d7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca6d980-ba4f-4fae-9074-e9967500fe26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bcaaa4-e2e6-437b-8dae-99d15bbe31a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef5bdd0-0172-45ed-b806-8e04875adf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e89686c-b387-4c7f-9dc1-1b535f7dbbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46aca23-3567-45bf-ab16-2ee90c0bb51d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9976f71c-b4ed-415f-b508-5fa5504fe26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d88e3b-4b30-43c6-b4fd-87b2f909807b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c693264b-e633-4a38-94c5-92399cc8af3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3dea064-893b-45c5-be83-87e0e44694ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29751d60-0141-4dc5-948a-75561633b958",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf7c293-ef95-4f5d-b596-b3a6d8996ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83b7cd0-aa97-4242-bda5-27b10be7a689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b9f7ed-ee76-4329-822b-3624bf994554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a859fe9c-baa8-4d2c-8817-e8e2cf6c02ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a59092-9004-424b-9061-0bfb2e0e02ec",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afb0daf-4646-45cc-b6ef-f21d406bee7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb5296f-a520-45d7-a6f3-acfa6cb1d92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691b3265-8234-4c3b-9ac8-0a7b1bba1904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b73db0e-92e3-4f7a-8b3e-908f4c9d78a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16e7812-83ae-4b46-91e2-04ad58e1b828",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdac2e3-3092-4a1d-befa-ef5cb127a0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d639db8-86db-4459-8a66-163920e45798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d0e6c7-c8ef-4d5f-af54-9fe1226d2640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "426679d2-3cfe-4409-9790-105cad252539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b773cb-7d5b-463d-b518-6d3f2385cb7d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cc8b12-a9f8-4dd1-a19d-87acbfd5257e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20110d16-ce03-4683-9a86-f8919519ff39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7cb8a3-6494-4b8b-9553-539edea42143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2a844e-1c85-4182-bc70-d57019d334cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce8f5b8-fa85-453d-8f2a-9fa79e8af76d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd613c7-fb95-4395-b2ee-9dab54094124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad21349d-5aef-4c79-82d8-949052c1d505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc2cb83-b701-4733-a7f2-8b3a70156d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46710a61-898c-4ee6-b962-a78ae123afa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6afe693-5bef-4d63-98b2-57920a44eafc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e670a76-bf98-4e15-bf5c-372303265473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1f30f4-76e5-4900-bedb-b7a018d3bffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e77e94-bdd1-4a1b-b83a-8ab9ebb9ccaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee628ff4-2fbf-4923-87bc-36df6a9378a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0231544-7368-4617-8e10-7705c8e3591c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af90f11f-cdbc-4884-a107-9fdc0ae0e0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8193a1-11a6-45fc-b072-46992a6d5b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4649840d-6619-4824-9161-c3dc41f062e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "117f403e-2bec-4ad7-9e0a-c39070382703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f251c9c7-d05f-4bc9-85f3-448062009f86",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfceca2-5a90-4372-b549-e64423f04510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d75f26-7fdb-4db0-8d16-d1abb5d6b42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59361f4-2238-4153-8092-a9d252e6118d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed0a5c0-1383-4b38-a739-51e2d4d65214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da79e8d5-3f9c-45bc-8ddd-77d548cf67b3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6610dc-9089-408a-af7e-bc614f580403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7e713a-17a9-4494-a8bb-831bdfeecf62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3a03eb-d41c-4450-b8d8-aa0fef65441f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d85d48c0-e11e-4c15-9d82-0355f19d7a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ec4729-fa3a-4c2a-a009-6f234f6bf965",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ebd243-9988-4f61-8c16-bc2ad9376ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14369a1b-7c0e-474b-b806-18bfaa49ee89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b65bdd-dbb7-42c3-8fee-d3191f4b243c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54b379ba-9045-4e67-97de-ee53228c6d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e5a221-4483-4d58-bc1f-975fb98c2dc7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d58bed-0d67-43c7-82be-737e78b9356b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac21f2a-d91b-4cb8-85a1-1264976b2890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f9d4b4-b21f-48dc-9e37-8c8457a6f49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc837f1-5e88-4717-8aba-55f671d101b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4d03c8-af76-40ee-a96d-05d81a759aa0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b147fc1-365c-4019-9ef3-3838d7963685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fd0776-bbe7-4b3e-bad7-9ba11034d0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba36544-8dba-4a05-a24f-125162255bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c730748-96da-47e1-a8a1-6aba215d5f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bbb0dd-aa86-4c4f-af2c-27e9473ca908",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bb3fd2-fd67-40fe-9db6-f0f3d7c385bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d06388f-96ef-4324-bdd2-2d74cb98ffc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d9198e-ed65-4f03-816b-df438edd2c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e91073ff-283b-4f0f-b38e-410eeb62edd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c5d72c-74e6-4877-8dca-7cef8fc31332",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80395f3c-cb94-4bb2-87fc-10b3553ced8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e08a9b6-5998-46f4-9399-82eacb69b506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0768da19-6227-4e77-9d54-70aba3832ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd07484-c73a-45fe-b779-bda89c53b3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00fb597-e7b3-4781-b62b-695f7a2457ca",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15f2201-9f94-47db-ba91-9b27088e6d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d272f6-1107-459d-9d7c-affb29bfc234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dc0b7f-c593-4bae-bc1a-391d0925e1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0106e53-3ca5-4a8b-a7b4-6b7e4bca4798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c201bbb-70eb-4a56-be47-931440a7fb05",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b03e0c-f14a-4f47-9242-5bb8e947718d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2244451d-bbdb-4f22-87b8-764b7cc68559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f810145-0613-4ddd-8987-d84cf8a6a6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "464fb0a3-49c7-42fe-b367-c1dda3eba513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44390dc6-3437-45f7-b6dd-cb3e4efc04a8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052bf875-53f3-420e-b691-bb65b3c9be1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad04d6fb-437c-4a23-a265-c70cb8e9bf25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac584e4-4044-4e76-9603-b54a77e5ca51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3dd26ab-de2c-4ba8-9275-71081f74400b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308c1cb3-57bb-4860-845b-357f8d2fa334",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00ca8a4-6f9e-4335-b1cc-42e1eb00eee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9c0a7e-7653-4e2c-8473-081ca22fb1a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebe7c7d-85e0-4c18-99d5-74d80b7deb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1a7e59-0c24-4b91-913d-b9b3d81100f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "19e42727-e76f-49d5-8d7b-b59660f50aba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1aa53d4f-ac8b-40c6-856c-7dcae19b171c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bbab13-2e38-48d9-80b5-3fae5fb3ea36",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1373e022-09cb-45e2-9955-64ea9e912864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1e09b3-3508-471a-a3b0-847661e978f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92cfc09f-4ae9-4f6b-89de-5de5e1b6674b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35acd27d-ac96-4cbb-8eb7-0bc6383ffaef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49e2147e-5337-496f-b3f5-db44da4f6468"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cd0160b-0e72-4d5f-a3e4-fa746af34261",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed6f48b8-b1ea-4f20-a5b1-f9157ad8305f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c392ee5-76d8-4c86-bc45-f2f83a41d276",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "842ac4e1-45e2-4587-881c-b48f93c1244b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c71d29c0-0b4e-4015-a0cb-8d9beaea4eea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "749ada2e-9060-4c4f-a2bf-a125fdf0998e"
            }
          }
        ]
      },
      {
        "id": "3552dae8-2645-44db-a0cf-0722c58ff537",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "08186213-e29e-497d-8faf-6af3ca24db3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8461f097-6ed5-49dd-9301-a4de7dffeca8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ea2679f-6aa8-488d-a922-a6af74978cba",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b2bbad-76d8-4485-84f6-218b960937d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddc0cf5-d54d-477a-8966-377ed5d82e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcd06c7-56fc-40c4-a2c8-43cb17be728a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e795b5a9-1cc9-453c-b480-387fa3ca2fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38841b8e-701e-4a39-9d78-4b28cd135480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78ed396-6c76-40ca-a77a-497bd38f5267",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb744ed1-4057-4d97-9251-34bfa999f05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5722ac71-a0fb-4f6e-b166-43c4694c4d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517df615-3088-4410-a6ce-1cf71b8b7e35",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9466e4-b6ca-4a62-ba50-683109ef9d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82b9520-e2dc-4e5e-9b34-6e320030646f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b712411f-0600-4e88-8848-33bd1dd0467c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabbddd4-75f0-4624-8ca1-62bb37af2220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fee3df-6995-4bf2-99f5-7b716b541fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17a666c-56d8-403f-b0d3-664ef2492a7a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cd3578-9d7d-4bae-83a4-1018d062a88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c96deb-e5be-4ff4-9829-0c87df5c9390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be3c23b-fcc7-4a82-8cd4-63d399c457ff",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863e1e56-7efd-4dce-8469-33b8a9daec08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d698da7-a455-4467-a443-e8ee713a9038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0427b8e-a5ad-4f9f-a6ea-e278b4c20134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9223640-96fc-4308-91f5-ececc34b414c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fffc1b-1842-4717-8b28-dbce7413eab6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14e12c0-bd10-4b51-a080-a58a6debd18f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "420ffaa2-4b78-4fc0-a5db-047bfdf0d197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d275c5e-d4d9-4e10-8ebe-da7b87fd7177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944b14ad-b3ce-42cf-a55e-617568b9ff64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2f8a62-915b-4018-967f-d53e5b76d68d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f16502-594e-49c4-889c-d3a981da3fbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d84c77-a49b-43a6-ad75-50b247d1a312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f32e58e-2617-49ec-a2ac-167c0ead187b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b050103-5553-440a-837d-fd53affbe1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb2c47c-d04b-42bf-95bb-08ba3c935f7c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3397f8-e971-4e89-8d74-8cef128f1c79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b1114d-3326-47f1-9146-3b48370cc5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306e8673-2f46-4a32-8caa-262f2086cd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b44aa78-2c63-423a-acb6-fc66c0ce68cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4345aa59-74d8-4467-9655-08abb4e0668d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0bf5a8-a4ba-4f96-833a-0644bf1513a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdbd56f-41b1-49ca-9d3e-7fb7fee04e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bf03b3-2c36-4db6-9280-fe661c0bdce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57771340-3a52-4c34-b410-b2c9906ba335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16663c71-e2e3-46d4-8846-f21f1f80df8e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03eea72c-869d-48c7-b856-cdb02744b47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1c427d-53f8-43e0-b61b-bc9e86c88a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "130857bb-9f75-404d-a821-a630d93007a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedffc8f-da3b-4d11-aeb6-2b5390380b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7290d9-dc18-4ed1-9e4d-83f4530d997e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d977e5-80bb-4932-9db9-a63d21bb4c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d653f04e-2e70-473a-ac14-305dcedd34b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a91b606-27d8-48ea-8a82-547a6895b34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2653e27d-dbaf-4395-82d7-6732fb2867ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d880088-eb25-413b-8039-2648f008264a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e932a45-e711-435e-92da-5d868abbe9b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fd178b5-fcbd-46b2-9305-a2c76030b413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a6a1ca-a01e-4389-8424-806bacecbdd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77c2192-7edf-4f62-854e-9d5b1dee2b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36ab4ac-652f-433a-9c34-3cf5f92131fb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef90beab-a5b6-46c6-9ca4-5d1ada03d4a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b06fad-14b3-4a5c-9205-b68d6f47243c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34075fa3-cf03-483a-9349-2461d279a620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b891f252-d031-4028-a36d-0494006b0fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9484d2e1-620c-4b0b-90a3-4fcb83b243be",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e93e114-9275-45e9-b1a5-b4eadedd899e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1bdd7fc-bf07-4dd7-afda-bfc58aca340e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0414b4e-de96-4474-a8e6-5a16969cf737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e5ad29-9fbe-4822-9b6e-1479a03ee5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e28e9b3-1227-4754-839e-2c4b26ba676d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3234c670-061f-46ec-b3d7-d3bfc647b8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2210988e-8f00-478b-b74d-de9acdbb2edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20a50f2-abc6-4634-857c-4a0eae3ae4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb5b05f-2480-4c79-a3d2-9a0cd447e56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f3fa05-ebd7-4972-bc6a-e09bd59c5dd7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fc6d48-9e1a-4ccf-b5c3-b38e5adba269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66be4a47-36ad-45ad-9755-92e7c5b27bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c2d2d5-5e6c-46ae-b4c3-a3594b5434b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f797f3f3-18a6-4679-9344-7fd2b0f2a32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8970e9d2-451f-4186-8b8b-d858b772b5f8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d907e81-e46b-4c28-8d01-dd5c5ee1a6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ef63a8-4bd6-40c0-b3ae-11e298d1259d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297453b0-8024-4fe1-b5dd-47851e55835e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e26c37-db4a-4641-bd00-5faa4c987b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6f741c-aa2d-444a-b543-776910824927",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813eb1aa-4aeb-4816-b972-9fe39c3c9aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6529a1c5-b86a-4aac-a1f1-3c289dc48b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269bdbc2-349c-4921-8a90-eca1d4172bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a716597-d057-481a-807d-bb11d12b49ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70bd38f-4c87-4820-a656-0f0a50427cbb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736e1a3a-8991-4920-82fb-2f21017752ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7666f8-1de5-4fbf-b854-dff6ea57af80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720a92b0-123e-418f-86f5-f74eab0246b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57493b6-5fb0-4fe5-b32b-5255bd3d4bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af43653-f76b-4359-8fbd-8748fa968ce6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45945399-d47f-4360-b3fb-278ce9e697c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a5b56c-32b7-4824-9488-27542de2bedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422e7ece-7c57-43ce-983a-ecaaf2d83004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd3ecf8-697d-4347-b943-c30dff841fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ad017a-de22-46e5-aa7d-e995d5d3c00d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7bd6eb-50c1-4027-807a-1a8d39a76f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd2b1a9-c303-466d-bfc2-e3784a8fea51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6751de-1cad-4d27-b273-5e04573d4a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d41231e-b97d-43da-8d80-9a114051145f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bc5e69-9f5a-4382-8f62-982ba97c1287",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caca649c-7b9e-4680-a3a8-5ebbb36debaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b58beb02-0b08-42b3-b977-46565d9b0976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c15e6f-c744-44e0-921f-7ed66f9f4b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538d27ea-aaa2-43ef-885a-73b1c0277939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7d0cea-1e74-4735-9127-5397191179bf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efd56e8-e1eb-45b4-ac5c-5ba35b5ddfb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "671c5fd0-9217-433e-b408-83eee8664b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d3f171-95f9-423b-83de-1e9fd1c4c34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f648cb15-466f-4540-8c34-e965f4a04259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe0a119-b6e0-42ec-a693-29ac30cb3e8c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492a4efa-5a76-44db-8a06-b3c746c374b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a87d09-ca1c-4d58-a0fd-10a83edcc306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc257d6a-f497-4a54-a39c-dfdb026eb32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11170cf3-ac36-49a8-8325-26a6cb79160f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02de32e8-e603-4e8f-a8ae-26da98390f6c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e8a8ed-e6df-4806-b892-6d716e0a3e1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50cb2afa-0d0a-4615-8d5c-2649df74355f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170c8f15-11fd-4c73-90f4-5b9fa2ca8c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33711e9c-403b-490c-9a45-b53b43f4c286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb191627-9b77-47b0-a759-6fe29325b2ef",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbec153-3472-4e02-9dbf-1f51db8d3c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f416570-84b6-41b6-a40d-222c3f307e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72df9b84-64e3-4865-a69a-26242e349841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82158304-f696-4d36-a28b-c9b05f007838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e57c9a-a433-478d-ab55-e6d4710062cb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f145ab-bf2f-4eaa-b1a9-db80954d476c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d426ed89-85ec-4560-9c3b-87e5daeba25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6249d8-c5c8-4366-943e-dab3f26c0ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021b6e72-7c23-4f4f-8133-ed580bfdda46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b6bff6-9763-495e-a930-1d8a6b72e69d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa92dee6-cde0-4d2b-9c48-4f5bd0877415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aae430c-3f8c-4040-bd6f-19223b656a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cba20a-aa24-48f1-8106-b1a561680d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee16d24-f24b-4a56-ba7a-851df8031330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257fff55-e29e-4c73-8fda-d57f22fc43ad",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8761bef5-f400-40e1-a6f7-d29e8449837b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "836d23bd-04d6-4ec8-bdd8-886e5865b688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e9c4c2-28ec-4633-a879-5c939cfb83c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67770e43-8b83-4bfc-a6f3-914963eafe14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f95819e-3fd6-4068-8cb8-7c932c0c3b25",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8e12fb-9682-4972-9364-269e696ad555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf2ec97-1bce-45e7-b522-57dd8ec767d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc96594a-63c6-4410-9771-6ecc8409f97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93190f43-ef25-45fa-93d2-a201b6af9ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde339a9-1739-4a4c-a5d0-72feb495a57a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45afcd65-d071-45b4-85ed-cc96f1d7f335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aac5bd0-0e3d-40f1-ac3a-8d7dc8496550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0711d2cd-081b-43ea-9430-995d5f782d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37da3ba-f5a1-4845-980e-f2eaefa1c0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafecf28-f3b1-4f43-a26e-1ed2a4d05c52",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6c9bdf-1d17-4e3e-aa94-7f81737838e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22ad58c7-db12-4834-8a62-ea3b075f445c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d648236a-f276-4404-862f-4c17b5032641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35927ed1-0e5c-4590-a609-168f73983678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d265717-8a46-4226-8db6-9b152c99f920",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20dbe48-ca2f-4b16-ba91-a09d50349584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98a56d8-f1f4-47b7-95b2-98aac1ec311b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b130943-7acd-42c1-9a6c-d960d55b651d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53981f3-0861-4c02-9290-84483b82515e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7c5667-dde6-407c-8652-cf6c2e35e934",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be467aef-bcdb-4b46-b762-89c24e260fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14621cfe-b9d3-4500-b457-4d8bbddd06a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41263586-7ba0-4e45-8a4e-73234cd1b632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4ee752-da27-4d0c-9969-963d0b1fe387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe4c993-b3b0-4899-bd9a-ec7ae80f5299",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b8c50c-1d59-4e13-b5d3-9e94051f43cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2565f832-ba74-44b7-a4c9-ee938f584efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce70caf-92df-4eb1-8da0-ad181b5d99d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56d5912-6c9e-4aca-9b20-7f9eb6faf82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa65302-73e2-4189-93aa-cb303ea7223d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd09a8f3-31cd-46cc-8f4c-ff04fc1b7217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b82c766-2fdd-4a5c-b289-4e8dec1101fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c05050a-d947-4e6b-8c4a-47cc1190829d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93edd3d9-f946-482f-9d7e-c7371ce853b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c46418c-f8b4-4835-b4ec-503ccc5176e4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946e227f-abbd-48a3-8742-565261c1645d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47cb035-5cb4-4513-a8d7-f298331d21bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411e282c-2f1a-449a-9a87-f0f0849b144c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e91c6d2-c69f-4416-b598-58a1e3e72ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40421ff5-5dac-49f7-82b1-d9c7fad08f88",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5f9083-7f65-4315-9846-347170e63812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af1026d-1401-43bb-a7cb-11154d224035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829d6a2f-cccc-4c4c-bbc7-8af1b91087c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4266da2-5dbe-491e-94c5-9758451ad0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e580edbc-d62b-4607-be24-8caf866fd91f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e763fd35-f277-4e92-a7c0-896268e62ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff06208-615e-4cff-aa41-fcc85cfe7733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dcd1aa-ea9e-49d9-81bc-08319097d666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1edef3-c4c5-4d34-8cfa-f87eca869b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8185ca-7f71-4f26-9b60-ffa824249043",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9d977a-a6f7-4e59-8022-d894c2e7ac81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2469e07-550b-4d85-8bd0-03dcf0d9a3e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a68e6f7-fc55-4762-a5fd-b090fa122626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e633d9-cc8f-4ee6-85b1-5d857919f9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65828a04-77d2-4c17-8603-b400b7181d54",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b2cdee-60c7-4134-a0f1-8fefd84b809d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623eeaf2-40a3-41e2-aa32-ff555a3035ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "351bbaab-2f77-485e-b7a9-14fe996fa1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48351d20-8a01-4c18-8e4d-37aea828166d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34c8f16-46cb-4123-938c-670afadd3d81",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0eed68-56a5-4dcb-8b87-7d59f6b8fdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68dd2a36-c2b3-43aa-af51-99f688b34e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d6bf77-5b09-4c8c-9c65-be895a121fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d52f33c-5b0f-47a4-89d3-61e533214399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d962bce6-ed00-4606-b82b-5ae64a2666a9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e602a51-928c-4aa6-8795-b228a6e64c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084f3790-3a13-4b3b-af04-7299cd1db3f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d261572-1c58-4ec6-bb1c-68ef02c7bb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5aaff1-6751-4b7c-8f54-7472cf6b6a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c729b0b-e7e7-4c16-86b5-8e602dec1f0c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d3ec40-cd9f-409e-87e2-9ff263139233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fb87df-4c31-4fca-bab5-2e5558ed4df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddb6641-9358-4dc8-ab8e-3c6a5b0f54d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f589db2a-ef25-4312-8a08-ecef5dac4a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244f8a9f-cfb7-4c42-a47a-2fae29f5b2ce",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9bbbd0-740d-476e-bf9a-18e91031d3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c45ecd-2ce1-4e40-949f-555f64a5779f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a31c2d-5d7c-4482-997b-988f50e697f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5802b5d0-3fa0-4280-8f61-301321a9b5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e8ed07-ecdb-472e-85fc-9f1e638397c1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c221d724-54d6-4bc9-bb9d-81d875fa27bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694648f6-b30c-4195-a58f-a6b9aec09562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0833889-7af9-4e5b-b1c8-4e1ec38ca6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b2c6eb-d425-4e7d-89e0-7150c53e7bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54191d5b-f028-402a-a21f-bcb7382a2589",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8453f23-c712-4dfc-ad90-7b0a700e4a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215a4fe3-7d8b-4e7c-aa4e-b6344f611e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7217ef8c-6096-4500-83e8-0b733e142002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d6d07c-a4cd-44a5-8b56-c85639023594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a905927-490c-4684-b768-97d79f7a8505",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559c2189-695a-4df9-9f56-f8624b2d7eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81916ef6-27cc-4d0b-9575-dcc482694c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2525da-58e2-4a98-babb-c8825bfa71be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df6f0e2-6038-4c7d-8514-11ab6edb4eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa99dd5-7936-436d-b82f-ea280ad945a6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead46243-6234-4970-9c38-87b9d5ad597d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295ebd73-dbbe-4df0-b7b8-bd1118e87e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f368be-ce42-4cfd-8508-e043fb6945d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8997caf6-3d66-41ba-8430-4d455ca0d91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302b8dc7-3f4f-4391-8df2-16c7758adef7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61bb393-4460-4767-90fa-85a209bfb3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce20a26-884e-4b67-b804-359f126e484b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eab7bdd-c0af-48a9-8228-fb7afb31dcfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f64cab-1771-45f4-877b-e2f974e5960e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9d9c42-d309-49dd-89b9-22f3ca710383",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621fb7e9-810f-45b7-bed4-1e428d87ff0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8ac5f6-702f-444f-8a43-609f8525a06e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843dbe54-3316-425c-a6ba-ded09029e639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fd3866-ae40-4af4-a9b2-ce4a0afc1bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbf0b57-51a6-4d57-b273-682bbfa202df",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1686f2-b918-4f1d-9b75-84337ec93180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e577f69f-7dd9-4aa3-8647-274233e1d7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7529dd61-c7ab-4109-a012-2ba106c55e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc66697-da18-40c8-bafe-bde312613d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff559774-cb5d-4497-87df-c78444b75b96",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da827c82-da98-425c-b446-ed1874e40d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd05367f-4492-4a66-b6e6-20850eb79cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699757c4-e400-4589-97c9-c8a2e4768ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d944ee-e729-4e11-9d5b-21a8dd95b440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb00107f-9431-4ee9-bdf9-a376b1107076",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a029f4-1353-4939-82f4-f9c53cf61a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9189c81a-aaf1-4d93-8388-bae580e10b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59f0f99-cb70-4fb1-b4fc-8dc12b797524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6c30bf-bf00-4c92-a23e-40c4b5aad82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f98d651-51e3-4f0f-a03b-13e40e5ea2f1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03668ec8-ea26-47ae-956e-bb79b04da090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42a1f33-d245-4b85-83b5-834ca46e511e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9134bc-4083-4e27-ade9-df8cb5155fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9349f0c-b9f1-40ee-9015-0be2de67119d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76dff89-2b2f-4437-90e4-df01f873f691",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec12a088-478a-4d92-9711-8dde8803639f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb82cab8-14bf-400f-892a-1bb3f68af6bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12d221c-4009-4c65-8c16-1218eb4430c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f982fe91-1470-4ac0-828a-a9d24429f7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a260daa8-45e2-445c-a2b1-360334bf83a2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd50086-bd45-487d-88b9-7ef0df5fe2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7610c8d2-905f-4a53-aad4-5acfb822b159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3039a1f6-0729-43cc-b682-5436ec9507eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc1393c-74d4-4795-95c9-c2bfc9336919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b768e74c-6436-4c98-87d8-ee4e09a96326",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1485e44-87f1-477b-a67f-970581c6c232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a2b468-0de1-4a26-add9-57f9220bd60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5157cdd9-1ef1-4c8a-acf0-a0f93cea7319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ddf956b-5ab2-4c08-93ef-14ddb375526c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f327d77-0e9e-4aa6-bbbb-a6020036eb8a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321af78d-768b-414d-984a-17f84f2334ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbf8ea5-6862-4fd5-be0c-61ccd32e0a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbb6ed2-41cb-438e-acfd-73a88150e1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14ed330-3752-4bf7-8785-8a9540268462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828c0620-22a8-4925-932a-2f583038e97b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df55e423-962f-4389-81ff-dc4a06b3d681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed7b8c9-968b-44fd-bfe1-9d5cfd2a734a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccba5f46-0030-4214-90b1-367b5281a761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78529d2d-c000-48c4-ae1a-b6fa84e1ea49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ef6ce5-7705-4ab2-b4de-47ef0e3c231c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1633d2c5-14d6-4ee9-9899-d1afd5416a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e820ba0-cb10-4977-8d2b-0e931a9280ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622bc831-3112-40f8-9de8-e9c851aac20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d46a077-e60f-457b-8e08-b12590c1f956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0657b9-b109-4494-819a-466cbd57d37c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7514a62-25f3-4c4f-91ff-5d20b6c56ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b415c61-41a4-4ddf-ba0e-d8c1888f01fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc1ab89-9748-48a8-870c-ee19a53910c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12870ef-3d9f-4cac-9808-a847d595eb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4233fbe6-81f8-45be-8d85-514c02236e6e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df66856-d143-4b1f-9aec-ff4110a7e949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf08bcaa-521f-4de5-ac11-d2dc212f6099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9013aee-d7a9-461e-9f95-b2fad781c5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c780a4f-8373-4d0b-9bce-f1913cf39b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75790c8e-b26f-4257-8406-dbe3f1375b4c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34950f98-e7e0-412b-adcc-ad130e06a0bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26e90f4-7c8b-48dd-9f90-e2a7af4e4538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68c8a8e-4f07-4cdf-8cc0-001fe4b91b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fadcabe-cbc5-4eef-9578-3b48db1bd5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da319708-7838-4266-94df-3b2ee0101730",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062fe8a8-1a59-4975-8303-180bd62ea374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc21fca2-ea32-4c6f-9421-ac8b8b4ae324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04189a4-3ef3-479e-bbbc-7abb5c7ebc34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3d372d-2de9-47cc-a2c2-60e22f66a405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8d6d5e-7e22-48d7-9d82-96c6938f2d84",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8ea6e7-37aa-483e-98e8-193877165f1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74d55ef3-9911-4cad-bb13-ed0adc829c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4167d9-fe91-45f0-a58e-2f1bef0be853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27590364-64d0-43da-9e20-7914e5dcc57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9c7417-175e-4b01-a78d-7fcca20d0ff7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d847ab-77fa-435d-8131-74fd7808cce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e74a3d9f-21ba-4c5e-84f1-8556459cb8f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feae5e26-b055-4b95-8168-283fce2c3746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1196be1b-527a-40a7-83b4-8592cd5aef16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881aa933-8663-494b-ac78-f6fe36ebe30e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae74bb4-c639-4968-b263-002fa926fccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7176ed5e-5aab-41c9-9b62-bb4f9bbd2a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42fe8c8-088e-4cfa-9cbc-9a6cdca3c735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec99b405-5433-4c42-b8ed-a76c739f7c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566d96f2-88c1-4e87-b349-313293b8adbb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32865981-d545-423c-9b0e-e80fa41814cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55572006-a314-4272-9930-7a0d995c3e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0d30ba-7e0a-4939-9be7-ef7f629d1cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00296d9-df31-4eb5-9053-f1c5506b5cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c475c338-6bb1-4214-8678-a98028fb7545",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cd067a-33a3-4c5a-8377-197606e2ad25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd224bc5-8819-4c34-a7e9-4a598ecc1b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e847ff4-47fc-4b24-8d93-0dd6b3691f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241c85b4-35d0-4294-b011-768e39a90c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3110cd2b-2844-4a6d-a4da-bb49acf40fb7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7b0b9d-7df0-4507-b2fe-5fae6340e87b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b07df05-3742-4803-b041-7feab4dc988d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17df786c-98f3-4e2d-bbfe-af82d757368b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8961ae11-5045-4332-a3e2-4c9a22eda1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d684ad42-65eb-4fd3-a1ca-d8a20f0b918c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b24454f-74e4-4767-beef-ef3c4d58f4b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7aaebf4-06af-486e-8491-468f8e105bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7513f4c9-b9c4-4176-8314-f4590c85049b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be86372e-02ec-403f-a236-13f29ce8a7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da758fb0-ece8-4883-902b-c34977c80b35",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffdf850-77a9-42f1-a6ec-3fb40fbd912e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb182280-ec7b-44f3-a328-1b8306cf6df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e912a3-4c91-4dff-8469-cf684e72bbc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33f8c05-7807-4577-9258-70f293052b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f2892a-508f-4d73-a49e-58ab2c18332e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa62762-292d-4bb7-a08a-a9a19b0a9809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "babcca42-c190-4ede-af4e-7a70b3d4cb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78628460-a96d-4ac3-98a6-fd95c67d3af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea135ad3-d45a-4de2-a747-99a330880f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9b7a35-2390-4c31-b9fb-47dee6a38194",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fd4284-0fbb-4558-807c-54829e107ccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "508a1292-0cf7-4dcb-8e68-76ba1f88ef5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0c17ef-fb25-42b7-b9e8-500067b12fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c449be-db94-431a-8464-5b8b93e3c0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b10d89-b467-4d76-8283-c509d842b4c9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d7e91b-0f6a-4669-ab2d-f56d2a4e5e7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "311d2fc8-61d5-4a61-ba5d-13843bc969dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bd3258-3951-492d-8e13-a2c022e9b53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24606eb9-a7d7-4e0b-8403-5e393f365103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26459b14-42c1-4bf5-8363-6a527cf4d28f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc967ae-801e-4ee7-abf7-8e9f3723d523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "092cd627-1254-4e51-903c-4d4ecf217fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d264f8c7-97b6-4f35-b025-d3ae83c78d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3efecb-b8eb-4af8-9e2a-2b91d8fd7a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981aea5b-1127-4ee6-bf5e-c248bdf22063",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639c4e39-c715-496b-82bc-9559f7de94fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98c8ac39-3e1d-453d-8bc6-30e2f160e89c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84a5606-9ad9-4007-8205-f07fcfa2d8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984d836d-b887-4a41-9e92-a3756bae0435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559b9abc-9dc0-4977-aff9-aa070d87abaf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7bd44e-e22f-4215-914a-06637a3fae82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53a27ea-f4e2-45ea-b1ed-31e1c1b68075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ae1deb-d669-4fe1-a56f-9a613e1153c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5db755d-3a34-4055-bfcc-118e58afa7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d351251-7850-4b50-b141-e61e8d50ccb6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e37dead-2ade-442e-81cd-284fdc9487a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7755c23-fb4f-4273-bb28-48ee40e0b466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcaab0d-291f-41a0-882c-5c238b2b447a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99b21aa-c455-41fd-92fc-3bb5677c661e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05604ece-cb65-413b-84c0-5e1b3825b74b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4bddb4-20e3-4ce4-9799-83a205f89563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d6ba7d-6efc-47db-9ddb-213370530a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177d1013-78f3-4520-87a3-0e32ba960959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f9a38d-1198-48b9-9be0-c630eff3428f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e304e0f1-ceb1-4368-a111-655979f06417",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359a2829-5ad2-4eb1-a7da-5460dd9063d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97b18fe3-ab70-43db-8a8b-1e8e27b555e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba7fc9c-bf2d-48d7-b275-744fe23697b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927c2b6b-a315-4069-96a3-fdfc4237ebad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b114ca14-e99a-4ce5-b2d8-c898cb49e8f9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fe101c-da1f-47c7-9e42-d912f2b4ae34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9577a9ba-550e-4450-9fb5-b583134ee8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87076a06-5411-49dd-8bca-f0528827ba23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f081e27-d08a-4f6e-a82e-a7b7bee5c7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e5b038-35ed-43d8-b93b-267de3676c7c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83be0b8-7a39-4b35-86e6-002152fe2e33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcc789b2-d821-4b66-bdfa-85347627fa41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f110c8b3-8dcd-43c7-9209-7f27e897f08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265b6236-efd7-4c9e-8f90-3c780aadba7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe9be0e-438c-42ea-b495-252995e549ea",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d039a002-4743-403a-aade-13e35aa108d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "238bd3ba-3d81-4e81-ae91-d9f59f9042f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2dd53b-5a9c-4f75-8df4-f95f609311c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43c24dd-32d6-4708-ac83-8fde8913e8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85226374-33c0-4f61-a3c3-abade9e39d61",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfe9975-0ec1-4812-8010-2ecebb87cc60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c19a2a58-10c3-4422-87b2-7ec9f44a0273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5333effb-191b-40b3-8fe9-b0116cd47217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56508047-a2c6-4d6c-b1b0-3f0997fde6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9e29f8-cd68-4327-b636-be68b4f414cd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1076c988-71db-4423-a283-d0eb2acb2ec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c43c66e-2759-442d-8367-c9fb9f89752f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "897d6ac9-a381-4418-b821-2d35430ccd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25eeaf01-a6d1-43be-a453-bc1fffa16e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc8af5f-decd-461b-a98a-9d3e67fa26ce",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea5b864-7a45-4c46-b486-066184683af4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e54de505-0a7a-4c16-ab20-bc5ab8d5d917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52aace66-227c-4992-b47e-e560c0eb4727",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe12f7b-d424-4217-8cae-24c4f73567a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8a4af2-c3f5-40d1-9162-2d33dd21aecb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99bd9f2-930b-4a30-86b9-a0a742595d71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "935501fd-0048-4761-9550-c35965141efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f57dcf-8c79-4445-adb0-9eaffd3ad4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c94e15c-3045-4d83-ac03-8c1c82357d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c441de20-434c-4e16-bdc8-cecb5987cdc2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bae113-5190-4b87-8dc7-13f6cb812d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9412a95-65d7-4095-96e1-0d6ff8e9ea77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fa57af-2393-42c3-825e-954ad44e998a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c5d76f-0cf3-401f-9692-52a6af7a61c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c839e9-cc35-4676-bd4e-7d00353baf4a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9696b2f0-c127-4f44-9eff-840187640590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d5147b9-a37d-48e7-8039-08412d414e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b795e8-c347-4d40-a361-d71d5ec87a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de507df2-62ca-42de-a5f6-a6d37491038d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea8af40-06b0-40d8-aba5-e7b9b89071cd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255c5126-668a-4f55-8555-be88b3c8c8c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f826163c-d0c1-4c94-87f5-75f5bfaf72b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a63f15-63d1-4762-b461-96615ccabb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87a974c-2a56-4e1e-a480-a166811960d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acfe950-545e-4cea-8df4-86b4c35bb1a8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481e0baa-31d0-4e0a-92de-1a7af5eeaae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "520cc344-a928-4797-8ea1-dc7a6eecc263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5f046c-d946-472b-85ef-d8d80bcb1106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b16938-3276-49a0-bb30-36708dd589b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c31036-d191-4484-8282-34165f1e732b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf4e7d0-9ed8-46ab-bf61-008651ff124d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a2feb9-f2b8-484e-bf9b-c33a89c3276e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af530da0-6695-45c9-976d-6003508fd9ef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d44c8a8-f7d7-43f9-927b-3f74a903b75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0b0abf-2be0-4b60-aae0-bad208097ea8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fcd103-a5c3-4502-b8cb-2255cd2fe05a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb6577e-544c-48c0-a112-d0a142b098d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c222dfea-9c6f-4486-861a-d1af583c73b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8746052b-0e1b-45e1-a3cb-ae97e78c0e8a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f57cd7c-1549-410a-9aef-4f26271a2b05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edbfa70b-f70e-415b-9802-0663aed5ffe9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06656941-5305-490d-8590-651bc04a4a0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f6ea724-76fa-4a13-8383-1f4f561bc6d7"
                    }
                  }
                ]
              },
              {
                "id": "fa6aeb00-bf12-4319-ae73-209ea09fd125",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6d130da-08df-4d7d-b2aa-4476c73a69d5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd653501-c7f7-4d37-b128-89802a52d8fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7290960f-3e61-4d0d-b06a-1f6c38e880f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8909ffa-d7a9-450d-ac06-d9853623a24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "573ca747-99ac-4e45-aae8-6f1d45873275"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35e511bf-0774-4927-84c3-f1d453190587",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3fd1c94-3dfe-4239-81c4-76b2b8692d52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a910240-597d-4a01-85e2-d3f4d461801a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3de05430-f934-4728-ba8d-d3489b921af7"
                    }
                  }
                ]
              },
              {
                "id": "b3269f43-78a0-4ae3-914c-23832c1e00d2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2e98e5c9-a8f4-4d94-8c62-aa6ef09745b8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8b1e0f-f9b0-4d91-917c-74e7474b9b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "329cefdd-01a8-4868-b341-d0cda91a0e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246aba22-e522-4b07-a59a-0839fb81647a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a35731f-1e3a-46cd-a004-f722f0fc71b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "50f0fd9d-8d7b-4af1-b82f-9b8a3792a221",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e98e238-8732-442f-92f4-49b0b7a1da1d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfff9e0c-0630-4c7b-9d53-8ed510ee4fca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a305bae5-c8ad-4f36-a29b-2b3e0e3b8402"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c237f73d-d629-4b70-a563-7bd3dc46e944",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d966fe44-5fd4-48c3-8b68-3afe904e4634"
                    }
                  }
                ]
              },
              {
                "id": "5aece746-7c42-4f6b-a1e1-4849841ca0ed",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c76c368-a867-47e0-9ec9-8aad9abeb909",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eac8f0d4-81d6-48d3-88ff-7161693ef4f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c92720d7-93f8-4e48-89f4-ce38358bb29c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f19c5fb1-46bc-42b6-8cbf-c550c1a0aa08"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ff9f683-b6be-4da8-99f4-a3465eb97f5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "543f2dac-acba-497a-a5e3-26702505a500"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f309d77-0490-4567-948e-79394bee24cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "673d62d3-5c58-4aef-af6f-6e1cffd3ebfd"
            }
          }
        ]
      },
      {
        "id": "c76df8b7-fae4-4614-8b1c-c62315ce4c78",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ed1420b6-0cb6-4656-a1e3-bf537de8bbe6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "517e8c6f-1b0e-4427-8951-fbec2ff86505",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31de08cf-c7e4-4249-a2b7-de3a4bf5df1f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d38d5e1-bfc6-4e41-bf85-fa34d69ec24d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "57fa826d-3299-4405-a4e6-40218bb64793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc088172-02ec-462e-959a-40fc2f639187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cd3e569-df64-48f3-96f4-bb39a2dfab15"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80caf8d9-ab16-46aa-b56e-18d33d784209",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3562f03d-e852-47cf-a79f-a1e3abdc3b49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3606b498-fdf8-4edf-b231-f5a4e7e9d4e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "437bb5cf-e94d-4cf9-8c4c-b7f0457f49a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "359a416b-8601-4391-b507-4487595139fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d538cc83-3719-4e37-afce-100c1fb7550f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0352e3e-1576-4a5c-8ca9-729bb26ff34f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c8ebe82-ea9c-49f1-8948-43121b0649de"
            }
          }
        ]
      },
      {
        "id": "447ef8b7-6667-47c6-9e3a-5caba5db42b7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c13d4a59-e007-4256-9df9-f5cdafaef8e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5cc417bc-090e-4538-aefe-6987ddd031a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5518d932-ef27-41b1-9ce8-f4b02e5f508a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36f342a-3b2c-41a7-a4c9-14ebd0168a3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c9a2985-ccc4-4288-a8e9-07a9e181f792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855c0677-a446-4d61-b628-cf45f61d0d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e326551-7884-4c91-bdf7-34908a49c1ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "461ae349-6dcf-4cab-afcd-47bd617e3be7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b365d309-0d3c-4c1d-be10-12d5fd3092a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "405da6ea-aa84-4590-b40e-1e80e14f5f9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bd98d1f-0b0b-4358-8a02-43126e0bd96f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d03d9928-5604-4d13-a19b-2f3b8a903a01",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4377cb9b-836f-4038-94cb-4eb27c516fe2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ef8e49b-d58e-4315-8763-15277c30f723",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0b1121d-0e52-45b3-b923-171f89886993"
            }
          }
        ]
      },
      {
        "id": "b50fd9f4-e1de-485e-bd00-75c189dd558f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "961476a6-e571-4eef-b6d8-aeae938d211d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c70c7112-0e10-4f31-a115-a0c8c6d47ab0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "afd9f913-11d9-4841-a249-a8cf7eae2328",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a148dcec-041a-4077-a073-fba467977390",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29aa4299-fc30-448f-a647-5bb826fcae12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a2232e-ec57-4447-bc12-bb30056a1427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a19da085-f2e0-4bc2-b0b0-ca5fa73adae1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfc6c940-907c-4adf-a8f7-afb1a9b34adf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7bf8b6a-2d07-459f-b3fe-185645357cb4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdd22753-6515-4171-a100-8229c3a074c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b790a4de-b28b-4b35-9169-34c868e1f272"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b60cceeb-3574-4009-b7ad-e59adc649f60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1554d207-41ba-4a6f-8685-1ce28fe813fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03c7ccfa-f7d1-473f-81e3-09ead0a7f68b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a59b669-21d7-4f99-ac99-021ecb438e73"
            }
          }
        ]
      },
      {
        "id": "85f9f259-531d-4f72-8106-3a5776235427",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61ced93c-7ab9-42c2-bc61-bcd481e26c20",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3156456c-a08e-4871-a187-2bd8ad364f81",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b2afbf96-e368-4878-a06c-c2eb895ccf5d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba20e8c9-c215-4d40-837f-d6f46d979bc3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed7c266e-4209-47e1-8828-f0bffc577a85",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 119.6385964912281,
      "responseMin": 6,
      "responseMax": 5065,
      "responseSd": 396.31759272051534,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705710959675,
      "completed": 1705711003245
    },
    "executions": [
      {
        "id": "f44d96d0-54c3-4218-8c63-4bec2d3cbf98",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1bee689e-7f7d-42d2-82f8-d4428bff9942",
          "httpRequestId": "d5dc3a08-c80e-472c-a2e7-e94b1585c57d"
        },
        "item": {
          "id": "f44d96d0-54c3-4218-8c63-4bec2d3cbf98",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "07365132-de25-4510-b19a-f5b6104a416f",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "44c89f61-4304-4b86-86ee-9e21165b813c",
        "cursor": {
          "ref": "f117fa01-c1a9-4f53-bde9-687b9535cc80",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cd963b15-03c0-4119-9e9e-8431cd85fd01"
        },
        "item": {
          "id": "44c89f61-4304-4b86-86ee-9e21165b813c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6f515eaa-f005-400e-afdf-5ac53fe51997",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "cb3ccc48-b7b1-4765-a216-5826cf1e1eb3",
        "cursor": {
          "ref": "85a94a8c-196e-4537-a140-fabe4bea4612",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "37f62242-076c-4864-91ed-e628c9753302"
        },
        "item": {
          "id": "cb3ccc48-b7b1-4765-a216-5826cf1e1eb3",
          "name": "did_json"
        },
        "response": {
          "id": "5e6518ff-8fbe-4da1-8f27-0b9d9e9ca3f3",
          "status": "OK",
          "code": 200,
          "responseTime": 267,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27868004-7546-46c3-9eed-83b4081ca65d",
        "cursor": {
          "ref": "5e2e849e-ea0b-4195-8ab0-1d5fa11398af",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fc8afecc-0c2d-4244-9a9a-6f699bd42c13"
        },
        "item": {
          "id": "27868004-7546-46c3-9eed-83b4081ca65d",
          "name": "did:invalid"
        },
        "response": {
          "id": "cecaaecf-9457-41bd-9e3e-ade303d43fbd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 948,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27868004-7546-46c3-9eed-83b4081ca65d",
        "cursor": {
          "ref": "5e2e849e-ea0b-4195-8ab0-1d5fa11398af",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fc8afecc-0c2d-4244-9a9a-6f699bd42c13"
        },
        "item": {
          "id": "27868004-7546-46c3-9eed-83b4081ca65d",
          "name": "did:invalid"
        },
        "response": {
          "id": "cecaaecf-9457-41bd-9e3e-ade303d43fbd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 948,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d174b91-0bee-4209-b5d8-ddeeafba32f8",
        "cursor": {
          "ref": "8e2da085-c154-4f0f-8f71-88909ccc483e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "84bab0b1-8d57-4f1b-b60c-e6dee1e1ee38"
        },
        "item": {
          "id": "9d174b91-0bee-4209-b5d8-ddeeafba32f8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e69494e3-9450-4044-841a-9cd1b6d5ee69",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8d0355-ed3f-42a8-b6ab-7ef5059d9b5c",
        "cursor": {
          "ref": "ea01d2dd-7361-41d5-ac00-698175b8ff0a",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3247c4b9-512a-49d3-83de-f0864c9be6bc"
        },
        "item": {
          "id": "ae8d0355-ed3f-42a8-b6ab-7ef5059d9b5c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c0febf1f-7a15-4bf6-8fd1-130a5d91b4cc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189232a8-b68c-4a27-9766-3fdaf88bc403",
        "cursor": {
          "ref": "1c68fcd0-fa9f-4963-abf8-11e684a76765",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3ab69993-7e06-4067-a582-22009d81bf50"
        },
        "item": {
          "id": "189232a8-b68c-4a27-9766-3fdaf88bc403",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "eb770464-c550-4df6-b8a4-8aa4e9fc3d82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7b4895-bd7f-460e-8aff-7fbf46ce2ca8",
        "cursor": {
          "ref": "2a022f06-8951-41f3-911c-7996711604bf",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ec8e9993-08c6-4694-a54f-57cce0f250fa"
        },
        "item": {
          "id": "3e7b4895-bd7f-460e-8aff-7fbf46ce2ca8",
          "name": "identifiers"
        },
        "response": {
          "id": "d9816db5-fe26-4994-96bf-ef723bdfe0b0",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21cf223-3993-4403-ae52-409aabffe464",
        "cursor": {
          "ref": "ced34eac-4d81-4ad1-8dae-3012e653e000",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2210b96a-4c94-4fc7-918b-3f4036855e57"
        },
        "item": {
          "id": "f21cf223-3993-4403-ae52-409aabffe464",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "907d001f-190d-447e-8034-171be5bcc3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38a5b18-26e1-42f1-8d4e-099551b31e77",
        "cursor": {
          "ref": "6497797a-c716-4731-9697-58222625304b",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "20d800ff-6683-440b-9935-b9315e2d1667"
        },
        "item": {
          "id": "a38a5b18-26e1-42f1-8d4e-099551b31e77",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bf84ef52-b491-476c-b10d-ed2a70eb7299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0536422-3237-4293-94c1-a60465b30f3a",
        "cursor": {
          "ref": "57b15e1c-21e0-4ec8-b987-5ca30701cd72",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4cd3bdb5-11b9-4345-bf8a-323e1629603e"
        },
        "item": {
          "id": "a0536422-3237-4293-94c1-a60465b30f3a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5d013f2b-b7ba-49af-9272-58308cdf96b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc6b36c-5acb-425d-ab8a-aad742ae64bf",
        "cursor": {
          "ref": "dd7cc2bb-620b-481c-af69-d211757daecd",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "26655baa-f74e-445d-8f8c-3239a33bed08"
        },
        "item": {
          "id": "3fc6b36c-5acb-425d-ab8a-aad742ae64bf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "083964c2-9f86-4c36-a40e-874c012ec0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6230614-9312-4388-9a27-2eab94b32123",
        "cursor": {
          "ref": "46d222a1-8249-41d4-8996-a2c110d8ad04",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0a15ece6-da2b-487b-833d-dac5ceafa6ef"
        },
        "item": {
          "id": "d6230614-9312-4388-9a27-2eab94b32123",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "67db28b4-c3d8-4879-99a0-41ea16ae9c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fc4d7c-06f8-4719-8299-8064c04dd2e8",
        "cursor": {
          "ref": "10dd891b-a08f-4266-ada5-964ff54b5058",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d1c593c1-4b35-4543-89c0-5fafa097b393"
        },
        "item": {
          "id": "54fc4d7c-06f8-4719-8299-8064c04dd2e8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "92247728-a6c1-48c4-8f36-c1406bccf7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a536a4a9-99a8-4467-a74d-43a91341e3c1",
        "cursor": {
          "ref": "4f7783e6-57f3-4fc6-b02e-b4996ce7df9d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "200b2c44-1307-475b-8678-1d564640e073"
        },
        "item": {
          "id": "a536a4a9-99a8-4467-a74d-43a91341e3c1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2ae40fe2-4af5-4163-801a-215be6c87bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195e3dd9-ac07-492e-81fe-7b306624c16e",
        "cursor": {
          "ref": "fbd81063-9c30-45f9-b513-c07b9892473e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f2e944e3-7602-40a2-a1ae-dd91b5d97565"
        },
        "item": {
          "id": "195e3dd9-ac07-492e-81fe-7b306624c16e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b02c0ac1-62cd-4177-b6f5-855ac3a4ea38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2aca4c-b624-4b67-baa0-0b61e6cbf722",
        "cursor": {
          "ref": "d227036c-0d38-41f0-86b4-c81f3921f99c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9a060b65-0ea0-4319-8c12-67a49470a2eb"
        },
        "item": {
          "id": "4a2aca4c-b624-4b67-baa0-0b61e6cbf722",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e883a9e1-722d-43f8-90cc-6c20901c3d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b88164-6a98-4d09-98c8-0cc07988545a",
        "cursor": {
          "ref": "bb9fda79-56aa-422c-9edf-2c885f4308e7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "50e7514d-0b93-4c6e-8368-01435382bf81"
        },
        "item": {
          "id": "51b88164-6a98-4d09-98c8-0cc07988545a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "10007c72-0b7a-4847-8350-e88fa5a4fd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d32b52-249c-4915-88c0-bfff72c11e51",
        "cursor": {
          "ref": "4efa5d94-610f-4dc9-8b3a-6c935bf39e9e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6dc115da-d877-404a-ad31-65d1cf2febf7"
        },
        "item": {
          "id": "91d32b52-249c-4915-88c0-bfff72c11e51",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "21e57c93-7f9d-4e52-8ef7-35e752b95c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db912e4d-2f67-44a6-9220-33055c77e051",
        "cursor": {
          "ref": "bd08378c-e620-4ba7-b50e-9d00f2e3167b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bf7ae9fc-0b9f-4743-8ce8-6d9f9f4ef1c0"
        },
        "item": {
          "id": "db912e4d-2f67-44a6-9220-33055c77e051",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b00ff88f-0ac6-476e-88e7-a6f9e7e0b19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd8c431-8408-40e8-8898-9c90375ecb34",
        "cursor": {
          "ref": "dc3c8b69-353e-406a-8193-89bb9079be2c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1ee5b5ec-9d40-47b8-85a8-46cdbe0f771c"
        },
        "item": {
          "id": "5fd8c431-8408-40e8-8898-9c90375ecb34",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fc92eb0c-50f4-42eb-b14d-47b08377e1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a49a801-5d82-4692-a325-98014e17ffa2",
        "cursor": {
          "ref": "eff734ae-f302-4990-87be-e5fa418b06d2",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "78b527f1-9ef9-4ae9-a385-26b35f1329ac"
        },
        "item": {
          "id": "4a49a801-5d82-4692-a325-98014e17ffa2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e191280d-e88f-4222-9667-d5222139ab79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a38e9c-bcd5-4018-9252-eecbbc8ca4fa",
        "cursor": {
          "ref": "16b775d6-4304-4850-89cc-ac4e2c55f250",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c228bf47-de08-4042-a7c0-f8b45793e131"
        },
        "item": {
          "id": "65a38e9c-bcd5-4018-9252-eecbbc8ca4fa",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c61c5cb1-93f8-43fa-803b-1c45f68bb799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40405bd2-f7e8-4c9c-8da1-b04c2eb2883e",
        "cursor": {
          "ref": "1c160b77-98c9-44c4-9e85-9cefd20fa974",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8f0e52e6-5bd4-4ea9-af52-b977df33d5bb"
        },
        "item": {
          "id": "40405bd2-f7e8-4c9c-8da1-b04c2eb2883e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4df31596-f314-4f7d-a6d8-0ca9a9f300af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb80d0fe-c64d-46bf-8ad8-b192161cd3e8",
        "cursor": {
          "ref": "afa0c977-62d9-4ff3-9106-ffb30240fbbc",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b4d35dbe-e7f3-491a-9ab2-6d3e95c81b35"
        },
        "item": {
          "id": "cb80d0fe-c64d-46bf-8ad8-b192161cd3e8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "89fdc4af-1c76-45fd-b254-b7f293904267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c49f855-3526-4581-b630-56103f4f0abd",
        "cursor": {
          "ref": "caa05ae9-b363-43bf-8c74-a312adb0a0ee",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0f16bffd-6f3c-49dc-adaa-9d11497b0a37"
        },
        "item": {
          "id": "6c49f855-3526-4581-b630-56103f4f0abd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "24af2c7f-dd3b-42b3-bff2-47649ac758c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7914275e-059a-475d-95ae-937b5478ad2d",
        "cursor": {
          "ref": "6899f9e3-2c69-40a6-b056-1ae7f5d13c4e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "65d1b8d2-99dd-4f90-b822-234cec00de48"
        },
        "item": {
          "id": "7914275e-059a-475d-95ae-937b5478ad2d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b3d99b26-67d2-43a2-80b1-100da271ee33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138109d2-b2f2-40ec-af5c-2cea3d0ce064",
        "cursor": {
          "ref": "5b6dfe48-ce63-4335-91d3-ad547982dab3",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1daa40ba-72f1-4b6f-9059-5bf514a629d4"
        },
        "item": {
          "id": "138109d2-b2f2-40ec-af5c-2cea3d0ce064",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "def85b53-c739-4b98-8658-7823b877b464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce8bfdb-1654-4c97-a708-5a52104bbe82",
        "cursor": {
          "ref": "c40b061f-94b7-4a75-8b33-2a6c30cabecd",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "28e24dee-d12e-4642-a796-e9ccf2a6f959"
        },
        "item": {
          "id": "1ce8bfdb-1654-4c97-a708-5a52104bbe82",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ae598cad-6979-45ac-b61a-2207259836c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae58ffbf-41ce-47de-943f-d18f04dc60c7",
        "cursor": {
          "ref": "39e4972d-fb8e-48d9-a2dc-e97f83018f73",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "af24c00c-5a20-47f7-b4a4-75a12706f944"
        },
        "item": {
          "id": "ae58ffbf-41ce-47de-943f-d18f04dc60c7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "70c7614e-39b4-43c8-9f3a-cc7eda3a7297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd568e18-abc1-46a4-9a56-22f591f8fe41",
        "cursor": {
          "ref": "a0ed3242-949a-491d-8ba2-094f01ed37db",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "13588d74-421d-454a-8103-65e1a9b5054e"
        },
        "item": {
          "id": "fd568e18-abc1-46a4-9a56-22f591f8fe41",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d0a4f619-3faa-41ae-a345-5fd01777a4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52f03e5-f39e-4a48-98cd-e95cc0a70c49",
        "cursor": {
          "ref": "c5fa395c-7081-4b88-9e03-4887c01bf83f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "69d26a7d-a829-4078-8060-528ec8a79281"
        },
        "item": {
          "id": "d52f03e5-f39e-4a48-98cd-e95cc0a70c49",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "82ce373e-f2f9-4c9f-95c5-cfc235cf874b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615cb47f-4835-4e5f-a901-2c337832895b",
        "cursor": {
          "ref": "ee714164-0506-4a7a-a8b9-2b5acfae4da4",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b93fc172-11f2-4a3e-86fc-a5bf77d5847a"
        },
        "item": {
          "id": "615cb47f-4835-4e5f-a901-2c337832895b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6e52bdef-a26f-4e23-b8ec-9037da1ef5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b9b2bc-985a-4816-ad2e-20c267c6a8b8",
        "cursor": {
          "ref": "ee72048e-a964-47fc-af80-8f7b1388bbb7",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0603ebf8-191d-47b3-99db-b2b8e90199dc"
        },
        "item": {
          "id": "a0b9b2bc-985a-4816-ad2e-20c267c6a8b8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "894b7a03-6e5f-4be3-a97a-6276b61c5c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8f57be-70b2-4f18-8747-1e7c067b7825",
        "cursor": {
          "ref": "b0b9faad-022c-4441-9018-e9e229a22e11",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "180f1bb5-7604-4248-89df-c5ea116f0463"
        },
        "item": {
          "id": "fc8f57be-70b2-4f18-8747-1e7c067b7825",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1cac1e5a-39b7-449c-9f33-26fa9fdfd157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d678e7-378a-444c-a092-72577637063c",
        "cursor": {
          "ref": "36c35971-09d9-490e-ad31-7d69245c138d",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "65a06b35-d1a5-4fba-99ab-17d5a80f702d"
        },
        "item": {
          "id": "09d678e7-378a-444c-a092-72577637063c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4463c501-d110-4d9a-99c2-ee9117401e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c6dbaa-972c-48bc-b7f7-7a6a511e1fad",
        "cursor": {
          "ref": "a3c98670-5f21-418e-93f6-0dbbfdcb46db",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5200af49-1bd3-4265-a0a9-b7f387b80c0a"
        },
        "item": {
          "id": "f6c6dbaa-972c-48bc-b7f7-7a6a511e1fad",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "60aa8e6b-f6e0-46c6-96e6-a27243e87489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d02b7f7-89fa-451b-a4f6-c6e82583417f",
        "cursor": {
          "ref": "9989834f-ff2f-4931-a0f6-d59e4a121fe5",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "52f454f8-382a-46ba-a5e9-06e57e68507e"
        },
        "item": {
          "id": "7d02b7f7-89fa-451b-a4f6-c6e82583417f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "89c23dee-6971-48e6-b6aa-db2adbd556ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0250d81e-a91f-4eb1-a735-4552c20b1727",
        "cursor": {
          "ref": "8baef22c-678b-4660-a402-3ee6483f1e50",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ee73e570-d368-4a14-9db8-f28587343586"
        },
        "item": {
          "id": "0250d81e-a91f-4eb1-a735-4552c20b1727",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "175fce1b-5628-4f6a-aa05-0b22ade1a305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d5d464-327f-4496-8bad-755ffde5e955",
        "cursor": {
          "ref": "59cad205-acfd-4b46-bfc9-c9a983650da7",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0fb3a9f9-4559-4b1d-8852-cb6f186922d3"
        },
        "item": {
          "id": "09d5d464-327f-4496-8bad-755ffde5e955",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "268dde3c-7b89-4e61-9f33-f3add935dbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99296f8f-0a64-4791-8ccf-0d586dda445c",
        "cursor": {
          "ref": "5b4e773c-5438-4476-9c52-809e03201240",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cb4d5afc-cecc-42ee-9538-494d3234c2f3"
        },
        "item": {
          "id": "99296f8f-0a64-4791-8ccf-0d586dda445c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2f25f989-da9f-4d3c-9ce0-6d542dbee91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8487d68-c6e0-4b3e-b9c3-8caeaeab838b",
        "cursor": {
          "ref": "bec082e0-9172-4a04-8a29-5ef0a76b7117",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "189e48a5-65b5-4752-a405-7213db526ad7"
        },
        "item": {
          "id": "c8487d68-c6e0-4b3e-b9c3-8caeaeab838b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "300fa9d5-1659-43c1-b599-a2d2f905262e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c792049-7957-4e09-9264-ae6a794c9e98",
        "cursor": {
          "ref": "4b7f6281-96a4-4cea-9b45-a888e10bc9ef",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "729a88f2-a408-4526-bbf9-7a56b7571c9c"
        },
        "item": {
          "id": "0c792049-7957-4e09-9264-ae6a794c9e98",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a23cd848-ae03-4c03-a921-356138449146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b50f29-0a4f-4330-933a-30c3fca340e6",
        "cursor": {
          "ref": "4cea6ab4-7263-43e0-aedb-139ed97f622c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "08e31879-0fe7-4b4a-8503-ecd2604299ac"
        },
        "item": {
          "id": "a1b50f29-0a4f-4330-933a-30c3fca340e6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "55372331-6177-4aa8-b119-918d4ae9a7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dd0950-dbfe-4290-b3fd-51f0faff4bee",
        "cursor": {
          "ref": "e25f19c6-2769-42d0-85de-51a5b3bf91ce",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b8262b9b-9660-4db4-9884-17f5c2176bfe"
        },
        "item": {
          "id": "32dd0950-dbfe-4290-b3fd-51f0faff4bee",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a871a9df-6af0-4d0f-837d-21fd044e2336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15462145-58cd-4275-afb7-62cfc11c3339",
        "cursor": {
          "ref": "597efa37-0e05-4c17-b84d-4c9709c6663a",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b220dd79-f1b9-4a48-99b2-c32cc77a2afb"
        },
        "item": {
          "id": "15462145-58cd-4275-afb7-62cfc11c3339",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f551c719-f8ad-4767-b781-0d31d17ee2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c660398-073c-4cd8-b48b-005b845d10c0",
        "cursor": {
          "ref": "2c4a4e16-b599-4181-868c-9f73d755572d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b98cbccc-a9f6-4ecf-a43f-03e2fffa024f"
        },
        "item": {
          "id": "8c660398-073c-4cd8-b48b-005b845d10c0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ad111fdf-8442-4418-98ea-0576a280f22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1d81bd-2318-4e16-a3a9-476c8fd00436",
        "cursor": {
          "ref": "e9807e86-0b9b-40dc-943a-b93881ac8abd",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2c5350d2-d945-4409-9062-76d95ce54e3d"
        },
        "item": {
          "id": "8d1d81bd-2318-4e16-a3a9-476c8fd00436",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dfc44791-1379-457f-8fd6-78e344641f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bbc61e-e2cc-40d6-9cb9-75731107e6e8",
        "cursor": {
          "ref": "816f726e-e46b-4b80-8c42-8ab184ea697c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "64663739-390b-4497-b868-94d1f79cfd18"
        },
        "item": {
          "id": "b0bbc61e-e2cc-40d6-9cb9-75731107e6e8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e6772a34-6013-4d16-99ad-92bc658d46e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9500a6-4f7a-43e8-aeee-9163c1ef32bd",
        "cursor": {
          "ref": "384e4307-1eba-4694-80a5-79638fc6adb8",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "60ea444c-ea6c-4e2e-9ed4-f85471c709f9"
        },
        "item": {
          "id": "dc9500a6-4f7a-43e8-aeee-9163c1ef32bd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f60815df-5cdb-4bb0-a49e-dabb8303a861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b185c45-a038-4bc3-a368-b23cf62f3dca",
        "cursor": {
          "ref": "710f6fc5-e024-4661-9305-69ef6ae71f6c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f7a4a203-6e3a-42cb-8e9a-dfde630fc043"
        },
        "item": {
          "id": "5b185c45-a038-4bc3-a368-b23cf62f3dca",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "94a2bb44-61c1-47b2-bbbc-ed51819a5e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fe6490-6c2b-413f-89ee-35d88ef7d20f",
        "cursor": {
          "ref": "ea68aa67-94ae-49bc-bb86-3b35500ef1d8",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0ded0fb6-3d74-4dd1-b414-40292e0fa134"
        },
        "item": {
          "id": "56fe6490-6c2b-413f-89ee-35d88ef7d20f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ecbc48dd-141a-403c-a4bf-110b0af8a8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c565f8-8284-47b4-ab52-50c3c80059a5",
        "cursor": {
          "ref": "ad314955-3a03-4b33-8213-dac5948d18dc",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "34481451-2de3-4211-a287-2313c57e7c8e"
        },
        "item": {
          "id": "87c565f8-8284-47b4-ab52-50c3c80059a5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bdefacc9-9ff9-4fbf-9c80-9e1500e12a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd65cc9-7e8e-453e-a691-c72f864aa1fd",
        "cursor": {
          "ref": "d813209d-c33a-4622-ad6c-de5f2156ffd7",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "aca06ff9-7dbd-483e-856b-6606d3757982"
        },
        "item": {
          "id": "bbd65cc9-7e8e-453e-a691-c72f864aa1fd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5a732070-7878-4251-b2d2-16c64bf2449c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34e9cf9-3f58-4fa4-ae93-c8e54e06c566",
        "cursor": {
          "ref": "80d77e8c-c7ed-4370-9075-a3d16c89aa36",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dff047ed-9a21-4737-9b53-863374cdb0d9"
        },
        "item": {
          "id": "a34e9cf9-3f58-4fa4-ae93-c8e54e06c566",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ae583099-fc1c-4780-9228-3171868664f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1d7d0c-af69-47a2-96ba-050b98899089",
        "cursor": {
          "ref": "af2adf74-5625-45e3-97a9-1fd10dbce301",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8646ecf1-9d40-4a49-80be-757a39a7a3c1"
        },
        "item": {
          "id": "2d1d7d0c-af69-47a2-96ba-050b98899089",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "97afba09-d6f6-417f-87ec-75789afa56ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a05c3b-54ff-4e3f-bb98-0061aaf5aabf",
        "cursor": {
          "ref": "608df845-1b10-4086-ab36-2edd902076ec",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c5d6574e-31c2-493f-ad38-1388f24fd0b8"
        },
        "item": {
          "id": "c1a05c3b-54ff-4e3f-bb98-0061aaf5aabf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c3aa32a6-359d-4e59-8af2-912fef47d38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601e8fbb-c09f-45da-8c8a-0b13c58bdb33",
        "cursor": {
          "ref": "c2b5be51-62ec-4e48-bcd6-76125332e136",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b997d6d0-a853-47a0-83e2-68cc1c3bc791"
        },
        "item": {
          "id": "601e8fbb-c09f-45da-8c8a-0b13c58bdb33",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8c232b33-79d1-4a14-915b-2b9a49a056af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a797163-df57-477c-a53d-4f9eb7d10384",
        "cursor": {
          "ref": "6f547d9e-84a8-466d-8e95-dd00d9ce63f9",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1b0a85b4-039a-420d-b2b4-0356db69a609"
        },
        "item": {
          "id": "6a797163-df57-477c-a53d-4f9eb7d10384",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5aac9fa4-e273-4922-825c-c71bba3304ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7d30ca-b7a0-4e16-9efe-9efad73a443e",
        "cursor": {
          "ref": "a92796d5-b808-4186-9da8-415030cbc12f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f40df7e1-f9ac-41fc-a7d1-b74624931ef5"
        },
        "item": {
          "id": "5d7d30ca-b7a0-4e16-9efe-9efad73a443e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0f28a893-5e17-427d-bac9-082d909c14de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7cf825-e79d-46e2-9f69-96189f7c6e9d",
        "cursor": {
          "ref": "57e72076-fa94-48fe-b19d-02bbffe8ce02",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "42bde264-2c31-4b11-b9e7-f37160aad7f9"
        },
        "item": {
          "id": "8e7cf825-e79d-46e2-9f69-96189f7c6e9d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0e039352-7f9a-48d3-8fa8-a5480ae151f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191288d9-f8d6-466b-8823-2864d040a558",
        "cursor": {
          "ref": "6f5d5b48-063a-4430-b54b-6ba42dc130a4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "00ce8690-4907-4ba8-a986-5434b621080e"
        },
        "item": {
          "id": "191288d9-f8d6-466b-8823-2864d040a558",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "677df787-4a91-476c-9b93-7032ef1d4e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ec1ab9-4a16-4186-b233-652c6b42033d",
        "cursor": {
          "ref": "a8dc95da-213b-493f-aacf-7f10973cdbc8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "be4e2857-7806-40a6-9204-236e10489e8d"
        },
        "item": {
          "id": "b8ec1ab9-4a16-4186-b233-652c6b42033d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9f19ad81-77ea-4164-838b-b875c5eba55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404963d2-5db3-459e-851f-125d30584ddc",
        "cursor": {
          "ref": "df5b6d82-c38d-4363-89f3-2782248e828a",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f09f09f2-13f5-45a9-8b26-327257ee3c96"
        },
        "item": {
          "id": "404963d2-5db3-459e-851f-125d30584ddc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "799f47ec-3099-436e-9514-8eafb545c510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faff22b2-449b-4cb3-bdda-406b1006e302",
        "cursor": {
          "ref": "c921a3b9-16a1-4729-9041-d98415f58d39",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "26a8965d-cacb-4f90-a44d-3ad4569b0361"
        },
        "item": {
          "id": "faff22b2-449b-4cb3-bdda-406b1006e302",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5445d25c-ecb2-498e-b12c-0dc0b212716c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80160eb-b56d-43f1-a149-52abf4ef6b78",
        "cursor": {
          "ref": "7046820e-c456-4c40-962a-df8fb16193c9",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8e63fd31-753f-484a-b3d5-37ca0833f5ad"
        },
        "item": {
          "id": "f80160eb-b56d-43f1-a149-52abf4ef6b78",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2fefe4f3-c19b-41df-9aaa-a5ce5b3d65ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43023d44-c2d0-488e-80bc-872f79ac49ae",
        "cursor": {
          "ref": "59bd17dc-699a-4308-b102-ee4cf994a4a0",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "18be1a80-98fe-4c44-8164-784bc694e061"
        },
        "item": {
          "id": "43023d44-c2d0-488e-80bc-872f79ac49ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "76575271-6fa3-4090-b176-99667839c175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1693beb2-ed97-464a-bbbf-8d8806fa4db8",
        "cursor": {
          "ref": "a0461d21-be1b-496d-8c6f-5beec5cc2d1a",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6a56b01c-5801-42aa-9f4b-c12977d0eec9"
        },
        "item": {
          "id": "1693beb2-ed97-464a-bbbf-8d8806fa4db8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "acb33bab-9b9c-4c50-a188-a4e0b62fd97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b66ced-ea25-4397-929e-6f16c73343d1",
        "cursor": {
          "ref": "5ace6967-76f5-4696-a399-424f9e669d93",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7e3f663d-4ca4-4380-858a-70c30cdf7230"
        },
        "item": {
          "id": "12b66ced-ea25-4397-929e-6f16c73343d1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "81f679b1-d55b-4367-b9e0-1221d3cb3699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607e233a-7602-457d-ae3c-0d8958cd2f4f",
        "cursor": {
          "ref": "388cfac5-888c-471c-b127-3d9004e94ff0",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dc67cbf7-cee4-465c-b765-70220c22bf13"
        },
        "item": {
          "id": "607e233a-7602-457d-ae3c-0d8958cd2f4f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "66c37c7e-d031-4151-a699-032b6ea93eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8aa2de-f25b-4de8-be80-dfb88d002023",
        "cursor": {
          "ref": "3100513b-7763-4002-9394-4fb827a36ee1",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "86052373-7094-46e8-b4f6-c7459758c6c7"
        },
        "item": {
          "id": "ed8aa2de-f25b-4de8-be80-dfb88d002023",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fc256c10-0c96-4c24-a5e8-c5dc471b03bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dfe8a7-a432-4ec3-b19c-3ad5e1a581c1",
        "cursor": {
          "ref": "1c82b4bf-bbfd-422f-a67f-32979315dbe8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "df350b6e-233c-434e-8d15-66d2f68d8076"
        },
        "item": {
          "id": "38dfe8a7-a432-4ec3-b19c-3ad5e1a581c1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ee610fbc-124a-4895-b8c0-60425c4ae290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3ca457-287e-49f4-8d18-a8f43e51c144",
        "cursor": {
          "ref": "efb4f1c0-5bcb-4793-aa86-73d72e5d4a8c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8a837ac1-9668-41ea-8e9d-29ed8f7789cc"
        },
        "item": {
          "id": "db3ca457-287e-49f4-8d18-a8f43e51c144",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a9a5b2e4-22d2-499e-a06f-1473632ff6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e60c624-80c1-4636-82c2-2877d5aeeec4",
        "cursor": {
          "ref": "81369d9c-b108-45a9-84f5-6eff7121c41e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4cf00dbe-e325-4fff-a088-c1b61f72d884"
        },
        "item": {
          "id": "4e60c624-80c1-4636-82c2-2877d5aeeec4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "84acb763-dd82-4f99-92bd-2ee4df4ab29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854b9afa-abac-4f81-8813-231881203495",
        "cursor": {
          "ref": "585ceab7-7bdd-4cb7-a680-3faff935e23a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2b7db603-d8ed-4459-b3f2-81deec8ed0c5"
        },
        "item": {
          "id": "854b9afa-abac-4f81-8813-231881203495",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7820ad73-6548-444c-bce0-785265cd912d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437ab337-f99e-4090-9cb6-6df1a41b85b6",
        "cursor": {
          "ref": "d358cbdb-c5a8-478d-a58a-cb93c84670fa",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "62a07aee-1e44-438a-b2b8-a2ad64320137"
        },
        "item": {
          "id": "437ab337-f99e-4090-9cb6-6df1a41b85b6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4b8a48a2-f08f-40b4-9c43-f3add7c41452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d982c80-46d5-4a92-9f04-feda9bf1d07a",
        "cursor": {
          "ref": "c091b38a-7504-42b5-aa9b-6fdc4a319e8d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "35e57b13-4b06-45d8-b5b3-6e1ed6a22ba2"
        },
        "item": {
          "id": "3d982c80-46d5-4a92-9f04-feda9bf1d07a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "04851ab6-518e-4bbf-b86e-933b7fe3dd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab6606b-babf-44ec-9510-3919f48010c7",
        "cursor": {
          "ref": "7551e264-a1c3-4444-91bc-344be0f15c7a",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "160c09b9-882e-42b0-85ba-9d2c62433601"
        },
        "item": {
          "id": "2ab6606b-babf-44ec-9510-3919f48010c7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2e5cbb03-4986-4b41-8323-ca6f0dfa085c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4419a42d-3bfb-45e7-919a-0564e4bb270a",
        "cursor": {
          "ref": "c059e35f-b5cc-486a-a5e5-a493d4cb933d",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "175bb194-a75b-4fc4-8407-7ba921dfb38e"
        },
        "item": {
          "id": "4419a42d-3bfb-45e7-919a-0564e4bb270a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7f01b605-f164-4b0d-a303-2da251602763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdb0275-1712-4522-800c-165975331cfd",
        "cursor": {
          "ref": "598acb4f-c53e-43d6-a0a6-b44d27f8c5e0",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "561e4d0a-d67a-492a-a03b-d6217ded5044"
        },
        "item": {
          "id": "1bdb0275-1712-4522-800c-165975331cfd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3e4b527f-9f9e-4835-9e9a-10fa8f9477d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fc1933-a269-4b8d-8d42-4ea87ed5a45a",
        "cursor": {
          "ref": "d8bc04c9-e3b7-4fac-a24b-f091074eee83",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e9a3e4fc-ee73-462a-90de-a4c071d0f203"
        },
        "item": {
          "id": "b8fc1933-a269-4b8d-8d42-4ea87ed5a45a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "104c4212-6512-48ea-9fab-d81211d1855f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0606d66-6a80-45dc-bd89-740722555d4b",
        "cursor": {
          "ref": "61622011-f828-4890-a347-3e53fdb0fcfc",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1a7f66ac-18b1-4de5-ac58-486517863b4e"
        },
        "item": {
          "id": "e0606d66-6a80-45dc-bd89-740722555d4b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b9619418-d1f9-49f3-a875-a54a0a43b95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f5d175-1107-40e6-99eb-9bb31206efd8",
        "cursor": {
          "ref": "3d2e9411-63b6-4331-8f0d-22c5378fd4bd",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "52e50c1b-77aa-4f72-adbd-8c527bd75afa"
        },
        "item": {
          "id": "a1f5d175-1107-40e6-99eb-9bb31206efd8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7b993cfc-1f44-43c4-ba13-25345f1f6a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d366a2d-47c5-4dac-a9ce-c8967f6287e3",
        "cursor": {
          "ref": "c0e63eef-3b8e-4777-86a2-4844112cd7a0",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0a26b5ac-70ae-4dc8-bdc5-a9bcf7149021"
        },
        "item": {
          "id": "3d366a2d-47c5-4dac-a9ce-c8967f6287e3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4767adfc-d658-40d9-8dd4-ccd13519e051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1034,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4269d38f-5922-41bd-aa8d-84291c411c5c",
        "cursor": {
          "ref": "94fda9f2-2923-4789-88f1-f595be5df991",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8f964d77-e5ef-40cf-aacf-2ec51ba402a3"
        },
        "item": {
          "id": "4269d38f-5922-41bd-aa8d-84291c411c5c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0918858d-4691-408e-841b-3be4ccb86e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611aa7ab-1e0b-45e3-91e9-71b9936bded8",
        "cursor": {
          "ref": "73a20a64-3fed-4c9e-b6f7-7d77f2a37acd",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e8df5a98-a8a7-4970-b5d8-085e2c1cd59b"
        },
        "item": {
          "id": "611aa7ab-1e0b-45e3-91e9-71b9936bded8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6b6035a0-dc6c-46ce-ad48-8203799ba14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0cba9e-94b7-44bb-9694-2ba63f75c574",
        "cursor": {
          "ref": "38dd4f73-7e53-40ca-bef4-405a08a8beb9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ba0cfc97-47a5-4ce2-bedc-b46d5b023074"
        },
        "item": {
          "id": "ae0cba9e-94b7-44bb-9694-2ba63f75c574",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4f490aad-4390-43ec-b4b2-dab8b6e5295c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2962e66c-6334-46f8-8d1f-6cbd5e574fbd",
        "cursor": {
          "ref": "c285c2e4-f639-4977-a073-569721bf8d58",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e7127e54-c605-4fad-bc99-444fa7b8e2f4"
        },
        "item": {
          "id": "2962e66c-6334-46f8-8d1f-6cbd5e574fbd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2875b0d9-f1af-4baa-8e88-b5ebff8c1b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0639469c-0c83-49fe-a8e1-0d8ee3abd2ef",
        "cursor": {
          "ref": "a315c97c-f92c-4e07-8880-0c2771036bf5",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f986ec60-dbd1-4a9c-95b7-58a7223f3646"
        },
        "item": {
          "id": "0639469c-0c83-49fe-a8e1-0d8ee3abd2ef",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bce7e373-9465-404b-b2cb-fd9c25c1e84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52494a6-678e-42b1-abcb-f52213501903",
        "cursor": {
          "ref": "cbb9a73a-3ed1-4cf5-b9a8-816d352c6a7c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "659d5e0d-51ee-499d-9373-2bd6f0f7c241"
        },
        "item": {
          "id": "a52494a6-678e-42b1-abcb-f52213501903",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c0b89ee8-071c-42c0-92bc-78d929845ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0847f36e-6509-4887-b5b4-ca797bea7dc1",
        "cursor": {
          "ref": "d3b7d01e-dd2d-4053-8377-11dd8e8f5176",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "480f54dd-b6be-4bc3-ac6f-ff149b86cba1"
        },
        "item": {
          "id": "0847f36e-6509-4887-b5b4-ca797bea7dc1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "dfe1822b-7849-4015-912b-cd271079dded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94e5810-d346-4590-b34c-781ac4f0e7ed",
        "cursor": {
          "ref": "121b6359-ded0-4aa6-9b37-8c928f85d62d",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3fdd4a14-dda8-4499-8786-52cb90e12d54"
        },
        "item": {
          "id": "d94e5810-d346-4590-b34c-781ac4f0e7ed",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d5ecd767-f192-40af-ba71-68bd451c04db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2795822c-6d86-4c09-a528-602f09df4cdb",
        "cursor": {
          "ref": "98428914-10a1-41db-b0aa-1955b4b4487a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a54df305-b2c5-41f3-8724-c92e35858c18"
        },
        "item": {
          "id": "2795822c-6d86-4c09-a528-602f09df4cdb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ee1b7a64-981a-4ffb-a1a5-3326ca0df25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc248eab-ca15-43c6-a658-dc8bbd51425c",
        "cursor": {
          "ref": "7c640516-166a-4da0-be0d-38c63aac0181",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "23381877-ff06-4958-bf01-9fa8d925ac73"
        },
        "item": {
          "id": "fc248eab-ca15-43c6-a658-dc8bbd51425c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "146fad56-69bf-4502-8090-6b5906de592e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e458f68-bd4a-4eed-ac5e-81c972b9d33b",
        "cursor": {
          "ref": "4c34d0b3-73ff-403c-8ff0-3656c8fc12e6",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e235e562-ad73-406f-99c2-9474a94b6bc4"
        },
        "item": {
          "id": "8e458f68-bd4a-4eed-ac5e-81c972b9d33b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c8a7851a-b657-4bde-9b89-5a94538ad819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6df370-77df-4ee4-af9b-b78d8a9f015b",
        "cursor": {
          "ref": "050682fa-3ef8-4416-a83e-fe5f541ce0e9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ca1ea579-e45d-488b-be3b-d1125020a137"
        },
        "item": {
          "id": "fc6df370-77df-4ee4-af9b-b78d8a9f015b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ec1c37fa-a4d1-490a-b1e8-1f54a4dde5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e497ad-681a-410f-9245-49fdde7bf941",
        "cursor": {
          "ref": "25728ea6-51e8-4463-847b-706ee4ea11ea",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ca6352d8-3663-4249-b316-8dad1f70bf11"
        },
        "item": {
          "id": "d0e497ad-681a-410f-9245-49fdde7bf941",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f25ab5c3-66d6-4da7-9587-b032b7ec7395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ef9d48-0726-4155-a298-874f68fae8b0",
        "cursor": {
          "ref": "0bf4f55e-d223-4b20-87dc-e1d8b8d7bda0",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fc70d5ff-feef-4431-a0c4-6fa67bab3b73"
        },
        "item": {
          "id": "60ef9d48-0726-4155-a298-874f68fae8b0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "693374ff-0cee-4692-8ad3-22fe492c97a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5912d739-30d6-4cb2-964f-9466d57e16b4",
        "cursor": {
          "ref": "c875fc8c-0489-46d6-b86d-feade97e20a5",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5ea26d49-e5d3-4128-b7fd-0cce0a7a981f"
        },
        "item": {
          "id": "5912d739-30d6-4cb2-964f-9466d57e16b4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "db383cd3-886c-4ea7-8513-1ba5b8b41df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336e3f9a-f0c2-4783-afca-2ca0d41d4741",
        "cursor": {
          "ref": "58e5ea26-0a95-4f9c-a06c-6e49092ca9d0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ea14b374-9ee9-4e60-9ae1-7dd816318a84"
        },
        "item": {
          "id": "336e3f9a-f0c2-4783-afca-2ca0d41d4741",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0352b6ce-9fd2-400c-8fb5-ead26193f061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e41ca00-6bf2-4daa-adea-20cf9f9a85c0",
        "cursor": {
          "ref": "e08c5c0b-ec39-49f3-92fb-469ec2229b7f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3dacf165-ad72-4239-b00b-03bd01fed2f1"
        },
        "item": {
          "id": "3e41ca00-6bf2-4daa-adea-20cf9f9a85c0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3366ebf8-916a-415a-9c22-12e8f74e2d39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389e2424-9b2e-40f6-8ace-c7e8cebd7e55",
        "cursor": {
          "ref": "df763ed6-e7d5-4879-98d5-80635ecd554e",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1d8daad2-5853-4d09-a8ee-c0dc2f3b8d82"
        },
        "item": {
          "id": "389e2424-9b2e-40f6-8ace-c7e8cebd7e55",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "33485643-a3ec-4166-8078-18191484c7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "935b6854-de38-4f09-b15b-f06e5d007fcb",
        "cursor": {
          "ref": "a3fc35e2-dee7-4bef-b7ea-04557a52874d",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6f34076d-9611-41e5-8892-5b7a20f6b385"
        },
        "item": {
          "id": "935b6854-de38-4f09-b15b-f06e5d007fcb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6845ca50-c221-4b77-b30a-377e66b81c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "409f8e3c-7de1-43d9-9eff-e27dbb05f9cd",
        "cursor": {
          "ref": "101e5438-1d42-4dd0-b511-ee784f77f1d8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6419ce11-91d2-4dc7-bce6-7dc35e67d5ef"
        },
        "item": {
          "id": "409f8e3c-7de1-43d9-9eff-e27dbb05f9cd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1bd8e126-ef96-436d-a72d-852cafb32d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8a5d4af0-7050-42a0-8500-670c20183865",
        "cursor": {
          "ref": "05f9ad52-da59-4e5b-82ff-30dd94fe93fd",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d0e4dba1-baa8-4ece-8131-7a3104de4ce1"
        },
        "item": {
          "id": "8a5d4af0-7050-42a0-8500-670c20183865",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d1e2b9f9-e808-4167-9292-b56198557e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c65afa2a-b9d1-4ff8-b60d-32ef3827db00",
        "cursor": {
          "ref": "f4b2c81a-9979-4a8e-8c06-f3be126af16f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0e6b8706-1949-445b-8421-311e86fd19ea"
        },
        "item": {
          "id": "c65afa2a-b9d1-4ff8-b60d-32ef3827db00",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b01703e0-2451-4d89-a6c2-25d2e209f002",
          "status": "Created",
          "code": 201,
          "responseTime": 5065,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f3d089-fbdb-4706-9e78-b82d7f3906b5",
        "cursor": {
          "ref": "14d7fa62-2446-4933-99f2-e5c0b6cb5d0a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e5591398-87c4-4650-9438-18915d6293fd"
        },
        "item": {
          "id": "68f3d089-fbdb-4706-9e78-b82d7f3906b5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a1dd8ab0-6459-4e14-98f7-50adfc43fb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a58a95b5-4045-4b43-9e7c-f49744e00b63",
        "cursor": {
          "ref": "64984505-e1b7-45bf-88c6-cc8d3630ad5a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5ba9736f-8ae4-434e-a6ba-6b6c74222cce"
        },
        "item": {
          "id": "a58a95b5-4045-4b43-9e7c-f49744e00b63",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dccacfb3-da09-4b8d-ae54-0189493774cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7d4ea27a-e85a-4122-be93-d1851d89ce03",
        "cursor": {
          "ref": "27f127df-36c2-4309-9a9c-bcadc6aec3a6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "67c1ef55-90e0-48e0-afb6-2b3c4a9c2cf1"
        },
        "item": {
          "id": "7d4ea27a-e85a-4122-be93-d1851d89ce03",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "36e9da7b-86a7-4ad1-b63d-1436bec77b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6b0298-615a-488b-93d4-41e11c3fbae2",
        "cursor": {
          "ref": "153bf92f-931b-4773-b857-566e034c101d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f5f220e0-10a0-425c-a3ca-7ab31de9b8db"
        },
        "item": {
          "id": "0b6b0298-615a-488b-93d4-41e11c3fbae2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "af44c0fa-b27c-4b4b-bbc2-a2b2d658aa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a776eb-6f9f-4a53-95fa-9434095f054e",
        "cursor": {
          "ref": "18c8144a-f3b9-458f-aa71-ce938c5e37de",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9989f4ce-3e72-4b8c-b7c6-f79315f3a05e"
        },
        "item": {
          "id": "11a776eb-6f9f-4a53-95fa-9434095f054e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f9738fbe-ad53-4b69-80ce-33fab9879862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007dcf01-796d-4563-b1d9-4c07396f6b5e",
        "cursor": {
          "ref": "8fa7c36b-8659-4e11-ad53-62bf3a0334a7",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "37cdc4be-a2b4-4570-95b6-14f7a17b5847"
        },
        "item": {
          "id": "007dcf01-796d-4563-b1d9-4c07396f6b5e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "81bd6bfd-9dff-401a-8c32-4776fa9436a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac65f6c7-2b67-4054-bb44-f77819ecae69",
        "cursor": {
          "ref": "ae9571f4-3968-47a3-a756-be59f8c130ff",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b7fe41fc-ea5e-4157-8043-cff247f0c333"
        },
        "item": {
          "id": "ac65f6c7-2b67-4054-bb44-f77819ecae69",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "312a9715-e875-4a13-bd92-8320217f0eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225d7d21-2373-4488-beb1-651a7f1ca02d",
        "cursor": {
          "ref": "0841bbb6-8109-485f-a37f-63bd0f7b1af9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9599f3d9-64de-4224-b855-b17337c7ee3b"
        },
        "item": {
          "id": "225d7d21-2373-4488-beb1-651a7f1ca02d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "086b9216-b873-488b-9ef8-78870e77ff75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9543e06e-4705-405f-b001-448e19009962",
        "cursor": {
          "ref": "89038999-d2f6-497c-b691-783dda3ec075",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5a38ba6b-0abb-4399-9cd6-ff849b09e79e"
        },
        "item": {
          "id": "9543e06e-4705-405f-b001-448e19009962",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1ff61900-b5cc-4596-a56b-b8314ac91461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b592482-9cf5-46a6-a89b-4a1a515de4ae",
        "cursor": {
          "ref": "85ae2526-c7b8-4171-a5f1-fba02b53b3b4",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c663c970-1d97-47d6-8baf-638662a5cac5"
        },
        "item": {
          "id": "4b592482-9cf5-46a6-a89b-4a1a515de4ae",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6fad67bf-9796-47dd-a8ca-b934a1993c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fbfe38-ae2f-4f33-ae6d-e56227314080",
        "cursor": {
          "ref": "3e1c9add-b294-48bf-a243-d661fcd189dc",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c0e6a5dd-66eb-4bbc-a8b6-8592a55ed9e9"
        },
        "item": {
          "id": "19fbfe38-ae2f-4f33-ae6d-e56227314080",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d03e01ba-342d-4fed-80ec-aa6e0ec5e2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917f32fe-6598-4f4c-92dc-50c20a1212fe",
        "cursor": {
          "ref": "4145f93c-edd9-4e39-85ad-f1bc755fb1c5",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "61d52a28-d361-4046-bc9a-63aac2097686"
        },
        "item": {
          "id": "917f32fe-6598-4f4c-92dc-50c20a1212fe",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6171ffd8-17aa-4961-8170-fd5496e1075f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1d6a9f-30cb-4f55-b19a-1fc89cb42d12",
        "cursor": {
          "ref": "db38e644-52a6-4066-9de6-0b82b6ec2671",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3e124512-dfbc-40d6-9672-dbcfe65256fb"
        },
        "item": {
          "id": "1f1d6a9f-30cb-4f55-b19a-1fc89cb42d12",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9cd50e58-50f6-46a0-bcc4-5c7039a80b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c680a2ff-b233-41e8-af0c-7bffc30b26b3",
        "cursor": {
          "ref": "8f67cb35-164c-4d6a-a570-3dfa2b6c1448",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8fcdb654-32cf-4e98-9a2b-f2a544593f66"
        },
        "item": {
          "id": "c680a2ff-b233-41e8-af0c-7bffc30b26b3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a3c95c05-b809-414c-b34c-6be1ebfc5c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70874da-0c04-4aed-bba3-615b726d3a36",
        "cursor": {
          "ref": "3d8063af-f7a2-43e5-ad1e-6f66ec9224cb",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fa96bb58-869e-457f-8fd1-0ab646fb3851"
        },
        "item": {
          "id": "a70874da-0c04-4aed-bba3-615b726d3a36",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e4db4ba6-d9fb-4991-8943-337fcaef8f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfb2e19-1252-41fc-bbae-a365faa5d8c6",
        "cursor": {
          "ref": "10965988-54dd-496e-82c0-251251e6824c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "91d2fcee-a00d-4268-a05b-b876fc42df81"
        },
        "item": {
          "id": "ecfb2e19-1252-41fc-bbae-a365faa5d8c6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ac082199-d53d-4d44-9f57-6e619f6ca4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9b6a26-4964-4261-8671-bf0b0af5d53e",
        "cursor": {
          "ref": "43641228-665d-46d1-b663-fe04b584baf6",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2f57a186-9c80-4c4a-8d8d-2b0e455c9743"
        },
        "item": {
          "id": "4a9b6a26-4964-4261-8671-bf0b0af5d53e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e1a2ace7-5932-48d7-86a1-31570490a9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37cef57-e663-49f1-b5d4-ee83acf6832d",
        "cursor": {
          "ref": "dd640197-b3d9-477c-bea5-ad0fdf2bb8c7",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "78066342-8fb4-409b-86b2-c64cf52c1eb6"
        },
        "item": {
          "id": "c37cef57-e663-49f1-b5d4-ee83acf6832d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0d9ec365-4981-4426-89ea-c7b45c7794a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ee69a8-05a1-4d82-b799-a2c78326a158",
        "cursor": {
          "ref": "1f0e0488-8976-476a-a0c5-9f4b07204902",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ae9cc93b-c14b-4a6a-9355-fe0778e7ec35"
        },
        "item": {
          "id": "b4ee69a8-05a1-4d82-b799-a2c78326a158",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "264b4267-6542-410c-b8ed-4ed43a0e46ba",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "84f0d69d-c160-453d-b048-0664d1e86fe1",
        "cursor": {
          "ref": "98cdae04-2f83-4d0b-94e9-01bf6d9e90f4",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "74a21cdc-302a-407b-bb87-730614e8d72c"
        },
        "item": {
          "id": "84f0d69d-c160-453d-b048-0664d1e86fe1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c2947392-ad48-4726-86ba-7a2324b15615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b709cc7-4f8b-4911-b4e9-cd34b7500454",
        "cursor": {
          "ref": "bae55461-9a1f-42a3-96bc-07317edd0220",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ed781fc4-0fc0-4c45-ade1-81bbbf789336"
        },
        "item": {
          "id": "5b709cc7-4f8b-4911-b4e9-cd34b7500454",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d5786cc8-e507-464e-a959-a7a917961fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd28898-122f-461d-8f1d-a898f97280bc",
        "cursor": {
          "ref": "149e8ffb-ce0a-4de1-a917-402143b1d02a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "07cbc24c-9a98-49cf-8c06-3883a8c6268b"
        },
        "item": {
          "id": "fcd28898-122f-461d-8f1d-a898f97280bc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ff72ac1b-821f-4f60-93a5-cecf428b38df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca74f17-5e58-416c-aa16-9a540cd190c8",
        "cursor": {
          "ref": "423beae5-6033-4769-830a-a1efa4d97831",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5c74b689-2502-431f-8b52-17a2c7b6c7ff"
        },
        "item": {
          "id": "9ca74f17-5e58-416c-aa16-9a540cd190c8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "82809e77-8604-49ef-802d-c94f34835afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2748069-d470-4171-a43a-c8907c4218f7",
        "cursor": {
          "ref": "c06eafc7-f651-4964-ade6-993ded1c6d71",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "713d5ff7-c6c5-4494-9e03-94a07faf6d52"
        },
        "item": {
          "id": "e2748069-d470-4171-a43a-c8907c4218f7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "682023a1-073b-4512-9dad-3f63fc16537b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7ebdec-9029-41d1-869b-3c62b4b7e378",
        "cursor": {
          "ref": "ea69a19f-b9eb-4ff4-afbd-11c063dbfcc4",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c0205d4a-b697-4c95-92c7-ac129860bbf9"
        },
        "item": {
          "id": "2d7ebdec-9029-41d1-869b-3c62b4b7e378",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f24993b7-5add-41e8-8ed3-e01d6fd062f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda1e08c-7239-4be7-ba3c-0d77e476580d",
        "cursor": {
          "ref": "fe116897-f7c8-424d-bb9e-2c3405ba0550",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e3ad5eff-e514-4304-a69b-2d5086484512"
        },
        "item": {
          "id": "dda1e08c-7239-4be7-ba3c-0d77e476580d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b79956ad-f175-4ccb-9da5-5f2824eff838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7912415d-2ea3-4ab2-b391-22883e4c13f4",
        "cursor": {
          "ref": "4a238213-cdf7-4aa5-88b7-eeba3b4357c9",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6b3971d9-5116-4af6-8234-8f98cf8d642b"
        },
        "item": {
          "id": "7912415d-2ea3-4ab2-b391-22883e4c13f4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a4df9fbe-3c2b-4635-862d-16f6830f54cb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "ef1b88ff-0637-4461-9e97-bedf27b943bf",
        "cursor": {
          "ref": "014364cd-2b8f-4f73-85e9-7153d7a17832",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6c792198-c67f-42a0-b8c5-c11d285fd197"
        },
        "item": {
          "id": "ef1b88ff-0637-4461-9e97-bedf27b943bf",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fcab489c-6c95-475d-9001-dc0717474e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6a5eee-534f-49b7-bde2-95f58039ef6e",
        "cursor": {
          "ref": "fb6450db-859b-4634-9dd6-ac88d4b36b50",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "93e7aa5e-a0a1-4a59-8c08-dba0e1b4e03c"
        },
        "item": {
          "id": "ba6a5eee-534f-49b7-bde2-95f58039ef6e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "26c58ee6-271b-4a15-a5ae-9f6540bcdf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40439f6d-473c-48f4-9543-9755877fd5de",
        "cursor": {
          "ref": "7438b5ef-decc-4c51-8e38-d2261e8916b4",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d03566e2-b18e-42a0-b55f-353545acf54b"
        },
        "item": {
          "id": "40439f6d-473c-48f4-9543-9755877fd5de",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2f7562b3-2abc-4d62-8518-4c8c87bab87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffc2744-579b-4f5a-8a8d-f8aaea4f620e",
        "cursor": {
          "ref": "94a1fc18-39dc-4205-88d4-41fcb80bddf1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c990ea0d-0efa-420b-b98d-8cef5b7bbbe3"
        },
        "item": {
          "id": "5ffc2744-579b-4f5a-8a8d-f8aaea4f620e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e1447329-ba85-4903-8c4a-bff5ffc04270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb24980b-a77d-40ec-978e-9fca646188bd",
        "cursor": {
          "ref": "83a00964-8ef2-4c77-b6e3-47b9e2c64c80",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fb16f4f8-f744-4c17-867b-d0c5fe941b1a"
        },
        "item": {
          "id": "eb24980b-a77d-40ec-978e-9fca646188bd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "84db523b-e6fe-4c42-ab52-cd410ba3b275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b2acb7-a8a4-416c-b319-af90d89dc052",
        "cursor": {
          "ref": "e420e648-7a85-4afa-a4cb-06a9082a7ca3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c2b4dff5-b49a-40a6-9df9-334a97841ea3"
        },
        "item": {
          "id": "a5b2acb7-a8a4-416c-b319-af90d89dc052",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ca60201f-eebd-4f81-9efc-136d8a44eae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bdd8ef-0365-4198-8463-bf92d9b22f57",
        "cursor": {
          "ref": "fb2f10a1-b456-4cd7-8c1a-176f242fa287",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "92851aa4-a587-424f-b2e6-279b1b56df12"
        },
        "item": {
          "id": "c3bdd8ef-0365-4198-8463-bf92d9b22f57",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "beca3f34-b0ea-4359-aec8-4da71f793c39",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 108,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "26d4476c-9714-4210-8f62-a172ce62f0de",
        "cursor": {
          "ref": "e93c3349-69a5-4834-b33b-796bdb412675",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "51da2870-7b6d-4eec-a20c-17b195639f36"
        },
        "item": {
          "id": "26d4476c-9714-4210-8f62-a172ce62f0de",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "10d1cc18-9226-4ff6-9945-963073457c7c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de61693-8dfd-41db-a961-54c931dc3dba",
        "cursor": {
          "ref": "d0e83a13-c3fa-4cc0-8ca8-5f8ad426a996",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "66c0cfee-bd37-4a90-8d61-05a136377da4"
        },
        "item": {
          "id": "4de61693-8dfd-41db-a961-54c931dc3dba",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e379afb2-f156-4102-89d5-71be1917df33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5931fc41-ebb5-4e72-8653-26cc2d8edcdf",
        "cursor": {
          "ref": "d09e38de-c8b2-4626-abf9-cf439abe1fbc",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a5c6faaa-5259-4841-a0ed-2dcefc06f000"
        },
        "item": {
          "id": "5931fc41-ebb5-4e72-8653-26cc2d8edcdf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2d7bccb7-4d04-42d6-854b-946c2569b87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcd4c3e-5ad1-418b-9ba9-fdd45a0f8c94",
        "cursor": {
          "ref": "68062c9b-0582-4991-bbd4-7e3391b25312",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3eefd455-48f2-489e-98a7-502ab3c4f293"
        },
        "item": {
          "id": "cdcd4c3e-5ad1-418b-9ba9-fdd45a0f8c94",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dd327d2a-cc29-44f1-a6e4-dc77b8eb055c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31557629-1b19-43f3-8e35-b6a736129505",
        "cursor": {
          "ref": "a420e04d-d0f0-4452-8b57-b27ff74a4a20",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "823833d9-2318-4c30-8c83-344f40100036"
        },
        "item": {
          "id": "31557629-1b19-43f3-8e35-b6a736129505",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7a18f5ac-43e2-4431-a1ab-3afae24d2776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91327b8e-895a-4187-b96f-56a5054d2aee",
        "cursor": {
          "ref": "cebea2ad-6528-4231-bff3-dfbd7ea982eb",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "01fdbfa9-6948-4a05-885d-70ba0fa95732"
        },
        "item": {
          "id": "91327b8e-895a-4187-b96f-56a5054d2aee",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "66a3c7d0-59c7-48d7-b645-4a81cdeb4209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4c88c7-22c0-42e6-a2c5-f0a5efb6d58c",
        "cursor": {
          "ref": "3f5ecdcd-a4b6-48fa-b87e-b73bf528c618",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "aab80d3a-03a1-4e36-a08d-dcd30bd2797d"
        },
        "item": {
          "id": "fd4c88c7-22c0-42e6-a2c5-f0a5efb6d58c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "75e01173-01f6-401f-8465-36c35458f2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4cac97-9345-49c6-baf8-c6d325f1d6ec",
        "cursor": {
          "ref": "6674c0ed-4838-4499-82f4-079ff4c36a63",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cb746c8c-f155-4ae1-9fee-a9df1f2bb18e"
        },
        "item": {
          "id": "1c4cac97-9345-49c6-baf8-c6d325f1d6ec",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7534f5ea-d3e8-492d-94ad-9987c1cfb8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7637ffbd-ce89-4f12-9ac1-fc6917a9319d",
        "cursor": {
          "ref": "a952634f-2171-4537-a1c5-de901f1feac3",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9778e352-cac3-4d57-a217-09b5d03ee668"
        },
        "item": {
          "id": "7637ffbd-ce89-4f12-9ac1-fc6917a9319d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "94436fc5-60ec-4b7e-8766-101974e96f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be3483a-4410-4923-8560-d176b9c01b59",
        "cursor": {
          "ref": "40c2aecf-d173-41ea-9abd-cc486cee5ec7",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d126d819-627c-47ea-a29d-1bf5e696c5c1"
        },
        "item": {
          "id": "4be3483a-4410-4923-8560-d176b9c01b59",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5948b699-3306-4a89-bc45-e5dc16aa3512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8850b933-5ef2-42ff-87b7-66d6e4ae9af1",
        "cursor": {
          "ref": "cff6340b-19b3-4aeb-bc51-3283eb716091",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d04cf134-e4eb-4b41-b17d-f0abf579366d"
        },
        "item": {
          "id": "8850b933-5ef2-42ff-87b7-66d6e4ae9af1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "db4cda23-d74e-49a5-bbac-c061821a0b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3625b2db-61c4-403f-9a62-2ff4ec80f692",
        "cursor": {
          "ref": "a10d2680-ab52-445c-95e7-099d44e2fce9",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b1d6672e-03da-4ef3-84ed-bea604663bdd"
        },
        "item": {
          "id": "3625b2db-61c4-403f-9a62-2ff4ec80f692",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fe81cc47-6b64-4978-be24-81fe88cac6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6ff948-ecd7-4383-96f7-2769bdc0605c",
        "cursor": {
          "ref": "f10b74d7-eb98-443e-97bd-7a1ef41d014e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2a92e927-3b17-43d4-bcab-9cb563bb1fbc"
        },
        "item": {
          "id": "6e6ff948-ecd7-4383-96f7-2769bdc0605c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4a550d95-e41d-4b41-bc35-129901373dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff16dfca-34a2-4318-86be-3ee1aa798f06",
        "cursor": {
          "ref": "0a221e09-fec8-4597-9a40-6e0f77de4235",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2e26369c-071b-46a0-995b-4668a98d3feb"
        },
        "item": {
          "id": "ff16dfca-34a2-4318-86be-3ee1aa798f06",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5846f06b-d665-46c1-a7cb-c159baa8550e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26063a4-48ee-4a0c-9aec-f937b9d21d4a",
        "cursor": {
          "ref": "becaa33c-aef3-46e3-b1d9-4dce4876b48b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "db341bb7-23f0-472f-9105-24d1a327c136"
        },
        "item": {
          "id": "e26063a4-48ee-4a0c-9aec-f937b9d21d4a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "200e14b4-51fd-438c-a785-b26dbd9c11ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831a7e42-fe4e-44be-b0af-78147aad82cd",
        "cursor": {
          "ref": "28fe7f78-2514-4280-9ec4-e00cd872adc8",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a5a4e444-cce6-4454-a411-8acff2a2290c"
        },
        "item": {
          "id": "831a7e42-fe4e-44be-b0af-78147aad82cd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e4afa53f-49b0-42bb-9299-52021a532a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da1d67f-4887-46f8-b641-594e8b3d5a9e",
        "cursor": {
          "ref": "2f970a9b-4995-4dc6-9962-46cce019bdaa",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bb2198a4-6f02-4ef6-b438-9b1e6b57f4c8"
        },
        "item": {
          "id": "5da1d67f-4887-46f8-b641-594e8b3d5a9e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0d87e348-2f6b-49a1-a133-ed9c26668008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c774527-9000-4479-a29b-26f4b932ceb9",
        "cursor": {
          "ref": "ade99543-cfc0-4ab9-9df4-73a74e98152d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7d84b862-6edd-45eb-9eef-b4f87a1e8370"
        },
        "item": {
          "id": "4c774527-9000-4479-a29b-26f4b932ceb9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "52d7d44b-e981-46b9-bb92-aadc65e5ff63",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 185,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "4e1343a0-8a72-49b3-ba96-87bdbbee66d7",
        "cursor": {
          "ref": "de596338-5f59-44fb-802d-81acce45d445",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f543d035-4e18-435f-98fa-cfcbed208d6b"
        },
        "item": {
          "id": "4e1343a0-8a72-49b3-ba96-87bdbbee66d7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "80457c93-d5e9-40e4-b623-476553702fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46aca23-3567-45bf-ab16-2ee90c0bb51d",
        "cursor": {
          "ref": "d974d1e3-67dc-4337-80f0-d8ad5d48d152",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "61c89ee0-007a-459c-aded-b917bbdf15af"
        },
        "item": {
          "id": "a46aca23-3567-45bf-ab16-2ee90c0bb51d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7d2e2123-1fbc-43ab-bd8b-b7b4b99b249d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29751d60-0141-4dc5-948a-75561633b958",
        "cursor": {
          "ref": "f76c82d7-4b18-41a2-9ad3-c360cc9b2798",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "19263e01-c3b7-4d11-b8dd-e9bb760fd705"
        },
        "item": {
          "id": "29751d60-0141-4dc5-948a-75561633b958",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c14ad23c-88bc-4780-b2e8-2b78373e0962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a59092-9004-424b-9061-0bfb2e0e02ec",
        "cursor": {
          "ref": "a58107ae-a085-44ee-aa62-3c57424e0490",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "11ac91f4-6cb3-4dff-9019-349e77aa2b95"
        },
        "item": {
          "id": "b2a59092-9004-424b-9061-0bfb2e0e02ec",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ea42f6f8-9a29-4cf9-a1fb-aa69027c6281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16e7812-83ae-4b46-91e2-04ad58e1b828",
        "cursor": {
          "ref": "86f1cb4d-6be7-4946-809d-1af9e4f2b605",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5c2ec0b7-b060-4829-9bfe-937761349719"
        },
        "item": {
          "id": "a16e7812-83ae-4b46-91e2-04ad58e1b828",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2cfa1453-4767-4b28-b875-fe344cc86e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b773cb-7d5b-463d-b518-6d3f2385cb7d",
        "cursor": {
          "ref": "72f25253-6e5d-48b0-8f51-8b9ffcd7f94e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3b2563a4-c933-4574-b60f-3c2d45a60f84"
        },
        "item": {
          "id": "35b773cb-7d5b-463d-b518-6d3f2385cb7d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "66c7914b-7a02-441b-8af0-937cca51d67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce8f5b8-fa85-453d-8f2a-9fa79e8af76d",
        "cursor": {
          "ref": "d579b435-91c8-4235-9234-7ae49ccfa0cc",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2a7a5907-8b94-4e88-893a-78888d18b995"
        },
        "item": {
          "id": "dce8f5b8-fa85-453d-8f2a-9fa79e8af76d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "feb1be58-0418-4371-9c04-5c80cd1f0792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6afe693-5bef-4d63-98b2-57920a44eafc",
        "cursor": {
          "ref": "901b205b-27b2-41f9-b898-b16e95b953ff",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "00e079da-fc40-46ee-b490-23206c50b32e"
        },
        "item": {
          "id": "f6afe693-5bef-4d63-98b2-57920a44eafc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "21826648-295d-4d58-8412-ec04b965a5be",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "e0231544-7368-4617-8e10-7705c8e3591c",
        "cursor": {
          "ref": "8df38b4e-e7b3-40e2-bb0b-5879712a4a99",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "42dfe58a-5f83-4769-9599-65cb08b47afe"
        },
        "item": {
          "id": "e0231544-7368-4617-8e10-7705c8e3591c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4b56815c-60b4-4286-9fb3-a68aebec6fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f251c9c7-d05f-4bc9-85f3-448062009f86",
        "cursor": {
          "ref": "e47d6922-07e2-4c30-a24f-685126c25b71",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4294b4e6-6a08-4b19-af9e-78c6cecfae54"
        },
        "item": {
          "id": "f251c9c7-d05f-4bc9-85f3-448062009f86",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "38825ee7-c2f0-4c9a-9d29-ce5687ff3243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da79e8d5-3f9c-45bc-8ddd-77d548cf67b3",
        "cursor": {
          "ref": "29070dd1-2038-489d-897c-8db5a0414c2f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "264903fb-1a15-4e66-add4-c35fc648e089"
        },
        "item": {
          "id": "da79e8d5-3f9c-45bc-8ddd-77d548cf67b3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "50a60ba7-c7ac-4434-8075-9482aed840e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ec4729-fa3a-4c2a-a009-6f234f6bf965",
        "cursor": {
          "ref": "1f2d9152-e376-40bc-836f-ed757eabe9d7",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9f2ef3c5-9b48-4bb8-882d-7abd2c3ff2ab"
        },
        "item": {
          "id": "80ec4729-fa3a-4c2a-a009-6f234f6bf965",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1d23b352-98b4-47a7-af5c-993084ff2df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e5a221-4483-4d58-bc1f-975fb98c2dc7",
        "cursor": {
          "ref": "40637bec-c27f-40f7-a01b-527a70a17616",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "43870ba9-d9c0-41d6-9689-f47da70052f6"
        },
        "item": {
          "id": "44e5a221-4483-4d58-bc1f-975fb98c2dc7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7f1861a7-aa8e-4200-8e9c-c97906c517c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4d03c8-af76-40ee-a96d-05d81a759aa0",
        "cursor": {
          "ref": "d2f7b99e-fc87-4b30-ba4e-8906cd3f568f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "101c28b4-d6db-4956-8119-e7e247696b11"
        },
        "item": {
          "id": "2c4d03c8-af76-40ee-a96d-05d81a759aa0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "77a8ad76-6ca0-4430-abbb-7517a9e4915e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bbb0dd-aa86-4c4f-af2c-27e9473ca908",
        "cursor": {
          "ref": "5a564201-45c9-48f5-8487-5b3286f4433c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "63b4f6c2-59aa-4246-a9cf-271d993f5af6"
        },
        "item": {
          "id": "46bbb0dd-aa86-4c4f-af2c-27e9473ca908",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "84f3be97-4cf7-4ac3-9479-680091524bef",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "30c5d72c-74e6-4877-8dca-7cef8fc31332",
        "cursor": {
          "ref": "5309854e-5abb-4c64-8fe9-6938da55f4bc",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d4d4f8be-23d7-497d-ba2b-aeec557a5065"
        },
        "item": {
          "id": "30c5d72c-74e6-4877-8dca-7cef8fc31332",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c5bd3955-766d-4ec4-b06e-4f2a63bbe7d8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "b00fb597-e7b3-4781-b62b-695f7a2457ca",
        "cursor": {
          "ref": "3f2799b7-cf8c-4209-9184-d2d39963ba45",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "52faa997-9e6a-4d9a-8416-4a49090e4075"
        },
        "item": {
          "id": "b00fb597-e7b3-4781-b62b-695f7a2457ca",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "441db334-dad1-498d-97de-06a9c4dff9ca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "4c201bbb-70eb-4a56-be47-931440a7fb05",
        "cursor": {
          "ref": "8499cadf-8d66-4830-9d65-5a9926682f74",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "db62aa95-dff2-414c-873a-211f3f37a91e"
        },
        "item": {
          "id": "4c201bbb-70eb-4a56-be47-931440a7fb05",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8729d41c-941f-4b27-803d-02d7d7886640",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "44390dc6-3437-45f7-b6dd-cb3e4efc04a8",
        "cursor": {
          "ref": "d2944171-519d-4657-a5cc-fbada1874528",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f5defb88-14fd-4ee6-817c-9986699c51c9"
        },
        "item": {
          "id": "44390dc6-3437-45f7-b6dd-cb3e4efc04a8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "069db2b7-8216-4979-aa80-dd1f99683a8f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "308c1cb3-57bb-4860-845b-357f8d2fa334",
        "cursor": {
          "ref": "dc986ad3-7f94-4e73-963b-95030accb5fb",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ec8e8ae2-3fe8-4970-a445-4ad92f06483c"
        },
        "item": {
          "id": "308c1cb3-57bb-4860-845b-357f8d2fa334",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fecead0b-c941-41f3-b3e6-430784b6b5d2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "1aa53d4f-ac8b-40c6-856c-7dcae19b171c",
        "cursor": {
          "ref": "5658edfa-c0cf-4e91-8fb6-6421ae1212a2",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "caad0fea-eba8-4e74-97d9-de837dbce724"
        },
        "item": {
          "id": "1aa53d4f-ac8b-40c6-856c-7dcae19b171c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f6287898-323f-404e-a667-499b1ee498a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea2679f-6aa8-488d-a922-a6af74978cba",
        "cursor": {
          "ref": "bae424de-a3eb-48ac-a688-623821252e1a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "06cb754a-a09d-46dd-8874-9707e86d5f3c"
        },
        "item": {
          "id": "2ea2679f-6aa8-488d-a922-a6af74978cba",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "578b6428-cc0b-4b68-b1ca-6122992bd688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcd06c7-56fc-40c4-a2c8-43cb17be728a",
        "cursor": {
          "ref": "85d73e5b-6572-447c-90f6-1bf0299127ee",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "213e71c7-9d67-4e25-91db-3e3f8b478aeb"
        },
        "item": {
          "id": "4dcd06c7-56fc-40c4-a2c8-43cb17be728a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7004744d-880a-4d6d-a980-ead47d5cda22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78ed396-6c76-40ca-a77a-497bd38f5267",
        "cursor": {
          "ref": "d1f1adfc-1fa6-4bd4-9f53-22d99724df52",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f2977611-b5ab-499b-a2f8-2822c68d791d"
        },
        "item": {
          "id": "e78ed396-6c76-40ca-a77a-497bd38f5267",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b1262c7e-0cfd-45b1-b562-d1e8b6de0636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517df615-3088-4410-a6ce-1cf71b8b7e35",
        "cursor": {
          "ref": "ddf456ba-ce9d-46d1-b0ba-88b8df9e1a22",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6deb4383-6613-47d0-81bc-27ee1914f935"
        },
        "item": {
          "id": "517df615-3088-4410-a6ce-1cf71b8b7e35",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cfbc3699-9c24-4b34-80bd-e88f7a9991e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b712411f-0600-4e88-8848-33bd1dd0467c",
        "cursor": {
          "ref": "41f24092-0574-4260-a1f8-904ed0217592",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9d9010ef-b84e-4262-89f9-775c000637b1"
        },
        "item": {
          "id": "b712411f-0600-4e88-8848-33bd1dd0467c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f76a50a0-c87b-4792-a899-2cbf70b8e5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17a666c-56d8-403f-b0d3-664ef2492a7a",
        "cursor": {
          "ref": "2b09d079-c01f-4cd9-ae87-093500549a17",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6f7aac0c-39d2-4f8d-a8bf-c86e0f83f918"
        },
        "item": {
          "id": "b17a666c-56d8-403f-b0d3-664ef2492a7a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "20cfb586-33e7-4840-bee9-1e0a5cab76ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be3c23b-fcc7-4a82-8cd4-63d399c457ff",
        "cursor": {
          "ref": "8cc1fdc5-b96c-4645-a310-1a26ee2df6d2",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b9b0138d-171b-46df-a370-2d47a83c5b75"
        },
        "item": {
          "id": "8be3c23b-fcc7-4a82-8cd4-63d399c457ff",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "63f03915-0c1b-468f-98cd-7faa681f824c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fffc1b-1842-4717-8b28-dbce7413eab6",
        "cursor": {
          "ref": "6d9daee0-4b44-4e31-b454-6aa9f6edbbe4",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8c54d2e5-7692-4f7e-8356-736a031e05bf"
        },
        "item": {
          "id": "96fffc1b-1842-4717-8b28-dbce7413eab6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1591b717-a836-4b01-b182-460b451de9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2f8a62-915b-4018-967f-d53e5b76d68d",
        "cursor": {
          "ref": "3f5fd61d-c729-4b78-a5fa-8150271e9562",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "00d6710c-0702-45f1-8fa0-3fdb2af7556a"
        },
        "item": {
          "id": "4f2f8a62-915b-4018-967f-d53e5b76d68d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "63befa7f-8943-418e-aacf-594d0800f67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb2c47c-d04b-42bf-95bb-08ba3c935f7c",
        "cursor": {
          "ref": "5b6d1437-2939-4aca-92aa-e4eccefc2c04",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "27262a3d-39eb-4cf5-a148-f83d3aa3c8f7"
        },
        "item": {
          "id": "fcb2c47c-d04b-42bf-95bb-08ba3c935f7c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "37145e6e-3f31-417d-8d16-7fc86792bbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4345aa59-74d8-4467-9655-08abb4e0668d",
        "cursor": {
          "ref": "0f9b1763-f982-425a-bda8-8e5a1bc1b0f9",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b01b7c91-0189-4aff-8001-034e983117c9"
        },
        "item": {
          "id": "4345aa59-74d8-4467-9655-08abb4e0668d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a4c0439b-95f9-4c6d-93f8-7140916f5f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16663c71-e2e3-46d4-8846-f21f1f80df8e",
        "cursor": {
          "ref": "61eebdf6-6b21-4ec7-b1f5-597c7a43b45a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "27375370-e7fa-45b3-abc5-5d1fa57b92c8"
        },
        "item": {
          "id": "16663c71-e2e3-46d4-8846-f21f1f80df8e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7229917c-7601-46d9-a98b-4829e5255f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7290d9-dc18-4ed1-9e4d-83f4530d997e",
        "cursor": {
          "ref": "4be083f8-f8a0-4333-84d7-f023e79aebdc",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4bc274ef-7602-4fa2-a84b-4c01eaf34b30"
        },
        "item": {
          "id": "1b7290d9-dc18-4ed1-9e4d-83f4530d997e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "24ab6233-60cc-4ec9-be79-886bd091e9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d880088-eb25-413b-8039-2648f008264a",
        "cursor": {
          "ref": "1d3d1913-d28d-4587-a0dc-34bcfb704e29",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e534423c-2d35-4cca-b097-96332c0f6e3d"
        },
        "item": {
          "id": "7d880088-eb25-413b-8039-2648f008264a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d0479c90-8361-4c41-90d1-ea74cec4732a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36ab4ac-652f-433a-9c34-3cf5f92131fb",
        "cursor": {
          "ref": "3efcc0a5-eb13-4ad5-9829-7da1090ba04c",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "14a3cd46-1ff5-4074-ace6-6391bec91cd8"
        },
        "item": {
          "id": "a36ab4ac-652f-433a-9c34-3cf5f92131fb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a8e2a794-f1b3-48ad-b166-14ba9daece7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9484d2e1-620c-4b0b-90a3-4fcb83b243be",
        "cursor": {
          "ref": "3f8fb69e-9de2-41f1-af18-2f39b0036094",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "838915cc-b302-4650-9f82-f9323ac9cfbd"
        },
        "item": {
          "id": "9484d2e1-620c-4b0b-90a3-4fcb83b243be",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "99632b62-d3af-4e8b-9def-14051e99f8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e28e9b3-1227-4754-839e-2c4b26ba676d",
        "cursor": {
          "ref": "65f4202e-a189-42a1-93b2-fb6d71581d19",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9017d662-2696-4913-a94b-24ad492d9022"
        },
        "item": {
          "id": "1e28e9b3-1227-4754-839e-2c4b26ba676d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ef986666-8ead-4b80-9293-f7353ff21063",
          "status": "OK",
          "code": 200,
          "responseTime": 148,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "d5f3fa05-ebd7-4972-bc6a-e09bd59c5dd7",
        "cursor": {
          "ref": "80219f81-b026-4875-889a-bfac64ee844b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d1e9b80b-5841-49b4-aaab-c923b8a438ac"
        },
        "item": {
          "id": "d5f3fa05-ebd7-4972-bc6a-e09bd59c5dd7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0c43ac29-48ac-496d-969a-156868066bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8970e9d2-451f-4186-8b8b-d858b772b5f8",
        "cursor": {
          "ref": "9ea6c40a-6e01-4bf5-8e97-b0b84efd6fa4",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f64623ea-e6ff-4ff2-8b95-887a40e158c0"
        },
        "item": {
          "id": "8970e9d2-451f-4186-8b8b-d858b772b5f8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d255fe61-be0a-4f63-9379-8917d7702342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6f741c-aa2d-444a-b543-776910824927",
        "cursor": {
          "ref": "95ca6e57-010d-47b9-9772-8e18c5e9e2eb",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "779c6565-b077-4cf5-b929-f954187d84df"
        },
        "item": {
          "id": "7c6f741c-aa2d-444a-b543-776910824927",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9ac5f686-4d09-436d-9114-c2a023fd3159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70bd38f-4c87-4820-a656-0f0a50427cbb",
        "cursor": {
          "ref": "07373cd9-929a-4afa-8bab-3619eb63fec6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a1c0935e-8a53-4012-ad8a-a1de9cec058d"
        },
        "item": {
          "id": "d70bd38f-4c87-4820-a656-0f0a50427cbb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "61107b71-fc89-43f9-8291-f53454829643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af43653-f76b-4359-8fbd-8748fa968ce6",
        "cursor": {
          "ref": "ed2472fe-ba28-462d-84b2-d6c227da8c07",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f271a828-33c7-4b9a-b4cd-3fa258e09646"
        },
        "item": {
          "id": "4af43653-f76b-4359-8fbd-8748fa968ce6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "427e8d93-b514-4d50-a249-45296254016a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ad017a-de22-46e5-aa7d-e995d5d3c00d",
        "cursor": {
          "ref": "20af2859-6b79-4e09-80d5-9eaac04b1310",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6ee7bf32-1ddd-42eb-914f-0e6b5290db2a"
        },
        "item": {
          "id": "b1ad017a-de22-46e5-aa7d-e995d5d3c00d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "83940b7f-b665-4c18-a2bf-af267a37034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bc5e69-9f5a-4382-8f62-982ba97c1287",
        "cursor": {
          "ref": "21db7201-75a9-42c2-873f-adfb3e37fb4e",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f99e5a55-050b-4f0e-b7cd-d2d1bc5283a7"
        },
        "item": {
          "id": "f4bc5e69-9f5a-4382-8f62-982ba97c1287",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "85276751-db0f-489f-a238-cead3e3061a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7d0cea-1e74-4735-9127-5397191179bf",
        "cursor": {
          "ref": "631f1e66-a63c-4e57-8319-ec22b1d29536",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bdb0cc67-5f02-48b8-a1a2-cdaa2de1f59f"
        },
        "item": {
          "id": "5f7d0cea-1e74-4735-9127-5397191179bf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "314c3ff1-45d6-47e6-a07f-79dcd8a7ba16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe0a119-b6e0-42ec-a693-29ac30cb3e8c",
        "cursor": {
          "ref": "8e5a9cbf-fb78-4997-90d5-593c00900807",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "06a439cd-5a93-4c60-96fb-74822e467e52"
        },
        "item": {
          "id": "7fe0a119-b6e0-42ec-a693-29ac30cb3e8c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2e29e60e-59bc-4246-94bc-7f1423a77246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02de32e8-e603-4e8f-a8ae-26da98390f6c",
        "cursor": {
          "ref": "8b340d16-93f1-4567-928d-c0e3a73acdae",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "81b81d09-d338-4988-858a-0ee1571e0741"
        },
        "item": {
          "id": "02de32e8-e603-4e8f-a8ae-26da98390f6c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d2d50b9f-232a-4ae1-bbec-4f7451cc29a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb191627-9b77-47b0-a759-6fe29325b2ef",
        "cursor": {
          "ref": "4fa4a23d-1fe2-4579-96b0-8c8c44868ea3",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ccd96339-49c2-4262-801c-c1434c541ad0"
        },
        "item": {
          "id": "eb191627-9b77-47b0-a759-6fe29325b2ef",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cf5963b2-278c-457f-b133-71aeb237f68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e57c9a-a433-478d-ab55-e6d4710062cb",
        "cursor": {
          "ref": "eb430a3e-9027-4bbc-a83c-a3f12ef5c39a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "026b8258-5696-4580-b545-1b1358bb6ac4"
        },
        "item": {
          "id": "c5e57c9a-a433-478d-ab55-e6d4710062cb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7872947e-363e-42b1-9a7a-7c32d52ebe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b6bff6-9763-495e-a930-1d8a6b72e69d",
        "cursor": {
          "ref": "4cc189b3-759b-4661-b91e-e1914d808759",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3a3dfcbb-9523-44df-849e-f4f25c7d162f"
        },
        "item": {
          "id": "d4b6bff6-9763-495e-a930-1d8a6b72e69d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "455be9c6-2fa3-4b47-b073-0dc4f5050f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257fff55-e29e-4c73-8fda-d57f22fc43ad",
        "cursor": {
          "ref": "4dd1025e-c5cb-4ad7-b927-7cd3e16570dc",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "12048c9b-235c-4864-a29c-8d7267b600b4"
        },
        "item": {
          "id": "257fff55-e29e-4c73-8fda-d57f22fc43ad",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dd284c11-0cbf-4603-9daf-3569634deaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f95819e-3fd6-4068-8cb8-7c932c0c3b25",
        "cursor": {
          "ref": "05bf5b91-5112-435a-b481-41e4edc70e7a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cb31ece1-32b0-4b21-895f-bca4c69df215"
        },
        "item": {
          "id": "2f95819e-3fd6-4068-8cb8-7c932c0c3b25",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2895a856-d832-4a8b-951a-a201256519ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde339a9-1739-4a4c-a5d0-72feb495a57a",
        "cursor": {
          "ref": "4bf36cd0-2968-4a9e-8509-41266372a57e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "65ff3f53-ced5-47db-bcf8-dc57173f54ad"
        },
        "item": {
          "id": "dde339a9-1739-4a4c-a5d0-72feb495a57a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2633714d-5a80-4230-8a71-8ba0a32e4ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafecf28-f3b1-4f43-a26e-1ed2a4d05c52",
        "cursor": {
          "ref": "4aff4994-fc11-4922-93ac-ed048c750fd6",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a3028cdc-5650-40db-9f1e-d0aa0f2c0afe"
        },
        "item": {
          "id": "cafecf28-f3b1-4f43-a26e-1ed2a4d05c52",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8287abee-6989-4894-a72e-5393c120a38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d265717-8a46-4226-8db6-9b152c99f920",
        "cursor": {
          "ref": "0200f9d6-636f-4e77-95df-88caa47f1d30",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "06985214-bfd2-4687-991d-f8629334f0c6"
        },
        "item": {
          "id": "3d265717-8a46-4226-8db6-9b152c99f920",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "be38d0c1-5393-453b-8ce9-189bbd9e82de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7c5667-dde6-407c-8652-cf6c2e35e934",
        "cursor": {
          "ref": "38ab3486-943d-4cb4-9864-724e1d602769",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "abb115ec-846e-4a36-aac0-1c9a813bd504"
        },
        "item": {
          "id": "bb7c5667-dde6-407c-8652-cf6c2e35e934",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a47654ef-e6fd-4420-9b11-c19a5002e7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe4c993-b3b0-4899-bd9a-ec7ae80f5299",
        "cursor": {
          "ref": "3cd2c7c7-868e-4a93-8448-e1724f527ca3",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "213b1a1b-81db-463a-8a17-0fb97e4c4cbd"
        },
        "item": {
          "id": "ebe4c993-b3b0-4899-bd9a-ec7ae80f5299",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "73f50bf4-d52c-4a0f-8094-4a8dda8a5dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa65302-73e2-4189-93aa-cb303ea7223d",
        "cursor": {
          "ref": "d66953ed-aab4-45f0-a51e-20613ae94eb9",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d3a8e0eb-118f-4580-98d9-4ef1b2fe530c"
        },
        "item": {
          "id": "3aa65302-73e2-4189-93aa-cb303ea7223d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b3f62f63-e497-47d6-9cb0-4991a9839d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c46418c-f8b4-4835-b4ec-503ccc5176e4",
        "cursor": {
          "ref": "30622b14-dc40-42ce-9df7-6a7d081948c4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "02da2f8b-a783-4661-8c23-a66c4abbcbfe"
        },
        "item": {
          "id": "3c46418c-f8b4-4835-b4ec-503ccc5176e4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e8eec498-abe3-420f-be66-bc00b0235675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40421ff5-5dac-49f7-82b1-d9c7fad08f88",
        "cursor": {
          "ref": "202598ee-b4c0-4a41-84a6-4e0c61bd63cf",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3329efe5-391c-4878-85e0-778a9b3fcee3"
        },
        "item": {
          "id": "40421ff5-5dac-49f7-82b1-d9c7fad08f88",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8ae7f5fb-139f-4a2b-9f68-c393e149312c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e580edbc-d62b-4607-be24-8caf866fd91f",
        "cursor": {
          "ref": "cb11a197-83e6-494d-b9f6-692ce36de264",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9b6b3a10-235f-4a7c-a4a5-930612578064"
        },
        "item": {
          "id": "e580edbc-d62b-4607-be24-8caf866fd91f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "102474ca-a1a7-4128-85cb-31a469dd51cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8185ca-7f71-4f26-9b60-ffa824249043",
        "cursor": {
          "ref": "8007082d-8ebf-451f-9f50-fb0ef2c03d25",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4cafeec5-810d-4f89-9dcb-9aeabde034aa"
        },
        "item": {
          "id": "0f8185ca-7f71-4f26-9b60-ffa824249043",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "aec05423-2017-494a-8b43-7e3532b910bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65828a04-77d2-4c17-8603-b400b7181d54",
        "cursor": {
          "ref": "b599facf-4a13-4bf6-8177-eb933204ec30",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7b8c0c70-9862-42ff-9e19-f840ca6f4139"
        },
        "item": {
          "id": "65828a04-77d2-4c17-8603-b400b7181d54",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0bdca5fc-c169-4cd1-96bb-088467d15b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34c8f16-46cb-4123-938c-670afadd3d81",
        "cursor": {
          "ref": "3f7d3cde-1bca-4c3e-b862-73f02643ce55",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1b1c1f4e-acc2-421a-8c0c-3a8eb21b2f96"
        },
        "item": {
          "id": "e34c8f16-46cb-4123-938c-670afadd3d81",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5a8b0d21-f3a3-442d-8185-b5089e185d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d962bce6-ed00-4606-b82b-5ae64a2666a9",
        "cursor": {
          "ref": "e7d59db2-c0ea-459a-8841-8b8cd39930b8",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d7ab35a5-c7b9-4d2c-bdc6-6ccf44f05dc0"
        },
        "item": {
          "id": "d962bce6-ed00-4606-b82b-5ae64a2666a9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "17623ccc-63c8-4ef5-bbd2-e8926a5c5fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c729b0b-e7e7-4c16-86b5-8e602dec1f0c",
        "cursor": {
          "ref": "723dba1d-1401-45d2-9dd4-c2abb8a36655",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "996ffede-f1ed-4ded-bfe4-7296435ab5ed"
        },
        "item": {
          "id": "9c729b0b-e7e7-4c16-86b5-8e602dec1f0c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a222252d-7519-494e-8a82-a6aafab62973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244f8a9f-cfb7-4c42-a47a-2fae29f5b2ce",
        "cursor": {
          "ref": "c76a4f5d-de52-4b41-985f-95eb1e72b0c8",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ac2eaba1-e94c-49a1-9372-5ea6a873cb7c"
        },
        "item": {
          "id": "244f8a9f-cfb7-4c42-a47a-2fae29f5b2ce",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "79eabbf5-0292-498f-8d9d-78eb6c05e493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e8ed07-ecdb-472e-85fc-9f1e638397c1",
        "cursor": {
          "ref": "d4a2a78b-cba1-4922-9b22-2606e76b832b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "53dc166d-812d-46f8-b8cd-ad82b069ecde"
        },
        "item": {
          "id": "68e8ed07-ecdb-472e-85fc-9f1e638397c1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6c7f23be-3528-42ed-bdd7-da5a97d14609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54191d5b-f028-402a-a21f-bcb7382a2589",
        "cursor": {
          "ref": "c2f86d0b-dc55-4b0e-9561-fee94e437399",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b0d45bd7-cf86-4a8e-a4e8-0431b9065dc5"
        },
        "item": {
          "id": "54191d5b-f028-402a-a21f-bcb7382a2589",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8b0116b4-c0aa-4fbf-8f8e-244947c1e59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a905927-490c-4684-b768-97d79f7a8505",
        "cursor": {
          "ref": "df3f98a6-7166-4aad-bccd-06d4f06390e7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "381a74a1-bad7-4d3e-a4d2-0975386b529f"
        },
        "item": {
          "id": "2a905927-490c-4684-b768-97d79f7a8505",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "030c60f0-b7d2-4a69-8ffe-dffc5fe8994f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa99dd5-7936-436d-b82f-ea280ad945a6",
        "cursor": {
          "ref": "097341de-3651-45a0-ac8e-f0fd2ab78e2f",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d2aa5d59-afeb-4a1e-9750-3a76b19595a1"
        },
        "item": {
          "id": "cfa99dd5-7936-436d-b82f-ea280ad945a6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c90fd510-8f68-4c88-bda3-0f214316bd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302b8dc7-3f4f-4391-8df2-16c7758adef7",
        "cursor": {
          "ref": "9441ea97-36d2-4143-99cc-4d1848d4c912",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b06c942c-edff-4fd1-a221-1dada8b9cdb4"
        },
        "item": {
          "id": "302b8dc7-3f4f-4391-8df2-16c7758adef7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fbba10dc-5c3a-4c38-a875-136b6e29f248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9d9c42-d309-49dd-89b9-22f3ca710383",
        "cursor": {
          "ref": "90aa65f0-dab0-46f9-8d31-f1f348d3f55b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "951c1814-0cba-4747-8124-f1632a24e73b"
        },
        "item": {
          "id": "4b9d9c42-d309-49dd-89b9-22f3ca710383",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "675e4d44-e0b1-4145-abbe-ee42aadc5b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbf0b57-51a6-4d57-b273-682bbfa202df",
        "cursor": {
          "ref": "c3eac7cf-1cf6-4608-8d4b-a587402e4ad5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bd6d1ff7-a601-4fd4-a31e-b8caab419322"
        },
        "item": {
          "id": "4dbf0b57-51a6-4d57-b273-682bbfa202df",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "97e3e3f4-fc2e-4801-ad03-ec24921aeca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff559774-cb5d-4497-87df-c78444b75b96",
        "cursor": {
          "ref": "289d523a-427b-4ff8-b333-f46b2b3e006f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "13acc554-0e56-44e8-b265-b5e0071a24a4"
        },
        "item": {
          "id": "ff559774-cb5d-4497-87df-c78444b75b96",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "37c67cf8-5776-49a9-9f17-a7e9a08aeb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb00107f-9431-4ee9-bdf9-a376b1107076",
        "cursor": {
          "ref": "3a856c14-1f28-4e4f-904e-5c39cebd47d3",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e761056a-aff4-472c-ab9f-b6931eb17f73"
        },
        "item": {
          "id": "cb00107f-9431-4ee9-bdf9-a376b1107076",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "80aec773-b38e-416c-a386-590433a50fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f98d651-51e3-4f0f-a03b-13e40e5ea2f1",
        "cursor": {
          "ref": "e324aac4-3f4d-49a6-932f-9d443e78e29a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "560f1b7c-4e61-4e69-bc40-8b1a94c04129"
        },
        "item": {
          "id": "5f98d651-51e3-4f0f-a03b-13e40e5ea2f1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ba1e4bbf-8dc6-44b8-9264-8c54dabf599e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76dff89-2b2f-4437-90e4-df01f873f691",
        "cursor": {
          "ref": "3f5ac81b-d1fd-4c42-b332-311d3d0324e9",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ac8601d0-f884-49d1-9576-c9048f35d4a3"
        },
        "item": {
          "id": "a76dff89-2b2f-4437-90e4-df01f873f691",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a2b9646d-42dd-4a76-b038-fb288fdd18ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a260daa8-45e2-445c-a2b1-360334bf83a2",
        "cursor": {
          "ref": "7deca4c1-85c3-400f-aad3-1369a3bcbe1b",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e6a11cd8-2e8d-4b79-aad7-6c21aa962134"
        },
        "item": {
          "id": "a260daa8-45e2-445c-a2b1-360334bf83a2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c7150a70-e764-4e6f-b3df-8632923f56e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b768e74c-6436-4c98-87d8-ee4e09a96326",
        "cursor": {
          "ref": "feb4f7c7-a771-4aa5-b8ea-a4eb9c15e920",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eec26495-1b8e-471d-a077-88ab410e81c7"
        },
        "item": {
          "id": "b768e74c-6436-4c98-87d8-ee4e09a96326",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "462515aa-5d4b-4578-aaf3-77e7ff00979d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f327d77-0e9e-4aa6-bbbb-a6020036eb8a",
        "cursor": {
          "ref": "7be69372-8eb4-474f-a28b-0e6a75d7a6f7",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bf57c174-e853-414a-aae7-c9b92ff9ab4e"
        },
        "item": {
          "id": "2f327d77-0e9e-4aa6-bbbb-a6020036eb8a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1ac59845-49cc-460d-b8d8-6fb2ecaa4e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828c0620-22a8-4925-932a-2f583038e97b",
        "cursor": {
          "ref": "5116677c-2b41-4f0f-864b-cfe50a597b59",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a497ea66-5f76-4a63-bfee-3cd98194eecb"
        },
        "item": {
          "id": "828c0620-22a8-4925-932a-2f583038e97b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "783031c3-2ed3-4200-af21-0c1c9382bc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ef6ce5-7705-4ab2-b4de-47ef0e3c231c",
        "cursor": {
          "ref": "fc1833ad-cd51-4b40-9446-e46ed156f8bc",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f6d8a9df-03f6-4753-9d81-61e72edf2f20"
        },
        "item": {
          "id": "06ef6ce5-7705-4ab2-b4de-47ef0e3c231c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "31f5c9a5-2834-4cd8-bf91-9e95e0496685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0657b9-b109-4494-819a-466cbd57d37c",
        "cursor": {
          "ref": "f8c5f284-4bbe-43ec-be26-78af4215c12d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f0ccc94b-258a-481e-9fa5-9b03b224866c"
        },
        "item": {
          "id": "6c0657b9-b109-4494-819a-466cbd57d37c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "16a2b14b-362f-459b-a501-2c3c57a11e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4233fbe6-81f8-45be-8d85-514c02236e6e",
        "cursor": {
          "ref": "fce10e5f-672f-4745-a36c-7b696aecec89",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7c6448c9-3045-4205-9f2b-82a856949937"
        },
        "item": {
          "id": "4233fbe6-81f8-45be-8d85-514c02236e6e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "25c53baf-51e2-448f-954a-e29a5df8fa6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75790c8e-b26f-4257-8406-dbe3f1375b4c",
        "cursor": {
          "ref": "41eba676-1fdb-4c73-8780-625065804976",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "85a0e946-7424-40cb-93a1-12b529525082"
        },
        "item": {
          "id": "75790c8e-b26f-4257-8406-dbe3f1375b4c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "64f131d6-919e-4cfb-8762-9c2128ffcdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da319708-7838-4266-94df-3b2ee0101730",
        "cursor": {
          "ref": "ca2e8321-9846-4809-9659-811745dbbb19",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "44905021-2e1d-4dd5-8b36-b70e83478294"
        },
        "item": {
          "id": "da319708-7838-4266-94df-3b2ee0101730",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "eb3bbe4d-23ee-4bc9-93f4-877f862f27b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8d6d5e-7e22-48d7-9d82-96c6938f2d84",
        "cursor": {
          "ref": "7204c649-086a-4c89-84d1-83e9e2f1a869",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9d706afa-776b-4c94-a8c6-0e62a80612dd"
        },
        "item": {
          "id": "9a8d6d5e-7e22-48d7-9d82-96c6938f2d84",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7612ba9c-fd59-4591-ab49-5f8c5c154090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9c7417-175e-4b01-a78d-7fcca20d0ff7",
        "cursor": {
          "ref": "bc0ed843-b01f-427c-becc-f2b36efb5635",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dea85954-8e4b-4505-9e59-9e1ec8f9f7ef"
        },
        "item": {
          "id": "7e9c7417-175e-4b01-a78d-7fcca20d0ff7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9bc6da7a-57e2-4695-9556-6c08242ce0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881aa933-8663-494b-ac78-f6fe36ebe30e",
        "cursor": {
          "ref": "f9cf223d-c04e-454f-bf56-757ce1500014",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c76811b9-d3bc-45b7-b640-5a7f6ba20e40"
        },
        "item": {
          "id": "881aa933-8663-494b-ac78-f6fe36ebe30e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e5d0e78e-28f1-4be3-9fc8-1243cff219f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566d96f2-88c1-4e87-b349-313293b8adbb",
        "cursor": {
          "ref": "2cbd5d76-e99a-4122-a4bc-9e2076410f53",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ce320cd5-3478-4642-8c90-dfb4e7ee0033"
        },
        "item": {
          "id": "566d96f2-88c1-4e87-b349-313293b8adbb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "44c6a8b8-cc45-4559-bb23-8ac5d311c7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c475c338-6bb1-4214-8678-a98028fb7545",
        "cursor": {
          "ref": "0ce1f6bb-30ed-49c7-80ec-0da1ffbeb94b",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "48008724-4f02-4e03-8079-11199672f0cf"
        },
        "item": {
          "id": "c475c338-6bb1-4214-8678-a98028fb7545",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1736ff11-ee7d-40d1-839d-f14b3ded0c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3110cd2b-2844-4a6d-a4da-bb49acf40fb7",
        "cursor": {
          "ref": "54c2c26a-140b-47bb-902a-9519500bc535",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a7edabdd-4de3-4b37-babc-63fec9a5984e"
        },
        "item": {
          "id": "3110cd2b-2844-4a6d-a4da-bb49acf40fb7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "98fe25ca-94df-4a6b-8a42-ddafeeb234d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d684ad42-65eb-4fd3-a1ca-d8a20f0b918c",
        "cursor": {
          "ref": "af323093-dac0-482a-ae8a-6e788bdf083f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "984a2906-d981-4cc4-a539-d4f9d5a59b1d"
        },
        "item": {
          "id": "d684ad42-65eb-4fd3-a1ca-d8a20f0b918c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "648e4558-f9c5-498e-8111-8146d52bb78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da758fb0-ece8-4883-902b-c34977c80b35",
        "cursor": {
          "ref": "ef01094e-298c-4555-a893-a71a155db2a8",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8212b2b1-d54b-4add-b181-8ce1d1fa18e5"
        },
        "item": {
          "id": "da758fb0-ece8-4883-902b-c34977c80b35",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8e1bf15e-7140-4804-a842-0dcefeb88d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f2892a-508f-4d73-a49e-58ab2c18332e",
        "cursor": {
          "ref": "8dbf03fa-8edb-4e4f-bda9-bac4dacb42a3",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8b67d9be-bab2-490e-9a97-2fd0be5e516b"
        },
        "item": {
          "id": "34f2892a-508f-4d73-a49e-58ab2c18332e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fdf5f981-6092-4211-925d-d4c6ae66d939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9b7a35-2390-4c31-b9fb-47dee6a38194",
        "cursor": {
          "ref": "e6555b5e-7273-4515-9af1-dd1a55b7596e",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d002663e-c952-4d7a-a64e-1eab32d75e5d"
        },
        "item": {
          "id": "8a9b7a35-2390-4c31-b9fb-47dee6a38194",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "600b92aa-e873-4137-ba93-c5447492ec47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b10d89-b467-4d76-8283-c509d842b4c9",
        "cursor": {
          "ref": "42e75359-cd05-498f-baef-5ec8732e5217",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "974bc08b-9f32-48bd-914d-5a52248dda7c"
        },
        "item": {
          "id": "54b10d89-b467-4d76-8283-c509d842b4c9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fb583dea-4e3b-41dd-b741-75cea04f5d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26459b14-42c1-4bf5-8363-6a527cf4d28f",
        "cursor": {
          "ref": "0e4759cd-1cbe-499a-a9f7-f609995f970c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "139a37f6-0dfe-4d9d-b004-78c6a88842ef"
        },
        "item": {
          "id": "26459b14-42c1-4bf5-8363-6a527cf4d28f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c9cb6661-4093-4d97-b932-74ae4fa35971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981aea5b-1127-4ee6-bf5e-c248bdf22063",
        "cursor": {
          "ref": "d24d419f-cd87-49d0-a500-92fa07de2e53",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6a95ff69-c449-4ead-bc22-0cfb3c0bab59"
        },
        "item": {
          "id": "981aea5b-1127-4ee6-bf5e-c248bdf22063",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3d07e77b-1f16-4f28-ac1e-7537a4a07144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559b9abc-9dc0-4977-aff9-aa070d87abaf",
        "cursor": {
          "ref": "d6da249b-da05-4bb7-b85e-f4877fe47ef1",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "71f9554c-aa20-4508-bbc6-d71a27f0f39b"
        },
        "item": {
          "id": "559b9abc-9dc0-4977-aff9-aa070d87abaf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f842cc9c-245b-426e-911f-6c7b3d3ee9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d351251-7850-4b50-b141-e61e8d50ccb6",
        "cursor": {
          "ref": "abf62e15-a696-4fab-8d3a-eef9d240ae7c",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b15729ab-d7c3-4260-af87-61adbe5758fd"
        },
        "item": {
          "id": "3d351251-7850-4b50-b141-e61e8d50ccb6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2776584f-0e71-49e2-926e-ab478eadadab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05604ece-cb65-413b-84c0-5e1b3825b74b",
        "cursor": {
          "ref": "85352377-018f-4a1f-b9f6-cdd325564740",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "eacd7b19-52f5-430d-b114-d73e9307d94e"
        },
        "item": {
          "id": "05604ece-cb65-413b-84c0-5e1b3825b74b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c4991f92-933c-45d3-8a6b-be846b7fd34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e304e0f1-ceb1-4368-a111-655979f06417",
        "cursor": {
          "ref": "655f23ab-8cdb-48f1-a995-56a284f009c1",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "92d296d2-aae3-46dd-917f-866aa89c467a"
        },
        "item": {
          "id": "e304e0f1-ceb1-4368-a111-655979f06417",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d26cc6e1-7974-412a-863c-05b31e041973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b114ca14-e99a-4ce5-b2d8-c898cb49e8f9",
        "cursor": {
          "ref": "9d6244ce-9bd3-48db-b4ca-4c37c3220cbc",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "34e83df2-9d55-4cc9-87f3-c95413eae244"
        },
        "item": {
          "id": "b114ca14-e99a-4ce5-b2d8-c898cb49e8f9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5838fe21-3bd1-4f62-a43a-d3e443abc4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e5b038-35ed-43d8-b93b-267de3676c7c",
        "cursor": {
          "ref": "84ec8fb1-37c2-4170-b70b-6ff2b8775977",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "728c29b1-8cb5-4b0b-a79b-a1739c4fe068"
        },
        "item": {
          "id": "c7e5b038-35ed-43d8-b93b-267de3676c7c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8257d0ea-65ad-4e78-b9d0-cfc25e4a35c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe9be0e-438c-42ea-b495-252995e549ea",
        "cursor": {
          "ref": "050f85a5-9948-4911-b537-e2996dc8d97e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "cbd2f332-456a-464d-8f8b-6b68cd62b29b"
        },
        "item": {
          "id": "dbe9be0e-438c-42ea-b495-252995e549ea",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "38a96f9e-a2bf-49f9-a4c5-ed946771eb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85226374-33c0-4f61-a3c3-abade9e39d61",
        "cursor": {
          "ref": "8bef1623-f013-47eb-86b4-d3184f59194d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c17706d0-e29a-42cb-b452-b4caab1b5a41"
        },
        "item": {
          "id": "85226374-33c0-4f61-a3c3-abade9e39d61",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c1d8b70b-d380-4be5-9559-ac10d89f066c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9e29f8-cd68-4327-b636-be68b4f414cd",
        "cursor": {
          "ref": "860bb0b5-dc95-4e25-b751-3e2cb9f1ed75",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fed77c73-9998-4e8f-9608-62b79ef50cac"
        },
        "item": {
          "id": "0b9e29f8-cd68-4327-b636-be68b4f414cd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fc9a18bf-bcab-48d7-8a67-d6089176ceb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc8af5f-decd-461b-a98a-9d3e67fa26ce",
        "cursor": {
          "ref": "3692982b-cca9-42a7-97ff-572feffe95c4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e28fc616-96e6-4f28-b1c6-42dd1d8dc8a8"
        },
        "item": {
          "id": "ddc8af5f-decd-461b-a98a-9d3e67fa26ce",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "07e74d4e-38b3-4618-aba0-1a29dc409799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8a4af2-c3f5-40d1-9162-2d33dd21aecb",
        "cursor": {
          "ref": "71c9c3ae-86c2-4cf2-b383-3f2dafb4c9be",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ade01121-3432-48a7-87b5-6f29d56666b6"
        },
        "item": {
          "id": "7a8a4af2-c3f5-40d1-9162-2d33dd21aecb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5dc32572-ab60-4aca-aee8-9624cfa55f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c441de20-434c-4e16-bdc8-cecb5987cdc2",
        "cursor": {
          "ref": "6ef9e4a1-2d9e-48d9-a72d-5ac408029901",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bcb56dec-e59d-4e0e-ac7c-e53d57636eef"
        },
        "item": {
          "id": "c441de20-434c-4e16-bdc8-cecb5987cdc2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "aeee0775-3691-443e-bf25-2569fb139dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c839e9-cc35-4676-bd4e-7d00353baf4a",
        "cursor": {
          "ref": "8807c317-c4d5-405f-affb-5dcd0fe9b0fb",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "dd593a91-5c6e-4057-a8d2-f169b62970c6"
        },
        "item": {
          "id": "89c839e9-cc35-4676-bd4e-7d00353baf4a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b285a42a-9d46-4a2d-9b21-6431d1b7f8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea8af40-06b0-40d8-aba5-e7b9b89071cd",
        "cursor": {
          "ref": "f2a912d5-b7d7-4f85-a524-2bb73b3d3da9",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "647898b4-31ca-4186-a348-9450e0e2dc85"
        },
        "item": {
          "id": "8ea8af40-06b0-40d8-aba5-e7b9b89071cd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7a68d5be-7eae-46d6-805d-51b82acf8e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acfe950-545e-4cea-8df4-86b4c35bb1a8",
        "cursor": {
          "ref": "aa28bb41-6f9a-4bef-a772-da81f9065b1f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fe55229f-2ed7-4efa-8644-ad91965b037a"
        },
        "item": {
          "id": "9acfe950-545e-4cea-8df4-86b4c35bb1a8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cb889b81-aa40-4c05-be6f-15b442327827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c31036-d191-4484-8282-34165f1e732b",
        "cursor": {
          "ref": "2e1eebd5-313c-4a52-ad4d-02936388261b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f1c5f950-e761-4f3f-a315-69a8df39be46"
        },
        "item": {
          "id": "d9c31036-d191-4484-8282-34165f1e732b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "00157fcc-027c-489e-bc2c-abbc4271610d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0b0abf-2be0-4b60-aae0-bad208097ea8",
        "cursor": {
          "ref": "f38f7377-a7ab-4711-a214-9cfbf7c45743",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "54a2da4c-2a19-4c8d-b271-2fc674d029b7"
        },
        "item": {
          "id": "5a0b0abf-2be0-4b60-aae0-bad208097ea8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f3a0fbfa-cd50-418d-a3db-2fb0a6c51169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d130da-08df-4d7d-b2aa-4476c73a69d5",
        "cursor": {
          "ref": "49fcb881-117a-4bdb-88a7-6cbcd8dbce6a",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "02f71eb9-342e-4283-bf52-224d5b7a6b97"
        },
        "item": {
          "id": "f6d130da-08df-4d7d-b2aa-4476c73a69d5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0287b591-b7a1-44e7-81e2-dff93b5a78de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e98e5c9-a8f4-4d94-8c62-aa6ef09745b8",
        "cursor": {
          "ref": "41f18438-bfb0-4c2d-b61e-7fddfc298e92",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "578a8544-57c3-40c1-91e1-bb37fafecc29"
        },
        "item": {
          "id": "2e98e5c9-a8f4-4d94-8c62-aa6ef09745b8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "315b499e-a536-431d-8dd3-aae37b60bd6c",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e98e238-8732-442f-92f4-49b0b7a1da1d",
        "cursor": {
          "ref": "d9d5ab00-57cf-406b-992b-cb3a5ed5feba",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0aaf0123-5146-475e-905c-e6ff987c1b68"
        },
        "item": {
          "id": "1e98e238-8732-442f-92f4-49b0b7a1da1d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d2eec384-43e6-4526-83bd-12086ba9f6f5",
          "status": "OK",
          "code": 200,
          "responseTime": 3025,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aece746-7c42-4f6b-a1e1-4849841ca0ed",
        "cursor": {
          "ref": "55c21d8d-41b0-42a2-a047-60d4c9467f26",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c8a4f147-cb90-4a74-931c-efb34653a5b7"
        },
        "item": {
          "id": "5aece746-7c42-4f6b-a1e1-4849841ca0ed",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5c1ff251-95b9-4a02-abbd-cfd145e52512",
          "status": "OK",
          "code": 200,
          "responseTime": 2887,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "31de08cf-c7e4-4249-a2b7-de3a4bf5df1f",
        "cursor": {
          "ref": "b929174f-8356-462c-a10c-1a82166dc9a3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a6054fad-a032-4743-bedd-081439989612"
        },
        "item": {
          "id": "31de08cf-c7e4-4249-a2b7-de3a4bf5df1f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "261b3a26-c034-4cdb-b94e-7d4500ff4826",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31de08cf-c7e4-4249-a2b7-de3a4bf5df1f",
        "cursor": {
          "ref": "b929174f-8356-462c-a10c-1a82166dc9a3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a6054fad-a032-4743-bedd-081439989612"
        },
        "item": {
          "id": "31de08cf-c7e4-4249-a2b7-de3a4bf5df1f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "261b3a26-c034-4cdb-b94e-7d4500ff4826",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5518d932-ef27-41b1-9ce8-f4b02e5f508a",
        "cursor": {
          "ref": "f0ce73d0-7227-40cb-98f9-1c6d18053bb4",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "38f8a989-c0c2-40ad-9b08-faca04ad8d49"
        },
        "item": {
          "id": "5518d932-ef27-41b1-9ce8-f4b02e5f508a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5bc26d55-5c95-4e42-af94-85d0765decb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd9f913-11d9-4841-a249-a8cf7eae2328",
        "cursor": {
          "ref": "9d2c76ed-56c4-439f-9412-c0605445d213",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "31956f6a-6eef-4af2-b2ea-2f4a1af8b580"
        },
        "item": {
          "id": "afd9f913-11d9-4841-a249-a8cf7eae2328",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "89f53c9e-ed4f-42f4-bd8b-cdc8be931354",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}