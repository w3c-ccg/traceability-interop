{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3a41ff12-4090-4719-bd65-5bea762bf9ca",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1d4bb8d7-9008-4e33-8a83-d25ddbcaa5fe",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6afea40e-302c-446f-8aab-d11082ecf19c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e3394887-95cc-457c-8769-66a7b9efd85e"
                }
              }
            ]
          },
          {
            "id": "232754df-475a-4293-aca8-466bd5f388ba",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5114d96a-e043-45cf-a354-5ad1071f0926",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "76327393-04c3-40cd-a454-b703246bd739"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "62177d3c-f078-4f6d-97d7-f7906cb32056",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "257c044e-1316-4c66-98da-8aa9899f3d1a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d7f51fa-f073-4613-8ad9-e34573698c93",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b75f6bd-f589-4fd2-8173-7f2359bf8062",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ece4522-5ff0-4b2c-9a98-863f4b7808c0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08583d8c-c254-45b1-bf3d-938096d3eab8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "69b91b4a-2582-44cd-861d-9d304f13d787"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f3902bff-9cb3-47d6-b2b8-4e346b3708d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "652874be-9a3e-450f-85dc-60a930de77dd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f43a5233-c25b-4207-9ce9-a93a81e82f5a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "db305519-fd02-438d-9483-8a8ad71a76e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "819702b8-4741-476a-aa66-a06e2d65d06d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4321ba0f-482e-4dce-a39c-e41b61905f3c"
            }
          }
        ]
      },
      {
        "id": "7fb60543-872a-4809-8e64-33f799248102",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "97199cfb-c46c-43c7-b50b-e6474172af6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20d18e34-1fb3-4371-bdc3-a8c95a4bf6ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f99d1b0d-eb20-415b-a0b9-156480eab98f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faee3f37-2e52-40c9-9d56-66b357f71700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f075d1b9-8ef8-4365-abd4-36465ba8e9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154e0881-6c3e-45a9-8f1b-c420b8412195",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85256e17-42ab-4390-a501-fa034f9adf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e51443a-63be-4a60-af31-4d035dcbd256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cf5ef4-61e0-4c96-91d3-61efb6b7dfc0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10e185d-858b-41b8-b0f8-31df0b2cd504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ff8013f-5108-4294-8cff-b1adcda37508"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab1f998b-97d7-4039-9208-60a2b926403f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed416119-eb0d-4904-b17b-71f50b18cf61",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229e1102-8e02-4778-8d7c-ee21cc33623f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3485eb6-0ceb-4c85-b524-1d541755d14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba48434-d22a-4ce2-9e4e-7f45a6efa572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8940ed-2245-4282-834b-d7c9a02bbb3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "53cbcc19-e280-4d57-9513-b22351dd3d8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6eb69260-a1ed-4237-aabb-8f391e5ba138",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7739db3e-2068-4c1b-88fd-56e194a703a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b416c099-ae09-46db-b0f2-837b6204cd10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c88a07b4-ced2-4ccc-abe4-dbb72a35b4aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ef98d947-a97f-4494-bcb9-4b174130ed41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a743781-4bd1-411a-b41e-53a601cb7060",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa49816a-e761-414b-b8df-5a5eac022058"
            }
          }
        ]
      },
      {
        "id": "9cb857ae-267b-44be-b8d2-5784d989911b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fb0323e7-7bef-4022-887a-558b59996566",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a782be2d-2273-4d4a-9be6-33d5cd686b3b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "dd384514-7777-48d9-954b-c58136a5938f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271a9967-2a5e-4d2b-b179-f4890231e25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39302923-6b6f-4f70-8f9a-dd5fcd128f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e33ba3-1fcf-4f17-934c-e1493f682115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b14eface-e898-45c7-b809-5c4db8b69437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1fbe9f-ee5a-46da-b5b4-82fde140d0f0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb21522d-c5ed-47d5-b635-bb46d7a99735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60c3ed6-893e-4cc8-8df4-95f23e9cff71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc10ce5-fb59-4a29-8c98-ca50f9b93755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9df1d471-5635-4ae6-8528-e7de50ecd248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b9f781-f716-4aac-bcfe-62e806337451",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b64ff18-b4cc-48ad-9b11-e57e4657d26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f290ca-dde2-4956-b9e0-c6011021b20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8bb413-7051-47a5-bef3-fbf0f9b34e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d199cc68-5003-4f70-89f4-259dbadc6779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b384675e-06da-46a4-90d7-825077aa099f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923d3e53-ec04-435c-bb15-c7216089be2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f88ce92-01f7-41f1-87be-64539b257cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e0c81a-e50b-4feb-b525-e0d49aff3417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e5e3609-6d03-4beb-abd7-bb50a4aea3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc066941-d4f6-4d1f-b5d5-fe3f080a34e2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23245df-1514-4f55-bb43-5b1bc988ae0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16ce18e-b80d-4d21-b72d-86891bee461c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5403f8c7-71a7-4896-a541-eca6f146c3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53327f65-f728-474b-9573-5e1bf6e17d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbea386-f45c-44fc-8892-e611a70257d3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1598ff6e-986d-4f3e-9662-c0fbd1921ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cb705b-96de-4f8f-b6b5-fe5dbfb84bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d30e8c-65fe-4230-80c7-5567a7045d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dc10d8a-0867-4d9d-b503-974b2108f5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041cf7df-fe20-49c3-bf29-4becd8c252c1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b938914-dc79-4e58-a36b-f0631f8db643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43d624d-edef-4afc-af13-801ba6f91c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ec629a-1e9d-4ca6-accf-0ef33be00c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86437a52-d307-4627-a889-47e13591a19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b60ddeb-04a0-40d1-a27a-5f869fceaa00",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77ce1e8-78e8-42db-8f79-5fd8cf2173ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4924a819-88c4-425d-8b61-b28bcabb79b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e15415-f024-4ab3-9cc3-e98e01ae76c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2edf84d4-7edc-4830-91e6-54bf9709068f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee5eb7e-7a08-4b1e-8eaa-b40b72936dd4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47522231-929c-4abd-a5dd-0158dd0cf481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535f7f35-b587-489b-9c59-470e1d57d67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50c9a80-dde1-4326-beb2-cfb1e3c32820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3433ef6d-2f43-48da-ab5e-4c2b6d820ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cbe5c2-91a4-4b71-9e29-a08ad1838066",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf167437-99d8-4fd2-a818-1faac29bac72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef236d27-bf64-4d5d-bbc8-6c03b32cd3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdeef614-4d4a-46de-903e-f7e6558b6816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aa18953-080e-4a29-af8d-dcb52be16562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cfdcf9-9409-4336-9c4a-dd1315d59a41",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f15cec-8b4e-450d-b400-530ecab55c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029c606e-5ebe-4a00-a8fa-1317742b488c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3653530-8739-434f-b67b-a7ee29536b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e87127e-cb81-4062-a942-8a28da17d726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cac8534-2c9c-4705-ae5d-34f4259ebb90",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23655d29-3d95-4881-89cb-4771f2e8e470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae7360a-4315-4d0e-805f-3b967d339568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b79b5d4-efab-4ff9-8669-3aaa0477fb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ced651f-a4b4-4414-b1d0-d9862b871e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e352a1-0b6c-4d6b-8e07-70e4feb3fcd2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c7defe-4cd2-4e05-800d-ba9371fd7ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d01536-f688-4d6e-9135-19ca64a5fdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cc7062-8db7-4759-9847-96603454d4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e74df9ee-accf-4c10-85ff-4c00ac90e3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6361b456-eb80-47a9-a762-ca98c77ba714",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c641a9-c6bb-4aae-bb5f-25a34050667c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5088dd0-db6a-4c77-80f2-6af3fce64a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c1253f-acbf-476b-94e5-a3ca79401083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a14d24c1-d656-4ce3-9709-c8ac13003e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c318ee1-0f3a-4e86-a26b-1acef3824750",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b3209f-d56d-4f26-a861-80d72d172164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c60952-1093-4ea5-bf50-211bb0cdd176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e84f06a-dcb3-428d-bf82-265bbe77e6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf23feb4-70c6-4508-8da9-4c8768cb11e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636fa7e0-e221-473c-8e19-30b440f38c69",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4302f42-0ce2-44b0-b3c2-2cfb8ec186ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff804ae-27b2-4ed0-844a-cc1cec1a681a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017b85c9-6ce6-4b51-856d-d3f3c5a3f831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "321c471a-d1d2-4d94-aad8-408169d01fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16a0c93-9c4d-4d97-839d-634875d047c1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48471c4-4eae-41fb-8482-c708f259b0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa10f55-b2a3-4f87-9c68-bb690a16349a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19883635-26e9-4670-9746-23679e0abac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0255da8-5680-4523-befd-7e7f0c888d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df6eebc-51ea-4357-8b28-5e170041a2be",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496fcee2-9243-4952-a882-efe33b441bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b63412-4bef-4f8b-af49-d5295b5c42a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03f7e61-ef2f-45da-b580-cb7d9cd79cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f07d0487-22ed-446c-9c86-8531a2f7876e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c39cef-8adc-4312-b407-05f01d1209f2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca371be-72e4-4d48-8248-a97f80f44692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcd92e9-00ba-40d3-ad09-bbf617b9fa6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070e0363-9ed3-41df-b1d6-1bcd71ccfffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef250663-501e-4223-8360-517bc445170b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512662ca-bf91-4bc6-9597-22889b7667dd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f812eddd-60b0-4f60-a245-3c286a353996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10f4717-b60b-445e-89fd-ae170473429e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcaa292-39dc-44c4-a72a-2d1891b2f590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4824053-6da8-4583-8981-c089eb222771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce754966-ae6e-4080-b64c-a18b55bf64bc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85291ab4-21ee-4af7-b5b7-932093a49bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ec6915-2a03-4d48-af5a-792d4cf09a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488d6117-37ef-4d3d-8fea-bf3518d59799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1cb1751-7a40-4515-a331-d45697505fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31900696-b153-4982-949e-33be329f3ed3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4f6326-2cd1-4251-a6b0-54e8c465131a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e28c63-f859-49a8-8c88-fdb37731c2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94f6660-d103-40c8-9e95-d62fd9f62a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83919c41-7b2d-45bb-a063-c85bc2ee9af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40f57dc-81e9-42f6-887f-d287e0112d5c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be074fe7-b970-4d06-ad00-5ce0f38bb106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959718f3-a99f-4fde-aab1-465c9e7cb80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea6356a-fcde-44b9-b3e1-9f1c23c88614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a82465ff-8480-4b2b-b409-87c420e24dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81407cfb-5b1f-4411-b4c1-52dc71824b0c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8197b66f-41c4-422f-9e0d-b94d3d0709b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e30bd4b-8ce6-4131-9bba-973e9e81f21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed56c354-80a5-4582-8059-6ca3cae1b3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b5da9d-f32d-43ff-8a74-89e487a9a72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662230cc-4402-4e12-aee7-ecbef8f0fdc2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac066de8-58ed-453d-97a4-07282d3f04fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df46d3f2-79e6-49e4-a96e-9baa8e998ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b2eb55-219d-472b-bd57-4571a569ed16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc3d103-50d4-43c3-89a1-2bd7ffaac785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b362842b-d138-448d-9dff-7dbe7fc392e8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfa545d-af10-4b81-98e8-aa9793287a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd4aa54-1285-4474-ac4b-72f729f2118f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e268c6-69c5-4fa3-aa00-af5b9bce7227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3825ce12-2712-437a-9d91-511e481a0ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da2b556-04b4-4730-843f-72f072119a83",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4272dac-868e-4edc-8ca5-185ae823e41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b98b8f0-5339-464b-ac12-c1d91b25d61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2102803d-1f70-442f-9712-bcdfe933cde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d614cd3-591c-4bfa-85fa-2ee252056f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea95aa6-2111-48a4-8d88-0a1795107995",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b2bfdf-f738-4818-b267-133774fbafce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b177a0ac-b919-493f-b066-f3da995f9a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359a60bd-c9fe-4953-af56-f0def14ac0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b93ee49-350d-4dd5-88ff-6f2aa82ce618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc80fa2-fe5b-4af8-afd1-6eec3c228f0f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8688449e-261a-414e-8eec-b7bd5dde2aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6134a0f3-c021-4528-b60c-768d5ab21e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f6dd11-3320-435e-811e-642c5fbf7154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df8996c-061f-4deb-a3e4-362f28c07f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b242b800-5881-4ba0-88b4-b634613151fc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a842917-f7f2-4026-b6e1-211835af388b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b009b425-386f-4601-a0d0-d2307f9a6aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48d89e8-e85c-4193-862c-f6de0b176a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "23332321-ada2-456e-b230-9dcfa2b1a74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f891d5bd-022d-4e1c-895b-0ef95b496155",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8428e1a3-d4ff-469e-b536-ccf2c2b24662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875d2aaf-eeae-44f6-b6f5-2768fe33eed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934e05bd-fa92-4e08-82ba-2ecc215692cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d16e31-3d54-45d1-a74a-6a14e9edfa62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0617bc6-c912-40e9-9e55-466b0dcd46cd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b52577-384a-472a-ae44-7cd6244f3390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c238c8-c96b-4cc2-804b-81179ff798c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afc9bce-0a6a-4b95-afa8-92662d0fdefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d41769d3-eff3-4bc6-b18d-6dd1d2d2b9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdad9099-ce27-4536-99c6-1006c9b1f3e4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec539ef5-3b9a-45c0-8153-900509b9c203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90be6938-4b43-41c2-8e89-3118650c5014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fa5afe-a603-4d93-bcb4-d61a02f5d219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "287f60d5-abf9-4dda-b084-4e81c41496d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8838fa0f-1edc-4efb-b7bf-1ce546c42733",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b75383-a36d-4756-a896-9e7f47d2da53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8467fa5-bd21-4d96-bce3-f1d925b767ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e987f9f-a7a0-4a75-9bf9-76672b4ce922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3197bc46-1c4f-4c40-975a-b17e6ce9edc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383c9866-2238-4d69-868c-43dfd90ed077",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f497b6-f6df-4a9e-80af-7f0afe798573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0984ad07-7eb9-4385-be7e-dcb1d564ab7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c6df50-c42d-4702-8cf0-e7964db15289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd42980-276d-4289-bc83-66d3b8e04c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd7e00f-8b88-4722-a7ab-ef2647787a3d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd91220-310d-400f-a9a6-8a8da9dff456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7cba937-8ea7-4c11-9687-4d18b2c09267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6253fed-86bf-414b-8614-4b880ba6963a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73b82c93-c168-4c06-b28d-6cc05461e521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e42a18-a291-44ab-af19-68c825e06307",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac44737c-980d-43cd-92ea-60e01b12593f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970b79d2-3967-42c1-8bc1-58d64cb3317f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb51f7b-9482-4162-9598-9c4b96d9be4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "645dcb4f-c6fb-4398-a3fb-bddced79461c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fafba9-fe52-46b4-b697-62db61d8bdbc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14dc7a7-ec40-4e75-ad06-b2cd3706d5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919e1d04-c80a-4431-bb7b-50529a8fab1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fb9f69-5e8d-43ef-a038-099a4315eb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e707b869-4c72-4a45-8250-b14858fe0271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133e85f9-8e21-43b8-a036-23b95b985c5d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7d9867-0470-492f-933b-a068dd278df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f231107f-2a38-42a8-9405-2f935b11a9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3de5c6e-2cd3-4287-a7f9-ac3306abed1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed49481-21b3-47de-af05-ff9fef4aef70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70031a74-a8d8-43bf-8487-6c961a4e4459",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79673e23-069a-403b-a656-3759ee11ac9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68ab8e2-4d9f-46a5-97f4-d8db794b4ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239a6d30-c6af-430e-9c88-00ba971ed59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8408768-3aa4-4441-9d14-146b4f950ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a45c16-7266-4f28-bac0-4def1c00ff65",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97e5747-8006-4667-a2ad-fa06cd215c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d83ef10-7b5b-4ff5-9f9c-50893b389019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6defc0-beca-4c84-be37-21e42e3e4273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddea314-8f00-4d68-bb23-846f47a6b3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3452ca9b-ed4f-4f24-b9d9-cac1d8483395",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c426264-c405-4912-afe4-c094ee88a2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77334212-272a-4436-b2b1-1ba4450ccb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b823ddc-455d-4b12-bcab-ba351bbb977e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a07916df-ed23-448f-b31a-caefb3e29dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbc83a7-e034-4222-8d5d-ba20be6422b0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65416cb-b510-4438-9bac-37a6ca084509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc9ca99-2ab5-4076-9b15-5b5b8014b4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e4eb93-35c7-49e6-aebb-5755ee4a15c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "978983c3-7236-49f9-86b1-4155790e2427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9516f7e-4dd4-4a26-9f40-ea43e173c42e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d41e5c2-b573-4b1d-9a89-bcde442f249d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3955071e-5bd2-4759-8b39-a1a15c2673a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec57bbf-e42a-4bba-836f-582c247595b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "24510c9b-ad60-4e62-8401-fdfbaa22abec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676b580c-49db-40e8-9180-35130d3ee4e7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5e562f-80a6-42a3-a09a-43e779448c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f373ac9-0476-4725-82df-cf1b0a94a2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2331459b-6af7-4f07-a3de-95ffc6b630b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7a17ae-1c94-42d2-adc5-d73b748b0ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4c79c2-bbc1-4e16-a3c8-821123e5fed6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39458cdd-89c4-43ee-8e38-1d35c5ab727b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49dd1c99-6ba5-49fc-9247-46f59f5fda2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d337de34-ece9-4d40-ab86-8906e76e04a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc38343-f421-42cc-ac15-b1774fa300eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6eb245e-2ec7-4337-be03-fde9b27b013c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6793042-e29a-469b-875e-acb2cb8a2b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3add8350-7aef-4a10-b571-4501133b68cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1426350-3d40-4af2-a264-105feb8b5f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf6f757-2c53-4dbd-99d1-e61cdbd7e3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c262b602-03d6-4afc-b155-b1034e95769f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0d69ef-7c93-46af-b267-1ea1d96c7022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82abc54f-43cd-4df2-86f4-45261691c00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1efce6-31f7-4612-86f0-481cd9f7063a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b834103-cfaa-4109-b3b5-8b1738410dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76348cc-7cd3-4f28-b617-59215d79b3c7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061ba0a6-d8d6-4db5-8613-3c5d334e3dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42134b24-f3ed-4e80-8209-24de6e5bfe2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d30280-5ce7-423d-948b-3c0fd3bb7445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "590f43cc-ba9a-4fcd-bfd8-45ede6cc99b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371f75c4-d3c8-4bcf-8cb4-3868403f1554",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506203dc-88e4-4c97-a97c-4acfa2422f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5a3b49-4865-40e4-b0c4-70aec02dfa82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce67e2b-6d1a-44d4-8306-19326e9a4360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24af3f2a-603c-4810-853e-2b1986fc3ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ba1d6b-75b6-4120-a704-922baff1ecac",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c71a5f-1f47-4d9d-881a-74c121abb57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf6a4e7-b2c8-40b9-9af2-2406cf8f37e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491c7001-fc04-4a21-b1e6-516ce0c8a7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e237bdb9-0e0a-4195-987d-a63a9d7668e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c45e9a5-3687-4a8f-8125-d5417243b1f7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0391b46-f097-4daa-a0f0-22f33f2e3a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a624c70-0dab-40bc-9f50-fb2109ef9590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a66569-ee95-4187-a434-8f2f33ef150d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8f3b1c-373c-43e9-ba23-bae9774a2d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88953f24-4559-4561-9bc9-bf4bb90dec1e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fbdd9e-d28e-424a-b894-8437c08e97a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a084a79d-b67c-48dd-9ae6-ea36fb9f418f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e287f7-bd5a-499e-9e79-32b02db9bc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29a622f1-cff6-429a-9d1d-8a14e7dbc398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82216e33-7c94-4f8b-8301-3f7c8bbf1772",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f969d8d-99bb-4f38-9458-791f938b4047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86a09ea-1a17-4322-8671-59ec708b3324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d5c4ae-d6d6-4fdc-b930-9b4784ea8dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84822be9-0d49-4be3-ace1-b5217d8d8725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc444288-06ab-49f8-b475-5ea75541ab81",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b715eb2b-5c60-4900-8077-00bf41ff8534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e3db49-f567-4aa8-aa13-2b331184da1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06dbbb95-5305-4b7b-85f1-cca2eb58ae42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89075ab9-f725-4888-bab0-7ba8d7c57f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b4f409-1d26-41b1-b7a6-536e7b74aedd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a5c7c8-fc26-4a76-a1f7-7efbc535af93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ecda27-7a66-470f-a1ef-421f99225180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9267d3f8-2113-44a8-bd27-05be8d7301ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4f55d5-219c-4469-93f4-672e04c9d856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832a5c92-7ea1-4045-a41d-81ae0c25dfb8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8add049c-c558-434e-8666-87e690d429c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbb2183-4f07-4d6a-a7e5-d2a486166d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acacb0cc-da8a-4728-94b0-c2c12cb8d891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3053fd8-4549-4098-b851-fcd2d89a28d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2a8b01-faa0-48e4-a461-140bc845beb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c949cfe-34e3-4391-9b74-795f63ec2ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e71dc01-4320-458c-94e6-49e1caf4b692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adbdb66-2894-4090-9199-151c07cefa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ee0645-68fd-412d-a404-1e3e5b38a436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff954113-4e56-4685-88ca-5af9a4572bb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f51cb7-fce3-4a61-995e-bdc4ce6e7b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22cf1e34-c8ae-4785-bc56-9f31249e3cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d29e19-d734-45b5-a939-d42c1043b1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e103fae1-9018-41ca-9f76-b753f22ebe53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5852f0ad-ca7a-4c28-ab9f-53a9e3a17e59",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ef6914-bd47-4943-bc43-147b560cfad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8c2d30-3d9d-4b85-9ab9-8e25ebd4a63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2308b37-9b26-4208-819e-527f028a3aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b78262aa-eec6-448c-a034-7f5f0a2d1b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4087aa01-3e0e-4c28-a002-89d5c216a875",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a10187-988d-42a0-8af3-13892a31c4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0fa9509-cacd-49db-9785-5ddc17eb61b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed230e15-9bf6-4ea8-a301-15fbe6a167f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1387d0d2-4c4d-4405-a2b8-d4c2c62a49c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6c7e40-4fb4-442c-9aad-9a07e79e699f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2ef9f4-5916-4b6f-825b-0ce166269555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e33dc0-1703-41ce-a8a4-a40d6f2b1256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173c8791-4814-4779-974a-c163f17c3a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c85c6e-c72e-4b4f-8bb8-e5412f59ff01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614237d4-8a70-4355-9693-aa33d91da501",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b2adb1-669e-48ea-ad38-c2030f251534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3574c1-3782-4dd8-805b-7964d38a2407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccaa2251-2b84-4df7-b8dc-c5f2ce75354e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "caf0d0eb-9d04-4e02-87c8-fc96457babe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307aebba-eca8-42a1-9316-eb48fc617445",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b288c5-47e9-4ffa-94e8-a78c92bbc7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56713b5-2716-498b-ab0a-eacc82490801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d14e5f-d1a2-4231-ac71-84e615e27755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce93e033-3722-4845-90e7-69d77caa2aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3c0d3a-cfd7-4eec-862f-2435f035479f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9847bc9e-6af3-44cf-8121-f1f226f67f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336588c1-c39b-4125-974d-5a9929c7102a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18c234e-0339-4408-9df1-562bc783efcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45788f7f-3cd0-47c8-a890-455ad48e9f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb03725-0c8a-422f-a987-aacab3f5e4cf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a493ffd-8822-443d-a4c9-43aa9a2b5636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403ead12-9e86-4dcb-834a-0d8f3b996114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2e8ddb-9d8a-4825-a442-daebdba803d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "042db489-3d09-44c4-8751-f72495f13f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e8ee1b-2634-4d46-b5c8-c715ffa41e85",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61bdc3c-e580-4e18-a192-a6b31ad03b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94eb757e-a575-4056-b914-4cbf81f1f210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29fa874-fb3e-40cd-81a8-f87bed794b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6bf34c-a0e7-4422-b202-43f1931c641f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0ed632-5691-4bc1-bff0-07c3dc1e0d0d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca9bc48-da59-45fb-be0e-a3b53548f5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9835241e-3580-44a5-afab-aeb37c1c3ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb17027e-3842-4d7e-9fbf-e469f8dae26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "abe7a72d-cee7-44bc-b33d-f375fb4bae4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee83e53-55e7-4328-80b7-905ce310808c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04df04b5-654e-4c34-a045-2e2f1ebdeacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc662138-a159-44af-9f35-59665fa6c476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04366b08-4d5f-48dc-bb0a-f81dfc5fddd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "57993ef9-8572-4557-8ec2-83183787209e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a52e723-f61f-46e2-80b4-11db1350ca2c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b152894-e033-42de-ad44-7d33c185af95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1843150-b96e-4e41-aa83-961723c774c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc61fd4-bb24-4045-b30a-fcdeebe37c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1bca64-34e0-42d8-9f34-7ffdae305490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d60f4e-fce2-4d6d-93a1-34ef24e2191f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8c25af-ce61-47de-9cad-0b0d430821eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85b78ca-8eb1-4073-9b08-460a5df38e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7333ed07-1e00-483c-bd64-c330458ea3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5bfc599-3b7b-48da-88ae-2256a66ec46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b980f24-3986-4e12-8040-a4700910c0d3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32ab6af-6e99-4df0-a29c-c062c8c49571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391d5b1c-e3fe-425b-bffc-466a73a7d61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee009f7-c7e3-4b8d-9d70-95b3e2055b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86844ee3-afd8-40a3-8a4d-452ad10b13e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccb86ab-dba4-44b9-ad20-02283599e6e0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aa10ed-199e-4868-a43d-e6ec42fec647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6910201d-4058-4804-8371-43e7300a21a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58417bbf-50e5-4d66-9fdb-64adb9168e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "967cac83-560a-4d7c-b98e-01d7d1127213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5209391-86c2-4c82-ae7f-4505e6cf7672",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c4843b-b1e4-4daa-9b2e-e2481e0bc060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2faf67b-059b-449d-8411-08e11eb1c0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a51d73-21a5-4759-a250-29afbc2d6d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7187e4-90eb-42be-b121-c66b845c2959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee36ec08-98d2-4d05-8cce-e2d6ee665c68",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdbc751-29a1-4775-ad29-1ee9e1fc0718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89caffde-1355-4643-84fc-41bdec41bb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761896eb-d472-4683-b5c9-97d14ce3cdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "694125c7-1062-4d83-9e57-072e654e42c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ef8e40-d3ba-4998-b9fb-67c33e446808",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc834f1-3563-4f0c-8643-94326c23abb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50563fc0-ae5e-46d4-ac94-8ee681dac82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f3e3fc-2c11-4dae-a8b8-80293cf5c355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57f88f10-d3d6-42a8-8344-7a4f89c1d561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0ebfbe-a811-46b3-98e4-fd0f196a40fb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b41fbe2-d1bc-4a0e-9942-f52e5779bce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386bbf57-c345-445e-ace5-2893b2e145ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd022df-b780-4314-9558-95e2e9755e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f35a274-7a3c-4c17-9516-4aeaae36eb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb1b681-2f7d-4cc5-8bcb-0da08ffbb04a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a5e9ff-4e6f-45f3-b7ff-0bd644751699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fd9bb5-2770-4d2c-b028-cc7debba6987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559248c6-edd3-4143-9b2b-14bbba67eba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13acf863-c37c-4ff0-91ba-4d14a2b14818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ec6467-8efc-4882-b2f1-7cf41e470ce1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be943aab-df3c-4179-bf8e-67c9efbbdbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf363cea-7bc9-49eb-b9ef-589f1c6dbd42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9fea3f-fa62-4b05-8952-9f0e797ae899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03f491e1-162d-4dc7-ab6b-297814d1d940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f51e65b-121e-4ee1-a465-9618ba17bf9b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d8beaa-58d7-427b-a25d-314698022b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71a4bb1-6854-48eb-aed2-55fa8071eeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdfe63d-aafc-40f5-9a67-bbd9cb91fcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "970f7448-4316-4083-b012-ffc36553113c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149cb105-dbcb-4878-a451-87b0c5c15232",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d398ac8-e6e4-4f54-aa6d-8390a0bfb371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d6b5b2-4486-4f32-aefc-ee821cfbfe0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4f3b4a-e1ef-4765-ac67-ad9d38c2a310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5e8700-85a9-4f75-a859-e7227f6c175e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cbdcf3-7162-4338-9b25-c4c9ac0b1964",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d52407-e82d-4f98-b125-7cc85baea463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f40f670-8e3f-4061-bbd7-950007e652fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8206f30-d197-4cef-9fbd-8d2253f4cb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c18c0126-35ef-4e5a-9795-f528266c8276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e261004-75ea-4af1-9df7-fd739d6454a8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f684dd1-1ba5-4534-88b7-ed178e4a1e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5a3b70-ac91-4571-a4dd-719cb8260587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9777b5-9d4e-4282-8648-65a5f7171a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d6473b-d2b8-49bf-b30a-16c111b266c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aac46ce-cd28-49b5-90b0-412f0371f821",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287c6804-03ef-41cd-89b1-7c5eeb0934bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb553705-d0bb-49c8-8fca-2427e81ce3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e62b4c-5643-43fd-a365-7d40eba7e166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e89f328c-f206-454c-ba63-afbbe71740d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a15abc-bd9b-4b8a-9238-b29db0dd544e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af30ffe2-6eea-49e5-b731-ef8686d70660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47718781-98a8-49ff-a213-b8f8c4dcb903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4176df80-820b-43e3-a647-371f756555e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b46adc4b-fd3f-41af-b6a1-9698349689dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563bf0be-a3fd-4296-ac03-16abc73817d4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df5836c-dd8d-4b45-9e2f-501176ee839b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4e0a11-4f02-4625-9fb4-42c4bd932829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bf3549-619e-4614-9f1c-ac4546dd16a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e411dd08-9ffb-49b5-8c79-4fc884b45ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949e0338-0842-46cd-9304-d8e0c295a858",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f28d8d-9281-471f-bd16-98af27b91e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972fb0d6-9079-47f9-bc2a-ac05f1c98b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c539dbbf-5121-4d4c-bc99-be301178427a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ae6ccb-075d-42cd-9279-2ff42fc4adcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337f2100-bd1c-4e76-9465-49a07875188b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf91aadc-5fbc-48b3-a297-d561a59a82f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45cbf6a-c30b-45c5-a217-6fa410a77084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e396e3e-4a04-4a91-a4d2-463a9180d1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6acfb374-2af5-4960-9dbc-68a5ac408d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131ff3c2-1e32-4d21-ab77-89256e12de92",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a417aeb2-b8e4-4980-a7b1-6a18b7a36a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3a572e-90a8-40da-bf8e-99bb0c27e0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5f2818-3304-4607-aca6-a4b20db7cb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b647097-043e-4333-8542-34da935b76ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a1bb06-275a-4f15-9ee3-eaa62b5c354c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7663e52-56b8-474a-b180-6dd644e01369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccbc5e9-3a99-4ccf-b2d4-130ce288fc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c49ca25-1bef-4a2a-97fd-4d9a28f668ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f96f114d-db2f-4412-a913-7cbede3415d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fe9cc8-70fa-419f-8d3e-7de3c0351a9d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19babbea-3779-4521-80e7-9836f0e2190c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33eb64e2-e0f1-45d2-b49e-e64e292af6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af22ac0-fbf4-40df-afc5-1c9836d10d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e69e578e-f6ba-4a02-9ffb-e10538c75148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d55d3e1-7ab0-4152-a59f-624bb2e26ace",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a16888c-702a-4996-9c1e-89ef1a3920f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "99550520-58af-467c-9113-8b1aedf28af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a82d24a-c4a9-46f5-8217-61f66ffecece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae1d8b0-2eef-458d-915a-239f5a46ead2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ccfa6391-8d31-4bec-acb5-01b99b9bf73c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4aafc205-8ea4-4144-94a1-5221348e96d2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a7d435-f681-4c04-9d98-7a095084ff1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34236f80-28c5-4e0d-86e1-beaacce79985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2037f324-cee4-4100-89e2-2f6e2e7d58c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88606340-e0cd-4668-acfe-3d1d4c04953e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c4a9c72-8564-4cb7-9a41-649d17e2748a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4799fdba-d7a1-4f74-8f7e-1d3612f22ea3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7c7b40f-36a5-4203-9f8d-a748e5fc62f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e044f10-2cca-4afe-b150-441e6c5044d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c4dfccf-f8bc-475e-b20a-af33f8df08ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c14ead6-cb9c-4e07-8593-edcdace2ce1c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b5f743ae-3146-4c38-8979-91f5b4a9d89f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79d422e4-95df-428e-897d-b4b930c5ad4a"
                }
              }
            ]
          },
          {
            "id": "8542ddf0-3f63-4941-be0b-5bd3ffd3ba2b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8ddcc80-6ecb-4d34-be75-d2b43541b1ba",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "eeb37433-8e56-4608-8e9c-8f87fbcf22a0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c959a30-6b89-4cf8-8397-d836ee2c47b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3acd65c7-000e-4f3b-a426-58d22d53975b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98ad5d1-303f-4b86-bb04-a3974f93d24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffdfc837-a976-4b14-915c-6dd0bdb66b29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6cdb2946-2992-470b-bea8-9e99fb4db565",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7167962d-5f4a-4e17-b1b4-2563fffc72cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6dd2a0db-8910-4e82-96ac-af6aa2304b94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66d18f75-6f1b-4768-9fc2-2e5cc8ec4d2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "50f7a749-0289-49a8-b5fc-f0e89f5f3f59"
                    }
                  }
                ]
              },
              {
                "id": "ff3245b0-2e09-4fd5-a643-4e5d2e887e76",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b71c52d-3b43-4f7e-992f-7d6b6569958c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e373971-4aa0-4e8e-a8f8-be216af892f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcbbc136-c771-4c1d-804d-e871efffce54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "523a01ca-6f21-408a-970e-fb6590935a8d"
                    }
                  }
                ]
              },
              {
                "id": "408ff4d1-27f6-4c35-88d6-93ba5bf38262",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff49ada6-cab9-4885-90cb-c30d2b06b28a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2c08dd5-e6c8-4380-9adf-a1d10bd1e08b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dace3e35-fe5f-4a0f-80bb-83ce8b9a4133",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d25076ed-d084-433b-a1f2-2764e4d9a606"
                    }
                  }
                ]
              },
              {
                "id": "4047f9bd-4a67-43f1-b148-53a703fc7662",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f550a7b2-942f-4199-9af9-b8db9a815f97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5dccd87d-8bc1-4cbf-bc5b-c11668bbc533"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32c87ecb-8dd1-4d1e-afb8-4d1c1c01583d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2133608e-66a4-49b5-bdcd-d7ef47d388a0"
                    }
                  }
                ]
              },
              {
                "id": "4cc7eb69-e283-4dbd-96be-4bd5008af3b6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07bd64f8-0347-423d-a6dc-f500fca78e9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00d0f74b-557b-4137-a407-3725ab63f226"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "843fd172-8992-4654-887e-50dfa97135ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1f982064-b8f0-4bbf-a785-a143bef82cd5"
                    }
                  }
                ]
              },
              {
                "id": "4d02f5d2-d11e-434b-9612-13516417b0da",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50f5ae2d-8f12-4c76-a2fd-895c0565f1dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3e3f891-7bc3-4a65-9e09-114e6497fc38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e66d7ef-4be7-4f44-82f0-45b3ae1b8e65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b5f202e9-f3f2-402e-96a9-99fe228099b4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a5e9a66-66ac-4357-b9dc-1105d16e94aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd649602-7bea-4ac7-9247-0d357f179ffc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "590f96fd-bbb3-4e0c-ba5a-c066c609ae0a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd867131-815a-483f-8f55-6b83318b1069"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a39b3f4-7e51-4092-8d13-86ea39b43156",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "de4d5496-0226-40ed-b528-d8dc9645f9f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25098fd2-7714-4afd-b832-6da84f9f075e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d280534c-be1b-4a3f-9245-a07f632c94f1"
            }
          }
        ]
      },
      {
        "id": "2fa109b4-087b-4fbb-88b2-3cc4097c9004",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "76728211-2b89-4868-9c9e-0c97c2f9a81c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce4f9490-2c7a-4a07-be5b-050f8f7ccd63",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc32a5d8-c6fd-4b4f-8137-b9e0f3be4d12",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfdceb4-9da1-4470-858c-6500a54e44bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fba682-b022-471b-914c-3b42239a86ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60308d3b-bc21-43cc-b1f8-b531168f840e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "91093232-e5d5-4b92-8eb1-aa2bde01dd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a57c1a-d2f2-4929-afde-4fc26487ff51",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50e0c37-5da8-428b-acc1-94b147178951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e25140-1048-4148-939f-60f594c8021c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66f6471-d7cc-4ed7-b33a-d424f93b99a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "283ca797-94f9-4ba9-8b9f-75608241d81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72db030-3e23-4fe2-92e5-43b011f1cdd9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9050dec-72b3-4493-ab07-cca93bea7693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025988f9-243c-49da-b6e2-b33c4312f7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef0e9fe-3ef1-4a30-88d4-8721a528af5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1de4b31-a30d-44a7-95f2-cb21b347624e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe183b7-3a4b-477b-89f0-1974fcc07ae4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fb31d8-9c83-4800-b033-4fb905f82bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fc8725-ec15-4ed9-975a-3c0c8ca7a1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1dbbf60-a972-4984-b7c1-9e60749db61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff81434d-0c2f-4931-b463-b63039574682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd9538f-2270-47be-a77b-cf29b01d7790",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e67c1d-9eee-4f9f-bc0d-f3b69a3f2f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fee384-5d9f-4ad0-9b05-ba79bd0fa35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7458d3-1dda-4526-aea5-71d571eb432e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d93d5965-745c-4204-b435-abc4aa4886ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5293103-a6fa-4535-a33a-73138ce958d3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe4bd23-f543-443f-aaf2-79d46ae03cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7aa5f0-4614-4586-bf46-cbc62e49dcc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ea73c5-e3dc-44fb-90a0-1d1ce18edef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6c368e-1613-4d02-a878-46b9612c8b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c57a8a3-461f-47ff-a05c-7dcdbd8d8f59",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405cccc0-ba88-4a4e-9951-aea6c33a97b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be49812e-feaa-431c-8df6-6479040092ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33ed9a4-d561-499e-a9d5-f849b6670c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb22fe3-8dcd-4f25-a8c7-65f35968220b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8a8de9-c32e-4903-a6bb-f8d83ec64453",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de11e4d8-2d87-4fc1-9a7a-89912623b51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70bd14eb-6fb1-431d-a687-af2c64919a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334a63ce-a9a8-499a-ab74-c077c9bcef1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb97b767-9ef4-4b12-aef0-3e7cbf441760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b70787-2a4d-4f37-8841-31fcf3860da7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c510959-8834-49ce-a136-c1d58dda0be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44883677-ed2e-4ee3-9001-60513bc32ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42896c76-e35d-4790-aaa3-2a68783d25e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c417e55c-b960-402c-80f8-f3b0525ad8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a447b7-cd0a-4d91-9254-db09bc9a0009",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3f1199-313e-4af7-92af-3287225b346d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0bd9b8-53c3-42d2-9ee9-689aa1f6786e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a848a38b-1b79-43b1-8afb-1a5e5c4902ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "764d3db9-c45c-451a-b63c-9226648cc087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c3f511-d040-4501-bf87-6881097d528b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f10b496-de72-47a9-a8c7-9db8ca706fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e7c0bb-7b58-42d3-8769-7a946bc7cdad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588f61ac-c3dd-4a91-b7da-c2460670c32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "11fe05cb-c02f-4c9a-a28f-543b47f90483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642142a2-b439-445d-9e8d-b7e33c4aee69",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd294b87-d14a-45fd-a066-cc665f827b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702c5c99-f09c-4e58-b04a-531afdc809c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce289d65-7287-4ebe-ac41-7d66c6cb7dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f725e7-dab3-47d0-bc87-326b44269610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da76a15-e14d-421c-8cb3-0088b30b54a7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ebb44c-d464-4713-8a9f-89d57fbb6d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78072eb7-314b-4eb2-b195-befc1f86f2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb26f47-908b-401f-9ce9-6f24ff7b6ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e098e384-3920-4def-a65a-16b20b6cad02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56627323-35ea-4e43-b6c3-386bb408b5d0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d64b6d-fb7e-4e6d-92dd-bbecb6c4da89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3e3165-7226-47cc-8303-c403c99bed20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b643d3e7-81ab-42a2-bee8-6896c9c6186e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc5f96d-6a99-48c0-a902-1f9753240c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f790f06c-6bad-4222-a967-43aa90c16564",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbe4ba2-8dac-4dd1-9cef-43f09aa87a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db9d093-b05a-42f2-a1ab-506ac49d7551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92273745-38a2-4f0d-b93a-35dad398d955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "45169afd-6a48-4cd0-9819-109d8e149ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0e42ca-d660-43cc-9330-c0122f4d6147",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ae7540-cfcb-4ff1-b02a-dc899e4bdeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f373afd7-fa32-42be-8fe9-ab7a3fa63185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163141a5-be15-45ea-a49b-47a6be667bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "15cbfccf-1997-44e4-9094-dcece007a492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6405d37-3a19-40c4-87d2-1707fb4021f5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f850348c-caf9-4bf5-9792-d1d15c702924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c898c6f-5544-4714-8de4-c47c94c872d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544d531a-3c6b-4952-8e96-e527db86ceae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0de022d-0c83-43ee-b7da-9d62ca53162b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9950fb20-5d07-4038-a7ae-1b0d1a0be8c7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8213cb3-cc17-4b0c-a98b-a1f25a2cb34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84dc5478-0049-4766-be6b-b20ffd614457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a8d6e3-7616-4907-a6ac-25a7b5cb1be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b42a3ebf-6f06-4950-9c84-5a04b69bb01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4398bf-8cc3-42da-803c-0633eba44883",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ebd461-fdc7-4b96-b93e-0cd70fb58a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7886628e-f6f5-48b6-bac5-ee83bd8ea676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3763e7df-e405-4a95-a546-9083ab63daee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3810f2-52f5-4603-96c4-97af46a75dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdab81b-2294-436d-8a32-9ff4c96b51a1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d38ac9-718c-42d9-bcbf-27a8cac22532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6419e215-c00c-46fb-a6be-0eb9fe298353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b5ddd1-c85a-4b88-9630-716c6dd1e98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffcb459-e40e-4549-af3c-ced225cdc256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abda1688-e6aa-4c12-a74a-e9daf6536975",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc11dfd-8c7e-4dbf-aeec-b93feab7cb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9152139d-d0bf-4c56-a48e-cda9190421ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecb9bf2-f65b-427c-a173-cc8d421109af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38336286-9273-4623-bcf5-f4ae93d0c061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645f14ae-c027-4b6d-a774-f996c3180948",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcbd9da-cf23-4a77-ae40-9b4a0c662717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80cbeae-278c-492a-88c1-4641e5325180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7d50ed-de6a-4f5a-a024-7a2eb0feb3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "432cd031-b713-4613-9c5a-70514d128faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caf9121-29e6-49a1-869f-2dacad9c25fa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2ef4c0-6fab-46fa-b785-6d3e21af1680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d77133e-f8a9-49c3-b7ed-8f95a4e36de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edce6d01-c822-4c8b-8d27-1354b948c362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75015b23-3a0f-4a69-8d8f-c6ae4d8b13ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32609544-9e90-439d-ad03-44fd844c3244",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c679af39-aa24-476c-9387-04170247ed57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0731b707-ce1b-4b8b-a855-2f52c7a38e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df331ec-9509-4985-a1eb-dcc1c8358aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f1edda-dbc2-45dc-94b1-d8633afb8f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f1162a-1c8a-4344-942c-372322b91f74",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08a9907-0ad4-482a-8981-455e448e20ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46111f79-24b7-433c-928f-638d696b8f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557e21c6-e21b-4cc6-a2bc-a8b922af379a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26a8b544-441c-4f46-a5c8-a1483eb5f854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2714b3e6-6675-4b67-9ec3-04da52189e2e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b188a0e-45a0-4ca2-9be1-a9f59ee9b648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc89ecd7-874d-450a-bdb9-24e50c08a953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9404fa-0d06-4f75-9049-28cfadcc0fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3070d238-3016-4d62-ba41-2de476a8eab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4154163a-855b-4c88-979c-5328d2b26dca",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4341a4-595b-4737-af3c-faf7c79c9e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f6df38-9474-4693-b688-260a18370419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf86f119-bde2-48df-bd26-261466104c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c903ea91-920b-4714-8609-ea280bd0aa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885087f4-344e-420a-835c-4877bb6fdb77",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527034fb-a4f5-450c-94c5-117c77cbb372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce16380-4123-43e3-a143-132958d5288e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1d67aa-9cf7-455b-bd63-1ad8a724373d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "579c29d1-b39a-4851-b6be-553c44077b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee271241-c49f-4d67-a4f9-4609ea0fa7fe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1d476b-5e31-4401-8418-af5e80f57a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e52c3c-14b1-48d2-ba32-300dcd4e4cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2f2a22-bebb-47a8-a58f-2de558493c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77c5dc3f-c900-4c6e-a7f8-6af1ccb6599d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc06929-b303-4bdd-8c6a-1bea7ff547fa",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bac9178-dd6f-4be2-afa2-5d75fe92e9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9351cb-a14a-4c63-9de7-943379f67eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5046b8-3220-4b68-8c36-2d0d3d706a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "265bfa4a-0f38-4688-9711-dac3f5240739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2394860d-9699-47ed-b689-d8a3906ec384",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc2c07e-e5d0-410d-8b23-ae3e62229337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cf0ea5-bd15-4d5a-8259-884c6553c566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbd06bf-65fc-410c-b800-09c283e35c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cca660e-6228-4047-907e-6759ef4fcf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6131e883-4876-4157-92b8-38fd3e6a1584",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d565b270-125e-4429-bec8-84fab707f751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1238887-6414-436a-ad58-5bcdc39ae0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d54e99-80c6-4e30-bc73-7bd1d8c3045f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "496a149d-78f4-4782-a0ff-d691d789f9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8b6e67-5f39-41f4-9a75-866381d354c2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4be8fd-0899-418d-87f7-de07f0d2ce3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328ba28a-3a68-41b0-8f9c-8c089b82ee45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644450c5-e312-4a1a-b59d-a45f26f82830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c34c78d-a03f-4385-8e20-0a4f62bd1a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9176a08-71f9-4079-849b-e46e6974e85d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e930e1f-0d00-4cfa-bc7a-b19cd568ad5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3dd69c-476a-4715-8cb3-0f060f33964a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4a5b0a-6781-4f0e-b88e-10e3664ba464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38193997-8346-40ab-87f2-d6a300435166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05f3031-cdf2-4d18-8cc6-8dc94ee670fc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50a2756-668e-4b6e-a815-73ac12033778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa6a3b8-37f3-43e4-a099-95dc860bfcfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286b4118-6c7e-492a-b78a-f98e5d17d837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1dc7a71-b56b-4f19-862a-c5d8732375a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fede8f-369d-4385-b84b-42855213fca6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbfc773-02dc-4151-9ce6-9e223b791939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c0682c-aa6d-46a4-a0e2-b538610fde87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac76b78a-3084-4caf-9589-4a36cf870c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8af22583-3bf6-436b-a5e7-924f4ef82c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d47816-c78a-46b2-afb7-2d3263ae3217",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594e805d-1a06-4684-b1df-8d2196ca3ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f946da8-cfbe-4f61-85d2-824d1fa8e3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff004890-6a7d-4b89-8e79-e870e6aa5617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1d14f0-ba14-48dc-a27f-f17b3bf06ee6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb78df01-4b3f-4195-8e15-98ef47f685df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2118abcf-38d8-4e20-ba38-217ffb284149",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225deec9-093a-4774-a42d-0a33c1a341f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a5727faa-3752-4a56-b311-50633267c4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b946eb47-e77b-4dc2-aa31-bb1e1ae5c768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54787542-4e89-4403-a1ff-627ffc5b9fb9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d53e94e1-aa60-461c-8b90-2202ec6f773d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47cd5f18-c962-4e25-90a4-a9df02a96cd0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "734e31af-e367-4ba5-9c9e-b908f650b5d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e6a3423-e9ea-478b-b578-e9ba33fd7929"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38ccf198-bfcc-4ab0-95ce-bb301b1cc15f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c0410bfd-c3f6-4871-9717-97ee5b2208b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1eb3f7c9-f73f-43a3-b3e5-1228007364e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed257a88-7f19-4eef-a5c4-3a23a9f177e8"
            }
          }
        ]
      },
      {
        "id": "4fd73af8-172e-4f67-8544-c25115dc6167",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8abf998f-d513-4f44-b057-7f81399995b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e33e4916-2024-4085-9010-ec4053e3542c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "97a766c7-d450-40de-a150-32a1c87a64db",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d87d1dc-14a0-4d25-b70e-23b9ad080acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08875b00-971c-4f73-933a-0f7af8542fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d392ae48-bc57-4d86-a0fa-1249158f92f4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8074ec13-aa21-4afd-a993-96c96d8a1c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567961e7-9c1b-4787-8b3a-674fc4051520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc051ab-7f48-42a5-8a26-c76f03d4177e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3980f17-ce17-4c41-8c1f-27a36ce22cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99985a0a-0fb6-414d-8dba-e48afc38ece7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d928e4ca-b826-4026-90af-0da472bc28c8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c39d616-5287-450d-83b8-e2ea49bc9c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbce847-5af1-4367-b0a9-be0e2b2e3a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98950464-c8cd-4764-9eab-7c67c3d3d2b2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac55bfc4-1a7c-4b7f-befc-5454997c8b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697aaa77-261f-4b59-a7af-8ccc4bac12a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982d98bd-dd48-4c67-a6a8-c30e78568d40",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae87d52f-37d6-474c-b314-5bacab94eabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6da8bf-eb8b-4f21-8c43-766112f3208c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5159ac8f-8495-47ab-9ce7-b64eba226dba",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da604f0a-86db-4d59-88c0-9aa990d6bce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd80fa1-ef12-4b54-8232-ed2cc90162d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480a8587-8d2d-4664-8677-5ac5187bb94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b5a610-0903-4542-a5ba-d54ccf1fd204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41630e49-232c-4ba7-92e6-2a7a58c45bde",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135cd5e0-0bf8-482c-b98b-b5b617474a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e2c6dd4-8d33-46cf-a50a-9e1a45e78de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798a5e51-7a61-48fb-9293-a5a564431408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e436705c-f344-4eab-9c09-7e8bc6ad2097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9f2055-b977-40a5-bc15-1f3179819599",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eae9fd-a6d4-4a9e-9cc1-fd3645ba4479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b0de454-ed83-4a6e-a57e-ad79e1366d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f1c0bf-2a74-40ad-8f39-1acbdc59f015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdc04d8-cf46-4e95-b18b-03780e6493a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0fe95d-ca9e-42bb-a30c-680098989d6d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c9ed4d-e93f-4298-a483-d54c4d1a8f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b476d2-36b3-4315-a577-40ce0ed66bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5a5b60-ca10-4152-a625-55b1a1b6113e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f067c49-e392-411f-aaaa-a627f37a4e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d1f4c9-6925-42fe-9026-00cecb9a7138",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45e494d-a6e1-4103-a46a-94defb046049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2489ce41-e8d4-4485-a88f-77a0047bb7dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdc9f4c-5cd0-47ae-a0da-f6f60f896737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b41908-3d2f-468d-bef8-1abfd3036073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d623b0-7394-4430-8e49-65ca6ae9fc8a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9388dca0-6a17-427f-acd9-a19225ee21b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65366272-5d6b-439e-8c02-9e67933a3456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2c23c3-1f97-4da9-a8ef-d7894b6fb743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60866772-171d-48b6-8ff8-aa06e86ab8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803d96e5-b067-418a-81e5-db6be01451c5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a62525-4a08-484a-b6d5-49c145281625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e79484c-399c-4c1e-8fe6-5d3f1e179a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef190e18-ba59-4d45-b5e0-1343a712d347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcf85bf-1098-402c-81e8-dac96357db72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb087acd-70a5-4426-93ab-f9287ea4c6fa",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a993269b-aae4-4a5a-9be0-85a117e65c37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a58c2116-ec09-4c07-a9cb-93f3ca87aab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64c61dd-770e-41ed-8eee-3f87cbc24c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2d23ff-d11d-4646-9e73-3c3568ce4471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2eaddc9-2e1e-48f8-9012-0c4b7f79c1f5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6e4edb-8998-46d8-bdf4-be6e38e2ea9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cacd1639-f436-41ef-9ef8-679a7f9c3e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55576579-ab28-4bc1-a64c-64236bad5b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67fc0130-ff87-43e0-8eba-c83e6afd925f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1453a4-fde9-4988-b39c-f536df345bb9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98001920-165c-408b-bdc4-4c91bf39aebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad1f77e7-a7fa-499d-9841-142db548d6de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4104b7-1116-46dd-8282-930697d4b62d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf5edeb-e124-4ed6-88bf-f29a59382d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609e597e-b99f-4bfb-b255-b24dac8a3c1c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8db31d-4227-4676-8d09-79c7dc226e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82545c1f-b594-4c6d-8ac9-4695499b43d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afb34e0-5c37-4b58-a0fc-900570ba5b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83c99e8-0bc7-4f73-a125-7d6542d03371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1569ae-f947-49de-94d9-6c1642774f41",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96f1a25-93cf-4752-bb08-85e1b7ec18ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9addecd8-749e-4bfa-8a06-8f1bb2df7219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "accf355b-3401-4802-a4a4-84cc02c16bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1668b9d-3d24-4f82-9197-5873e0320ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903db3a0-a094-4399-a972-70a0fe8f5fbf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1852e343-54c3-475c-be40-b6f8ae0a1ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b546c3b-4721-4950-b4d1-869438e43e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb26213-3e47-4587-8aeb-6147471c55d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ec298e-d04f-4f7d-b1cd-3919d7c6b920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83fb967-84af-4c2b-aac6-db3c9e8c994f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991c1b40-9c76-488a-938f-b2bacd15b515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8367b3-08b7-4125-8eac-cde441977ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8995bb83-7155-4e4b-aa6c-804135361a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009d044f-a950-4ce1-a65a-2fbd2a1393e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e259868-f240-4374-bb71-1be75f13a3e5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409eaa69-3b4b-4edd-8ffa-3046b28f24c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c485c032-f5e8-453b-b9d1-9aef0e94368f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b9be5b-c6f4-41aa-affe-9873691c6178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff539e32-d1ea-440a-887e-f6b5f620e1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edaf9f3b-986b-4c8d-b8d9-3e01076a12bb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c31978f-79f2-428e-a929-7de0a6441dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c867d153-45ac-4613-84c4-26e13549aa22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dedd599-34ac-404d-a72f-9e759c300dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6697226d-aa7a-4540-863d-6c8a8dabb99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4322559a-1776-4c8a-b29e-9bc5870cc1d4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812106fc-c0c4-4c95-8fb4-fbc359f735eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88cfb0f-7073-46c8-a8d3-fd2df1d9b695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32705165-98e6-43c2-9ea9-fc512e821873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd857fb-cb41-4d7b-8180-22fb7dc437c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014504f9-a18f-412d-ab97-7cc8e121b660",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a11407-a38a-4f55-b14e-9c65184554dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c89801b8-c5ca-4464-976e-023a3f10e250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef775d4-4017-40a6-a9da-4717b4aa75f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d009729-4135-497f-a8a4-7c576d9fa035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a912fe1-0c71-4730-b2b9-b619f57302ab",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2852cf9-0211-4cde-ab44-cee38e1a6f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88cf4466-cc56-402e-a585-db822a09eed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8050c80-4517-452a-b54c-2631ed86134c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2b1b12-6135-4552-9687-63977c67b583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185f6e61-8fbf-4670-8072-070260549f38",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8485ea8e-a6fb-49e0-8980-1b36e910cce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4862af98-1e7c-4be4-95d3-19e972fc3c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5a1c77-74bb-42ec-a233-bf20e8cfcb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a53c1e-6b0a-4173-aa35-e1f84bece77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e447a56a-6e57-48e6-a7c6-ddd5098aea98",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9547a57-825b-4fa9-b880-60422479f7e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98cafc98-07e9-420c-8f6a-8e827ee9aa58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980d0e94-e57b-41f6-b384-af0afa4fda5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0e8024-880b-4701-96de-fcb3e2842034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce6de6a-8674-4e17-b377-ad69c91ec905",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d2b44c-10b6-4c7e-b4ca-41896769b987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0617d60-3832-4a53-9ed2-fc474965cbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2328db-6fb1-44cb-971b-2f7f66b7080f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c7c7b5-3c02-42fd-bec0-886dbd79652a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba14bff-da38-4e47-b02e-24b871c80c6f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a47f24-d4b7-46c3-a80e-a168072afa3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a81e3a-1200-45fe-8b6f-e16c089df2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7f784a-cf0c-4fd9-977b-04300873116a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9c4488-6de9-4361-80c9-ed9114e34c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf9faa8-5e97-4a32-b85a-d17e8af713db",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a433897-a9f5-4762-84b7-762424d0afe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3434bdcf-328d-4880-b411-a6bafb13effa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ad792d-2733-4c43-aad1-fabb54c52fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96eace3d-e83b-454b-bc67-1443592656cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a112a4-89cd-466e-a0cd-2ae56c61a035",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adaa3c65-5489-415b-a19d-7ea59eeac79d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a54d066-c264-4289-accc-31763bab7a7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269fae44-99b4-4912-ac98-0fb743db8b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470e29e8-0be3-4a69-bd28-2c4d0cf810ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77846a8d-f531-4b5e-be23-98b9eb5e58c6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e176339f-dd01-461b-968b-c5d1dfd343c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f5fc7c8-6ba6-4a8d-9239-35ce6228cfc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02c673a-a021-42e2-8e98-cd604c2a8978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a376e1-6383-490a-906a-d39c86b685bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0b5acb-84a9-4879-8ef5-04c7649456ad",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aba3a3c-9f58-4800-9fb3-36ad340cff83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba12c9d-44b5-4cc4-ba50-3bfd5ebaac32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabd1116-1ccc-4a22-b55b-c322023ffe11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15d2ebf-4476-4593-afef-b19827df9e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df7ecde-dd9b-4fee-ae1a-a1b065defb46",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa125dcb-2801-4715-883b-166e081d0104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "501aaddd-508f-4e01-8f2c-34b1b7b9f44a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e42791-5ca3-4f60-a714-c500203a53de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a31f63-0efc-44a9-b7ba-dc2cd0c7b4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544ce968-30ee-423c-b1f8-75de59475fc8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b15bc9-71dd-4943-a3da-ca53a6ba821f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37354cc6-f9fa-4025-9359-4f0414f2bd1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15859b3-798a-4303-8c8b-a40084b8e3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269953cb-5dfd-4838-8582-58c9d36646d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0554ca86-2901-467b-a88f-f89c3093444a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab93ba1-39ad-4d92-bb80-ad1d6321b130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c79bb02-babc-45d9-bdd1-81c217d6745b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ef4846-8a78-4d77-a23e-a2389aaea71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f388a2f7-6bca-4c34-9b68-200fd98357e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab7653c-3d07-4474-a107-6c1f8a04c27c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f50c0c-bd07-4a98-9911-2675749b5eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4f124b-7143-4414-bf2d-f83f699dba7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78489ab9-6bd4-460e-b12b-f406583a53fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31f6ced-b608-4ee1-8735-e68d0bd02b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3127c7f0-5f9d-4388-9223-a4dbf5f470b5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955d7ad0-404c-42b6-a54d-f96968ae9a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2654102f-8c91-438b-a7a5-3215fd1b9c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0443f8d9-d6c1-40ad-912e-8d8f8a1735dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97164720-744c-49d9-b95a-a7fa5515ddb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5a01f6-eb3f-4f1c-a273-554ab8d0772f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1555f158-ffa1-4903-b6c8-b8e00f167536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79917ba8-3ef5-4f64-8102-0545e05cb937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b684e9-2bfc-4bfe-ae78-f2d8b9994621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e04f116-3fab-4350-bd3b-e5ece4b50073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af72f901-f7e1-477c-979b-5f93b6203b85",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c5d793-bb79-4c59-8bed-a0c8b397ba55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5a2570-e2e5-4293-a70f-cfa709ad6666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b056ade0-1dd3-4942-8649-ac658333f712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5e59e2-58d4-4f62-a9f7-1922d248727c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41724bca-3537-4dc1-8a98-d0c9fbf9a7e6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15960e18-1900-47a3-b314-4012c8ca56ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66c6314-ab9e-4f32-9100-c0d610d85e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e9a456-7d53-4cdc-9c50-80e7cc4f9fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106738a5-cdb9-4cc5-a1de-4ccc510fd8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752eb67a-efe8-4d95-81de-5eb6bf46a191",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658d0685-d245-4a2d-909b-9de152723f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd98d009-5288-41ba-b11e-863beb4ec8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973fa099-b7ef-4df3-93c6-91847e108325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92e79f3-8375-444c-9210-7ff8c0709be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac036025-ada4-4c36-a8fc-c8b118c06994",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a799d9-3c9f-4776-a790-e565a0900c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc553a12-7762-467d-8c26-2d55ef7fcb07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6088cbe9-2dda-4576-9ac8-5ac43eecadf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49463b4f-face-47c7-9274-9fdd5ae99430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4215921-7057-4a36-beea-6df1d76356e2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c71c5b-b467-4938-8cb2-72cc6cde91fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4ce539-cc3d-47c5-a403-b0ccb4707b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f19289-aaf0-44ab-be39-32a9ab324856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e32ec4-30bd-4837-9b06-125d0898087e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29459b2c-eab4-476c-9907-ec677218e23b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d43a11f-edad-4a41-bdb1-4c7b31979274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e77e98-7b1d-4714-89b2-7e556254234d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541a5847-9b40-4259-94a5-633f59bb67dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f697e8-0f12-43cf-870d-4e6561029e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab3ff73-27c5-450f-abcb-8ed8e586c3f8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b00406-42f0-43fc-b90b-24de38d784b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5dc65e-222f-4977-bc09-fc6a28c17ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b36ceb3-8339-44fd-b9eb-d64753e3cd0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eafaa9b-dd04-46ca-9a9d-7f0386ea9f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28f75c6-e232-444a-80ab-75385573175d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723f42cd-3af7-46ac-8906-a1fe32ee9856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3588bd-5375-4480-8ca7-a01b52700430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8654d7-068b-4845-9b78-d7790b81a106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896282a0-542a-4654-a21a-82ad4c636219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea3d9f7-d34d-48ca-a196-10cd485f5917",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b65708-70a9-4d95-beaf-888511d00e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610c6b89-c557-4c6a-aaca-85a87d82855f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9217bb5-d3dd-4c72-ba4e-3b243a5b31f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e9b8e6f-e4f0-4ef2-b236-57286522c6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a01ff5f-52f2-406d-bc87-ec2fe3f2aaea",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4282b2b-8d4a-44bd-a285-17c20f77737e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036a94e5-1492-4123-aba7-967aca9c2238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f089f2-023f-4e68-87e7-dcca3b33db77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b5f522-c937-4480-b2b2-e8f7dbfd3e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2361f35-c965-48cc-920d-63ce23dcaee6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bf081a-e5c2-4fe9-bace-3e8870c95a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596db982-b8b7-4d2e-be72-1e8f0e82383a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "574372bb-3be0-428f-b521-4f7586407fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8542f852-4d55-41dc-b31c-c7632b1afc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f00e2dc-d8ce-444c-868b-573d8e8fe7eb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d5344e-7e35-4f67-88ca-660f25937982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2483d059-015f-4c55-8031-e47f3e97a906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdc6029-e768-46ca-9ee8-47ee1b78f31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf8edc3-0de6-40cc-9816-8a1aff032572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3aca54-e297-4ac0-825e-95e70cc2a548",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67dcfcd-a9f0-4c43-ba53-b81f9ad97002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71cfb070-02b9-494b-ba5f-44c129ee7a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9af8f45-469b-47a2-86fb-4a8e6eef991e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076f8882-e1a7-482a-904b-f4713c079d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55e0ad2-d898-4295-92e7-f5779c53bad3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301d0629-26e9-48cf-89b7-cf330368762e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a1ccac-bc36-4efe-8561-b7adcffda049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c43e44e-d861-4b60-b476-7c988b4fe433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad81d2ac-ac69-46b2-bf44-cfda47135021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e1c810-cd46-492e-bf34-709e58d0c855",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75b4d3e-0fd3-4703-9621-b2e18c61341f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023a1225-2ef2-4952-b4dd-d1946d3601fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dfca0f-f590-4e21-a142-9d2af1dc473a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0f45cb-6ecd-4c8f-b29b-d206305251c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e04a20c-2824-4de0-a6df-63a455714496",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe7267f-ae13-4f33-9073-a1814693e935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0a21e8-76c8-48a7-997f-4566804cfec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cabcc8-da75-411e-a548-2c05ea5ee4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0243c5-6a12-42a3-b173-0ce821d3a44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba58b43-4d35-4332-a0ad-b96983c38582",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433e6b86-9158-460b-ba17-1fbde150142f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152a9615-f76d-41b2-b8ae-2cbe916e30c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8b31f0-6997-4fd1-b4af-fbc13a124653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e92295-3ec7-494f-9d50-592afadb3146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0fe734-e011-419a-8009-39b7f236fd4d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d6fedb-533f-48db-b81e-092e9bed7bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4cf8db-7da2-4807-8467-dc9f818d268b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70aa7f0-a7c3-4bcc-aa27-95d2be3c6f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6f0685-c67f-40dd-b91b-4e2f73a12988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930d1232-ea3b-435b-a848-b732a608683e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f2acd4-b98d-4a3e-9c42-7a5885a2d7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2322a0-dff2-426c-914b-374ede809a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc7b8c8-b728-41a1-b9a0-ec7752759cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02804c7e-9a42-4e50-b2e3-632710af6dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4600fd0-e39d-4c6f-8d75-cf1d679a4b6a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de00b11f-6e4d-4d2c-b671-4662b02f66b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64c426a-ecf0-430c-906f-8fcb029fd0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3f14e7-7085-414e-9355-e9d8bbb84659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b507659-6156-4d6f-af34-b2942b3cf7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0cb121-0493-433c-b1bb-85a3f0c2de8d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4c0afa-8149-48cb-8768-869f751b9c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f637f5-fdcb-4cf6-8d8b-758ff306b66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c856a5-4a91-4b78-93b1-663f8cf100eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600501b5-66d9-461c-bf56-73c08e1669bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca25e685-e1c8-4f52-a209-9d39539321e0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b7c1ea-25e8-4d3a-b312-bc50133af893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6ee46a-0e53-46a5-98b1-c65e16a33c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4843b9bb-5d19-4b23-848f-2a69a020acf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de18b2bf-9377-4b42-924e-44016312dbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6086ee65-0348-4c54-a941-766b626b8686",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242b8aed-3d4a-4d38-9afd-8afda6ccb7e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce0aa5e-ae0f-4ac0-b20f-319c6ec7673f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e062abaf-b9fc-4c51-a4e7-2da159ac0e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd862f5-4b66-47aa-b2a4-dfdd843af0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afd0ef2-0a60-41a1-a34f-958ba3e3a588",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0332551-04a9-4f09-b36e-a47fc9a91a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c86136-22a3-42ed-b185-20af9e24e8fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a651e303-a4d7-4209-8872-d2fbf1f7976e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc1ab3c-abd9-430b-bdf3-cb7661e8f9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9da3230-f9be-48cf-a4b6-a01d034c77a0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2707490-68d6-4eb1-b432-0d321d46cdd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39263d81-a8e1-48f9-b582-2fb68d695222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373c70be-64a6-4b2f-8f34-a4ccb03f4537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a236c18-6aa2-4d2a-a561-6bee3fc1e4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdb7458-be69-4b00-9426-a42cab706838",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35aae47-9736-495f-bbb3-359045d7b0b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4875091a-1608-466c-a765-c599ab5ad96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d63e1e4-39d2-4b1f-b521-8fffd72500a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586e7368-86f7-40eb-b7d4-aed96d5a7933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2c183e-1292-4ba7-ae24-138b21c37880",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd95f10-3feb-4b9f-8597-bea1669f27f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64c54d8d-ad06-4477-9114-5fa80dbdfae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ca759f-6c6b-41d4-914b-bb35e86516ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878d9e2f-6e44-4ba3-a866-67eb235fb415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22fd016-397e-4bfb-bfb4-4c6fe4e9ead1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0845c5c-8f1d-4a9a-a8e7-f88e7f221a02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74081677-b8e1-4a76-9de6-bcda578fa012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9aba8e0-fe08-4a28-9e35-c70880067d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21af42bf-279f-4974-9d5d-fb85b21d034c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc7b7ce-07f6-4c08-9495-2d3cc91ab44e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542b4e36-eb96-4621-8567-61673daa014b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "460454c9-e6a0-4793-b4af-a62355606aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4f8cc0-b4dd-497d-b9fd-b9f68ffe8fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea38af0-0f04-4002-84f5-6c5925849f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2514adbe-047d-4323-8a27-db12e0966801",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3e9b9e-119f-4067-b1d7-107c78822b86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "667ab173-45bf-4c99-a070-719bb94659ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b102fd-8fde-477b-b61c-c19e73d65ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b13ad5-4109-4749-b21e-5168bd0dc37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fd8a6f-ec1f-48ea-953c-981f9bd3b607",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8eb40c3-a1b5-4f7e-bec8-e9e3204541b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b9d74eb-4112-4c7e-b941-c7b6317be150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "438e09ca-f86d-4cd0-97fa-a3a3ba2d4914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f74e79-03f0-433a-b08b-55456c0df35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7a16bb-6681-4e8c-b2cd-7a7dda517864",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f880fc8c-685e-40ab-a9cc-6100eab36ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc0030bf-d6bd-491d-b12a-c3f60d0ab78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915774fa-0cf5-475d-bdfa-4d5efee0abee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632401b1-5a52-4af7-98c8-cd9baadc0ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5153c61b-d050-46fe-8097-845f78aacf34",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d136ac45-5d56-44ca-8013-459379b01d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e781ffa1-fd2c-47b1-8e0f-ce6de8cd6887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200f0fcd-e7c1-4cf8-ba96-4aff360d6fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bb5164-baa8-4df7-b2b3-581acff99c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d50bdc-7e74-4dd4-9382-5a9321b7cd69",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b6ed19-bcdf-41c7-be9f-0848ed96bcc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d583145e-bd25-4094-b63a-00f3ecfbda14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a468d7f-b115-46f9-a531-54f3599a5050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a739ddd6-90f1-44bb-9f70-5c7c67479c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8836882a-ce1a-4368-bd95-e50c854ecdd4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589528d2-10ab-41ab-9b14-192dcbdeb9a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2281c010-617c-4f7d-aa8b-11b855a69d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d67d1f-9ed2-4e85-ac96-42c762a3afe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd83c2f5-35cd-431b-ab97-6aff01b4d1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034e803c-7ab9-4df4-8cba-30d72df8baf9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd48348a-586c-4de4-b9e9-33371ff2118d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dbe2cbe-a93b-423f-b211-3c0d02d96ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e7be89-ab7f-42cd-beb3-86a90a2ed916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aead56b7-08b5-4af9-8acc-5a7cefa4c9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab2a878-d45d-4119-85ea-8bed42c54b63",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1ae465-dd7e-42e9-91dc-7334d1b00479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5118f48-c357-4612-9aa5-87df215b55de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53685e69-226b-4667-ae71-049510922944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66f4306-aabf-4587-ae0e-e7aaed4f8c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121fa787-d64b-4df1-92c5-42e3a6703204",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30842f35-197c-41e8-9c71-81275031be8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfa53803-b0a6-43fd-8790-3bf5aa1d3c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4346949-2a84-4f9e-8937-7a7a7f119738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09616676-5c0d-4e70-aa73-c7ca46b952f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c73d12e-f339-444f-a185-84cd7afe07a8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbc36bc-d373-4e31-b171-6e2a046e1338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ea99d38-9b8d-49a5-9b99-5f86d4023816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56c9bd5-2f51-4e1f-bcee-4743ca10b075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7788fccb-d96a-4c9c-8198-d2677b13896b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fea6e00-202f-4e9e-9249-d693da097a27",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016a0902-e036-424c-930f-a84714b8237b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b33de124-cd40-47dd-925a-1ba65f62ed6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e91bd1-a8e2-49ae-8d86-b19fab7c5ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d5a0c0-2800-489a-af6f-b74e909d9dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1c795d-d69b-4ec1-bf31-b676ef2c57ce",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019136c6-26d8-4c5b-8b7e-4d28d960ce20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5decc12-8fd9-4c22-8d35-ba2226f1456b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e68c1b-7fd7-4102-b352-db4c1356e83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b9029e-a3f7-407d-8564-8393e820feea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab22431-0dc9-4c39-840f-3986a8920556",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aab64d1-78e4-40c6-9a0d-014d7c3962f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "843db27e-132e-4c77-a11e-ca42b3dbefca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5198e111-8248-44de-91c0-4892d5180b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b21b71-8fba-4603-b7aa-5f054d3020c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc08554a-da29-4973-b3ae-81b2d3edb0d6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b55321c-e6d6-49bd-9e0e-81fc298bc6f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40516cb2-e277-4a3c-9eb6-0c968a3da498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db86717a-535a-46a7-9e23-7685b723a47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f10fce-2cf8-485c-90ef-f7acbe022c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db857d7-3f62-4c3c-88f2-71515d6dfb9f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75f8920-8430-4891-890e-bc4f703f299c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5bf2fb7-6db3-4b8f-a994-3fcc4b501c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d286dd-7ce9-4493-bdda-56b8aef0de3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc49bd3-2f44-40f4-aaf3-98c8402f7a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5d7c95-9187-419b-85a0-e6c7408cb65d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376fa856-b3ac-4c68-a7a0-e25c08bc2793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7a84b4-aa5d-4326-b3f7-b557b2f20ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b81c1dc-43c9-4536-892b-914582d23e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0737b7c-d3c7-4b3e-9d78-6b7ccb4a38ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57300d29-e098-4ef6-9fa2-523d4b0377c7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d47faf0-4298-4dd0-9178-c1ed0dfa2f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe3b33aa-c034-400d-a550-7083edb903d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a0ac39-8320-4794-8dc7-6e84c627e06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf80a04-585e-424f-bf38-62924df85a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfa9998-ca40-4354-afbf-ef4a5e6eab42",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7929394b-f657-4955-ba90-6c11e0014b7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e28914e7-c7bc-4abb-9c09-3136979397c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e09c90-5b4e-4d21-b227-dfe8abfb2f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc16296-ea60-45a8-ae43-c0f948929da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecd973c-42dd-4b4f-bb67-62615bdce039",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c63ae1-b266-4c8a-bca2-054cccb3ff8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aebb869-02f7-4c64-bef6-0756db37a37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a79ce16-54e7-43b8-9374-4efcdab18414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23e55ec-3dad-42ff-b2f5-340df53b80fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0a5e36-3d1d-4187-bfbc-699e4a3fd521",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40aaacb3-cc4f-452f-abf3-7748b2cb9c22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5280f196-e047-43c3-a487-c2af5d9fb1e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe37d75f-5d95-439a-9fde-cdc7db21c4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7daa1fda-ec48-4164-8093-541ee7819bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bf703e-d90e-49a2-bea6-bf85faba2f0e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d37dc9-6ea3-4ebd-9df4-4e3b080afc6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64949b0-2983-4b8d-8b66-457f8ba272e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9813ce5-08c5-4d39-bc5b-d51233549891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8658b818-fb69-4c89-b85b-5bc9d860234c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3278e9a7-075b-4b53-a5e0-28d5b9826dee",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66082d6e-41ee-4199-9cdc-8ff81c6f1ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86e9a8cd-5b82-4b87-b44d-c0efa4478ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad2b5ad-3d83-437e-a5a9-7fe60be88d6f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f2ae4d-8569-4739-b1e4-3ad8cdf070e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441ea2fd-e2f7-4a0f-a81b-f4969c06fb7e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b04e99-43c3-4450-b297-238ce703e256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1985a18-13fa-4d3d-b8e8-773865cae3e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434447a1-2c55-47b3-963a-a848eb74967d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6643f6f-f30b-43f7-9097-d17fc56e83fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81afe9f-94c9-413e-9193-61d27c00a761",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae15dbac-5a19-409f-bf2a-e750383a0b38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dd04ce7-fcdb-482d-849f-6319139b4020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89126bed-e259-47a0-83f3-f76f91f4092b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e85df29-1d80-4629-9bd9-521f572625d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b30f45-20e0-4868-b369-e4cc6f475f1c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d1489a-5be2-4ccd-8f0e-4a2e9cc5282c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea6e66b3-80b1-437a-aa87-d2a3ff039692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04dbaa7-3091-4b6e-82a3-c66c00703960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2e3a44-ee32-4c21-b047-e710bad22032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeddc24f-9c1d-481a-952b-4d9403ae4bcb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0380ee-a8d6-4f02-979a-9a7869d556f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bda8883d-01f5-4023-b1b3-2f7a4fca2d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ba1b96-8109-4f9c-a97d-d5c1f3fdb917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b893e04-cbee-40d6-82ae-458ab00bc107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c680bd-6041-4919-aec9-3eff5512b58f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c866d67a-3236-496e-b7ca-676238319cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "513783f4-d7a0-42f5-863b-12bbf9fbdb0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee20366-7a0f-46a3-9c04-b9c76b891516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc5effb-72df-470d-adb4-b26b7fe37ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1459a5-d1b2-4990-b8d7-45732d430ad8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb442f7-db80-46fc-9735-c6c104b6d173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f6e0260-efbd-4f28-85a8-72c1f1596caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1bd22b-50c5-40aa-878e-3cbbe2f8f767",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1a4a9f-d8bc-4f16-8336-7c0bffe9052e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c635b91a-6e7d-4dc9-81a8-659851d44ca4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2f8f35-0ed3-4eee-a215-bcecbc63805a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98570de5-7836-4303-b7a4-0b3545838f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b01a5e-f3ff-4b58-b54b-5543c864461f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0789f9c3-71a6-41e2-b314-3f3ce5450b29"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14d3d5df-eb2d-48ed-874b-ea45b5b8097f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "536b3163-09fb-4164-86c3-8b9b490ddb28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9feb2070-e0f3-445f-887f-4d0fa69a0cd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23460061-d772-4249-9c06-34a1b19fb729"
                    }
                  }
                ]
              },
              {
                "id": "6303fab4-b2c6-40f8-abdd-aa7dcb7339ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "350e8ff2-db04-4c9f-bb90-fac48ab322c9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d45378f-9b33-4868-88d2-bacc25fbec37",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "96266221-d8e6-4dc4-a9a4-da2aba5a6219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274d98ab-368d-4faa-8a2a-717296fae77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65a142fa-0656-4189-834f-a6b77f4a2605"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cedce325-2fbd-4ae7-99f1-73d3a5d06065",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcc2cce4-5aba-431d-b106-1a7a7c45b35e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16a0a93d-0e6c-40ad-b19c-920e4aa21eb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84b6f2d8-9336-4aae-9a23-621df8ff0fa7"
                    }
                  }
                ]
              },
              {
                "id": "5535fdaf-4a08-40e1-930d-46ed8139a80e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "01fdcd1f-8896-455b-ab49-7c16fec965cb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5f36f8-8ac4-4dbe-82b0-50ed51a3bb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8d4ea4cb-55b5-4be8-98da-009106f1e354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4984c771-655a-4716-8afc-3d1ab0597f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ea3e8e-6a38-44ce-9b1f-c65b33c3d4fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bd670992-288e-4c04-9d0f-a6aa8bf49fe8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2827c7dd-4695-4a5c-a557-8c15f9b42ce9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3572a9a8-a2e7-4392-818f-8f8c2cb7cc82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7a41a0ca-ebcd-46bd-a2e8-daaf5407380e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be216e39-16cd-43c0-ad73-528a104b896e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e81aed77-5d13-46cb-ae90-42e54f4654a9"
                    }
                  }
                ]
              },
              {
                "id": "91880a19-2967-4539-b03d-2b8bc230d12d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e712e04c-b501-4eef-9b04-c63557545bf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a51d749c-f4f8-4cc8-b5b3-5b1de1113a39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2bb4d86-78dd-429e-9598-b2dbf9159782",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "966308c1-b480-4c96-9753-8ac4da29ceed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1662b26-7c8c-4f20-a585-e8f075a625cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7b9bdcb1-8244-4c36-9c26-fa75aabea077"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5501f86e-2ed0-4b61-9410-7cd1c9d277f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5e4e482-d3f3-4bc7-8f3b-8ec2c473912b"
            }
          }
        ]
      },
      {
        "id": "d41345d4-eada-4985-9af8-0a48b95392bb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f35a1311-14ad-4053-812a-b95849986253",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52d16ba4-ac39-404e-a97a-0773587b2314",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be05e612-5f23-4382-8077-2bebc2747c0b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f60563-1a2f-4448-9fe5-725fea111734",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3aa5a4be-abc6-4198-a6fd-818ba7555562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f3463d-019f-475d-b186-e103750fbadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef443f17-cb71-446b-9cb8-b6a924e83375"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "917ae849-0236-45b5-a40f-3c375e6311b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df31f1c9-1dca-4cea-957b-962c4ab6a3e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51264d45-2b3c-4d56-a9d0-fc78e3197f1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdbda9a6-2bb4-45ae-8a99-06c198526dd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e600d737-f5c4-4471-98f7-3e53179dd976",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6cd8cc37-21c1-43bd-b7ad-f1a8b78d1fcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32e7f35d-f143-4461-afae-c2c14170f6a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdab497f-93c5-4121-a985-19fb17748fa4"
            }
          }
        ]
      },
      {
        "id": "3353c53e-c6db-4bc5-9cd8-cf2a8e4fe40b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "566ee128-5f30-43ea-ab3e-bab300374e45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ec0046a-bc04-4a3f-b022-2d68069bf33a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5bdab22-05b5-4a2c-a734-f953dd9b3e8c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b9812e-037d-417f-bb6d-75f32cc7da91",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe213dac-0361-4015-aac3-930a023ad1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fa7773-0064-476e-bf6e-dda0aa74ebd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c994563-d028-40c1-8e44-ba75330596e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb89a6b3-f872-43e6-8bab-9d93e0a3112b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8a5bd42-3a2b-4265-8378-a9c7caaa7126"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab9598bb-9aa3-4f45-8957-a144fa3792d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f6dca0c-831d-40b0-9cda-66f73fb0316e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae7f3b25-0a39-4408-b64f-633355458fb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b9d51c4a-2414-44ab-b931-32ece5879139"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb028956-d9bc-454e-855b-b34efdd4d479",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "649871b9-56f8-479a-b23f-5b62f69e1360"
            }
          }
        ]
      },
      {
        "id": "53041cfd-b42c-4b97-8b32-34f06d1b4b5a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "69c5ced8-8e95-471c-9b8c-0c219bbd0b97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13172252-d62e-42e4-b84f-0c5b55b59690",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38423e64-e093-44f2-8e60-e13355b2c399",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8aa8c20-9f34-4bce-875a-6d5236c8f162",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31b72a19-b273-4cb7-8241-d95131abdb19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6007e11-6c3a-4932-9a94-dfd0944af0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ee18b0f-6863-426b-be10-507cf9f6c048"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09f6d297-7361-4f49-a230-70c7807e6d6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf579bc1-84e9-4f88-9e18-e97b9ff5de66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68af8c0f-c93c-4f35-8858-a5f88d020639",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a240b3a8-1dd6-44f2-889f-473a7053ed82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4a5a589-83d0-49f4-8714-be26367d1a7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f641a0c5-f3da-4774-a004-23e40b794e5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72c51034-a399-4a7a-a699-c0fc8ceb3d1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6264edba-d42f-4b5a-9253-e23e05617a16"
            }
          }
        ]
      },
      {
        "id": "79eca5f2-a1b9-46ab-a2dd-42b3f58298f1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad041c90-e0e9-415e-afe5-7257ac5d0652",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e577a4d2-2733-4163-bb21-4fbf1edaa92a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "de239e0b-57f2-49e1-87c3-cab566013ac4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c050920-ae1a-4866-8b31-1a58d7a8391a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f5bce12-7c0f-43bd-adb5-4ba4b5b6ca2f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 146.37301587301587,
      "responseMin": 21,
      "responseMax": 8884,
      "responseSd": 636.2950390598484,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1712795722911,
      "completed": 1712795768266
    },
    "executions": [
      {
        "id": "1d4bb8d7-9008-4e33-8a83-d25ddbcaa5fe",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "af2ccf46-71f0-4fa7-9090-f60cb7fe491a",
          "httpRequestId": "6efe1eec-e179-4bf5-be51-e72a42c5c793"
        },
        "item": {
          "id": "1d4bb8d7-9008-4e33-8a83-d25ddbcaa5fe",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9b13e391-2ccc-4311-8dd6-f054a9734bd1",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "232754df-475a-4293-aca8-466bd5f388ba",
        "cursor": {
          "ref": "ef4a58b4-1754-482c-b1b2-6e6ae102d078",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2310e96e-523e-42fd-b8b6-10c9d5ad3b5c"
        },
        "item": {
          "id": "232754df-475a-4293-aca8-466bd5f388ba",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "84114528-e6a8-4f82-9265-c3d3f33396e9",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "6d7f51fa-f073-4613-8ad9-e34573698c93",
        "cursor": {
          "ref": "6e185187-1d96-4ac4-8142-929697588244",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7bc25415-9c19-4d06-a965-553fe0ca63b5"
        },
        "item": {
          "id": "6d7f51fa-f073-4613-8ad9-e34573698c93",
          "name": "did_json"
        },
        "response": {
          "id": "a187a3ef-50da-4031-9005-4e629ce24722",
          "status": "OK",
          "code": 200,
          "responseTime": 461,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99d1b0d-eb20-415b-a0b9-156480eab98f",
        "cursor": {
          "ref": "ef34c9a1-0b0d-4454-9e8b-5c33deebcd55",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "258079aa-1e2c-4f06-9f60-25debabb2f53"
        },
        "item": {
          "id": "f99d1b0d-eb20-415b-a0b9-156480eab98f",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a41e79b-83df-436f-8d94-6466b8c5be58",
          "status": "Not Found",
          "code": 404,
          "responseTime": 518,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99d1b0d-eb20-415b-a0b9-156480eab98f",
        "cursor": {
          "ref": "ef34c9a1-0b0d-4454-9e8b-5c33deebcd55",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "258079aa-1e2c-4f06-9f60-25debabb2f53"
        },
        "item": {
          "id": "f99d1b0d-eb20-415b-a0b9-156480eab98f",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a41e79b-83df-436f-8d94-6466b8c5be58",
          "status": "Not Found",
          "code": 404,
          "responseTime": 518,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154e0881-6c3e-45a9-8f1b-c420b8412195",
        "cursor": {
          "ref": "4955b5bd-d4d5-421c-9598-994a17584e25",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "25d3299c-b872-4e50-adb3-5c98b848963e"
        },
        "item": {
          "id": "154e0881-6c3e-45a9-8f1b-c420b8412195",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0b87fbbb-1c58-427c-803f-ec8fa0e4acb7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cf5ef4-61e0-4c96-91d3-61efb6b7dfc0",
        "cursor": {
          "ref": "38e3bb01-e6d1-454b-ad28-c8d855611339",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "48622247-84f4-43ec-84d3-8acac384ded6"
        },
        "item": {
          "id": "48cf5ef4-61e0-4c96-91d3-61efb6b7dfc0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4319e69a-74d0-4532-9101-09bbf3b042a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed416119-eb0d-4904-b17b-71f50b18cf61",
        "cursor": {
          "ref": "02be140f-c352-45bd-9c13-9f8d7e19c0c5",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6ca7a854-c23f-498c-b44a-75213b184946"
        },
        "item": {
          "id": "ed416119-eb0d-4904-b17b-71f50b18cf61",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e5078ac3-678c-4936-95fe-d2fa09f309e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb69260-a1ed-4237-aabb-8f391e5ba138",
        "cursor": {
          "ref": "0cb38546-8bfb-4b4e-9569-c4b815cd86d0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eea63caa-3dd3-4e07-95aa-ea0d7ad5fb4f"
        },
        "item": {
          "id": "6eb69260-a1ed-4237-aabb-8f391e5ba138",
          "name": "identifiers"
        },
        "response": {
          "id": "941964a7-50cd-4006-ac11-53beeb22b91b",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd384514-7777-48d9-954b-c58136a5938f",
        "cursor": {
          "ref": "e1aaf1c4-050a-4e20-a381-069569022ea2",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f88365d4-313e-4237-ac09-9367ebf95812"
        },
        "item": {
          "id": "dd384514-7777-48d9-954b-c58136a5938f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cc7111a9-5d55-4c41-a9a8-7760cfccdf8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1fbe9f-ee5a-46da-b5b4-82fde140d0f0",
        "cursor": {
          "ref": "dce6bf10-f15d-4108-906e-041b03d50f42",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "057b2044-eccc-4b08-aa2c-259bb8d7c391"
        },
        "item": {
          "id": "7a1fbe9f-ee5a-46da-b5b4-82fde140d0f0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "980f13bb-1a12-4b2a-9e15-15808fe433d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b9f781-f716-4aac-bcfe-62e806337451",
        "cursor": {
          "ref": "ea582382-d8ae-4e0b-8df2-1600f7c73eb6",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "184dfd02-17d0-4f03-86fe-68359a860725"
        },
        "item": {
          "id": "34b9f781-f716-4aac-bcfe-62e806337451",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1058a142-724b-4c92-a627-c9f70660cd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b384675e-06da-46a4-90d7-825077aa099f",
        "cursor": {
          "ref": "a5f15f8a-6cf9-40e2-9d5b-eda12cf5ec63",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cb1904e7-8878-4e83-aee2-ee157cbe484c"
        },
        "item": {
          "id": "b384675e-06da-46a4-90d7-825077aa099f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f6e33b29-6033-4c1b-afef-80ea87bc2e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc066941-d4f6-4d1f-b5d5-fe3f080a34e2",
        "cursor": {
          "ref": "4758f0e8-14db-47ae-9189-134d5ac0d27c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "694cf0cf-c582-4313-beab-e7cd103d81b5"
        },
        "item": {
          "id": "bc066941-d4f6-4d1f-b5d5-fe3f080a34e2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "282b2f2c-9122-4d9a-b38d-41b156048f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbea386-f45c-44fc-8892-e611a70257d3",
        "cursor": {
          "ref": "64733b69-1f20-4e6d-9fc4-1b4001205e30",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a23b4f07-8cb6-4ea1-af8e-135165025f88"
        },
        "item": {
          "id": "bbbea386-f45c-44fc-8892-e611a70257d3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "371fd287-3731-4233-8dff-b24a35c0d148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041cf7df-fe20-49c3-bf29-4becd8c252c1",
        "cursor": {
          "ref": "a9965069-94b5-4ea0-a846-4359415ae0b9",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dfd867a8-3e95-44b4-a446-d73adc3374ad"
        },
        "item": {
          "id": "041cf7df-fe20-49c3-bf29-4becd8c252c1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6ff92369-2b29-4d00-bfe9-a7c60abc2b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b60ddeb-04a0-40d1-a27a-5f869fceaa00",
        "cursor": {
          "ref": "3d653e2d-5953-44a2-8719-58679c8a91ee",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "44f403bc-9f31-4299-aa7f-a4d3969bc969"
        },
        "item": {
          "id": "8b60ddeb-04a0-40d1-a27a-5f869fceaa00",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5cf105ab-0e07-4ef6-abaf-77d5fb69f9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee5eb7e-7a08-4b1e-8eaa-b40b72936dd4",
        "cursor": {
          "ref": "eb6dd972-f06f-444d-9f24-111036790b7b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8137ed5d-e472-4fd4-92ca-3fac665ca892"
        },
        "item": {
          "id": "3ee5eb7e-7a08-4b1e-8eaa-b40b72936dd4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7b341af3-3690-462d-ad85-65f8a99bb8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cbe5c2-91a4-4b71-9e29-a08ad1838066",
        "cursor": {
          "ref": "0e6e4753-f516-4761-9d6c-e456a89a5a04",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c3dfccc0-c063-4b96-bdd5-ff66550b2b64"
        },
        "item": {
          "id": "44cbe5c2-91a4-4b71-9e29-a08ad1838066",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "990a3dcb-f518-439d-8914-f6c679cfca67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cfdcf9-9409-4336-9c4a-dd1315d59a41",
        "cursor": {
          "ref": "83af7a42-1254-4013-bb5c-ce3a12384c8a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "440c8e1a-6051-41d9-b15c-f7af10a52f27"
        },
        "item": {
          "id": "84cfdcf9-9409-4336-9c4a-dd1315d59a41",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "435f4810-e7ae-400c-a8ce-3fd359f7e866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cac8534-2c9c-4705-ae5d-34f4259ebb90",
        "cursor": {
          "ref": "710db22f-b165-4d9c-914c-0a1c6c98b331",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "337fe223-cade-46bc-8441-06b370d7521f"
        },
        "item": {
          "id": "4cac8534-2c9c-4705-ae5d-34f4259ebb90",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "91934318-fb57-4bd3-aacb-a5b8dadd690b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e352a1-0b6c-4d6b-8e07-70e4feb3fcd2",
        "cursor": {
          "ref": "46a747a3-02ed-43c7-9a86-fc5b65e3b240",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bba3ba10-f16e-495c-8394-041f6bc83cb3"
        },
        "item": {
          "id": "a7e352a1-0b6c-4d6b-8e07-70e4feb3fcd2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "64169518-15a6-475d-8797-cd379a606aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6361b456-eb80-47a9-a762-ca98c77ba714",
        "cursor": {
          "ref": "d68abe7c-6ffd-4755-ab65-3c01ba99392f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "475426d6-144e-4c38-a647-6275576512a2"
        },
        "item": {
          "id": "6361b456-eb80-47a9-a762-ca98c77ba714",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5bfa8bd6-86c7-49a8-b837-afc47492ccc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c318ee1-0f3a-4e86-a26b-1acef3824750",
        "cursor": {
          "ref": "41db4b96-e3d8-4069-9d99-4ad9e13cf92f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "17ac8605-8d12-48be-b877-235dba114e32"
        },
        "item": {
          "id": "1c318ee1-0f3a-4e86-a26b-1acef3824750",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4fa0b0ed-6f77-4bdb-b365-3cca1673a3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636fa7e0-e221-473c-8e19-30b440f38c69",
        "cursor": {
          "ref": "3423f35d-b728-4073-99fb-3e04808d1be2",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c4fe2e9a-7aed-4dec-97d0-5abc75c988a3"
        },
        "item": {
          "id": "636fa7e0-e221-473c-8e19-30b440f38c69",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c111049c-9874-4574-b2d7-0e07c8e5424b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16a0c93-9c4d-4d97-839d-634875d047c1",
        "cursor": {
          "ref": "3864c2d2-a886-43b1-9603-87b9af2af296",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4c0b4571-38a5-4085-bb17-18c993d1dbf0"
        },
        "item": {
          "id": "f16a0c93-9c4d-4d97-839d-634875d047c1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "eeefada5-e075-4c0d-b64c-e6f886ac41e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df6eebc-51ea-4357-8b28-5e170041a2be",
        "cursor": {
          "ref": "8872be18-ac2a-4626-bb6b-5d2a588614d1",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e64b617c-4dfe-47c3-bf35-360271106842"
        },
        "item": {
          "id": "6df6eebc-51ea-4357-8b28-5e170041a2be",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cf02794b-411e-4680-918a-e6a682f20e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c39cef-8adc-4312-b407-05f01d1209f2",
        "cursor": {
          "ref": "2a3de43a-c413-4a99-9332-ef35a8c31646",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dd7b985d-a395-48bd-a34a-32126a810686"
        },
        "item": {
          "id": "39c39cef-8adc-4312-b407-05f01d1209f2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3baedf1e-dc24-48d3-ba32-b3b0d86a7c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512662ca-bf91-4bc6-9597-22889b7667dd",
        "cursor": {
          "ref": "c6bfc86d-ac21-4f52-9737-449c365da9c6",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "940c3461-8ee8-4721-be60-001a1f574f46"
        },
        "item": {
          "id": "512662ca-bf91-4bc6-9597-22889b7667dd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "057707a8-e58e-4bdb-8472-e9b8db89c7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce754966-ae6e-4080-b64c-a18b55bf64bc",
        "cursor": {
          "ref": "265c9583-12de-4274-9c9c-d9568ed04403",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d2a6e7a9-8f77-4201-8c4b-5f1ffdba558f"
        },
        "item": {
          "id": "ce754966-ae6e-4080-b64c-a18b55bf64bc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "25482be9-4c53-47de-a6e4-512dcaf0e75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31900696-b153-4982-949e-33be329f3ed3",
        "cursor": {
          "ref": "473e73bc-8386-4b4b-89bc-356b78d990bc",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "360cb41d-2ad8-41b5-8d18-c1981d97157c"
        },
        "item": {
          "id": "31900696-b153-4982-949e-33be329f3ed3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b3f3149b-52f7-41c5-82e4-f2709efdce72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40f57dc-81e9-42f6-887f-d287e0112d5c",
        "cursor": {
          "ref": "9d074f2c-d4a2-4f83-877f-eae26adccdf7",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "78c31ecf-dfa1-4bce-a968-7436db5c0435"
        },
        "item": {
          "id": "b40f57dc-81e9-42f6-887f-d287e0112d5c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c1768221-ed24-4253-a2d9-1a3fb6702ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81407cfb-5b1f-4411-b4c1-52dc71824b0c",
        "cursor": {
          "ref": "848cde51-71e7-43b4-9147-1e0ae8ef073f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d805ad50-4170-4642-b14e-433068d172ab"
        },
        "item": {
          "id": "81407cfb-5b1f-4411-b4c1-52dc71824b0c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "39e35a41-d4f3-4f60-85fc-d7a22dd46e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662230cc-4402-4e12-aee7-ecbef8f0fdc2",
        "cursor": {
          "ref": "550b6928-46b9-4bec-942d-c6f05da76e47",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "396bdec3-a341-4415-bce3-98ae6a1be437"
        },
        "item": {
          "id": "662230cc-4402-4e12-aee7-ecbef8f0fdc2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b4e687ee-a92b-4f96-beac-22225d689875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b362842b-d138-448d-9dff-7dbe7fc392e8",
        "cursor": {
          "ref": "4ffc1513-cf07-4568-9e96-42cf0c5e8007",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b627af73-0236-4490-910f-e3bcc1288cba"
        },
        "item": {
          "id": "b362842b-d138-448d-9dff-7dbe7fc392e8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c6f6555e-c657-4978-a017-760f7e35904b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da2b556-04b4-4730-843f-72f072119a83",
        "cursor": {
          "ref": "e8e9a992-eb49-4817-a764-536bc49379c5",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "09a9b79f-481b-490f-b552-b6270276a9e0"
        },
        "item": {
          "id": "1da2b556-04b4-4730-843f-72f072119a83",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "39fce00b-ef3e-4093-8624-27af110d7afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea95aa6-2111-48a4-8d88-0a1795107995",
        "cursor": {
          "ref": "02f9a97e-4255-4015-a8d3-64d60a9e7029",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a1503b65-0b71-47d0-a971-460aa0c453e5"
        },
        "item": {
          "id": "2ea95aa6-2111-48a4-8d88-0a1795107995",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2252ed45-ca9d-422d-ba80-bd5a6aaa6cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc80fa2-fe5b-4af8-afd1-6eec3c228f0f",
        "cursor": {
          "ref": "95cfd980-c867-41b8-90ea-a9a40ea6ff8a",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e2ba6dc7-9358-442a-9651-663305b0e6c9"
        },
        "item": {
          "id": "dbc80fa2-fe5b-4af8-afd1-6eec3c228f0f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d9180cdd-e7c8-4e9f-828a-8adecfa8a53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b242b800-5881-4ba0-88b4-b634613151fc",
        "cursor": {
          "ref": "c9d48e48-a2ac-46d9-ad8a-4c72a981613d",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bf3a635a-363d-4e0d-8295-ecdeb8ad1439"
        },
        "item": {
          "id": "b242b800-5881-4ba0-88b4-b634613151fc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2fe6c868-a9d0-4cc0-856f-20fb7fcfe0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f891d5bd-022d-4e1c-895b-0ef95b496155",
        "cursor": {
          "ref": "dcdfeb80-4ebc-4782-bb2e-876baf98dc88",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4cb5d2ba-535b-4c4a-8213-b050e5d5288b"
        },
        "item": {
          "id": "f891d5bd-022d-4e1c-895b-0ef95b496155",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "209f3a47-a173-4e56-b9e3-3e859a55461b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0617bc6-c912-40e9-9e55-466b0dcd46cd",
        "cursor": {
          "ref": "9ae4e2e8-3e84-4b0b-b28a-8b80b7e9a076",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e96f3a37-8ab6-45cf-abc0-fe4fa42a6c9b"
        },
        "item": {
          "id": "e0617bc6-c912-40e9-9e55-466b0dcd46cd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2c9b0c59-2780-4f5e-ad62-6b7ae53c4eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdad9099-ce27-4536-99c6-1006c9b1f3e4",
        "cursor": {
          "ref": "fb547267-4db2-41c6-8e2e-1aa9b6c2896e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2dd43244-e9eb-4e85-b1da-d0de34025f5b"
        },
        "item": {
          "id": "bdad9099-ce27-4536-99c6-1006c9b1f3e4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "662d7008-9dce-49c3-b287-40b97b8e9f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8838fa0f-1edc-4efb-b7bf-1ce546c42733",
        "cursor": {
          "ref": "c14fae6f-4e7e-4682-bc4f-5d6dbce51834",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9349044c-1a71-49ec-9b54-9d1a381a2351"
        },
        "item": {
          "id": "8838fa0f-1edc-4efb-b7bf-1ce546c42733",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "07614831-2b21-4d25-8f1b-ea3d688af77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383c9866-2238-4d69-868c-43dfd90ed077",
        "cursor": {
          "ref": "1bb1b738-3905-49e7-95aa-d05a0f88c870",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9ee26b30-7ce1-40e3-aec3-c300f92215be"
        },
        "item": {
          "id": "383c9866-2238-4d69-868c-43dfd90ed077",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "be913ff1-8453-4d44-b850-c9c9a93256e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd7e00f-8b88-4722-a7ab-ef2647787a3d",
        "cursor": {
          "ref": "e8d69310-8bb6-4ec0-a185-d34f1d4a2525",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f3f71890-af21-43eb-87df-668df6862b61"
        },
        "item": {
          "id": "0dd7e00f-8b88-4722-a7ab-ef2647787a3d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "50251ee2-2ef8-406a-9cef-87c7c0796747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e42a18-a291-44ab-af19-68c825e06307",
        "cursor": {
          "ref": "fbbb05a4-ce37-4db9-9391-ec6be0f07f84",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e09e21c9-1496-485c-94a8-ad823dc3c98c"
        },
        "item": {
          "id": "d3e42a18-a291-44ab-af19-68c825e06307",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1ee92ae0-8b4e-43a4-ad5c-f676af2f5c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fafba9-fe52-46b4-b697-62db61d8bdbc",
        "cursor": {
          "ref": "d42ac5e5-6d87-4e1e-869a-8fe839e7159c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6b0acb03-365b-4ea4-8de7-ed43083c4823"
        },
        "item": {
          "id": "59fafba9-fe52-46b4-b697-62db61d8bdbc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3af8e9de-0b49-4bfc-b9fa-37056c43d14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133e85f9-8e21-43b8-a036-23b95b985c5d",
        "cursor": {
          "ref": "c2282e3c-11eb-4794-99a6-e918eed7e9fd",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "832c6393-de01-49cb-9aa7-895d23ed04e4"
        },
        "item": {
          "id": "133e85f9-8e21-43b8-a036-23b95b985c5d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bbb896c5-d97a-43fb-80e5-f6f5061a659f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70031a74-a8d8-43bf-8487-6c961a4e4459",
        "cursor": {
          "ref": "38d2aab2-78c1-450b-8dbf-c4b7660b5d2b",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b59a61ba-00d2-4c66-b9ec-b430e5f4a2c4"
        },
        "item": {
          "id": "70031a74-a8d8-43bf-8487-6c961a4e4459",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3d2c0fd4-d16d-486e-9dc5-012c02c9df28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a45c16-7266-4f28-bac0-4def1c00ff65",
        "cursor": {
          "ref": "7dbd53db-6d24-4ce3-af5a-eb368ff287fa",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9788eb67-edc4-46df-985b-489eb0b62fef"
        },
        "item": {
          "id": "92a45c16-7266-4f28-bac0-4def1c00ff65",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "57c3ab41-c9cd-4d5f-9537-f93720d68724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3452ca9b-ed4f-4f24-b9d9-cac1d8483395",
        "cursor": {
          "ref": "b5adb894-dd79-482c-beec-534974a9f3b3",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "80af93ad-5014-4151-9ddf-42cb6cf57d44"
        },
        "item": {
          "id": "3452ca9b-ed4f-4f24-b9d9-cac1d8483395",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fab5baa4-d465-4a3c-b051-1857749cdabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbc83a7-e034-4222-8d5d-ba20be6422b0",
        "cursor": {
          "ref": "2e2d8ac5-b2c6-47d2-bb13-cc17d16681de",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "db0247a4-9fc4-4c18-8032-7927b46e4757"
        },
        "item": {
          "id": "4fbc83a7-e034-4222-8d5d-ba20be6422b0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c5a5fbe8-6322-42d4-8a0d-510706466d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9516f7e-4dd4-4a26-9f40-ea43e173c42e",
        "cursor": {
          "ref": "502e6743-fcf7-4be5-9f92-7a2a09ba93be",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d8cc9e3b-420c-4e2a-9fe5-7ddc1f4510ef"
        },
        "item": {
          "id": "d9516f7e-4dd4-4a26-9f40-ea43e173c42e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a161ec4e-251a-4b23-b5a4-ecf5114b63e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676b580c-49db-40e8-9180-35130d3ee4e7",
        "cursor": {
          "ref": "9f397592-196f-43e7-9336-996e52625e01",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a762eba3-838f-468e-a39c-fb22d234376e"
        },
        "item": {
          "id": "676b580c-49db-40e8-9180-35130d3ee4e7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ab58afe0-8bc5-46c8-9061-f7f3f99c4f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4c79c2-bbc1-4e16-a3c8-821123e5fed6",
        "cursor": {
          "ref": "736d61fe-6dfa-44d6-abba-92e32742552d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5e2c5f64-ce23-4de0-bf14-4960cf78f1b6"
        },
        "item": {
          "id": "7d4c79c2-bbc1-4e16-a3c8-821123e5fed6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3b37c1d6-b5a6-4ec4-8aed-6e29834fc7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6eb245e-2ec7-4337-be03-fde9b27b013c",
        "cursor": {
          "ref": "8bac9076-0748-4036-9795-381a70fe2e37",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c7d267f5-b033-4eae-9307-789dde618f12"
        },
        "item": {
          "id": "c6eb245e-2ec7-4337-be03-fde9b27b013c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2e7315a6-eb89-46d5-ad07-62aaa2926925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c262b602-03d6-4afc-b155-b1034e95769f",
        "cursor": {
          "ref": "ca9f0de4-2d7d-4c98-9036-ca7eea329832",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e36c1201-2a31-428f-a7b7-20997d3f8894"
        },
        "item": {
          "id": "c262b602-03d6-4afc-b155-b1034e95769f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8b7a0abb-ab27-45bb-8a78-a359a0bb21c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76348cc-7cd3-4f28-b617-59215d79b3c7",
        "cursor": {
          "ref": "5ee369bf-a4d4-4197-9b3e-23e65854730e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1fb1998a-f8ad-4c8f-8870-26b43c7f679f"
        },
        "item": {
          "id": "d76348cc-7cd3-4f28-b617-59215d79b3c7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d6425b6c-02ed-43b8-9802-abea791c5d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371f75c4-d3c8-4bcf-8cb4-3868403f1554",
        "cursor": {
          "ref": "2dec89e4-81cb-4bd0-bba8-688fd3188b10",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3ca04b5a-dbcc-4db8-b4ae-88829386f747"
        },
        "item": {
          "id": "371f75c4-d3c8-4bcf-8cb4-3868403f1554",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1d86496e-47f2-4fdb-9daf-f531ff118da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ba1d6b-75b6-4120-a704-922baff1ecac",
        "cursor": {
          "ref": "a4f8af67-640a-46ec-83b9-19f30bb6f443",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "654a0bf3-9b6c-4d8f-bb0d-0ec1dfbc7e65"
        },
        "item": {
          "id": "a9ba1d6b-75b6-4120-a704-922baff1ecac",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a857a84f-c2f6-4099-8ece-82a9e376e9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c45e9a5-3687-4a8f-8125-d5417243b1f7",
        "cursor": {
          "ref": "864c7055-dac4-406e-b396-5aaa36fc5e42",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "63b42304-992f-481e-9716-7cdbf04da428"
        },
        "item": {
          "id": "3c45e9a5-3687-4a8f-8125-d5417243b1f7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9e7b27e9-b432-4d77-acda-29682bd5075e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88953f24-4559-4561-9bc9-bf4bb90dec1e",
        "cursor": {
          "ref": "a98ca874-94d4-4484-b678-7f3b0e6a44a1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "944192ba-c732-424f-89c5-328f6250e3ed"
        },
        "item": {
          "id": "88953f24-4559-4561-9bc9-bf4bb90dec1e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fa35bb0a-53a9-4441-903d-9cb739cc743e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82216e33-7c94-4f8b-8301-3f7c8bbf1772",
        "cursor": {
          "ref": "36013a25-9468-41a4-a4cf-6442d47f70e5",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8abec29e-871a-41be-8000-c2cb30b4923d"
        },
        "item": {
          "id": "82216e33-7c94-4f8b-8301-3f7c8bbf1772",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "677fc714-7f90-4c8f-8150-4490495efc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc444288-06ab-49f8-b475-5ea75541ab81",
        "cursor": {
          "ref": "72304e63-5b8c-4ae8-bc91-bb7b6fe40d4d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "332c80f5-41d5-40e5-a6a9-ed553db2a546"
        },
        "item": {
          "id": "bc444288-06ab-49f8-b475-5ea75541ab81",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "58c4537c-a195-46bf-acb2-a5890c840c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b4f409-1d26-41b1-b7a6-536e7b74aedd",
        "cursor": {
          "ref": "5bbe22fa-1df8-4b26-aa2c-b131ceff546d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "261c5d35-fa98-4a93-9047-0f256537279e"
        },
        "item": {
          "id": "54b4f409-1d26-41b1-b7a6-536e7b74aedd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "25018de5-6023-435d-acb4-4d56c793c962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832a5c92-7ea1-4045-a41d-81ae0c25dfb8",
        "cursor": {
          "ref": "09a0918e-adfe-47e2-bc3c-0a196c700289",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b10a6f97-d2b2-4876-a70d-046bd1312fe6"
        },
        "item": {
          "id": "832a5c92-7ea1-4045-a41d-81ae0c25dfb8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7ed9a97c-d005-4d62-83a0-0a91e711e44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2a8b01-faa0-48e4-a461-140bc845beb4",
        "cursor": {
          "ref": "370d2d74-6407-499f-a080-a8d6be87fa03",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ee993192-f708-4f72-88ed-4fadcf2139bc"
        },
        "item": {
          "id": "7e2a8b01-faa0-48e4-a461-140bc845beb4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "034223d4-1cea-45dd-9e55-606396818dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff954113-4e56-4685-88ca-5af9a4572bb4",
        "cursor": {
          "ref": "a441f409-7093-46e5-9756-8668719d20ff",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "eba0f87f-127f-4366-9467-1d0f522f7fa5"
        },
        "item": {
          "id": "ff954113-4e56-4685-88ca-5af9a4572bb4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "608dfb2b-df23-46cd-853d-c18fbdaf6ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5852f0ad-ca7a-4c28-ab9f-53a9e3a17e59",
        "cursor": {
          "ref": "8d3ba31f-e681-4edb-89a3-dcd44173b121",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f8ee3c1f-cfa3-45b3-bcbc-4379782229e9"
        },
        "item": {
          "id": "5852f0ad-ca7a-4c28-ab9f-53a9e3a17e59",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "386fa5b1-195a-40f8-a62a-2fa1cb234f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4087aa01-3e0e-4c28-a002-89d5c216a875",
        "cursor": {
          "ref": "266a7ff3-6a6d-48b2-a6c3-5df974d9362f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "40d08c7a-5da3-4ad3-9517-b437cb81d5f9"
        },
        "item": {
          "id": "4087aa01-3e0e-4c28-a002-89d5c216a875",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c5c55133-e8d4-4631-ae3c-a2105b73b835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6c7e40-4fb4-442c-9aad-9a07e79e699f",
        "cursor": {
          "ref": "6bde4d99-0929-41e4-89e7-1d6cef794053",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ca32ab32-a44d-4f79-bf3e-ce91fde3ba0a"
        },
        "item": {
          "id": "7b6c7e40-4fb4-442c-9aad-9a07e79e699f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a23bcb5f-c08c-42e3-ab7d-676221d403aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614237d4-8a70-4355-9693-aa33d91da501",
        "cursor": {
          "ref": "8df6530e-5d63-4bbc-be45-0a6d6ceddc77",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6cce93d3-d677-4887-b215-4527c032d3f1"
        },
        "item": {
          "id": "614237d4-8a70-4355-9693-aa33d91da501",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9c6aab4d-70c7-45c4-b03e-073b66f36069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307aebba-eca8-42a1-9316-eb48fc617445",
        "cursor": {
          "ref": "e6e2f3fb-a304-4a60-8912-848cc0a890b5",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fa98297b-a710-4841-b004-3cb4c7455eef"
        },
        "item": {
          "id": "307aebba-eca8-42a1-9316-eb48fc617445",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "408dc7ce-235d-4731-95c1-e17ef6bcb469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3c0d3a-cfd7-4eec-862f-2435f035479f",
        "cursor": {
          "ref": "27cbaeb9-2cc2-44ba-8e21-19b3cf6fc614",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f000db84-a341-4227-a293-29addc43f79b"
        },
        "item": {
          "id": "ce3c0d3a-cfd7-4eec-862f-2435f035479f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ee65f608-82bf-4916-89d8-2011463d2d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb03725-0c8a-422f-a987-aacab3f5e4cf",
        "cursor": {
          "ref": "14848e9f-7689-41f6-b8df-3d098da86dd0",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b1eaf377-9ef1-42fa-b16b-c7797365549d"
        },
        "item": {
          "id": "dbb03725-0c8a-422f-a987-aacab3f5e4cf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "08f9b03e-e753-497c-8594-728a36788491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e8ee1b-2634-4d46-b5c8-c715ffa41e85",
        "cursor": {
          "ref": "a413d4a1-4642-4635-a1f0-9d4e080ae056",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "55d78c48-bfb6-4762-8645-c007838d091e"
        },
        "item": {
          "id": "a5e8ee1b-2634-4d46-b5c8-c715ffa41e85",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "102b93a2-cf75-4887-89b4-f55c9b849927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0ed632-5691-4bc1-bff0-07c3dc1e0d0d",
        "cursor": {
          "ref": "554801f3-27de-48cd-aa46-639a93e8795b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1cc227a8-9aef-4b08-8607-b213db035a5d"
        },
        "item": {
          "id": "ee0ed632-5691-4bc1-bff0-07c3dc1e0d0d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e45439ef-329c-4500-92b9-9620773e4472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee83e53-55e7-4328-80b7-905ce310808c",
        "cursor": {
          "ref": "94b9209f-cc72-4c4f-9f6a-8eaf02e08c50",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bb30f12f-9056-4584-8d6d-a02c0e44bd0a"
        },
        "item": {
          "id": "fee83e53-55e7-4328-80b7-905ce310808c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f5fa5466-e021-4278-b0a8-1cc393dad0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a52e723-f61f-46e2-80b4-11db1350ca2c",
        "cursor": {
          "ref": "2075a4dd-7ecd-4dc1-8cac-8e0163bb9413",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9f18d18b-a8b4-4afc-af2b-422533b0d9c5"
        },
        "item": {
          "id": "7a52e723-f61f-46e2-80b4-11db1350ca2c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f5ffc605-14ed-4802-8b66-9996055d5d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d60f4e-fce2-4d6d-93a1-34ef24e2191f",
        "cursor": {
          "ref": "2b3a7ca7-a338-4f98-91b3-b6e70b2f7e9a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ab1d2c96-f13e-4a32-acfe-684077ec473f"
        },
        "item": {
          "id": "d7d60f4e-fce2-4d6d-93a1-34ef24e2191f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6202b456-37cb-4476-93e1-3cefc86a64e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b980f24-3986-4e12-8040-a4700910c0d3",
        "cursor": {
          "ref": "82268509-afb0-4c80-bb27-a2cb0e4ee08c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e026f8c1-8633-45c2-b014-b8ed7765ef9d"
        },
        "item": {
          "id": "3b980f24-3986-4e12-8040-a4700910c0d3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0c4eb8b7-c6b2-4946-b506-60ce72a827ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccb86ab-dba4-44b9-ad20-02283599e6e0",
        "cursor": {
          "ref": "0177e558-f871-4226-84e7-11ee6845f220",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6a55764c-e71b-4cc2-a467-37652654d691"
        },
        "item": {
          "id": "cccb86ab-dba4-44b9-ad20-02283599e6e0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "268f8b44-d103-4e26-ac88-c45a4d613671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5209391-86c2-4c82-ae7f-4505e6cf7672",
        "cursor": {
          "ref": "85e0e00c-7ccb-4aff-a788-70c94ef782c1",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "944eeb81-81d1-4006-9a57-30d55718c490"
        },
        "item": {
          "id": "f5209391-86c2-4c82-ae7f-4505e6cf7672",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5b7b0be8-90ba-43d0-8294-b13025618469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee36ec08-98d2-4d05-8cce-e2d6ee665c68",
        "cursor": {
          "ref": "47773c6b-98e3-4de5-8627-c6e17c5ef036",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7be8f02b-8374-4d08-8afa-d39543d7b2a3"
        },
        "item": {
          "id": "ee36ec08-98d2-4d05-8cce-e2d6ee665c68",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f9a64c29-f12d-41f8-86f6-7fd0593253e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ef8e40-d3ba-4998-b9fb-67c33e446808",
        "cursor": {
          "ref": "fb81c18c-2f26-4342-a336-4f574338e797",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "03f28519-49a3-45d1-be4c-6045fc1f7872"
        },
        "item": {
          "id": "17ef8e40-d3ba-4998-b9fb-67c33e446808",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fc71e154-d5a9-49ca-814f-654cf27baae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0ebfbe-a811-46b3-98e4-fd0f196a40fb",
        "cursor": {
          "ref": "f03bc1cc-a326-48af-94ad-ac95b7d9f3c3",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cbe75749-5389-4e63-abd6-8a38b0d52e67"
        },
        "item": {
          "id": "9f0ebfbe-a811-46b3-98e4-fd0f196a40fb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b7b0fe0f-c422-4c44-b217-046e18020b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb1b681-2f7d-4cc5-8bcb-0da08ffbb04a",
        "cursor": {
          "ref": "5cd3cda0-2f6b-4e18-8a11-3b39f2a19b7c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "01d44463-4be8-493a-99e2-7b9addc89b77"
        },
        "item": {
          "id": "8cb1b681-2f7d-4cc5-8bcb-0da08ffbb04a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "50843c5b-794c-421d-aae9-9597973d09c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ec6467-8efc-4882-b2f1-7cf41e470ce1",
        "cursor": {
          "ref": "d3b16a09-15e3-491d-96fc-3f2681119e4d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1f301693-7a9f-4bc4-8229-a41c0af9ce80"
        },
        "item": {
          "id": "76ec6467-8efc-4882-b2f1-7cf41e470ce1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9f4099b8-5772-4e88-a764-cb69d6ecd1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f51e65b-121e-4ee1-a465-9618ba17bf9b",
        "cursor": {
          "ref": "2d5409a1-2807-4642-977a-72acfb27e13c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "46d805ba-d15c-4228-a0e6-d8e028ad28cf"
        },
        "item": {
          "id": "1f51e65b-121e-4ee1-a465-9618ba17bf9b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5948c8a5-c843-4724-9154-9a0055c54252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149cb105-dbcb-4878-a451-87b0c5c15232",
        "cursor": {
          "ref": "18e8ca64-7ed7-4794-9257-f0a6514ad13b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "86f2680c-bdca-4156-901b-cb05688e009a"
        },
        "item": {
          "id": "149cb105-dbcb-4878-a451-87b0c5c15232",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e30b6a37-e1fa-4a6a-8eee-c424c52b38f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cbdcf3-7162-4338-9b25-c4c9ac0b1964",
        "cursor": {
          "ref": "e8aa91ca-ef6f-416d-9511-dd677ed1ad0e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8acc492d-c637-4e4b-8712-848dcf7766aa"
        },
        "item": {
          "id": "a7cbdcf3-7162-4338-9b25-c4c9ac0b1964",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e82472b6-32fc-4aee-9bea-427b4a249094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e261004-75ea-4af1-9df7-fd739d6454a8",
        "cursor": {
          "ref": "1c41315a-b0d1-487f-af35-7ffc14ed58cc",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "285f68fd-e836-4b2e-94e3-5dbc1eb82ad2"
        },
        "item": {
          "id": "5e261004-75ea-4af1-9df7-fd739d6454a8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "77cbdad3-d505-41ec-b0ed-000c721f00d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aac46ce-cd28-49b5-90b0-412f0371f821",
        "cursor": {
          "ref": "676b8e54-f5e3-4bba-b106-b8db11a08563",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "68243595-a4d0-464f-a00e-42cf51022c55"
        },
        "item": {
          "id": "2aac46ce-cd28-49b5-90b0-412f0371f821",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b98652a5-eeba-4b76-8f86-02de4e24ac1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a15abc-bd9b-4b8a-9238-b29db0dd544e",
        "cursor": {
          "ref": "e4ff3f92-54b1-421b-aa35-fe0f10b1bd93",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "52765428-0c5e-41db-8826-f9e26e81dc20"
        },
        "item": {
          "id": "42a15abc-bd9b-4b8a-9238-b29db0dd544e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "29c6ca1b-039c-4758-b3ef-30bef4637d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563bf0be-a3fd-4296-ac03-16abc73817d4",
        "cursor": {
          "ref": "c44c8ab4-8823-4457-b69b-07d5392ac50e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9989520d-eb0b-4f2c-bf15-da79461b951d"
        },
        "item": {
          "id": "563bf0be-a3fd-4296-ac03-16abc73817d4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d8f5c391-fc84-4eda-8385-8ccc4af5563c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949e0338-0842-46cd-9304-d8e0c295a858",
        "cursor": {
          "ref": "e46ab806-4ca4-4120-b615-72dee2a19cf4",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "55fe44fc-fa64-408c-982c-61e5242dc233"
        },
        "item": {
          "id": "949e0338-0842-46cd-9304-d8e0c295a858",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "13ab7799-8d76-4229-a941-8f4c3154726c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337f2100-bd1c-4e76-9465-49a07875188b",
        "cursor": {
          "ref": "3a0776bc-6386-48c4-8e5e-b924f20caa59",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e1746c5f-b1b3-4485-8001-54abeda5c5b3"
        },
        "item": {
          "id": "337f2100-bd1c-4e76-9465-49a07875188b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "206b200e-251b-44f9-8301-8c4ac8827356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131ff3c2-1e32-4d21-ab77-89256e12de92",
        "cursor": {
          "ref": "886b27ba-cac8-4865-86e6-c24600d6ec42",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "328a3285-3931-4bfc-9e8d-2f25364e51fa"
        },
        "item": {
          "id": "131ff3c2-1e32-4d21-ab77-89256e12de92",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5ee0176a-80dd-4524-8fa7-fdd09df7f450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a1bb06-275a-4f15-9ee3-eaa62b5c354c",
        "cursor": {
          "ref": "099f7e43-3e7f-4c86-b209-b2caf1095473",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cd4bd720-f7ec-4425-9f2b-b8594898f54b"
        },
        "item": {
          "id": "70a1bb06-275a-4f15-9ee3-eaa62b5c354c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "22586488-d4cd-4ba1-9c0c-aabd3d549975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fe9cc8-70fa-419f-8d3e-7de3c0351a9d",
        "cursor": {
          "ref": "5b8e1699-d300-4c35-8afe-19ce10295468",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b86d35da-29d8-45a6-946c-9ac74fd16dab"
        },
        "item": {
          "id": "48fe9cc8-70fa-419f-8d3e-7de3c0351a9d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9647c909-d1c3-4349-bdc7-2faa36e4ad00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d55d3e1-7ab0-4152-a59f-624bb2e26ace",
        "cursor": {
          "ref": "04f5ee1e-17dc-4c53-b3d6-4c01eddac985",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a9dfda54-7bfb-49cd-a207-2a1630875db3"
        },
        "item": {
          "id": "9d55d3e1-7ab0-4152-a59f-624bb2e26ace",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "12bbd586-c674-4e80-81d0-8b30d891b25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aafc205-8ea4-4144-94a1-5221348e96d2",
        "cursor": {
          "ref": "a73c1741-dfd5-4055-a554-a5c6cbfae15c",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6c098db8-37f1-426a-b9d6-a8c9b1be7265"
        },
        "item": {
          "id": "4aafc205-8ea4-4144-94a1-5221348e96d2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "129d4629-4621-4b60-8c88-1c4a1e5e7580",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb37433-8e56-4608-8e9c-8f87fbcf22a0",
        "cursor": {
          "ref": "77d878ec-809b-49b8-99ea-f5a21d59ae72",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "87abe3c2-1ee9-4928-a181-37d770063b88"
        },
        "item": {
          "id": "eeb37433-8e56-4608-8e9c-8f87fbcf22a0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "62fd383b-d21d-426a-a6b0-901af664cd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6cdb2946-2992-470b-bea8-9e99fb4db565",
        "cursor": {
          "ref": "e5377e27-4799-470a-90a1-af91a81f2868",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2b55f390-2651-4556-a8af-f3f1a1bdf634"
        },
        "item": {
          "id": "6cdb2946-2992-470b-bea8-9e99fb4db565",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b68660e6-3280-46cb-b6e3-93f17ee4973c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ff3245b0-2e09-4fd5-a643-4e5d2e887e76",
        "cursor": {
          "ref": "7bb18d12-6cd9-484d-b83d-88b66a0ca542",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1a87774d-5751-43ad-8078-d3eb1c48d6cb"
        },
        "item": {
          "id": "ff3245b0-2e09-4fd5-a643-4e5d2e887e76",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fc4db2eb-615a-48ec-963a-7fef6e415b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "408ff4d1-27f6-4c35-88d6-93ba5bf38262",
        "cursor": {
          "ref": "2ee70e95-b0e1-4e1e-aa33-c434e2b687f2",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1d195261-2f49-4d3d-8095-37f844692908"
        },
        "item": {
          "id": "408ff4d1-27f6-4c35-88d6-93ba5bf38262",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c0e9201c-47a2-4c49-818d-f6fc9ff4f8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4047f9bd-4a67-43f1-b148-53a703fc7662",
        "cursor": {
          "ref": "1dd5b6d9-f4c2-4a7f-b1f8-3a057967709d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0e2ffd7f-bf73-44fd-9b9b-08481a830fb3"
        },
        "item": {
          "id": "4047f9bd-4a67-43f1-b148-53a703fc7662",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2a54b269-efde-48aa-b752-94a4a201da94",
          "status": "Created",
          "code": 201,
          "responseTime": 8884,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc7eb69-e283-4dbd-96be-4bd5008af3b6",
        "cursor": {
          "ref": "122650a9-648d-4ddc-b5ca-9baae46ef8ee",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "20714cf6-82c6-4d2d-8aea-77cecba5aac3"
        },
        "item": {
          "id": "4cc7eb69-e283-4dbd-96be-4bd5008af3b6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7d9fd4fd-4d0a-41f6-a29c-988494b7adc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4d02f5d2-d11e-434b-9612-13516417b0da",
        "cursor": {
          "ref": "df2e9bac-ab41-4abc-86e5-d07d46f58d32",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5694f70c-716f-4e5e-8d85-38ff4d1293f1"
        },
        "item": {
          "id": "4d02f5d2-d11e-434b-9612-13516417b0da",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e7bb32c9-781b-4746-b2bf-f5fd1a247a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "dc32a5d8-c6fd-4b4f-8137-b9e0f3be4d12",
        "cursor": {
          "ref": "e4da5d48-78a3-49bf-af7c-525a89664a0d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c767e3c1-4259-40a4-98ee-73b9b95d6eb0"
        },
        "item": {
          "id": "dc32a5d8-c6fd-4b4f-8137-b9e0f3be4d12",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a3f78e96-ca52-472d-b29e-c4ebfe92afaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a57c1a-d2f2-4929-afde-4fc26487ff51",
        "cursor": {
          "ref": "ba71614b-8717-4054-af7b-709538542588",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "00acfc81-dd7e-4a07-a255-52b034d14c00"
        },
        "item": {
          "id": "89a57c1a-d2f2-4929-afde-4fc26487ff51",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c9755074-a102-4751-9d96-134f6fd6d3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72db030-3e23-4fe2-92e5-43b011f1cdd9",
        "cursor": {
          "ref": "16fc941d-9c28-45fe-95a1-81ff74fad790",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3d03ad31-8a7d-41b3-9509-e60df043b9ed"
        },
        "item": {
          "id": "d72db030-3e23-4fe2-92e5-43b011f1cdd9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "60b0cac5-f370-4694-a85d-a0a0fdf433bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe183b7-3a4b-477b-89f0-1974fcc07ae4",
        "cursor": {
          "ref": "83d31142-26c5-4ece-9478-2b9036ceefd0",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "347564be-0a3a-4930-be52-0a61e35e6b6e"
        },
        "item": {
          "id": "afe183b7-3a4b-477b-89f0-1974fcc07ae4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "164c196f-987c-4ec0-a26b-806969ce103f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd9538f-2270-47be-a77b-cf29b01d7790",
        "cursor": {
          "ref": "8aeb533d-5bcc-441d-85f5-4d3fd21447e1",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9e97883d-af68-4526-83b0-84bc76b7c4e2"
        },
        "item": {
          "id": "7cd9538f-2270-47be-a77b-cf29b01d7790",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2100fbe4-210a-4974-a712-16cf8cd691a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5293103-a6fa-4535-a33a-73138ce958d3",
        "cursor": {
          "ref": "1bd95288-bb91-459d-b2e7-99b5e5c4edce",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "66539106-72a5-49d7-ae93-2b093812dc51"
        },
        "item": {
          "id": "e5293103-a6fa-4535-a33a-73138ce958d3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e6b86afb-57de-4699-91f9-5e1bdf480424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c57a8a3-461f-47ff-a05c-7dcdbd8d8f59",
        "cursor": {
          "ref": "bd45d3ea-fafb-456b-b6a9-e9d874792d2e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "40d6178b-6a6c-47f0-8dd4-399fb8d503ba"
        },
        "item": {
          "id": "3c57a8a3-461f-47ff-a05c-7dcdbd8d8f59",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1787e9c3-39af-482a-99cf-45a2a8d6dfea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8a8de9-c32e-4903-a6bb-f8d83ec64453",
        "cursor": {
          "ref": "09f7a77b-6a92-4966-9258-bc58feabe56f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "13884230-195e-4e50-b5be-a2f26192524a"
        },
        "item": {
          "id": "2c8a8de9-c32e-4903-a6bb-f8d83ec64453",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ce815b6d-1a67-412a-95d8-059202e774bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b70787-2a4d-4f37-8841-31fcf3860da7",
        "cursor": {
          "ref": "1b3a540b-779f-432d-b0be-24ab54ee905b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7fbd7e16-de58-44fc-9eb8-90efbcd31af3"
        },
        "item": {
          "id": "b2b70787-2a4d-4f37-8841-31fcf3860da7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6aabbc08-e5b5-48ad-9061-efc1581fe5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a447b7-cd0a-4d91-9254-db09bc9a0009",
        "cursor": {
          "ref": "c5e1a02f-1cac-428c-8fe1-afcdfd81db84",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8b3a4a56-4dbf-4137-aa30-b5e3d495b4fd"
        },
        "item": {
          "id": "a4a447b7-cd0a-4d91-9254-db09bc9a0009",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c6ca3273-c9f1-4f4b-8e09-bfd3c2a86811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c3f511-d040-4501-bf87-6881097d528b",
        "cursor": {
          "ref": "621471c9-f15a-4da5-874e-c5959c9fba1d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a9356afd-0205-42b4-9e95-bbae951f8560"
        },
        "item": {
          "id": "02c3f511-d040-4501-bf87-6881097d528b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "61865763-74a1-462b-8952-197ae1359843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642142a2-b439-445d-9e8d-b7e33c4aee69",
        "cursor": {
          "ref": "e5d26466-0800-46be-a891-85d048c25bbd",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "54221b65-bda5-48bb-961f-b32916120cba"
        },
        "item": {
          "id": "642142a2-b439-445d-9e8d-b7e33c4aee69",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dcf41ec7-3a11-496c-b829-c362cd922523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da76a15-e14d-421c-8cb3-0088b30b54a7",
        "cursor": {
          "ref": "325fd313-e565-4e0a-b424-89dce69d06e3",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "236997d1-7a75-4144-b356-d519026f0524"
        },
        "item": {
          "id": "3da76a15-e14d-421c-8cb3-0088b30b54a7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "869bcb91-bc5e-4e2a-86d5-f739611be5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56627323-35ea-4e43-b6c3-386bb408b5d0",
        "cursor": {
          "ref": "44f3684c-5195-4601-934f-a5a988efbb86",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b576650f-717d-4eb5-82ea-310c6d540e5f"
        },
        "item": {
          "id": "56627323-35ea-4e43-b6c3-386bb408b5d0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "510fbd83-3cbf-4103-9612-fe9728929d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f790f06c-6bad-4222-a967-43aa90c16564",
        "cursor": {
          "ref": "b0041dca-672c-460f-92d8-ae037aeca9e8",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "141151bc-ec65-4376-a1fb-1afda84e14c8"
        },
        "item": {
          "id": "f790f06c-6bad-4222-a967-43aa90c16564",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0c26e53b-eb19-4d67-b2c0-991466d439f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0e42ca-d660-43cc-9330-c0122f4d6147",
        "cursor": {
          "ref": "45705e95-a62e-41a9-81cf-3b39fe7fd917",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1d587b42-d50f-4a2e-a2fa-28579520b68c"
        },
        "item": {
          "id": "da0e42ca-d660-43cc-9330-c0122f4d6147",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6791cd5d-db20-4fbb-a7a1-996c18408339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6405d37-3a19-40c4-87d2-1707fb4021f5",
        "cursor": {
          "ref": "f4e25f18-e0e3-4f43-a983-43efe2677b04",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8488d92c-033e-4fb9-84ce-49dfa580051f"
        },
        "item": {
          "id": "e6405d37-3a19-40c4-87d2-1707fb4021f5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a753a44e-7800-491e-9cfb-2758ceb79aec",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "9950fb20-5d07-4038-a7ae-1b0d1a0be8c7",
        "cursor": {
          "ref": "8b177bb5-941c-426a-9f63-43aa195d8efd",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a13615f5-2c15-4134-9b76-c47c0cbd640a"
        },
        "item": {
          "id": "9950fb20-5d07-4038-a7ae-1b0d1a0be8c7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f259852e-e057-467d-b388-22422368c27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4398bf-8cc3-42da-803c-0633eba44883",
        "cursor": {
          "ref": "7efa6cdc-8c1f-4ce2-a51c-cd333699f3ce",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9df3f74e-32d2-48a5-8279-dec530b54580"
        },
        "item": {
          "id": "ac4398bf-8cc3-42da-803c-0633eba44883",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f143b37a-34ee-4b9c-b07d-0844f280159d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdab81b-2294-436d-8a32-9ff4c96b51a1",
        "cursor": {
          "ref": "d0210715-82aa-4e70-af99-cc215e5d1934",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ae6ff872-7e79-4958-86ba-decc9a0de3fb"
        },
        "item": {
          "id": "dcdab81b-2294-436d-8a32-9ff4c96b51a1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "66b3c641-ecc2-4226-866c-9bd77139857a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abda1688-e6aa-4c12-a74a-e9daf6536975",
        "cursor": {
          "ref": "93e73532-7caa-412a-aa98-c558dc69750c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9a5e61b5-d526-4861-8a97-3ec6a16ce710"
        },
        "item": {
          "id": "abda1688-e6aa-4c12-a74a-e9daf6536975",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "070f9977-fdac-43fc-a8a0-96a3ca582154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645f14ae-c027-4b6d-a774-f996c3180948",
        "cursor": {
          "ref": "936c2f49-0384-4647-9a4d-15f1bb2362d8",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e9cb118b-3f92-4f31-b59e-e561b87aa564"
        },
        "item": {
          "id": "645f14ae-c027-4b6d-a774-f996c3180948",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a14d1844-0d58-40e0-828f-025f632e109f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caf9121-29e6-49a1-869f-2dacad9c25fa",
        "cursor": {
          "ref": "ea7c201f-ddd1-4f49-9c49-921c66b8ff73",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3b1b2611-4586-4c10-bed8-72d35a570272"
        },
        "item": {
          "id": "0caf9121-29e6-49a1-869f-2dacad9c25fa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b59ed89b-0967-43c3-8822-7b2376192439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32609544-9e90-439d-ad03-44fd844c3244",
        "cursor": {
          "ref": "5e14fa2a-1c68-40f9-93fc-744212214509",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6eeab97e-fd49-4605-aee2-e5c343f42557"
        },
        "item": {
          "id": "32609544-9e90-439d-ad03-44fd844c3244",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a1649ac2-3012-44c8-8f38-4b8cb77d7d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f1162a-1c8a-4344-942c-372322b91f74",
        "cursor": {
          "ref": "74610cbf-a647-47d1-b98c-7cdcbc1160b7",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cc1afa65-8992-48f2-8502-81c85fbe5903"
        },
        "item": {
          "id": "49f1162a-1c8a-4344-942c-372322b91f74",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d0ef3894-8bca-4d30-b36f-22fd20616988",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "2714b3e6-6675-4b67-9ec3-04da52189e2e",
        "cursor": {
          "ref": "9b784151-9242-4a27-91a4-b57a30386b42",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "247b4e8c-7697-449e-a8ee-619ff8177e42"
        },
        "item": {
          "id": "2714b3e6-6675-4b67-9ec3-04da52189e2e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "abe12c97-990a-462f-a63a-d94a930670fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4154163a-855b-4c88-979c-5328d2b26dca",
        "cursor": {
          "ref": "38c29cd4-b123-423e-a969-9f69f6e08be4",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "977774bb-779d-4d5e-b551-a2f8c65cdb8a"
        },
        "item": {
          "id": "4154163a-855b-4c88-979c-5328d2b26dca",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "292d39c1-3e8e-40fe-b459-4774afe28510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885087f4-344e-420a-835c-4877bb6fdb77",
        "cursor": {
          "ref": "5ff0316a-562f-4251-8e93-8ae1bbd8665f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3294b27c-44ca-4d7b-a939-d0f8ab3073ce"
        },
        "item": {
          "id": "885087f4-344e-420a-835c-4877bb6fdb77",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e3d9cba3-42a4-4f75-8a58-9a04b0f1e1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee271241-c49f-4d67-a4f9-4609ea0fa7fe",
        "cursor": {
          "ref": "b04be41d-6179-4a80-832f-8bfa2e482e6e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1c8dfacc-98cc-4d4a-b8a9-3c2ada41a5b3"
        },
        "item": {
          "id": "ee271241-c49f-4d67-a4f9-4609ea0fa7fe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "249126b1-2b7a-41f7-9b61-8b131d897852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc06929-b303-4bdd-8c6a-1bea7ff547fa",
        "cursor": {
          "ref": "3163ad38-e625-4420-b5a2-085d447d3ef9",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9dc645f4-0385-4d20-bdc6-549be5d3d7b7"
        },
        "item": {
          "id": "ccc06929-b303-4bdd-8c6a-1bea7ff547fa",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "03c8569a-ad5a-44d0-ae1f-8c678efc9528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2394860d-9699-47ed-b689-d8a3906ec384",
        "cursor": {
          "ref": "895bd620-b357-4b38-93d1-d9896bba53cc",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6e4fb7ca-29fe-45b2-9b70-fd079138a084"
        },
        "item": {
          "id": "2394860d-9699-47ed-b689-d8a3906ec384",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "50911554-71e7-46e1-ab5f-c6ccb132ba05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6131e883-4876-4157-92b8-38fd3e6a1584",
        "cursor": {
          "ref": "6baca69d-f62c-4efb-8c9a-09b5ef73c98f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4e526452-b288-4d80-9923-0f37cbd7ec61"
        },
        "item": {
          "id": "6131e883-4876-4157-92b8-38fd3e6a1584",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ddfc7463-f0e6-49d6-bc3c-d2e5923b9c5a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "4f8b6e67-5f39-41f4-9a75-866381d354c2",
        "cursor": {
          "ref": "e06a64a9-0cc6-4d17-b880-6a109228bb37",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9f710541-ac51-485c-92ba-ac393780265a"
        },
        "item": {
          "id": "4f8b6e67-5f39-41f4-9a75-866381d354c2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6e9c17fb-25ed-4752-859c-7884055ac7ff",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "c9176a08-71f9-4079-849b-e46e6974e85d",
        "cursor": {
          "ref": "8bd96957-9903-4942-a14f-3105dab42307",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "31df3636-bd43-4100-8521-d39093e037dc"
        },
        "item": {
          "id": "c9176a08-71f9-4079-849b-e46e6974e85d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a80eab52-4244-4a27-aa74-0f88aa941435",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "a05f3031-cdf2-4d18-8cc6-8dc94ee670fc",
        "cursor": {
          "ref": "da11ef26-d411-4dbb-8b4d-dd5510ff41b4",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fd040367-391f-45a8-bc01-fde985bb55ac"
        },
        "item": {
          "id": "a05f3031-cdf2-4d18-8cc6-8dc94ee670fc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c540d557-3be6-4d5f-996a-ee525c3bf67f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "58fede8f-369d-4385-b84b-42855213fca6",
        "cursor": {
          "ref": "65ace0ff-d32b-47c2-a5f7-ebd24578c18f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4f59226f-e0ff-404f-a9f1-9bcc1d0e7be5"
        },
        "item": {
          "id": "58fede8f-369d-4385-b84b-42855213fca6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bddcc2e0-a1ea-40f7-a315-e9ec9e7a5bdf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "14d47816-c78a-46b2-afb7-2d3263ae3217",
        "cursor": {
          "ref": "c16417db-6fbc-4ac1-b510-fa38ed2202da",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8ae2d53d-8fee-41dc-8e00-1bc41e5bacd8"
        },
        "item": {
          "id": "14d47816-c78a-46b2-afb7-2d3263ae3217",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7d576d72-562b-41af-8d2d-4e0ccdc3c1e3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "2118abcf-38d8-4e20-ba38-217ffb284149",
        "cursor": {
          "ref": "ee4905e4-b6c6-40f9-8398-303a75f75b71",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "abf99b7f-5be5-4f9f-9123-23c18e4fbf76"
        },
        "item": {
          "id": "2118abcf-38d8-4e20-ba38-217ffb284149",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bcd6e0e4-62cf-4b2f-9e6a-3e75f914c823",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a766c7-d450-40de-a150-32a1c87a64db",
        "cursor": {
          "ref": "34f9332c-d515-42ed-a695-a7eb152f6a48",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "45a5e3ea-cb3d-4767-8d28-22c00534d398"
        },
        "item": {
          "id": "97a766c7-d450-40de-a150-32a1c87a64db",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1582e3d1-97f7-4e82-8035-a064d9f12064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d392ae48-bc57-4d86-a0fa-1249158f92f4",
        "cursor": {
          "ref": "cd25f917-e78f-45f8-88fd-25bd31945669",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3ed97a68-e3d5-4364-923b-3739de6a5b4f"
        },
        "item": {
          "id": "d392ae48-bc57-4d86-a0fa-1249158f92f4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "525ee454-d7b0-49f2-8330-f24fb682a5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc051ab-7f48-42a5-8a26-c76f03d4177e",
        "cursor": {
          "ref": "044db189-3f7a-4393-b786-e0eaa1c82111",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d02717bb-a5bd-4cb4-84e7-48ea50d50364"
        },
        "item": {
          "id": "dbc051ab-7f48-42a5-8a26-c76f03d4177e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4b473a2b-a9ff-469f-99d8-9df3a270cea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d928e4ca-b826-4026-90af-0da472bc28c8",
        "cursor": {
          "ref": "86186b93-6567-49a0-ab61-c1834633243d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "26e93d42-ae82-4275-8f4c-c9799f660d45"
        },
        "item": {
          "id": "d928e4ca-b826-4026-90af-0da472bc28c8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "702493ac-a1e1-4ff7-bc0c-92cd4a9ce707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98950464-c8cd-4764-9eab-7c67c3d3d2b2",
        "cursor": {
          "ref": "7d6ba885-8995-46c8-9d04-2106fce6c5e7",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "86449863-cbe5-4caf-87c6-3ecbf627e9fa"
        },
        "item": {
          "id": "98950464-c8cd-4764-9eab-7c67c3d3d2b2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3998ecc6-a7e6-4651-b323-9c3b1e969566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982d98bd-dd48-4c67-a6a8-c30e78568d40",
        "cursor": {
          "ref": "c7dd6922-9eb1-4fb4-b325-95d3606b8e8d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c4507a89-c62e-4495-9f8e-7d3b9868aa52"
        },
        "item": {
          "id": "982d98bd-dd48-4c67-a6a8-c30e78568d40",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b2703c52-19aa-475a-989e-e80e68e424f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5159ac8f-8495-47ab-9ce7-b64eba226dba",
        "cursor": {
          "ref": "577e0dda-d13c-4dd6-ae08-1cf3ec03d8a7",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aca74d45-46dd-4bb2-b644-dcd1dbfee78b"
        },
        "item": {
          "id": "5159ac8f-8495-47ab-9ce7-b64eba226dba",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "926ff8f9-b721-40ee-aa55-fa316b7feea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41630e49-232c-4ba7-92e6-2a7a58c45bde",
        "cursor": {
          "ref": "b84aa2fc-0d77-478e-b77f-e526a2d9945a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d2831428-8e3b-4324-aaad-5721250113bc"
        },
        "item": {
          "id": "41630e49-232c-4ba7-92e6-2a7a58c45bde",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "11619f27-4817-44af-a373-654a1091ebe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9f2055-b977-40a5-bc15-1f3179819599",
        "cursor": {
          "ref": "c9b377dd-b818-402c-aa09-b5097c31045a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "db60dc98-2427-4e16-a215-0f9767f74254"
        },
        "item": {
          "id": "3a9f2055-b977-40a5-bc15-1f3179819599",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cc2b4322-334d-4f7b-bf99-d87df36db97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0fe95d-ca9e-42bb-a30c-680098989d6d",
        "cursor": {
          "ref": "28e165d8-1854-48bb-ac6d-c28653b3b634",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0ff5636a-1b03-4203-b1fc-130da23a69c8"
        },
        "item": {
          "id": "fa0fe95d-ca9e-42bb-a30c-680098989d6d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "84caea1a-0c85-4991-8d28-c78e4324c7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d1f4c9-6925-42fe-9026-00cecb9a7138",
        "cursor": {
          "ref": "aa3b66a1-bcee-4df0-b15d-281faab72683",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "239a9614-5333-4084-aea6-aeadeae12b73"
        },
        "item": {
          "id": "47d1f4c9-6925-42fe-9026-00cecb9a7138",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3d2576fb-e3f6-4114-9e69-d30997fec6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d623b0-7394-4430-8e49-65ca6ae9fc8a",
        "cursor": {
          "ref": "a362fde0-c994-4ae8-aaaa-2b6331685e34",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b5f070c6-0138-447f-9e4a-8c9e245d2c46"
        },
        "item": {
          "id": "97d623b0-7394-4430-8e49-65ca6ae9fc8a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "710c0978-95ab-4647-bed3-6d92a766ee71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803d96e5-b067-418a-81e5-db6be01451c5",
        "cursor": {
          "ref": "198c76e2-bab8-4d9a-a51e-f08aa87ba623",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a37473b7-d2d8-4a57-90b8-305f36069ea7"
        },
        "item": {
          "id": "803d96e5-b067-418a-81e5-db6be01451c5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1deb8c70-48ee-4a4d-b272-d4a15f01b597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb087acd-70a5-4426-93ab-f9287ea4c6fa",
        "cursor": {
          "ref": "bc9b169f-bc64-4698-bad1-ac427bdc7af9",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b5125674-1a6d-49b5-a7e1-b00553449433"
        },
        "item": {
          "id": "bb087acd-70a5-4426-93ab-f9287ea4c6fa",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1c0f99bb-e314-47f1-95cb-b68f977af75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2eaddc9-2e1e-48f8-9012-0c4b7f79c1f5",
        "cursor": {
          "ref": "91776045-46ec-4c93-a88c-aaf8ca733b5e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "afb2d5cc-0f49-4e63-a3ef-45f56ae6b382"
        },
        "item": {
          "id": "b2eaddc9-2e1e-48f8-9012-0c4b7f79c1f5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2e6df416-6f14-4a80-9ff2-6a5f100fe926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1453a4-fde9-4988-b39c-f536df345bb9",
        "cursor": {
          "ref": "5b0dd28c-37a9-4a55-8593-1445c3302748",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a812d713-d912-4901-96f5-72b62009b5e7"
        },
        "item": {
          "id": "ce1453a4-fde9-4988-b39c-f536df345bb9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ae43876f-5cee-4b5c-a7d5-cd589a6bae4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609e597e-b99f-4bfb-b255-b24dac8a3c1c",
        "cursor": {
          "ref": "e0e1594d-869c-4d74-a34b-12dcfdae181d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8a6a6a5f-0cd4-4957-8d70-008c34e2499a"
        },
        "item": {
          "id": "609e597e-b99f-4bfb-b255-b24dac8a3c1c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "01063960-88a4-45e8-b6a4-e4732d36d2a9",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "4a1569ae-f947-49de-94d9-6c1642774f41",
        "cursor": {
          "ref": "e8c30140-919c-43cd-972c-c856aa2637b4",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e1cf4518-b603-44d2-8503-10e4a3982653"
        },
        "item": {
          "id": "4a1569ae-f947-49de-94d9-6c1642774f41",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "452ed08b-6595-4443-b911-64990446c08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903db3a0-a094-4399-a972-70a0fe8f5fbf",
        "cursor": {
          "ref": "874407e5-9329-4905-bb8b-e4724b34a0fc",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1acede8a-be9d-41e0-8d97-a18244858385"
        },
        "item": {
          "id": "903db3a0-a094-4399-a972-70a0fe8f5fbf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "39fe3fd8-e30e-4562-bc02-c7530eca4ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83fb967-84af-4c2b-aac6-db3c9e8c994f",
        "cursor": {
          "ref": "710eec48-c2ed-4182-a78d-df02d12a014d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4e811f22-5169-4115-8aec-2f62c787cfdb"
        },
        "item": {
          "id": "f83fb967-84af-4c2b-aac6-db3c9e8c994f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2ff93caa-c7c7-4bc2-aad0-e1d7e583e75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e259868-f240-4374-bb71-1be75f13a3e5",
        "cursor": {
          "ref": "f9102ae0-4234-40c2-b38d-102f8463276a",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "458d6d7f-b1b1-4f9d-8fe1-fc1ec0515149"
        },
        "item": {
          "id": "6e259868-f240-4374-bb71-1be75f13a3e5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a8f66c5a-3785-40a1-9255-bc31d56f600d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edaf9f3b-986b-4c8d-b8d9-3e01076a12bb",
        "cursor": {
          "ref": "1bb74333-1b98-47e1-a77a-6a761a9440b4",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7afc790c-c215-47b8-80ae-d12c2e9ec62a"
        },
        "item": {
          "id": "edaf9f3b-986b-4c8d-b8d9-3e01076a12bb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d8a77a2e-a9c3-4148-81a7-725f32e39bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4322559a-1776-4c8a-b29e-9bc5870cc1d4",
        "cursor": {
          "ref": "2c4c25a9-03e6-4dde-a27d-46e193a8e279",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cdbecdbe-9bc8-46b3-a315-4c707e80beff"
        },
        "item": {
          "id": "4322559a-1776-4c8a-b29e-9bc5870cc1d4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bcf1d97b-593a-459a-b626-8b268a81efbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014504f9-a18f-412d-ab97-7cc8e121b660",
        "cursor": {
          "ref": "7f6184a4-9bae-4845-99c1-b7c760ca8ed3",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "39abd266-fe7f-4fc2-8395-8507c518239f"
        },
        "item": {
          "id": "014504f9-a18f-412d-ab97-7cc8e121b660",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "35904179-7a1f-4d68-b1de-a5896cef2f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a912fe1-0c71-4730-b2b9-b619f57302ab",
        "cursor": {
          "ref": "251be24b-c27e-45d7-b501-92d83bcb4399",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "692724cd-07d4-4788-a769-d5d6c4419808"
        },
        "item": {
          "id": "2a912fe1-0c71-4730-b2b9-b619f57302ab",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3de8aec8-02ea-487b-a735-7ebb6b579067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185f6e61-8fbf-4670-8072-070260549f38",
        "cursor": {
          "ref": "61cb66c6-8941-46ff-a1b9-9b9dd2cdecf5",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "48af656a-c7e1-410d-bada-d16fbe3f43c0"
        },
        "item": {
          "id": "185f6e61-8fbf-4670-8072-070260549f38",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d5207005-dc38-4428-83e8-cb70aeeac83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e447a56a-6e57-48e6-a7c6-ddd5098aea98",
        "cursor": {
          "ref": "a4eb44ba-2d8e-4c2b-835b-cbfd69701d29",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9f25dfa6-88a5-427f-9ad7-fb69e6ec7f6d"
        },
        "item": {
          "id": "e447a56a-6e57-48e6-a7c6-ddd5098aea98",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d3510c54-1746-4c51-be9a-fa70554573bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce6de6a-8674-4e17-b377-ad69c91ec905",
        "cursor": {
          "ref": "a3925b1d-0024-4f22-84d1-84c953bec36d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dffc8003-edeb-43a6-9a35-7d51054f538c"
        },
        "item": {
          "id": "3ce6de6a-8674-4e17-b377-ad69c91ec905",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f660dc60-efaa-4814-aa83-3d1aa371904c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba14bff-da38-4e47-b02e-24b871c80c6f",
        "cursor": {
          "ref": "2919a87d-4861-46b5-b132-46844bebc43e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "553d9db5-f9bc-4dc1-916e-29fc5faa1ba4"
        },
        "item": {
          "id": "aba14bff-da38-4e47-b02e-24b871c80c6f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "293b4123-71e7-4be0-b52e-965aff7397a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf9faa8-5e97-4a32-b85a-d17e8af713db",
        "cursor": {
          "ref": "574ba0d1-9480-482d-8949-7e90c8f8ecf1",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "66abfff4-af75-46ef-a567-b1bd808ccad8"
        },
        "item": {
          "id": "9bf9faa8-5e97-4a32-b85a-d17e8af713db",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "28098ef3-82c9-4351-8add-4f5a0a25721c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a112a4-89cd-466e-a0cd-2ae56c61a035",
        "cursor": {
          "ref": "951eab36-9c80-4edf-972b-2e1adff52428",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "23272812-7280-4c14-9ad7-abc2a3fe2a12"
        },
        "item": {
          "id": "d4a112a4-89cd-466e-a0cd-2ae56c61a035",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "902e0ea1-4c47-48d6-90b3-55318d2c5813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77846a8d-f531-4b5e-be23-98b9eb5e58c6",
        "cursor": {
          "ref": "e1a2bf28-b0ff-4b06-b0c9-36a9b001b726",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "05f3f73e-fd5f-451c-b271-b1189e3eeae0"
        },
        "item": {
          "id": "77846a8d-f531-4b5e-be23-98b9eb5e58c6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4e3a8498-a1ec-4182-a57a-786e6af94b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0b5acb-84a9-4879-8ef5-04c7649456ad",
        "cursor": {
          "ref": "e47a7a8d-8b22-4128-9aab-116509a7dce0",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2496a33a-ecde-4054-b17a-1b252afaa552"
        },
        "item": {
          "id": "3d0b5acb-84a9-4879-8ef5-04c7649456ad",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2fccfe6c-e263-40b5-b68d-594ebf720794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df7ecde-dd9b-4fee-ae1a-a1b065defb46",
        "cursor": {
          "ref": "5d2e1bcb-c467-4a06-b0c9-4da9fb46becc",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "329a171f-6e68-4503-ae2c-b79e4807ec43"
        },
        "item": {
          "id": "6df7ecde-dd9b-4fee-ae1a-a1b065defb46",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "af040e82-8d39-4c29-b5fc-6d3b6db6ebba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544ce968-30ee-423c-b1f8-75de59475fc8",
        "cursor": {
          "ref": "5b387080-d3a9-4b9d-a410-3df3193d0fb3",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9a2eff24-7ef3-4465-a05b-c616f558df95"
        },
        "item": {
          "id": "544ce968-30ee-423c-b1f8-75de59475fc8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0a901875-33e0-4942-a711-7fa24917554b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0554ca86-2901-467b-a88f-f89c3093444a",
        "cursor": {
          "ref": "01d1fb04-6af5-468c-b3c0-ba2c870da0a2",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "77d8f493-c3c8-4356-b614-9ee64036a51a"
        },
        "item": {
          "id": "0554ca86-2901-467b-a88f-f89c3093444a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "62b0f8b2-a3e1-4b06-b03a-21555004991f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab7653c-3d07-4474-a107-6c1f8a04c27c",
        "cursor": {
          "ref": "629ca761-b880-4170-bbce-36d997665ad4",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "983f3aa4-914a-4a0b-bd43-df0bf6c2fb91"
        },
        "item": {
          "id": "4ab7653c-3d07-4474-a107-6c1f8a04c27c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7a83ec44-81aa-4689-8fb7-90bec024b6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3127c7f0-5f9d-4388-9223-a4dbf5f470b5",
        "cursor": {
          "ref": "dbd37889-bf0d-482a-8bfd-c57068649ee5",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f7c9a73d-89c2-4916-8814-eb46a0f77213"
        },
        "item": {
          "id": "3127c7f0-5f9d-4388-9223-a4dbf5f470b5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "35bff3c1-5808-491c-a843-2f0bbe81013d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5a01f6-eb3f-4f1c-a273-554ab8d0772f",
        "cursor": {
          "ref": "348f6321-332c-4ebe-94bc-8e0f8d730135",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7747d25b-4ea8-40dd-91ff-6872095a3d80"
        },
        "item": {
          "id": "da5a01f6-eb3f-4f1c-a273-554ab8d0772f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a7ee331a-e16b-4864-982f-e42c553850f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af72f901-f7e1-477c-979b-5f93b6203b85",
        "cursor": {
          "ref": "d4745c73-2577-4467-94e4-0bdd5a96c05c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "170ecfa0-c42e-453d-aaad-d3c8c053feb4"
        },
        "item": {
          "id": "af72f901-f7e1-477c-979b-5f93b6203b85",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "97d1ced1-64db-4742-845d-ff11c0132225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41724bca-3537-4dc1-8a98-d0c9fbf9a7e6",
        "cursor": {
          "ref": "5d8a3e04-6471-41ed-a304-132cc6bf7918",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a7f2ab25-b8ab-438e-9719-eac64733c428"
        },
        "item": {
          "id": "41724bca-3537-4dc1-8a98-d0c9fbf9a7e6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "952e530b-a2fa-41e6-bed7-d42437155e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752eb67a-efe8-4d95-81de-5eb6bf46a191",
        "cursor": {
          "ref": "2443fa84-c12f-4c4f-b7b1-9e23d7ca275f",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4dfe9d6f-258b-4fb9-b795-cca6f95f05d6"
        },
        "item": {
          "id": "752eb67a-efe8-4d95-81de-5eb6bf46a191",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9e22481c-8fb8-4e17-9a2a-9a98e186ec5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac036025-ada4-4c36-a8fc-c8b118c06994",
        "cursor": {
          "ref": "085c83f3-ee78-454a-b409-fec8a276ad84",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "84089731-5efe-494d-bfa0-465e69a03adf"
        },
        "item": {
          "id": "ac036025-ada4-4c36-a8fc-c8b118c06994",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e97b67ca-1a9a-4376-907d-2312ac3cf20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4215921-7057-4a36-beea-6df1d76356e2",
        "cursor": {
          "ref": "dde111a3-1cf5-4aa2-95b9-8f7deb28ca93",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8edf3343-4b55-4e38-aa76-d84d33f37c34"
        },
        "item": {
          "id": "c4215921-7057-4a36-beea-6df1d76356e2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "de0569aa-39a9-434d-af6f-d8df34da0d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29459b2c-eab4-476c-9907-ec677218e23b",
        "cursor": {
          "ref": "fd7afc33-135f-4719-9276-3a8f9937155c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e580913c-e655-496f-99e9-39dd0fab5742"
        },
        "item": {
          "id": "29459b2c-eab4-476c-9907-ec677218e23b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "05b1af51-f51d-4d84-80c3-88fa09005e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab3ff73-27c5-450f-abcb-8ed8e586c3f8",
        "cursor": {
          "ref": "7a1212ba-17c0-4a98-8760-4c941cd17611",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cab51539-ea00-4b95-920a-8eebf3db97ac"
        },
        "item": {
          "id": "eab3ff73-27c5-450f-abcb-8ed8e586c3f8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4bfa8cfd-ad3b-42b7-98ed-cc5ee5e09543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28f75c6-e232-444a-80ab-75385573175d",
        "cursor": {
          "ref": "414f36bc-e4e3-4095-98b9-2767e913ee2f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0615420a-644d-4ac9-9d60-d14f5f0996ae"
        },
        "item": {
          "id": "e28f75c6-e232-444a-80ab-75385573175d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "afb3a647-05ef-481e-bc30-271a84a26ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea3d9f7-d34d-48ca-a196-10cd485f5917",
        "cursor": {
          "ref": "89ec39e6-e56e-43f0-9e47-6d53d4bf2053",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "def39e80-0352-4b43-a3c4-4d1a76e77f37"
        },
        "item": {
          "id": "0ea3d9f7-d34d-48ca-a196-10cd485f5917",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9b8f2b5c-63cc-4e4c-8409-91d55cc2d132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a01ff5f-52f2-406d-bc87-ec2fe3f2aaea",
        "cursor": {
          "ref": "7b2d0417-b0f8-4d1f-adfa-efb2fb1d76d2",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c3f21077-0ea7-4b16-a249-4f1da8baf591"
        },
        "item": {
          "id": "0a01ff5f-52f2-406d-bc87-ec2fe3f2aaea",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "68b2500b-d3b9-4cf9-8419-e07746ec33f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2361f35-c965-48cc-920d-63ce23dcaee6",
        "cursor": {
          "ref": "7b3b6451-c45f-4651-874e-5b526cf93eb7",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "eb36da01-3934-4ad5-8bf2-811eda344a6d"
        },
        "item": {
          "id": "d2361f35-c965-48cc-920d-63ce23dcaee6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4a60aa86-63ac-41a5-bba5-943275c392e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f00e2dc-d8ce-444c-868b-573d8e8fe7eb",
        "cursor": {
          "ref": "9b193636-f88e-4717-85de-71ef823ea43b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e53cc5fd-fff6-49cf-94bc-4cbaf6dce9d0"
        },
        "item": {
          "id": "0f00e2dc-d8ce-444c-868b-573d8e8fe7eb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3096d629-3e4e-4085-b791-9c4a828b4c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3aca54-e297-4ac0-825e-95e70cc2a548",
        "cursor": {
          "ref": "eff6b781-328e-40ab-9de3-13beb218708b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "47e31c69-f5f5-4cbe-95f7-6f98c9459832"
        },
        "item": {
          "id": "ab3aca54-e297-4ac0-825e-95e70cc2a548",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8d5a9ef0-195c-47ba-bf2d-f899f566032e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1011,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55e0ad2-d898-4295-92e7-f5779c53bad3",
        "cursor": {
          "ref": "57e8b1ad-f34d-4907-8586-7d8f1d0998f2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d82b9be8-ec47-41e0-a255-ec66981b44c3"
        },
        "item": {
          "id": "a55e0ad2-d898-4295-92e7-f5779c53bad3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8a62462c-1f0f-4c76-891b-c77b111996a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e1c810-cd46-492e-bf34-709e58d0c855",
        "cursor": {
          "ref": "8d7fc51b-769a-44af-98f2-629a2cd74cea",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "aeb69cd4-7a74-4d14-b8ea-50111cf9eb43"
        },
        "item": {
          "id": "51e1c810-cd46-492e-bf34-709e58d0c855",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "52a2ae28-7875-481e-8f5d-7e9e5f5f6886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e04a20c-2824-4de0-a6df-63a455714496",
        "cursor": {
          "ref": "e29dba41-9c3a-45b6-a02f-b52df9a33777",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "432c8751-083c-46c9-86f1-b2d1e018dd40"
        },
        "item": {
          "id": "0e04a20c-2824-4de0-a6df-63a455714496",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ad55dda9-b987-4516-a381-5c147d8c6084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba58b43-4d35-4332-a0ad-b96983c38582",
        "cursor": {
          "ref": "e0873fbc-45d5-4d41-87ac-54bc3c4440f6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f0c9f046-bf54-40da-a1e8-6315d6dc0e4d"
        },
        "item": {
          "id": "6ba58b43-4d35-4332-a0ad-b96983c38582",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5163ed5f-faa9-453b-97ad-f6b3e6ff9ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0fe734-e011-419a-8009-39b7f236fd4d",
        "cursor": {
          "ref": "d381910b-1aee-4761-b5ae-5fded0b296d6",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "feb4a81e-b56a-401f-abf4-198f34cad96a"
        },
        "item": {
          "id": "ed0fe734-e011-419a-8009-39b7f236fd4d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "64b9397a-6425-436d-8d2d-3051495f8d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930d1232-ea3b-435b-a848-b732a608683e",
        "cursor": {
          "ref": "acf7f47f-6624-41b6-b51a-9343b2862fac",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c04edb32-3659-41d0-8a02-c4928d5fec06"
        },
        "item": {
          "id": "930d1232-ea3b-435b-a848-b732a608683e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7bdb325c-e24a-40de-a35d-e71aa6af899d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4600fd0-e39d-4c6f-8d75-cf1d679a4b6a",
        "cursor": {
          "ref": "4ef16125-6f95-44cd-9725-1b3abcb52640",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "706600f7-7a2c-41df-913e-64fb539a98e2"
        },
        "item": {
          "id": "a4600fd0-e39d-4c6f-8d75-cf1d679a4b6a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0b1fbe25-8935-4ce3-97be-aedec7accdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0cb121-0493-433c-b1bb-85a3f0c2de8d",
        "cursor": {
          "ref": "bd08e5a7-c3df-4b08-b566-79c07de8d4a2",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "69f55bcf-b61b-4b94-8d99-eface344afa1"
        },
        "item": {
          "id": "ee0cb121-0493-433c-b1bb-85a3f0c2de8d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "91d431e7-861d-4fc1-a67c-40587f9e37a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca25e685-e1c8-4f52-a209-9d39539321e0",
        "cursor": {
          "ref": "0c0b4ecb-b86c-4b74-ae40-7823eb66380d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f4d9dd48-d48e-4488-b7a7-0496d475a78c"
        },
        "item": {
          "id": "ca25e685-e1c8-4f52-a209-9d39539321e0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dfae2135-4162-49f1-b5bc-74f98a7cc6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6086ee65-0348-4c54-a941-766b626b8686",
        "cursor": {
          "ref": "661f8d34-18e9-4332-a535-38c4bf1c0933",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f1885102-05f8-4b27-a047-22b26e67c229"
        },
        "item": {
          "id": "6086ee65-0348-4c54-a941-766b626b8686",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b89bb748-ddf7-4cdb-aecb-1c51fe9f5416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afd0ef2-0a60-41a1-a34f-958ba3e3a588",
        "cursor": {
          "ref": "d4f67070-d501-43e5-af08-32aa0ba1d021",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9b817520-76f7-4033-8795-7e97b72a1bfb"
        },
        "item": {
          "id": "8afd0ef2-0a60-41a1-a34f-958ba3e3a588",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9b3e58c9-30f0-4e28-bc2d-eb8578b47adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9da3230-f9be-48cf-a4b6-a01d034c77a0",
        "cursor": {
          "ref": "ecf24220-bac1-43ff-bc1d-bbf899b958de",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "70eb4fd4-1866-45a2-b727-f2d6b473dd80"
        },
        "item": {
          "id": "c9da3230-f9be-48cf-a4b6-a01d034c77a0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "93c9758b-0d91-4c33-afd6-e7d46b28fe92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdb7458-be69-4b00-9426-a42cab706838",
        "cursor": {
          "ref": "7e000248-2722-4e97-80e9-cde1801fceb9",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a07f74d7-8430-4433-920d-9298a1ea4e29"
        },
        "item": {
          "id": "cfdb7458-be69-4b00-9426-a42cab706838",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "468618fb-0138-4b4c-b1db-057abaa9a1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2c183e-1292-4ba7-ae24-138b21c37880",
        "cursor": {
          "ref": "0212f05a-d93a-470f-b06e-aa21a1dd1776",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "22a827cd-677a-4800-aad2-fde9e1253492"
        },
        "item": {
          "id": "cc2c183e-1292-4ba7-ae24-138b21c37880",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "50d77f10-2ac1-4765-906e-abac48f1e037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22fd016-397e-4bfb-bfb4-4c6fe4e9ead1",
        "cursor": {
          "ref": "b3c21a80-d821-4323-ad25-ab253a12e62c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cee76d16-5d86-437e-8437-562b3b5ee02d"
        },
        "item": {
          "id": "a22fd016-397e-4bfb-bfb4-4c6fe4e9ead1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9fbec16d-b260-4e4a-929c-a5bbce39048a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc7b7ce-07f6-4c08-9495-2d3cc91ab44e",
        "cursor": {
          "ref": "4d2350e4-ebd9-4492-bc7b-2ecd52b23f81",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "27d46e8f-588b-4cf8-9644-30473f6b90ba"
        },
        "item": {
          "id": "7cc7b7ce-07f6-4c08-9495-2d3cc91ab44e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8f1b645a-becc-4a94-a20a-e3fd4dac9c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2514adbe-047d-4323-8a27-db12e0966801",
        "cursor": {
          "ref": "8d61ad1f-7101-4437-ae9b-285a4991939d",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5ca94114-24c6-4207-ae7f-8b179bf838c2"
        },
        "item": {
          "id": "2514adbe-047d-4323-8a27-db12e0966801",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "707ad797-77ac-480a-8ab4-e184a4af2f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fd8a6f-ec1f-48ea-953c-981f9bd3b607",
        "cursor": {
          "ref": "642fad5b-e1b0-41a6-a7b3-f626409b2b40",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d179f813-0bbc-430c-8092-b8c44bd80700"
        },
        "item": {
          "id": "71fd8a6f-ec1f-48ea-953c-981f9bd3b607",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a8594e57-74cd-43a3-827d-14ef63429969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7a16bb-6681-4e8c-b2cd-7a7dda517864",
        "cursor": {
          "ref": "1b06ca44-74ed-4fa2-9b2e-45d754ae40f3",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cc2045f7-6910-4c08-aec1-dcac6cf5ce43"
        },
        "item": {
          "id": "cb7a16bb-6681-4e8c-b2cd-7a7dda517864",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6c78aad3-f58b-4640-ab82-7eabdd121a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5153c61b-d050-46fe-8097-845f78aacf34",
        "cursor": {
          "ref": "64eeae41-3c09-47c8-9ebb-9244e4c644d7",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a9dec118-642c-4e24-8041-b7ca49d5eda4"
        },
        "item": {
          "id": "5153c61b-d050-46fe-8097-845f78aacf34",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3b7dd3e8-0ffb-40e2-8d55-f4b8765a46b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d50bdc-7e74-4dd4-9382-5a9321b7cd69",
        "cursor": {
          "ref": "b85a784f-bbf4-4d4f-b730-4fe001b3eda7",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8f97ad0b-7fee-4d9f-88f4-06d8ad9b4b6a"
        },
        "item": {
          "id": "87d50bdc-7e74-4dd4-9382-5a9321b7cd69",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f4c18532-7e58-4156-88ce-9f1bc78fc493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8836882a-ce1a-4368-bd95-e50c854ecdd4",
        "cursor": {
          "ref": "4ce0d886-932f-49d3-b558-ca0e20774147",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "269aa4e4-e5b0-4a1c-9f10-15e5f373038e"
        },
        "item": {
          "id": "8836882a-ce1a-4368-bd95-e50c854ecdd4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "101941b1-1e0b-4c67-b977-c3dc7b283f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034e803c-7ab9-4df4-8cba-30d72df8baf9",
        "cursor": {
          "ref": "0ff35df3-5f4e-4a3c-a6c4-036433d90b95",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "df1e9635-b4d1-43cb-bd09-be2b73b9b70d"
        },
        "item": {
          "id": "034e803c-7ab9-4df4-8cba-30d72df8baf9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b597239f-f8a5-4a1f-b796-f55bf29b2340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab2a878-d45d-4119-85ea-8bed42c54b63",
        "cursor": {
          "ref": "5a2569e2-0fc4-4e53-9cae-d3f12ebb8c47",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a5d5399b-339e-4c6d-b25e-f08181275006"
        },
        "item": {
          "id": "2ab2a878-d45d-4119-85ea-8bed42c54b63",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "eddf76c8-c270-4ccd-95fb-954c6161920b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121fa787-d64b-4df1-92c5-42e3a6703204",
        "cursor": {
          "ref": "a0db3d75-3aba-4923-94b7-166c3e81436e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b42d096f-a942-4a25-a236-19d52e41fbc7"
        },
        "item": {
          "id": "121fa787-d64b-4df1-92c5-42e3a6703204",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f792ee4b-7959-409e-977f-3e89ebedb1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c73d12e-f339-444f-a185-84cd7afe07a8",
        "cursor": {
          "ref": "c3c8f0de-37de-4f4f-9f88-eb4916cca68c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "28b99898-360f-4f4c-8334-6d66dc6dbc68"
        },
        "item": {
          "id": "6c73d12e-f339-444f-a185-84cd7afe07a8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "af562ba5-2734-4715-bb45-68d57ccf7753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fea6e00-202f-4e9e-9249-d693da097a27",
        "cursor": {
          "ref": "e2203ee3-deb1-4680-8d35-2f58d48727c5",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "71f8ba3c-0520-4586-ae1c-5876c5aa74c5"
        },
        "item": {
          "id": "1fea6e00-202f-4e9e-9249-d693da097a27",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5bcc1e4a-2554-46cf-b8ca-921df134ec17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1c795d-d69b-4ec1-bf31-b676ef2c57ce",
        "cursor": {
          "ref": "4eaa7e6e-07a8-4186-911f-32ac931acf81",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "299f6214-634e-4b52-85cb-837d698ae73e"
        },
        "item": {
          "id": "ce1c795d-d69b-4ec1-bf31-b676ef2c57ce",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a4570afe-1fe0-4aad-85a7-078c7c770ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab22431-0dc9-4c39-840f-3986a8920556",
        "cursor": {
          "ref": "07a86fc1-6c2b-4923-bcaa-af9d33ee25c4",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "21716a12-5ad7-4c90-95b4-535743be262e"
        },
        "item": {
          "id": "eab22431-0dc9-4c39-840f-3986a8920556",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "74cc9190-0574-40c9-ba8c-af763cbf3165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc08554a-da29-4973-b3ae-81b2d3edb0d6",
        "cursor": {
          "ref": "88730df4-aa19-48b5-b0eb-dc2d5cbde895",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "43bb8de2-2351-4983-bc3f-1aa2ad96ab9f"
        },
        "item": {
          "id": "fc08554a-da29-4973-b3ae-81b2d3edb0d6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "404d3993-4e29-4296-8530-9cfea4f89acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db857d7-3f62-4c3c-88f2-71515d6dfb9f",
        "cursor": {
          "ref": "8db4ae32-f191-4672-a14d-4f5ab3506d6e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d5bf2ec8-2838-40b2-961c-af1ce4b49cb5"
        },
        "item": {
          "id": "3db857d7-3f62-4c3c-88f2-71515d6dfb9f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3ebfbcb0-373d-4dd3-893f-ea91e08086ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5d7c95-9187-419b-85a0-e6c7408cb65d",
        "cursor": {
          "ref": "0b0197a2-2826-4a2d-963a-0005c0d5d4be",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "943cd93c-2375-496e-8e0d-08bb78fd5cf1"
        },
        "item": {
          "id": "8d5d7c95-9187-419b-85a0-e6c7408cb65d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "167239cd-e3be-46f8-b3cb-adf8bf2b92ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57300d29-e098-4ef6-9fa2-523d4b0377c7",
        "cursor": {
          "ref": "1db97f71-8556-494f-add5-2601609507c7",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4fbbde1c-28c9-447d-9928-f71be7ddc29f"
        },
        "item": {
          "id": "57300d29-e098-4ef6-9fa2-523d4b0377c7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "de46d794-2eb6-4db1-b187-f1e55592905a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfa9998-ca40-4354-afbf-ef4a5e6eab42",
        "cursor": {
          "ref": "da5cb548-3866-407c-8c35-7163c7c8d362",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4e24105d-813e-49bc-9a28-fbec8f23b301"
        },
        "item": {
          "id": "4bfa9998-ca40-4354-afbf-ef4a5e6eab42",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6758b7e3-1f90-4df6-bd4a-f746112b6af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecd973c-42dd-4b4f-bb67-62615bdce039",
        "cursor": {
          "ref": "59969f8a-67d6-4912-be59-a2b48c792f77",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0f5ddc72-9244-4728-86de-f289be1feaef"
        },
        "item": {
          "id": "1ecd973c-42dd-4b4f-bb67-62615bdce039",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5df41351-eb25-4d08-b1a8-3a36d7a621ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0a5e36-3d1d-4187-bfbc-699e4a3fd521",
        "cursor": {
          "ref": "4d1b2799-aa98-4800-9b43-1541a1dbfea5",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "582c029b-5816-4984-aa92-b949ed9de338"
        },
        "item": {
          "id": "de0a5e36-3d1d-4187-bfbc-699e4a3fd521",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d2f2d8f8-9d81-4be7-8bfa-1bcb0543dea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bf703e-d90e-49a2-bea6-bf85faba2f0e",
        "cursor": {
          "ref": "bb9438d3-6c79-48c6-831c-5607247431cf",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4fdc4dda-58da-43c2-9ff3-ecf0bcfab2b3"
        },
        "item": {
          "id": "74bf703e-d90e-49a2-bea6-bf85faba2f0e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8aaaa59b-7cd8-406d-b0c4-e85ff462ebc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3278e9a7-075b-4b53-a5e0-28d5b9826dee",
        "cursor": {
          "ref": "a739f58b-230c-4f57-8ad2-8d8a27767ec4",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cbf0f02b-00d1-413b-8513-21210e48253b"
        },
        "item": {
          "id": "3278e9a7-075b-4b53-a5e0-28d5b9826dee",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dcfe53a6-5345-4eba-83ed-dcf4e1dbff4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441ea2fd-e2f7-4a0f-a81b-f4969c06fb7e",
        "cursor": {
          "ref": "9cb792e2-56d0-4e9f-96e5-059e6293a5c0",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "08792962-fe3b-471e-8956-8fa00a58fa73"
        },
        "item": {
          "id": "441ea2fd-e2f7-4a0f-a81b-f4969c06fb7e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "38f38318-b83c-4b8d-be2d-0e15cc69202c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81afe9f-94c9-413e-9193-61d27c00a761",
        "cursor": {
          "ref": "12bb1d17-18bf-481c-8409-aa6054a97c84",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6587ece5-4390-4d4e-82a0-a7e4f2249e60"
        },
        "item": {
          "id": "a81afe9f-94c9-413e-9193-61d27c00a761",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4172e21e-c66f-46a0-af74-e9eeaf7f0b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b30f45-20e0-4868-b369-e4cc6f475f1c",
        "cursor": {
          "ref": "d48a8c47-e8f8-4906-a16c-6040af5f8214",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c2c8a96c-b088-421b-b992-bffc28880fac"
        },
        "item": {
          "id": "29b30f45-20e0-4868-b369-e4cc6f475f1c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d20c8179-f2ce-4d8e-9cf3-bcfc9a301aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeddc24f-9c1d-481a-952b-4d9403ae4bcb",
        "cursor": {
          "ref": "839414ac-b816-4eae-aca8-36527f3e22c0",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "508079d0-fada-4f75-ad66-640ed83a131f"
        },
        "item": {
          "id": "eeddc24f-9c1d-481a-952b-4d9403ae4bcb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3b5ed3b7-7830-400c-911b-b5ec724af41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c680bd-6041-4919-aec9-3eff5512b58f",
        "cursor": {
          "ref": "0842456d-642a-48e4-8d0f-80741edf3b8d",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f91f1083-452c-4933-8bfd-43986661d69d"
        },
        "item": {
          "id": "73c680bd-6041-4919-aec9-3eff5512b58f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fab295a7-6eca-40c2-ba8a-1e6065b232fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1459a5-d1b2-4990-b8d7-45732d430ad8",
        "cursor": {
          "ref": "466b7002-1d72-4848-996e-f3fdbddadfc9",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ec83a49d-b842-4a46-9cdb-374a0d287028"
        },
        "item": {
          "id": "1a1459a5-d1b2-4990-b8d7-45732d430ad8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7d6432df-6008-4dc5-b0df-5812d3f575fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c635b91a-6e7d-4dc9-81a8-659851d44ca4",
        "cursor": {
          "ref": "8eb23b4c-b073-4fb6-8185-bd5c197b6e25",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dff21a44-d3e7-4da8-8597-2a5650de7e61"
        },
        "item": {
          "id": "c635b91a-6e7d-4dc9-81a8-659851d44ca4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "db86a088-4085-4fb9-9286-a6f5d2af2ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350e8ff2-db04-4c9f-bb90-fac48ab322c9",
        "cursor": {
          "ref": "fd036d96-fc53-4dc5-8f0e-4360e92f597e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "30ae0fde-dbfd-480e-bf96-7f1e5b1793b0"
        },
        "item": {
          "id": "350e8ff2-db04-4c9f-bb90-fac48ab322c9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5c66344d-9903-4f61-a77b-3b92f9abf845",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fdcd1f-8896-455b-ab49-7c16fec965cb",
        "cursor": {
          "ref": "d2926aec-ff05-4995-9915-27232425ec96",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "919f087b-805f-4dd3-8c53-fda55d11ab51"
        },
        "item": {
          "id": "01fdcd1f-8896-455b-ab49-7c16fec965cb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "581feaf4-84ad-415b-bc7e-5e0333f9a9ae",
          "status": "OK",
          "code": 200,
          "responseTime": 538,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2827c7dd-4695-4a5c-a557-8c15f9b42ce9",
        "cursor": {
          "ref": "964d9183-5c20-4077-921a-fe3ef95794ee",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ff285f4c-f933-4994-b48f-07589cc2563b"
        },
        "item": {
          "id": "2827c7dd-4695-4a5c-a557-8c15f9b42ce9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9daa1812-5e58-4645-ad4a-8266d78d44ce",
          "status": "OK",
          "code": 200,
          "responseTime": 3811,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "91880a19-2967-4539-b03d-2b8bc230d12d",
        "cursor": {
          "ref": "594582c3-6f55-4c34-8604-b082ddf22193",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "21709a04-de48-4bd4-92c5-1b21bbd8a39e"
        },
        "item": {
          "id": "91880a19-2967-4539-b03d-2b8bc230d12d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a06d3ab6-04bb-4a74-87d2-7202ba9649a6",
          "status": "OK",
          "code": 200,
          "responseTime": 3106,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "be05e612-5f23-4382-8077-2bebc2747c0b",
        "cursor": {
          "ref": "3df024c9-45fa-4bbe-bdf6-afa149df8850",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "96329696-77b5-4351-aa5c-a203fc915eba"
        },
        "item": {
          "id": "be05e612-5f23-4382-8077-2bebc2747c0b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0faef356-768a-4a74-b9a7-10f40fb3ea2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be05e612-5f23-4382-8077-2bebc2747c0b",
        "cursor": {
          "ref": "3df024c9-45fa-4bbe-bdf6-afa149df8850",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "96329696-77b5-4351-aa5c-a203fc915eba"
        },
        "item": {
          "id": "be05e612-5f23-4382-8077-2bebc2747c0b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0faef356-768a-4a74-b9a7-10f40fb3ea2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bdab22-05b5-4a2c-a734-f953dd9b3e8c",
        "cursor": {
          "ref": "48b088de-bdc1-47bd-8dac-297ee166291f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5e16bfff-9699-4fa9-999b-a47b7689edf9"
        },
        "item": {
          "id": "a5bdab22-05b5-4a2c-a734-f953dd9b3e8c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5521f0c6-0f33-45c6-8e0f-4f099ae5feec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38423e64-e093-44f2-8e60-e13355b2c399",
        "cursor": {
          "ref": "eaae4baf-1ad0-452f-bf17-91e3464bea9e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "24bddcd4-72e1-447f-9675-199d0476ba07"
        },
        "item": {
          "id": "38423e64-e093-44f2-8e60-e13355b2c399",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "07b98bab-1b37-4075-8cc3-0bb3a64083e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}