{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c5d944be-b5ef-450c-934c-d489e4f4b9d2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0f9a7c03-4d85-4b73-906f-afcaf91b3440",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b45d73c7-3f27-428c-8530-3ba351834267",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "317a3bef-31da-4c22-86a5-da1dec312646"
                }
              }
            ]
          },
          {
            "id": "b8556c02-56df-455e-ad52-c1fe1feb3ac6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12fd494d-c030-41d0-bf34-cd16bf6963f0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f092d3b4-7460-4e9c-9308-28a8a3acfccb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "05128d9d-b483-42de-9145-e098af8bfe94",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "238742e1-4a44-4d57-82ab-2a4601a3a99e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8db8a47-75a0-4fb0-b409-a42e37676118",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0df2f48-df00-48f2-9e63-97469fa945bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f0f8384-f427-4b0e-ae7e-24628ac04b92"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aeb8eafe-db37-49fc-a11f-b9bf785c63a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d27f42c4-3242-4a21-99c5-08c501f201c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dffa1471-f99a-4deb-9e0a-6322931c013b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a17c1a42-72e7-479e-9ea7-33a352815952"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8eaa7c0-7a94-490a-beb9-ac73d207de21",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1b6da4fc-1d7f-4598-b721-bde03727903e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29a320fb-ad58-4cf5-bd6d-89785dcdce50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c23101b-3162-4dd9-b854-ff31fe74e044"
            }
          }
        ]
      },
      {
        "id": "2a750802-3bf3-440d-a0e5-11feba46a21a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3c354e33-339c-4b81-bc16-ceeeaa87d9be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "acd3165e-d610-4548-9737-af660c8d2aaa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c07ef123-760b-4b2a-a905-7bd898a8f57a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c8d7e1-4129-49fc-8ab7-d49c30b26bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "233f94d7-b58e-4ac3-94ff-1e39ff9c6260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3641b1a3-2d1e-4361-b6b6-548e6868641b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2a1f8f-6605-4db9-b511-e8e0411ce0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "106eaef6-4b20-4dd1-8814-5b6fab7cb7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0244431-0a43-4192-a7aa-9f4d9547d878",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e09372-f31b-4d3f-9918-25890eabfb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e73aca8-4310-45f0-9fb5-b386a0f38797"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b5a7677-7be4-4d93-82af-a3bcb9dd77a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c3aea7a-ee9b-442f-80e3-ba67203de03b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67444afd-0a64-4938-afb5-5c3ac8fb6ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a05f131-1d3c-4859-ae71-84fbdd81e245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412abf6a-c001-42dc-b413-09303d9b55ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1100014b-d01b-4464-91b5-6336ffdfc961"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ce696b4a-d7dd-44fc-8ca1-1bc4e7871787",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd8c1e61-fec3-49f0-961e-4c315af77e8f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3845e666-ed12-4ecf-8cd3-5567ce4e2ecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c36950bd-3841-48dd-a59b-1bb3596aa97c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88e870e9-eb14-42b8-a864-100568690a7f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f3ef1c96-adae-43c4-a23a-7111a24b6d0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8cb0898-dc4d-4476-b3d9-e5d92839d847",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb78d318-5e05-44ac-a9c1-446c1b137c1a"
            }
          }
        ]
      },
      {
        "id": "bad8a170-8cf8-4e51-845a-76d7340a2851",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3ef822c7-0b21-4bd1-9f9a-03a00a0e7421",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd6a5b1a-f32e-49e3-804e-5037200575df",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "92ff3681-c2a6-480f-9f2f-0501cbb762e0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2493cff9-042a-486c-b282-a27219b87cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf71049-b8a0-45fe-a7c8-0c86f51a1508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ce8841-8c18-4462-8c45-687a98c76cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1891d1dd-a27c-48bc-8077-7074f1315134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d719f8-568b-4dee-a0da-8231f5ed250d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49161ca-ba93-4b37-82af-0948da14c43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6524fca7-0419-4812-b513-cb6383848d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31cadad-c436-47fb-9823-9edf1e614e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f4098fd-0aa5-471e-902a-05ccf512f850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02247df-901f-4a2f-823a-8594e5dfe54f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7becf885-31d0-4eee-b115-e9e541c61024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f542df6-11f8-4cd2-b6e0-59350658f13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c051e1-8213-494c-ab92-04386ca671c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "528d5401-7b78-4dd1-ad37-4cbc8e130776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ae273e-cdc9-47b4-926a-a17cc645eba8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c1deb7-5214-41d2-ba3e-8aa8a0e04b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bc5fc9-da26-4b52-ad35-20a2cfa0aa3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52fe0cc-a84d-4821-b6e2-8990c296cb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c653baa2-ff92-4e19-9cf6-b552e64bf83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffec845-9de6-4aeb-b658-ee3b22beb17b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2055ed-c368-4700-8bbc-ad4d10b2b874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73eddde6-0468-4997-9cc8-3f685f5a736a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bb3067-d6bc-458e-9333-7fd99a466240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31697cff-2be0-499e-8f54-95f973588034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8eb14b5-d383-4545-8022-268d104b6485",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98a4bcb-5a82-49ae-a103-22751be199d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a045b36-77bf-43ec-8996-c7f619e4fb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b4990a-21e8-4fc6-8ccb-488e40a3ad59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2e0762e-af80-4f14-a1b7-d155293f7b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d0ca5d-245d-4820-8ff7-f1eb54ffe1b2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265220e9-e562-4571-bec1-9d1af0d52f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e8047c-ffea-4d9a-9f2f-d4bf92a127a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167fe54d-d93e-45cd-a207-452312e2893b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6eb7e9e-e760-47f3-9697-6887fb420f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebda5b2-a5f0-482a-9fcd-1a055893a2f1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396eb0f4-fb5e-4cd3-9a5d-0295e564d813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2ff4d6-4a54-47f8-b966-f75bd6ec4655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd2d070-6780-426d-abc8-eba011a80f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e7ffb6b-9375-417a-80ba-95baa7544ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36da58d2-8e44-4ed1-89d4-1d6a2702a460",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55fb958-53a0-441e-b36c-ff74aa30ceff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f486ff61-2ff0-4bac-8d1a-86f2871ed56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294ec609-d083-4ad8-acdc-94aa8f69c94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bfd1f73-6010-4e0c-9916-28d7887e91ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aa3716-1665-43d5-ae61-fb9ecc63f263",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680200e3-4a53-4a66-94ed-06c5304bb441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a52ea3-f034-4883-9173-f4fcafd92dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4417a01c-8ff8-49e9-ad92-7375bdf778cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4ed14b1-5c7f-4e10-ae45-00f0786ef171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb2f885-51f1-414f-a1a9-1e6ad864c5ca",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b797af-a65d-40a7-8a18-2a7dfb5a96ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fab5e8b-0a4c-4518-a597-cb9a0646c083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d0cf02-5a34-4802-8808-8027d3c33a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b31ef670-df68-4488-a376-aa7d1c9ce414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1955d5-7cff-4b5c-87aa-ea0112abaf2b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1470a952-29ed-4adb-b064-f351fba6a5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfef8dc2-3b35-46af-b6e6-6ad7d4a6e8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe9c8da-97ac-4d2e-843b-b46e0f3b8cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fedde4d-0ce4-4681-9892-15773110319c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1c0dc5-a561-495b-be60-65d3a11895d7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622a10a0-6ed4-4bf3-b665-d29fad6f6d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ed89c8-b623-4bae-942a-1bf6829bd2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c01eaf4-b1b7-4fd6-bfe2-b561b81df7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "050a4885-8084-455b-9790-fd5196f78833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b045b74-ad42-4755-b1f4-f63b4d51570f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a80d01-386b-417a-a8e1-08ccf233b772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed3af92-8eac-4370-b09c-b1fd769f3c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76980e1e-b354-46d6-a349-cb4c0c5bdd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa3b4fb8-b2de-4a2e-96f2-f13360e5dca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab3acc2-25dd-4949-bae2-723e3f899365",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832e9c08-606f-4bc8-9614-365d1c1de7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11a4de3-4085-49c6-9628-239c27b104e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b64cf05-d5c5-4511-9570-132dd4475ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a869e1e1-1a95-4c14-86ee-5b8d1e49a42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fb1ec4-f1b1-4bb6-ad74-9c7a88e2584b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bd68e0-76f2-41b6-bd18-a76743209d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a307bf3-698e-447e-ac83-15af44c4c11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9426801-64be-4ccb-aa7c-ec07441f1cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42c8738e-ec47-4edd-aaf3-92d471e68c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d4a8be-2149-40c2-8bd8-8f3bc9989cef",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbabd789-d4e2-4c09-ab30-756cc6f177a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b628210-8b58-4500-b87f-0ab1e9998bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935fc5e9-4e08-4d01-a618-7284c24f45cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28c34a4f-e2ff-4fae-9dec-69673861d9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9aaa3a-aaab-4f59-b02a-0202f77ffaf4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107d2a22-b8e3-4d2d-86f9-987b15e2f189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1855464-5d5d-416f-9526-d586e772296c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c8ed47-230e-4ae4-8aa4-44d7a5789f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfaa471c-24d4-4984-ad17-768ed8682a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1977e66b-f27b-4b23-8e83-4fc40675f9fd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d73f1fd-7e7e-46b4-9f44-172391474675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9096a29f-52c5-4e59-a58b-63b0c4f5d008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af47aebd-af97-4b7f-887a-c7c4d3809bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb699e7-2eb6-4ad0-a4fe-6efd265bc20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b74244e-1e65-4029-b741-c1148c77ef07",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a12f03-0c73-46f6-80e9-8cedb6e5be49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b7adef-43d4-406b-93b0-847f46bd3aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3bd64c-6bd8-4219-a63e-84d7d960c500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04b1b712-c37a-4431-a915-92e28633ee5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52c498b-0c68-4f39-9988-d9c31e6d63cb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec32382-7def-44cd-af63-274d9bea7907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d753fd-6387-473b-9e52-d31066414a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc97e31-fa70-4912-b7db-c93c185564a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1241e4-2698-44ad-8a92-d4491f8141f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949eb115-5cf8-4049-87fe-62aaf5b83f08",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc88a07-5fd9-409a-9daa-94503d43bda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5046cfaf-5784-4796-92c0-4d5197682440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb7a0b7-e31d-4355-a549-303bb24283eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed046b0-dc0c-46dd-b075-3abde2b3c653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7435eb4-de39-4dc3-8c13-794f0a2f416a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c4f2d8-1e08-4a03-bd3e-a23e41535797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655a7368-2f15-4388-88d3-10e0ead2c075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6578947a-cbab-44de-a2bb-809ee4fd6720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b50ca1-d03c-49be-af2d-a5130b18d2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c6992e-7e9e-4bcd-8900-073b78975a19",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa993cd8-b279-43ae-85b7-e9500ac6234b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccaafb6d-5b0c-4c37-9398-c31cbd2c8cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51814e0-844b-49b4-b4d4-6d1ff3c1acc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "00bb923f-c608-4fe3-9651-f5ba0e24fc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6b0931-4468-469f-ac2f-9b38aea3143d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e2153b-a040-4a5f-a5be-c385aed9f379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e45c8b-c32e-469d-b3c0-0cb28d3a6925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9233e3b6-dd63-467b-b75f-e8c9fd7c0e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3277fd7-1512-4eeb-bb38-1a545efc66f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d2df07-7a27-427e-a707-e43488a79460",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aec9ccd-a4ea-4673-bf05-89d798a7b5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d2ab9bc-0359-4177-8546-cb05382db6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0728a45-cda8-4f89-b9af-1dd8de8f4986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "673c008e-d251-43dd-81bf-a3f66812a600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f234960-4b63-421c-a246-3a8b44445a2b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3f5bd7-254e-4e90-b0b3-7b70f50011b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a3aaf4-a523-4fdd-b664-f328009dbcca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f784845e-1d7d-4d11-be86-8d5ac5bed81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c44a87c-f8d2-4c8f-8677-3e9a24dec686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4368fbcf-c74a-40e7-a5b2-24e043a1902c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72829961-3699-4402-a919-c6848af592d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6487c6-f8be-4161-b488-68f4fdd75573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b585593a-8acb-4e82-8980-10d45b233bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf00ca0-cb20-4229-a211-f47defd40900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3141dfe-69e9-43ab-8cc7-9bc001db1f0d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a717978c-20a2-4816-8b39-d6a19986f74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcf17ae-b94c-4624-bbdc-8d6d70ec1007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a09851-20bd-4115-8e74-95e962db5c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05218d2f-fbb0-47fd-8964-b68825000eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7010ce01-14e1-4ae9-a2be-82ea4c577fc9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa8214d-a372-4b2e-abac-ab7023a5e94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0eaabb-f2b5-4539-9701-51cc3c43385e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25179b10-fc3b-4db2-8095-478499019950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3895eb97-1933-420c-b2c1-59b6ac7e695d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b49c1b5-c82d-4b96-a0ce-d85a47e526bf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187d2711-d981-4fe8-9cdf-417b037a5885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164de92c-14c2-479c-be23-a61081091dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd945a9f-16cf-4241-af67-022180b01e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8d3d6e-ca3d-4bc8-9c1a-fe8687ce6ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c21171b-b931-4451-bfc0-5061d6144a15",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600c6274-5645-49a7-a1db-01c59ba1a773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7499c728-615f-4fdd-ae55-350e8e54be8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4549ded-d065-47f8-b64c-6779c8e8870a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "251f376a-4a10-4462-8e4c-3bfb13610122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e3c42c-5ac1-41d7-93fc-dcc523db29e4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceea953e-153c-4f47-b85e-2971d453d1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62171414-bda5-48aa-8836-40368d1ec808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6df324-3a0d-4b65-9dc6-4492318799de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca073ebf-2ae5-48c1-8116-cdbd3c742ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b48efe4-c232-48ec-9017-4eee83edc304",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a55102-7156-4608-8298-da4991285dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e12db23-77f5-483a-8cde-32c0368e7fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bd28b2-770e-415b-b242-e59db8fc7b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3df4ed77-9971-49cd-837e-c1a26f43f648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413f3fbf-c8ca-480e-a4b6-381e88d3c3e7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e33b7ed-4f49-4f34-b2ea-86b4f9a73cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee646f3-23e3-4b60-a4f2-d9afa1fce568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2904280a-1082-420b-a935-dd79ba2f6e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd21dc3-d666-422f-aa62-2c23866dd024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78adcd10-df0d-4502-9fe2-2b9e33305a2f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6633c46d-6958-4a05-b722-deef2a1273da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90dd7a16-750f-4b8a-bf63-95a171b71730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8556c626-7463-4d24-9d47-883e540194af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "901019aa-b404-486b-8e79-aa6e957ca836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1de5c68-999d-4833-b1f7-ec47e70dc1c8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf963d2-2a0b-4495-af5d-9bec2d9a5f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d08da5-bfd2-4b75-ab5e-c265a3ef04aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814cd878-3822-4233-9da7-d438210838ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f464f9-50f1-4c23-916c-a449f823cae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a05dbcf-8201-467d-b29a-46d4e247f5f7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5e2cb4-3002-461a-afa3-0d92a55e442f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d2633e-7463-4216-9568-05035aa6590f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9772168-c043-4bc7-8061-a7d86834be90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcba4a3e-c54c-4160-b213-f9d2772d1cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4288273-f228-48d7-8f1a-69816a056bb2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae72ab55-e487-4b6a-ac82-2ca814448694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3545fc-6eaf-4445-b51f-dfa7a4059c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5aa2493-d12c-4bc6-9ef7-69d52b9e8546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "846b0b84-13db-4759-a057-d3ea56672636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3fbb84-3132-4cef-84bd-f81a367ccd1d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68501df-f3c2-4f0d-9fe8-dc6845829a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c592309-4ade-4e5f-ad21-b09350bef9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc5a4cf-7e85-46fd-8526-ea5eb5564579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "86c29245-a871-410d-924a-fd014ac684fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5f2e0d-7821-4f77-b718-66249eb1d7bd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ada0002-07fb-4ba6-baae-74c4b05e9945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd950248-4828-4cb2-b97b-18ab525f9a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ab505a-6ff6-4a50-9c2f-3e6d62ea5ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "09a8bd4f-4a39-4780-bec2-c872d45fa763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a595ce-9115-41f4-ae5c-4550859d08f1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fbecee-4d3a-45c6-97b1-55afe5900b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96cb8cb6-3891-4203-945b-f0c8aa84e54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd6fcce-f72b-428c-9a9a-b3fa1787f30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "57703ba7-5730-47ee-ae37-7d80059336b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4d8353-91cb-47ca-b5fb-db9e5f48ffdc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab55ad13-6d53-4821-bb9d-0bf20cee78b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982163e8-68ad-4c0a-9622-747ad8a44f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4d53c8-bd84-4c49-b8b1-3641178af208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e824d0aa-69f6-4442-8b8e-ee10a69cd301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad409ea-45bb-4f77-9630-5f8df1feccd9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167c786d-bde5-479c-99e2-52b5b0d33c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2f99a3-5cd4-4f38-8b0a-3d84a989a329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acc1d4e-b2e7-4693-9f84-11931dd76b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf71585-175e-4c1b-b471-1523e7524e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fa2a34-f5b6-400c-8adc-32e2fef19f3c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bb4f8e-9fcc-4d36-ac93-a7f434d2071c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8079bcd-3b7e-4a63-bd5c-b01645eba0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b6c43f-ebab-481e-bbbe-c675601af6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b875a22-8cf2-4b5f-8b06-1bc5df45ee06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d9d30e-4cef-4a7b-91ce-a250e34a8fe8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15948fd0-c7db-4f81-8db8-42d58fcf9a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ed2ec4-9ef8-4cf5-ae43-63ed0371727b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de0873f-03fc-4029-94ef-8852d30bc3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e987035-6c61-479b-8e8d-f10397b9bad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbdb9ab-1041-4161-aad1-9b03718bd3fe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64056afc-b512-4910-96b2-854c2f306b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44d075b-36a9-4ced-bf60-e3ac834a57cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba44ffcb-112d-41ff-9ff8-9d6e45ef5c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed9fe6f-0e72-419c-883c-bb7968a45bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91250ba-3061-468a-8a90-24ea4dfb2b52",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81b5786-83fb-4bc1-b126-19d83bbf37a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e968f29c-b354-4d73-8205-7537f1e152ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20eed515-b008-4326-8411-ea5dd852fc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e28de40-0122-476c-a941-75586a1e15ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafcc85d-4f58-48eb-83cf-c7af1d11d032",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feaa279-da6d-43a4-afbe-049b9ffde1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46eb1ce3-558e-4635-b65d-93a34a6f5d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d3243a-3391-4174-919b-fbfdbc727753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b0a905b-d6e2-4724-ba5c-e9b661d131b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b601fa73-2415-4cc2-b30a-2ab6869bec22",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1c0b1e-5698-4c7c-b8e1-490c1bd9b573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b07364e-82c2-427f-bb8d-5ff5c4498367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5c4f52-8a23-4a39-9ce9-fc53932f8dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd7a6cc-ef35-4223-8630-fba5664dea4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d5842b-34f8-4df9-8a6c-7691bd80a387",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d5fbf1-f84b-4c02-950f-5fc4f8a2597c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a08f6a-aa0e-4744-a133-3232bee71849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef5b1ef-ba3b-4f3a-84b8-7fb26f6c058a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1bbfc24-16eb-4142-862f-9f6b77744a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1983d21-9263-4699-aa0e-1c60a789e1c2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ed7dcd-b824-4070-87f0-25700fe38a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c58f40-bed1-4d75-b9d7-0f11008ade59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbadb4bc-19c4-485e-a02e-afe2ea1050ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecebb401-de35-42b5-a1b2-61a110fb250d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f6272c-80ed-4b16-a8f7-b76aa5cb1397",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92628375-f0b6-4f27-8852-a50f0d0a4227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f460f0-780d-4ec8-9fc0-31cc5d63ce82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83736d6-cb8b-4679-a8a3-937b6443ac26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f2ecb0-d242-4189-9747-db8db29d0ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f81fea-ca98-4d85-b599-3dd9518f757b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63b8cfa-bc97-4f01-a582-afbc7f876ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55003d11-529e-4a6d-9372-e9aa15de68cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c494bf-abbc-4291-8a1d-1e8dec41862f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84952aeb-610f-4c86-ac70-b27e712b714d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19f0a90-97d9-4499-a5eb-27c52aa70af8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f88e45-b419-42c2-8078-6f4e3742e30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06b8834-e888-49b2-b6f8-8e8f800dfffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f0aeff-b04e-4559-9dd0-8e2a9fab6248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a221ba-eb7a-4c1b-bc6f-2199b41977e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bb94eb-5fcd-40ad-befa-fba826f9c477",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c122619d-2329-436f-b3fd-334887629680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1788b06-ba5e-4368-a8b2-f322238b0fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854e043c-1c24-4ef4-855f-600ffa9a10a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "87da9e22-77cd-4d19-9956-1f42e65c787b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd135d4-7394-447a-83e3-d8febd659033",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be74579b-5e1e-49a2-99c0-3683ef2b9aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d711bd8e-79ee-4642-b22e-33d6871e6c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10e7188-dda9-4b65-b609-8736a35343cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6626a452-d6c1-4344-8d04-75ceffcfbc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c94a34-f4b0-4067-89a8-66545ced8dbb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82477e82-5751-4f2a-9d28-4e3e496a4710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46250b45-1a94-4d4a-a8ce-7d0262e4eea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48201599-8747-40f6-a800-0cc91174cdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e85a678c-6ad2-43b7-816a-19d11caa4e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f648fd9-d1d0-4aa4-83a5-eb5d17eba58d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccac7f11-766d-4d3d-a36b-47ccf63530e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aea0258-9934-4acb-b07a-06c95f7fd713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455988f2-9c45-4886-b408-57b5833376fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eccbfa5-baa8-4e38-a9e0-237da7187a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1fef9d-006f-4372-a887-07d095c51c81",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb7f7d3-d154-4749-b661-cee1015527e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44968d35-499e-4092-9566-e0fe0aa18e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defa9a7d-ecfd-47a2-a7b5-931e1d17c6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "13b060b5-ede6-41d5-9dde-f5436a6ff8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c79330a-22df-4f52-9c57-bad42a080a4b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e01087d-aa92-4f40-a611-f9b3ac753d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce6d9ed-fc71-436a-b6c8-c0cac561b21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7fee73-705e-4f7f-b13d-a4f68c497b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "27ecf53d-caf3-4c58-b12f-41e2ec4317c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfb243c-3fe4-48af-9f7f-4a0379b62334",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4443a7f-b598-4c09-b40f-d04f9b917a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a40d525-7bf3-4837-b904-269fae535c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0b47bd-846a-4c05-b772-bc3d926da4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0c267b-a70c-49ae-a17a-3d0dd5d32077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7596cc3-07cb-402d-b65a-9b16398bd912",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01585a0b-8ed3-4149-82c3-42cdd16059bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb3746b-aab3-46bc-9218-cb7db7324d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36db23d-a2ec-4a01-8107-07f0ec10d065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f640849-f50e-4b48-ae43-707f0732a42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9362bc5d-1f8a-4596-ba89-83671298a904",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ec50b4-2442-46ff-b4f1-a14cf0eb39b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f48fe82-f02a-4f2e-b593-59631ac79b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222603a9-bb1d-4413-89e2-3c88abf4aa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08fd8697-f5d4-4be4-ac34-b11547afaf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aca4298-b748-4d97-8336-e16572c47d7c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39df3c37-b647-48c0-9a37-4fa5191f407d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7f5900-1da7-4e3f-81d3-11bd6499a886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f055a22-3987-43ed-b219-70b519e280de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad6a06c-6a50-48b6-814f-3d19a807a495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37512072-6ea6-4d65-8360-fa64077a6e1b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb2e779-19e1-4263-9d95-48d9aabf7cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37125cc5-ae57-4469-a413-3238396d9283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2cf887-ba96-4c2c-86a5-c5c02843ec6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc51862-2e4b-4172-abe6-7f277116cab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1d126f-8f4d-4aae-981c-ff5ed3696700",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbebc5cb-90d0-4332-b1e7-5e12baa54d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de1e793-ec46-4801-bfd3-e07b1741ef70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7526f559-5851-42af-9031-8a4e8686c432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6bfb28-d187-4247-85d5-d4d5103ad752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642d360e-cf98-4cde-8bbd-6cf1426ad326",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdd8deb-e849-495c-a4a8-6abb1fbbbaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce8da86-52f1-489d-9387-fb7c2064b4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28295bc-2a3b-4786-b850-5b7bc7794624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa9ba7a-490f-4248-94d8-81df4b836f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319f6c94-9f79-4930-8317-efe858a7ad7d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355661e0-133e-409f-8605-207b98e96986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6111b251-1ccd-40e3-8d5e-427d0d9b2939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec13be92-59b1-47ed-8c3c-7e9407fcbd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01e8f36d-bfd9-4470-8ab1-6a3d2e0bbf33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65f65b5-7371-4424-8484-9419e77bd8f6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b046c799-2fa2-4171-8b9b-4438fc8b1d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4433020a-3152-4f31-a6b4-620916fab108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3210ec-3f4c-496f-8512-e6fa78fec560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09084876-a97a-4ad1-9c80-28daf1072c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da66f6c-0986-41b6-8c56-63b51529650d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510fd3f1-c16a-4482-b8f4-7831ea5d8fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6893b09b-e051-4400-9240-7f6aa5877b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e4142a-dbf3-41bd-b907-234bd7287d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e889ab38-1b1a-415f-bddc-d5b961a3f4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eefcb80-9771-4ef9-a832-675b9b2c9a85",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de5a673-1a3d-4694-a4ea-8a1dc03d61f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631b7f73-2c0d-486e-862d-7ed55b6b5bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59b9cfa-892d-4d4c-b1ba-aed40c1d10e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6028ce-208a-4f94-8b87-a34fee9302ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169c9b0c-c285-45a1-ac5b-9fee08502f2b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ada31f-4689-4732-834e-6556de06050b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5a27cc-14d1-4c0a-8b61-081e4b1f19d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d075d9f-5179-4d9e-a6e3-410a9d9c3e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa313b6-7d5f-4d0b-911b-4d27f503b0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8d74c8-f9e0-45d7-b312-7c682c6c97dc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4e1772-a92b-4232-9325-956c44810fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083fcddc-f23c-4a76-bc2c-f489980466ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3039ab-dd4c-48b8-9da6-441c2f36d0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aac19db1-b5a3-465e-ae8a-86fc6939b186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467ef71b-60ac-4fdc-8fab-500871342b55",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f022257-7a80-4471-9197-e0ebbf478237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c04f47b-4a06-432a-a9be-86dbe50cca35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3749b55-79b1-4f84-a00e-6c332a7032ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e7a6df-4933-4ce8-9df1-3d2170963469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9008e7-4a8a-4b14-8e77-d8576fa98c34",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75669ee9-102b-4f7b-847d-7d128437d1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef347f2-cc94-4147-addc-e6e06b07f795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f9f982-730d-4f7e-a869-5dbc19ee8bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58fed473-9ada-4b4d-b914-5d05d2aa0a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd629cbd-fd67-47e8-b344-1e54c7d11623",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf941c4-533d-4ec5-b051-49cb6b0f8356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b1f2af-4d35-4a33-ba7e-6527d2e58403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60776af3-2f51-4797-8f8e-1e6f3bc9b6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3226d30b-b557-482a-9304-45be6330848c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32419c2d-2fbb-43e9-aebc-8acd8997f06a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c030819-b6c9-4b70-8f85-00f01072819b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826749be-aeb0-4952-b040-dd31aa0ff89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85513e8e-0ad9-472c-b4d4-2275e8d33601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a42813-882e-444c-bc4f-4291e8b4fbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cf4ccb-cd8e-4c8d-a409-b30921d4970f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1e12a2-7a3d-438c-b92e-da8a73ba6dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e54ad6-73d1-461f-a836-27855dcbd076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7107c1-b597-46a0-8f5c-2e4b0016757b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffab929f-a50c-46e4-8e73-e8f53c877846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236b6269-f476-4e34-81b3-d7ed4c17bf71",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2355a219-d2c9-4826-8677-94bf4259c866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983c221e-48aa-423d-a92e-ae5dc1be7eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f74545-95cd-4a80-be53-9cbc140342e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e5c147-dbc1-4846-b594-75f7c421340e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c03b33-d42e-43d9-a408-a138751ae2f7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc36855-9be9-44a7-bf34-f20403cfabe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71aae57a-a4a7-46b0-87a2-b556ee095d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac24fd7-f389-48ef-b9d7-16882d8b8037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f388294-dd8d-46ff-b45e-72f4d9076c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02374235-9215-4c41-8d54-8045edf4fba0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f38701c-180d-437f-b0e8-cc9a17494d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ea1e00-11d6-466b-8ad8-042f9932e7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd5d9cc-481e-42b3-85a3-0a45ce3442b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48343949-7e8c-4fe4-a5bc-ddf071577e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f5a720-c0da-420d-a9d7-d4fd9d24a865",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e124a2b-7812-4e0a-8b74-87d63c294bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ee11c7-6128-431c-920a-90cd0edf7a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684820a1-e960-46c3-aa41-0d18585d8f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1de2293-48a2-4a41-9134-62c936967e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4b11d4-839b-4353-95dc-8ac5f694c4ce",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2142bfb0-9315-4e7d-b819-e9942f1b1627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2904972b-d7ae-4cea-a752-6fc2b2e79b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045bc764-c1ed-424b-bc98-02e47e92fcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e809a95e-8700-48b4-8d71-f3c8d6e6945d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0276fc2a-2ac0-43b9-bdfb-99f19e3391e7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0955785-200b-4f4b-ad5a-bc42d50c96f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab013385-620d-4a24-8487-3d2b381a9907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9692dbdc-e60a-414a-866b-cf9387626b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9756094e-5a31-430d-a3e7-0e6e18e02647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160395c3-5e7a-421d-9bcc-5e205bd85a21",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c1fb26-ed93-4786-9c8b-078aed4a8362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c693f4a3-5a5b-49d7-a83a-1fb783a239f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c7d311-7a84-4738-a87a-fcae67f77bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25793178-bdc5-4bf4-a8f6-45024c4eded2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19b67c0-1a46-441d-8b8c-e70b748454a2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e20abc8-6bdf-4ee8-8284-31ced5da720a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe385b7c-fd65-440f-a3ba-a952b8357e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d8e459-8679-4ae7-9dd2-6216ad0ebdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8c8f0c-25cd-4ca3-92a5-289022fc044a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9962309e-8701-4bd1-9389-9ca13f3f1801",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf44271-72e9-44a3-8834-8ca320c4bf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877ccedb-7e67-47c2-8e1e-d4cc4415a76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7985c3-84db-4fb4-9ce1-200b48b9aee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9ea340-ce4f-4d6b-bd82-f69503f82c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51d656d-8583-4c28-ae15-34963d004095",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ac8ef2-2cc1-49cd-9e3d-78fc62ec41e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d77dde1-41e5-402d-b3da-07665e848c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c29f57e-1d76-4dc5-9ced-177c87c6f688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef9cdcc-c689-4ff7-b302-ba2f0d680fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d438f76b-d028-430e-9b13-1e4bfce568ab",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dc1528-a5f8-457b-a55a-234bb098e5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f19a9fa-1c84-4e00-8446-188f63f88840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d81b56-96c8-44ea-a06b-c2d246105c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cab9acd-6752-482a-80a4-a56a4b975b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c06632-02c4-4600-890a-58015d508f6c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c90f3ae-ad22-4001-816e-4edc5902e15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e426835-e900-4a92-82c8-a37eecf30c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a17272-754d-4ccc-8ba5-f0a2b905068d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "97e7f45b-a8e1-493c-915c-f653f3caeecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f61733-0b39-4d50-8c29-b774a0384890",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4874bfdc-24e5-46b3-9489-326b0e15c089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "643e1de6-cdbf-4e1f-9cae-8bffd6c84c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076b8798-0d76-4031-b46e-8f35d8b72e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "350b5151-9807-457a-bdfd-9e035372adf1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "140e3448-f7db-4a1c-a3b5-615339f9b18f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fd1615a-49ed-474f-a0b3-c0ea2dd11178",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0685f291-4047-4a60-ab19-871a3a5c5c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f1b0d5e-6606-4b95-b0de-9cee253145ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81d9ead-99d9-4a85-89df-5a0169eaecfd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8764c910-728b-4bc5-b39d-3451c9be4de6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "403e507f-1c35-4b84-9469-d120ec818357",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49f41760-0b2e-4c73-beb2-708132cb4474"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d5f15ac-828f-49c8-bd0f-365ad5802b5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed80142e-3f5f-473e-be34-64be11f23eb1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2738452f-283f-4604-81f7-5ead8919b978",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "21db0ef9-42c8-41b0-a379-e26cba0dff22"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4269e43d-cd45-4a51-94ae-515517eb0eab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "69d2efbf-a78a-4e1d-932c-829ad492f4b0"
                }
              }
            ]
          },
          {
            "id": "c474e221-7523-4cb7-9ab6-57f9eed14f13",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00743fc0-95f7-4929-bccf-0d54bc57238c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0d5d2bb1-374c-4581-825a-41693619205a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9fe954-50d1-41ae-acbf-5fb1d4642e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "db71927b-50fe-4892-88be-0a97c6d6a220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5994ad06-838b-4e73-b9f0-d9e952bb741c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140d9f9d-1c2c-4b2d-a63e-06c3c1f04623"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2bc272cf-6e72-4bfc-97b8-b7dc7f0ac5a1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a94b19dd-0591-4a7b-bc39-c89b7e26d6a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f669819-17b5-4ce2-96e8-07a281cf2135"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6a45a06-ed82-4afc-8316-b98e0b476c48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0f41d69e-6996-41f0-93f6-06334a7d55e9"
                    }
                  }
                ]
              },
              {
                "id": "d1a74d22-af3c-4c30-8fb1-a9b97d2ca07e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16f113f9-deae-4b7c-b8f6-b578f73e85b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3bc7771-2779-4783-bf4b-058214e2dfe4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c638d10-5daa-418b-ac1b-4f71fc69c771",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de0a0136-9c02-4aad-9bbd-3d1423e7b7f2"
                    }
                  }
                ]
              },
              {
                "id": "6a6606db-a2dd-49f1-8b8e-bff917a4d247",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1262a6ed-a8be-49bb-8cf0-19233b0e69be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "864df2b6-b1b5-4852-b7be-c1e10ff918fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0596e336-3140-42d2-9975-3fc387d0007d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d22c7da5-84ec-45d9-9a0c-d5e41bfb60cd"
                    }
                  }
                ]
              },
              {
                "id": "5294c896-d897-4e30-90e6-1428a9b8abc1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9817bde-45d9-439a-8689-0f33b89dc5c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "379a5a6a-f8d7-40b8-9706-d81f03362183"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72b38a0d-8068-4e2c-a286-0aea33677903",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ac77cdfb-cd35-43df-b740-52ce7f37bc7c"
                    }
                  }
                ]
              },
              {
                "id": "e1a04165-ef8a-451e-8632-a5faa2dd5f04",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45d96c3e-ba8e-44be-9318-2e656922becf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b5754e9-e34a-4b7b-a547-6b7ff5bd6aa4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87f279c4-61a0-4a2a-a4d4-8fc2a3e594be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c28e7c56-253e-4229-bacf-4c7b58cbd635"
                    }
                  }
                ]
              },
              {
                "id": "f0afd45b-3a44-4ea2-ab10-cd86ae29762e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51a727da-26f4-49b6-b8cf-f8e2787ce075",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c672a87f-49f0-4709-a719-375d9466a263"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "376949b5-52b6-45be-983b-03ebaaff5d4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bbdfc6aa-2b0b-4e8a-8364-1109b71f950f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d24faaf-37f8-466d-bb38-cf6f1dcb12b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b88e4b6-b6c1-4426-9883-c16c6697ddcc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "edd3d3c7-a5fb-4fac-b42e-112d7d547615",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a246ec0-a45a-4b96-8fc5-34922b24ce11"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d716214-ff88-4047-ba94-7e087b7874b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "279b6690-0fe6-49c3-8e69-2f9ed4e1da98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "befd37c6-d38c-4d9f-8917-eff6a98200fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18e877a1-4325-419f-8c7e-11659b1767ca"
            }
          }
        ]
      },
      {
        "id": "04a5f40c-ddcc-40a0-a358-7419a82d23fb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9956fd8f-af6b-41d8-946e-357c8593f140",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d774cc69-b534-4a11-975e-8a76362c7006",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c5b5717c-4635-4832-810b-54b22206a696",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0967f03e-33c4-4090-9b18-a66096527aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68a7018-276e-48cd-866d-a04ee815b7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d218f1-46a4-4ad7-8279-483a17c4c591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2658a01-ffa4-402f-bbf8-d574836c4789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99093907-05de-47ce-8d48-6599cc4abba5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b38d8fa-9d2e-4697-b55b-8041e41f8d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4489e417-a130-4248-a2eb-731c4bd287fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f320840-75fa-4acf-b5ea-17ebd4da0093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8954686-bbd0-47d1-9a42-2c5e10bd2549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803932a5-6173-46b5-8000-18ccc9597b95",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3d0bfa-7018-45e4-80ca-18853869ce93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271e8e54-f253-4602-9378-b45665d9955c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1679aec1-f802-4a7e-ab5c-a670ee57ee70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "147a138c-6623-4632-90ed-dec3a647429e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dd86d5-c9dd-45f6-9169-a8d5dbaf5b25",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af23af66-b065-448f-89b9-32c610580f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e661fcfb-56af-4de1-af84-2b4fc4ffb8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335a4d62-dcf8-4ff6-9046-916b62d3fba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69129e65-1558-4969-8792-c9f27de7223a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96954138-a83b-419f-96c4-eaded9a2430f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7d938d-4788-4e76-9b79-ddae49b7e067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232b785c-6b89-41b1-9532-35feef15a7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ae5421-faf3-4d54-88c8-dee45ad67c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaecd879-11d5-4102-a931-0f295c504ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37e04b6-d932-4946-8d39-dfd0c46b3a81",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23f8abf-3796-45dd-a32f-2df0b521ff1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f030ca9-62ec-4867-8bfe-88419636a727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b4a03d-532b-4730-916f-1a14f92cac7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d91494-4616-48ef-a18b-d2613e15d537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afce63f-82c8-4625-af6f-ba08f0a4bb2f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fe16ff-7c3c-4bb4-9dd1-150cbb924e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190dfd67-c659-4e69-b0bc-e4aabeacc7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa97b20-f9a6-4544-bfb7-46a4f1118f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3e7795-eb1e-4cf3-889b-246468f0c799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcb7e00-fd65-4ae9-8b61-bf7b5d12b44c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9571fc5d-cd9a-4781-8206-4713cc76d5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730815e0-b024-430c-98ca-6c011a97da2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e27f148-5e88-44c3-a89a-1fdce298056a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d99a11-510e-4e02-9ac5-8e25dfc01e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca0c7ec-41c6-4893-8394-138b10fd205b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56db3017-85b3-4af4-bd4e-88bc5039261b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c6d153-d735-484e-a57e-4d02bb169fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3485fa-64c5-4368-91e4-e0c27ca70626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3e95ab-38fd-45e8-9ba5-63d21babc7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0a9779-abe9-45de-9f11-ec4878efc64b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93cd768-7fe9-416d-9e33-507eeac39ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b0e3ad-6fba-4235-9f1d-272f40060761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3227cdad-4045-4557-af83-8107557db6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5a5c1a-76e2-4d94-8148-798a07dcbe08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcb64ad-5d9d-430b-ac3d-df3db001d366",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a667f3-c064-4617-a62c-d22d38a91744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3273877c-f81e-4646-b739-a719cde453de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5695f09-4acb-43df-b6f4-dfd2b814eb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "91f2efdc-2321-489c-a4ba-5609bd155d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc1c27d-92ef-4103-bf67-5d6abf311a00",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d0314d-d2d4-4f4b-99a3-94557de84223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358cdc62-392d-468e-8852-4fcb3b725cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecd7503-08b9-4cfe-827f-b6459974df46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b08ecf7-6122-4fa9-ba56-8884f7ea1940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82343f2a-b42a-47cb-96df-61360e7889da",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b630e6-5caa-46a6-9fc1-18bb419d5589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9423d9aa-33bb-425e-b22a-33e55ca74e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d2d81f-1010-44f2-9fa4-1bfbd7c322b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2619892b-e47d-4a2d-93ab-2b014966af34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244a1efc-3318-447c-aeb4-586068f68816",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57deab7f-b62b-44f0-a951-c00319682db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe9e56c-299d-4efd-9af2-b872b656a304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188939a3-a2dc-49d3-afff-ffdaa18f784b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "25d29c99-8a95-4379-9b54-d580a434c1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56f63b7-2ef4-475d-858d-13d0ba7633d0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74ba449-9a02-4ff8-bdc8-494d3fac2da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af151ff-24b6-419e-bbf9-729e55c11a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2000e4-e121-4b38-91e5-48250239e6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "80c0256b-eb0e-4302-bf34-08163b7186ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2727a13c-1d02-4e86-aa7e-d3b8bb3ca5a2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa76af01-4df6-4686-92c9-f1f0944b92a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df021b9a-7fb4-4960-a560-cdeadf9b4f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9587217d-2dd7-4895-878d-d8f623f4c899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "214c7268-3de7-4632-a9a2-b7fd09cbe07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d3598e-38fd-4e50-9243-b92d2d52bc2b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadbfaca-684f-4bb3-a482-be223f4bbf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b197cb-5e81-417a-8267-21c1cd6bbb3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd24d76-804d-450f-8424-668e8942ee02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f6bef8-164f-4729-90c5-ea2a2d2378d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6b2669-d98f-4858-8897-19df4f0cb2c2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa47118-7cf3-4f29-90e6-efdcafa41779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525192e3-397c-44c4-b89d-2a7a132bf71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a2cf31-2b12-4a3b-a9dc-081065cd3e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5dd2f36-06c2-466f-8c8a-b4a56f47b1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd6de5a-6286-43b9-aa5b-a5d2fa9944c9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916fbbab-315e-4cd4-ad92-9afadb568ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317a7701-a803-462d-b574-171fec9201ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cb897a-fd28-4e9c-9dda-9d6aebcd10e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d96a3d8c-0f0a-4fde-a472-ac2467d1a9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2493730b-c5e2-4656-880d-540212fc1d6a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea823fb5-c72e-4c56-989d-3edbcff2bb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbe0a8f-19da-4add-949f-511ebe4a16c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d945d5b-7c96-47df-8c77-9975161306db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e730bb5-851c-4763-a2d9-c19230ef7724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560e75f4-f05e-4a37-ab89-9d91ceab57db",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a3be64-025f-45e0-8a3f-72aa85827f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aae274b-2ba5-498f-af6b-757492539bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f2fdf5-3d2c-470e-a0e6-9b34ce260c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b169b0dc-4584-4e94-b7e3-9bfef9b8cd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3103d346-4744-4d49-be9c-708e2947f66f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f9a927-169b-45eb-8819-6c37593636aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3702f182-7d8c-42d9-bce1-e983673301a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b09fd6f-fbed-46f5-938a-d3fc783579c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "503e6a72-d47f-42e7-a8d9-b60bd49ee19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfc9d3c-1cf9-41d7-bcf5-c0cd76e8d1dc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bcc0c5-51ec-4b3c-9c17-945626c9e49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd531efd-f3cc-434b-b55e-89fdd2f4a7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffaacb5e-ec0a-4e08-8610-9e35163ff5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b520ec54-77b1-437c-bd77-723e09be0809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b693f9-c8d0-45d5-8767-e0b44b8c0abb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81951ba5-573b-4f5a-880f-a1eea1cfce38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc0f384-78af-4207-93bf-3ea815143d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d105ba-93ca-4b21-b419-e96f44667dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9b2729-4317-4498-99cb-a3425315138c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fdb17c-5fa5-4341-aa55-d99d64f404e0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14db0686-4211-4056-8de4-7fee876d0a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de79ae6-68cd-4cfb-add2-df0bed9b31f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d58798-33c8-4ba6-8f84-30c61678706b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41045981-12c0-469e-b837-d4de28068004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0653f989-560a-4980-8ce3-21828c8e24a6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9967f8-d1e4-4a3b-af10-055cba203a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a28f74d-e41b-417b-acaf-6dc8ca60280e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3e5ea9-f7d7-4df7-a8af-2ea940fb839d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba4949a-eaa3-4d0d-8bbc-72c182670420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bdb853-346a-4449-9cab-e786c84dfcff",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b070840-6934-4281-8b2a-9cb52e1e05d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa9965c-6e29-4b43-87c3-72db58bd3128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1e4c37-6527-4121-8f99-0fd98bd963d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "836073b4-f490-4e39-a593-050529b4ad9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbad4d4-b590-43bb-8019-2819b8c79ffa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab348f0-5ad4-4e12-99b0-d47f468a293f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41977d73-f0fc-4672-9cc4-0422f57054d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0d3b07-561e-469a-a0e0-72c7f2e72848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8456c7f3-7098-4309-ac38-0259663506c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f731572-c8f2-49a0-adb2-82304223113d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b04e1a-e45e-4481-88f7-09bf15ceba49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9209ee5b-a103-4f70-b4db-bd0ce33d4474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e18c000-9a0b-4f6b-b269-a328b907a84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5f43c1-550d-4270-bff9-f61db6228f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b19ea1-77bc-402d-bd9d-fac7346b5b21",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b835213-c98d-45ce-b8ad-6bf5a087da45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22179e71-69b5-4c80-8de8-f3fdaa7cbd16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345638d9-9f10-4f7c-ab25-b793cfa03822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d36e2c9-4124-4fba-97f8-be642b23ee60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1508802-9ede-4bf2-8542-47ca799873b3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40fa690-8637-493d-8ec8-7cdb5ca1323c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28577ca-0c15-4d64-b0e1-fa6f8d8b9bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbf5a9a-8d09-4b58-b9ba-e6d1b6dd44b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0d52fb-c29c-439d-b060-7ac61fd37dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdec0a93-ee27-4039-8f4f-63b87699dcb0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524a8545-e83d-4066-88c3-a1e4c29595cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45857bfa-ea2c-407d-838f-f6f2023038ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e202c9ea-65eb-4e0b-b93a-926d0164a158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95d9cb78-7d63-43a4-b2aa-ae1b76bd76b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b6d344-9f02-4e5f-9ddf-ed45072d723f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10121dd-30f0-40a7-9e0a-f047e8d4c37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56181c2d-10df-43db-9d3d-72401bf8ec66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d799ee66-7e1e-49fb-9dc7-680564e01307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea93facb-b8b2-4b94-a083-2e4eb0b5a4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162874fd-58a4-4ebc-a7a4-0645d790fe77",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe955777-2646-4f7e-98e7-e86f69030640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917ca8a0-1c09-4719-beeb-9f0c04ad8fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b15f99d-1d91-42d7-b4fb-7dd072eead50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f929d3-a7cb-488a-9717-2854e1251487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fca4894-c46e-4be1-814b-34bddd8c1ae8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47165073-6cc2-42b5-a9ef-4f9ff3c1e215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8df731c-952b-425d-8a44-52d2a7779c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686a2c2c-d572-4369-bfea-7f44aa114c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "954c1c60-3c19-4188-8558-c2dce3a7ffc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b03e42-02a8-4008-a8f3-494a7a0641a3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa131a88-ccff-4531-b9f5-d56df446522d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6315454-892b-4ed5-a733-5c5b14c90828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed9be7d-7956-41af-bbaa-6828acba6ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edb21eb3-19c7-470a-8473-51129767750e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d927d7c-12d9-44b4-9fe6-b6f65b548216",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bd624d-a1e8-44da-90d4-7f28686b7f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5729a32b-455c-4ec6-b570-29155866ff1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88f57e5-848c-431d-b27a-5fe77d32cd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d1329d-e303-4cdb-a7d4-01f89590a00d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2b5df76c-6987-4820-970f-d2594006cf9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51a0811b-55f3-42fe-b08e-f308a8450fea",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596b364f-bfa6-49aa-a669-6b110b9eaa5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2666cf9d-a867-43a0-9544-32524504448f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85767ab8-15e4-40c2-a77a-360c35691ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08de3ef2-741e-4c1f-8b34-d0077ae97bd9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df468856-cc4c-4d7a-99d9-d604f36d209c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6051653-8484-4f10-befa-2786e9ee9452"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "750d888c-c34b-402f-9f0e-2deb20bb86cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a72ad099-6795-4040-a611-f771d5cdab99"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1576ff3-a1b0-4583-a9a7-8a1820bc86a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "342fd0cf-4570-4bed-8f3c-1cf3fd293e48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "937715df-2712-40fc-86a8-bdbc5410bbdf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ba93858-83d8-4f81-8902-22973cb8c41d"
            }
          }
        ]
      },
      {
        "id": "0fe3f4b3-35c7-4afc-b5f8-200e9208467e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fbc30322-ac99-4fcd-9f29-7c7e00498cc6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e32bf10f-a9b2-40ef-b1c0-b66ad5cb2269",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7d7f93ac-badd-4028-9654-f38be91aabc3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2b3726-c259-49e2-8a19-7cb9643a804b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9982a56d-255e-48bc-9645-da7a376ff35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c1cb3b-91e6-4106-9ad5-0fe4919573b3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f1754b-8c3b-4b1e-986e-6e4e559eb102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06647be1-1582-4f9f-9f69-c3f2867eaea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64437e9f-52ae-424a-8096-5695ef199c2a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7581c3a7-25aa-435e-8542-26b778f87813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b60164-60b4-4087-b182-8308b8012381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0953c438-e8fc-4415-8e42-0a49b0ca8b59",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9f42ea-2132-41d7-8ac3-fe3b2c1839ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ffe0db-f9af-4140-80b9-29641293d98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a81e0dc-ec60-4c16-918e-271e1c864cb9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd89ade-39c7-4063-acad-20ec279a8298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6dcb4e2-eee2-43e2-9b86-40c7699b8c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41564fef-6e6a-4932-abc6-86aa1e5a2bba",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c34f17-8776-4a71-be41-c3f44fd300a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed92b70-fe28-418f-9445-284a4fdd1631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247a7898-a687-45b2-9d84-38de3bc87e82",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d0b7e1-0130-48ee-9dff-67e06a2e659a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980dd0a4-8e44-4ee3-835f-dfa6959f43dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec428ef1-8b97-4daa-a3d7-38a0005774ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c14d4f7-f898-4f7a-a27c-ef0dbe79ff3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697c185a-fb0e-43f1-8f43-7a357fffd205",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba60d8b-70da-4916-bb46-87c952b0f229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "702036fa-9ad3-4357-8966-b16b7d03b88f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b90a85-201a-40ab-ad17-985efab95dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6ac12e-cc42-44cc-a660-e8b3cfe2bdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e8e673-9723-4898-9029-5be8f45a0576",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bdad42-faa2-4eaa-a16c-a74dee0485f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3925a40-9d2a-4203-9263-3aef8a179a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb8c70a-6080-497b-91ad-1afa1b8c1895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def1b350-1593-4b47-996e-8a705b11bcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7223b3-2137-41fb-a8e5-7fc9caee029c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8996b394-4dea-4ef1-8ad7-d6bbc0612a0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f787b1-1c27-457a-a581-cbca07fc68c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4299b61c-d802-4f51-a848-deb645690677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01df23b8-539b-447e-b2f4-4ac4ec775522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025cb194-f243-45be-a61f-d7a179937d96",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3855f79-918a-44ad-9dae-848b2f61c790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b75398-98d6-4f8c-af29-fc124d8082f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324d9833-98a2-4efc-9a6b-d4d6edf21f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd15685-e7dd-4169-821e-c92d7fa2241e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeac5403-3841-45a2-b709-bbc554d0e90d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c1ea11-35c6-4748-b1fd-9f1920eec45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7030c2-3c66-443e-ada3-50f8c5bf07f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543f14b2-9f6d-4977-99fe-1344606de80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc3841a-4668-4e18-bef5-9fa7a7c59b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a2c805-c934-42b1-b060-01a8ddebde5c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bebc3d3-94e5-4b3a-ab59-3346ba160251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c64f7d-aae4-490e-8d93-15bfe2a14497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31502776-d2b7-4322-ba87-59059b0f2e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3284ba2d-5556-42f6-b7a3-6965a591e730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bfe2e4-910b-49e3-85d9-85345c3cd519",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310828c7-6839-4dff-9282-4120f971ab77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb57f29f-5160-4154-b22d-03a050794d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36071010-e461-4673-976f-ee8d0046f9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fb6eea-c760-4316-b3c1-5750cbb122fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1cea8c-9bd4-4c06-9806-dd58b561c91e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3cae7f-3043-41fb-8978-0ca9fa4ec013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "732bf871-332a-4599-b196-19d2395832fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f62156-a7b2-4db6-97a9-8bcea586a30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae4a9a4-8bb0-4a66-9af1-b134af3c0448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935ee9eb-b951-47a8-b3e0-43029a178ff6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc73378e-e8e9-4862-9898-5b6d16b56181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95abff4d-ab28-4e53-8408-de1332bdc5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10222c5c-8855-4ad4-961e-9abe4ea1b2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2c63c3-2282-4d98-bf73-a9dd84b54b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c50315-37ee-4d36-b35c-874164ddd916",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf72978-979f-40f9-baea-7098f9d97d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ca5ba7-4442-417a-9558-2e88f1999cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c84559-2c34-469e-904a-3abcc231044e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45488b0-fc82-4bbc-b304-2da35cb5f530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f81d58c-b937-4fe9-bf29-37692914a9df",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9fe7a2-2a93-4d77-b730-6538d1afe24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d3e70c-5b0f-41ba-96c6-0c124f650066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b5a97c-60eb-4875-86d0-339947747f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a86dad-8026-4202-ba48-45155b69d109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c54d0e8-0b68-4795-9f96-2f42733af506",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafe1e53-6afa-4a68-bf1f-cde5a8348e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353f37ce-567a-41cc-adb7-a4f8acad3b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b36e907-8d1b-4a1d-b3fa-9d791df437a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137a969e-1ae4-4765-a641-77658fea7ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47940177-d03c-469e-970f-d98a083143e8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9599726-6d5d-4d6f-ac18-8d43e36b47e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8461eb1-8892-4d22-9634-c257123fc0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f55af0-e306-40a7-a7ea-9c70ba91268f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744c67dc-4615-48a6-8042-9b1850ea5c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460d7f95-8142-4d68-a74f-75d02d127155",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69628cf-df29-498d-a538-6c4d71309830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f07c575-1a40-4b94-9e08-f0e56a57b8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1257d827-fb0d-4278-90e9-dd130909072a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb6133f-9e80-4100-a3f5-d2ef1dea0ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c3c6ef-eb92-44b1-89bf-c9b65a3f2609",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8578feab-491c-4d2e-823b-361ae5b36710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115992df-a9b3-45b6-8230-6c5cadac1ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3586febb-c37e-4cfb-be4b-5071d798c238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb43ca4d-fdc3-4772-881c-51b3ee8b1b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84ea108-ead0-46e4-a1c2-8e766207c7cf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468e6297-52be-459e-ae07-c87d4930bf3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eecca7e-3517-4684-a08b-5d904079df51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8e08af-7f06-4a98-bdcf-62ef9f05a806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e3f8fc-3dff-44d7-9f70-c1ee66c4c91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c50bed-7b6e-4fc2-b125-e4aef3929c61",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6ef1e3-6d61-4e8c-a2dc-54346d878ca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9773a4f6-26f7-43ac-ae10-e9ecaf39524b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4030944-dcbb-4445-8d2d-934f705ba0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f44541d-d09b-4f3f-9443-13cee61b45cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dcf002-84d5-44d7-91db-49efcc27a412",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb7bfbe-5d79-4c1c-a96e-a8e6fe1c2175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd544a04-ab79-4f02-8258-30e975dbdc67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bf4026-d97c-4d97-902c-0390a94526c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9e6259-1ded-4292-a33c-b5fbb329a891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a993ab-e7a9-4c21-a735-813dd41519a9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cca959-776a-49d9-b40d-1e7f99d6b29d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ba6db8a-2768-4a30-a599-a3ce000722c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e381ce-8adf-4382-9128-e04b7e0e303e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8003fab-4fdc-4fc8-931a-a9b3fa6f9b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4ad7da-2553-4023-92fd-630c2c4f4a28",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355a1094-5bb5-4b55-94bd-7b950dfb0ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9beb0d75-f452-42d1-a2b6-5013b892f60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e446fe2a-dfcc-4282-9d9d-fcb61f9600ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb7b09e-0edd-427e-878d-e5b98b4f8dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1778114a-40bc-4d99-808d-b5c6b5b359cf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba094ec1-b103-4ffd-8dab-a894b280dff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8de9635-1d6d-4f54-8ce7-6320c879a560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee41d59-f88f-45ef-8e50-902fa72dc844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa32d9a8-bc18-4c53-99df-e8c02528855c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ebc59b-55c7-40ce-bb2a-c389ae43c0fa",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c418d3-491b-48d9-95e1-1e618b1304af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76517ddb-e958-4c72-a45a-5492a55cfdb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23b089c-95ed-41c7-a9f3-882e77ca6904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0accb51e-4fa7-4e67-a7ae-47331f75d556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9b42ca-63f0-4745-abdd-855c4b0aad7b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b72c633-04bd-4a36-92b6-8ae4af6c1b37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76bc3d4b-db1e-4be5-accb-8cb05ee24d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3049a5-ab86-4f47-9167-eaad4b48dea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdf3844-ae93-4ba3-9c15-fa9f05ab08ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3368b7d7-0c14-4f49-bfef-ab2d3f9df12b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2b8bc6-6f12-4511-b18c-a4250fbb038a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f0933d4-5430-4863-998e-aeb1a063e969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabb7752-4c5a-4d1e-8a13-7179fca910e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82825124-72ed-44c5-9c81-f677cc850198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325b91d2-b43e-420f-b2f0-c0725bcaf916",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c8c3ec-1856-4da0-a011-207aee1e1d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17848c97-71cb-4ee6-8526-f7bee2d0b084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2f2dbd-3da2-44af-8db1-f141297cd5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e071be-e7fb-4c2e-b48b-807f7be8e61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908efc21-c121-441d-809f-2bf62687d875",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d14a82d-266b-4c24-9655-ed0de2971d54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "317368fb-8875-4735-9cc7-e9d6fa8bb312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29b08f2-3388-43e4-abd2-f4375e2f7ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd39218-a278-4c28-94cd-cddc11f28c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8239679-7888-449a-a6f8-b2f3b9908374",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a4fd91-a416-4ff0-bf62-ed1904bf4bca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21e8e456-11f9-4790-ab1d-a809396d45a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992b7b95-7e4e-4486-ada0-92a09ef4e4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abd2fc1-7904-4987-a229-b75641a0418c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ee5fb6-44fb-4f5d-992d-696ab4e0964e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521efa71-a73c-4afb-b99c-aa9b38fd7954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8c1402-5733-4f29-beb0-6cddfd7c9381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7086b74-974c-47bb-b741-6c068de55b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5bc76e8-bc3c-4f0d-b244-579ef8637307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6eeb1b-2cfd-44f6-bf93-2d1a62cca653",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b33f2d7-8d50-4477-8013-d3c1f3be6ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc47786-83ce-4230-b48c-195f6d6428b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231ed6ba-2901-4d06-9c88-7f06ec2343ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3072fb2d-7a1f-4b7d-ba75-3323bb15d2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04aff6a-b197-4994-b9da-14fd7f4316b3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a261d7-fb1b-47a7-b8cc-604c7a36d04e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba506e1-ad02-48e5-9465-113d59b1d95b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d237eb-b483-40e1-a7d5-128531993599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b64c620-0053-40af-8fcd-c9ee68bc9e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38610095-e951-4f66-b275-1440d24a00b7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d99ae07-d3a7-4048-a096-78610d879fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff91f2e-69ac-4768-ac7c-d8eb5d8308cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6e7577-5efd-4d05-b6ba-d411bca9de44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ef678a-6c9c-4a6f-a888-152404274456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a912556b-edc7-400f-8359-dd13ff1993be",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b08d2f-fc05-4a8f-908c-87392969b20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86df2b6e-5c93-4a5d-baa4-c2746835750b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6593b94c-a7a4-4987-a86a-273107a6a6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf3d31c-9f03-4353-8694-937892bb4db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2f1029-1623-4087-bbc8-0d7a4e1ecf57",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78ad045-b14c-4f33-9a38-826fa4d84246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e414705a-b6b9-48ec-8f51-2fd04dd4ea8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae54dec-c12b-4a8b-bfb3-d3573345498c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7861f6-d835-4046-9db9-7c32bfd71040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991442cb-b9db-4ef6-88d8-175a579811a3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c0ec08-8e12-41a4-8ede-a7f6a36ca0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d42bb67-18b2-4d88-83bf-9369ae4c25e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4665d795-f930-4cdd-bde0-477eedb9fa1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16b9574-2e6e-4e49-b60e-abc6cf9b7595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606fed22-9986-40e8-ab06-749f6c5e2b30",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e269f46f-1ddc-45cf-93e6-a5efddfbf9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e9749d-e4ef-47e5-a79b-ef5f14ad7b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c71e6ea-4617-4eee-84ae-b35ba1a7ae58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac551cb-5f81-4208-9ea3-964dad652273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa3f657-1f51-4688-828d-0d2f1bc1a375",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1bfab7-8d74-4157-a58e-be442773302d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d926889e-6dc6-461c-92a3-f7ec8d9579aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3bab74-3b07-499a-aef6-813f34a4f6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e169b0-8d06-4f2f-a92a-53eff4e19336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf0b2b9-2ad8-4ec8-9cea-71d230fcb45a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422c92d3-6f36-4a1c-b6ae-495b1721385f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edaad2bd-f80c-42ef-ad54-348912e3a22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dce0c03-239c-436b-adfd-548bfe901a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9194e0e-6488-4e6c-af2e-09070d75af69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d66780-2038-4d50-a49d-a9676e189b96",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce52cd6-f655-401d-b07a-699771c9bf1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c18246-b7df-4440-a908-6684a29dcb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eb6cd5-5830-4f4e-93ca-ac6f13f2e434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d86797d-5298-4ace-a028-fe172127a192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f581ea55-1f05-41a3-ac1c-4686284aa891",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3668304e-78c2-4a8e-abf9-656ea4d583bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd50da1-2d01-4b3c-9beb-1f09d3913655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd4c590-3b5a-45cf-9dff-ad87d6bcbb38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b46914-87b6-437e-801d-8902be6999a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eed2ce4-8bd3-4429-8dca-53e7c39042a3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0921822-5856-474e-9e2d-7cd905ebbee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517a9c0b-5fbf-48df-8f63-a7d3db7769d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0138c9-cdf0-47b8-98bf-269ad7400067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273c5009-581f-4e80-9e6a-1cf3eba91f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a29423-c751-4455-8c19-a90cd8339aa0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3137be-a2b0-4c1d-a077-8523fa0e8f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db805bb2-1e08-4177-b5a7-3da6ca68ddbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e54630-e390-4184-ace0-2c551e7f7d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e760744-025c-4146-a2d0-437afdb02e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606c0922-9600-4575-bc33-aa70ee69f0d6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea3e7a0-05bf-426d-ab57-c683d565aa5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8a4176-0085-4c5c-a041-a58960fc0487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c0017a-1522-4ae9-8e4f-568bd5f426a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b07fdb1-3b19-4295-a866-00c37e1f5e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd70aaf-4aff-45f6-bca4-7a6264df4826",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeefaa26-6ac3-4368-b0b7-65d19e9e7ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5029a11-baf0-4aea-a03d-ac265e466e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ce8c12-da8b-45d0-be79-8e82678e8785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c102e6c5-33fd-421a-9220-b342edab4b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b9af19-1a81-4e34-9000-76b16f0126a0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ef0d95-b912-44ad-8099-94b2e46cf94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb09f12-dc1e-4958-b5e5-27b1f0a6f544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac54b0f-d673-4628-97b1-c120710b6246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c914bb18-2553-4837-98a5-8f7367136fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4f3be7-200c-4d63-bf0c-97d7003a424f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15199836-24f2-489b-9183-2c2e3b5eb2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f698bf3e-86b6-4e53-ac08-afbc03d35f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0427d4-50a1-4d5b-b6e0-1eeac5fb2a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4365718c-d2e0-4649-841c-529ba4a5f5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b665052-ac3b-496f-88fb-605fd0fbb6cb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc24886-74c9-4857-a392-01dd4a608790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9150eb32-34a5-4aa6-9b3f-0fadd591f9e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9588b52-6691-4680-9445-a9f3cb389300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf795a0-c7ec-42f9-8097-049891112a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffab83a-b709-4a52-afad-a98af2a107d0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63342e63-1b2c-4896-b4dd-c4140e21667f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2312b2-ae6e-4b93-947b-af4f48c86e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ca503b-8c7c-4741-9051-7ebdb13cb31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa69f1c-7cb3-4987-baf8-066eff256ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c54e581-12b6-4390-8d7e-6c292d7aabe5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f4ea1f-93a2-4b5c-b4e5-4d5049dbe1f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37130a40-ea3e-46c8-ba2b-44b6d1f4e995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6553572a-ce45-4b1b-8ebd-2b72fd943988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565c2ee3-b954-4b96-ad99-da11fcef38e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10affce-36ec-4acc-b8bf-020a35c565dc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317019ba-b8c4-45b2-8b42-7b98f845a11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14188d49-72ab-40c8-bbb6-a31ab601e516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8377cb76-68e9-427a-af98-b864c6db3d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f017595-1750-43b1-973d-bfae03becc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4213252d-a695-4019-9aaf-e1a5d416c83e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3017336-b1e0-4b79-9717-6c03aaba8895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7620cad2-44f4-4ac6-b65b-87003b876441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e08c03-0f0e-4a8d-a7de-f91c12ea743f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248cc965-2cfa-4209-930a-21265c5bf185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09741d6a-5f82-4344-91c1-21e8d908e5b4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56930fb-d869-4798-bcd5-7a821e470ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8e5972-e3ec-4fd5-8b62-8b9458dfb19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b397cd6c-357a-49d8-a70f-af6fdff0279d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cca7043-ba80-4116-960b-2c038b75d1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5e9982-8442-44e1-83c8-fce491729173",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270ca8ac-178e-4567-b83a-cc714c152527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cec0b9-92a9-4538-b4c9-c11e66978c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1245106d-57da-4bfe-9378-f1e09c679673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee63875-f85d-4fd1-84fa-a7f302ddf808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241f8332-aa18-4ce7-bd42-fcb72ac78bd4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa3038b-144c-4048-a9d7-235e7daff932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05dbb040-8bf6-4bc5-94e8-8035cbe92653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d847b1-6042-462c-962e-0030dd3f370b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c8005e-a3c6-4ab3-8f2f-41c74154503c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0d6eec-70f4-49a7-b7a3-aed501ce108c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f7dc72-556f-4f4e-9db7-3cb08a9110c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99df1a6f-4451-4fa3-a47a-45c50822156a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40914ed2-f014-4919-9125-778f47f364cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ff5a95-addf-48ef-a346-e8aa967c8df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b6e4b2-3c42-4079-b69b-5a215649052f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f4119e-7b50-4918-bdc7-5f89acd55fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5923ce39-059a-4aef-bf6d-b0d1d985e9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b807c07-b35f-4f6c-8116-ec635a73898c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231ca9b8-d6c0-4529-aef4-882b62350c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffdfc63-6fb8-4006-b47d-d4758880bf33",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382d8fc6-90c3-47f5-8d9e-361dd296f847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6be779e-a2b8-4036-9c22-3c3ab10356ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab7cee4-1258-4fcb-b1cb-9fd67cb33c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c1ac41-9e44-4bb8-8610-1a0d9d683be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cda686f-0fc0-4e62-a915-b75daf0c582d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43aa8df-fd0b-41cf-b3b9-9631f2a59cfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15f6c796-1828-49fb-9ede-1293e3b0bd17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563c311b-10b9-4a17-b276-4acd74e01ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e496d994-df8e-49d4-93c3-af2b064062d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf32b1e-d57d-4acc-b61a-f68295d51c72",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff201d5-bc34-4fb0-9499-786e59051978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bec4b803-7026-4fe5-a3b8-ebf50abd171e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d58b8dd-ffe1-4363-8590-c04539451097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb12858b-664e-4852-bb36-80d4fd16b188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cb44ec-b181-43b2-a71d-3b415c12f76a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ce3e20-ce5b-485e-b58e-d50b174d5bc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb0cedf-0c67-45be-a998-c7bd0e843072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72523fd-5d43-48b3-af42-4b63c492ff55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11716e36-7f3d-4d9b-a331-54502c7ba2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca64f593-3e81-41d6-83b6-3f1488bc564a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753af7c4-0732-4eb5-a0bc-77bdbc95bb35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a733c669-5e7f-41e3-85ec-881abc79a011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac0be1a-842b-4bd4-baf2-591bff9a2a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a144d7-cd52-49d7-b54d-7da7bc4a521b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b40df5-553b-4d67-8daa-074d20060c6e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01250e8-3cee-4e52-b70b-571f44c280db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc4cde28-386c-4eb0-90dc-d8adf7c020ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c0e0f4-86a5-4f7a-82be-89b5ce0eda26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f9af18-2dbd-4c98-8df9-518addbe0c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1afca23-7e51-4c37-ab15-fb2d48c39b8a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec589998-65ad-46dc-8de1-2eec724e72d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4866254c-a018-472e-ad68-1df8de7b88b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8521ae1-612f-429c-b490-48eaa830de7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acc0121-c28d-4f6b-9c4b-a8540ca005fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fef365-6d4f-4c89-9bf4-628b78495920",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10770fce-9c89-4306-996c-07c4f4c80baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b04002-f121-4d7f-b5ff-0864ff21e227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3996c462-48f4-4909-be20-c936442267a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1313a05e-83f6-47c9-96cf-ed28bdbe17c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc102cab-44a5-4a7e-8ed1-7c5829e435aa",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42eb47f4-b3d1-459a-8372-bb9a24d72ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75d824e5-3ec5-4cb7-8e87-5fe110e05b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32551a76-1150-402b-9367-5caedeb903ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264ea8be-1f19-4275-af8d-8a5ed08d1238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa67028-ea4d-4b77-8681-fb76679b55c2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa2cb09-51a9-4286-a31f-3e5d3d7239b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6916adb-a45c-4916-bc57-d9536e1d65c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1355229-7751-4e2c-8495-6b5a57a19c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69096f4-7069-47e3-b2d1-dfd478d017d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee0045a-a238-492e-bc77-4cebcd6f2baa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9e4ee3-e446-4d4f-a7d5-b194d9a35607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0ca7170-921a-4f62-a408-9c7efed196c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715cc8ca-1f9e-4d00-bb32-49510e90d221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e82dfb-02c7-4de7-aae1-325263c5e993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2faa566d-cd58-4f87-a895-47d5833fde93",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a1f721-0f62-4932-815b-5402de8ec940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50f57e89-863d-4d2a-bd13-faa3ae242f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2769f9-5183-4f06-9208-63716c938441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3581bdd7-a6a6-462c-8215-0e1893638c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c123e734-bd51-4758-ad09-3341bee8929a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26132224-9df9-4fa8-a44b-a074f4d1fd6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80ed6e02-bbd7-470a-b85c-1943b7f1dd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88056f30-2541-408e-9725-a1420698f527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fa9f45-69e0-4d19-96ea-b28f4f780406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b85bb1d-8b72-4045-a5c9-2eb4ef048988",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1801f3-1818-4c4f-ad1f-84738ef37558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f8e001-90cd-4a9c-a655-bb75f8d22a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997809b8-306b-4f94-aeb5-c6c65edf4d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c478573c-8550-4ea1-866a-ac41fc4005d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7488b952-d4e8-4f51-b4bb-1dac9008f658",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbd0d9b-bca0-48d8-8075-866a47b1fe56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28908a34-d1ae-4828-91e1-1482d00dafd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be42569-5700-4f8e-9315-cd7f1c0f13e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc0c96d-86f8-435a-b8e4-62548051c1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a923cbf2-2406-4034-b052-b61e346841a5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5add15-99f9-4f93-9781-362a5a0e9d0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "135f06b9-8103-4ffd-b6c2-146ff4737e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8aff167-def3-4785-b3c8-20b5954dbfd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79fc9a2-d006-4be1-8e37-264a9cd500d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df74df7f-3cf7-43b0-812d-ff43bc2c8e3e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faae8485-394b-4c12-84ef-d34c5770cc00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e4c083c-bcab-48e4-9fc8-14a02f6d94df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0587bee-f9f5-4d39-bb03-1f3dbfd65cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8725446a-c5d4-42cd-b960-5ae2a3d7bc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2ce94c-162e-44a9-836a-82fba53aef0d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac74432-575b-4327-afc4-c0d9eeb8da50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bea182c-356d-40b0-b225-cfa4e6fe21e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ba7031-0885-4bb2-959d-ca758b2e9db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f64fa4-5927-437c-a3f9-f0b34a5184a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b930266c-6cb9-4be1-8c9f-20bd364c4d5a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d8a627-fa5e-4dea-885b-0a44a888438b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67b010dc-5296-4db4-9ca3-2b26eba4176a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37da9c5b-4946-4fd7-8371-68f5514b7866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1285fe-6965-487f-b63d-d66f9806df11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e64779-721e-42a5-ae5b-c86318979cb0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aef5562-2ff2-45d9-8b2c-f7f85a97437f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f460d73-da20-4de3-91fb-54619aa74116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4c9fc8-14cc-42c8-a56b-a3ca28301a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ef09df-b73b-4503-bf2f-3dd6bf829dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e016c67d-f814-4e97-b74a-eda6fba218e3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa8f4be-f063-4006-9cf4-ce5f39f39be1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e27e05b0-0b53-4cf3-8412-5f78cdbdd50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9133b31-02c0-4dab-942b-4293c7b61ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f26283-b746-4fb6-83c2-7346d78c1538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e725ad0-ebda-444a-807b-b858971b1f38",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbab0186-cdc5-4e8c-8933-e3abc5606299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254b3595-97e7-4cc4-bc80-de2024b366c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc9c59e-d8ba-4950-8975-568561851eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc5b71d-b0c9-4602-b8cb-5464bff5c04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151d615d-3c1f-406d-b0db-b40e7c59b03c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a5be65-5e4e-4923-9649-872750abcbd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa1520b2-3c6a-477e-b2fb-f2714a355ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed77d5a-081c-4bd4-a1a7-30cf1683fd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34ddc5c-abc5-4734-a95f-b3f80f6abc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e981c18d-ac51-409a-a059-1e606e7c66b5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8548c9-e478-456a-ad22-e9e5218110ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0efde51e-cb1d-412d-b944-9ef2a09d9076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de120a6-2d5d-4fa0-968a-9fed3b35b7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec3aa9b-5683-47b6-80b5-5537b4209a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eec742b-8b92-4a93-b2d7-78475e80263f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa0f683-59d9-45c0-931e-7b2da1aff15b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "544a2b39-1434-4e63-9d6b-4daf3a2a1e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca02f906-1ae9-49c1-8ebe-a03f4aead954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bd25b2-2ef5-4e8c-b08c-dd92f66b2a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a636248a-07f9-4700-9edb-946bf27657c3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161d6609-e310-4630-b8d6-5442246c5214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d8cb3d-1b1b-44f3-8b5f-09a074f1561e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9987e9fb-0d5e-4bd3-b7d3-ef3b0ed5d1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af12674-3b35-4166-9a3e-3ac729f63a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635dd83b-23ba-483a-b16d-6ed577a45ae5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51a48fa-5229-43af-b766-66f328fdc436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe5784a-78d0-4668-a25e-edc392612328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7446e9fb-99e5-40e2-8749-50fd223052b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90f395c-b2d5-41a9-878b-17b76ab4a971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f6fb08-a0cf-497e-8459-bab4223a7d56",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a65e95-ae11-4e78-9346-c303700550c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3960474b-feb0-418d-a471-f219758619e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaa1b5d-707f-416b-b4c1-d3bb6260f090",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e933f914-1bb9-4ff1-8701-ecbe1f31e645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fd0824-5621-4983-9d90-a3cabf7d31c9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b418ae-9e36-490f-b8a6-6fe2c771152d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a5a6300-197f-48a1-952d-4e2aaa43f5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b956da5-4b8f-430b-8d86-8612ec7868eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2363d946-383b-49e6-b19d-c9cf2e1b788d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f25d95-f787-486d-afc0-7e2949c67c55",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80450af5-2d32-487f-9428-8a1df0cc1eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e48c6f67-00f1-4ca5-8eb6-cf5a4b3f7b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66982b04-b45c-4afe-9598-ac4517d85931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baceadf2-4537-4113-abd0-7579465d4dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f000e83c-460b-4576-9dda-cb1da3a5df0d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d52a46-5bbf-4739-bc75-16beeb164d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f157cc-2f2c-4fb8-a04f-6ffb335b3648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fde78f3-9ff1-42ff-9a96-ccd6614ba477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eff2972-4b5f-4bd5-b252-a69b28a99080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d534b673-4216-4671-b968-88bedbf5c273",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ff8aa5-8ca8-474f-b973-49c05b77a786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fd0830-f3e6-4ff9-97e8-7586ef5603a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde05ee6-b841-42fd-9b3a-9b1f4f148448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033b1eb0-5d0f-4776-a355-f527f7f5fb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f34befe-92f6-40e6-b1d0-9c845f237c69",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f27cf4-55d2-42c6-ab4c-8dfda069fe99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5932068-cffe-4f79-91d1-c01cabe3f732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1ed4cf-257d-45f0-8de9-5669bf939507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c50f6c5-6bd2-44ec-aab5-e4f1d6b59160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81333d5d-7b0b-49c8-8196-216f51acfbf5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaa402d-1f0a-4dad-9275-efb9243500e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc26f15-9ee5-49b8-ae68-fd164f8eeacd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817d3d60-9011-4840-aa0f-7c5cda3546a2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979a6fd4-e368-47d0-82f6-3768e22c33e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb5105c-75eb-450c-8d3a-0301bc1263de",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e81e3a3-06e8-41c6-9136-ed28b6620c32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "840aec68-783a-4ed5-a3d2-ebf975e1d58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b2e34c-7f42-48f0-85ce-ad0085c0de88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf862e5-0427-4210-9aa7-c9727dd2c1ac"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bb9e326-7362-4e36-930d-0d56c8146601",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ead74e51-f001-41fc-afb2-7081c2f72c60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9cdabbf-940d-461a-8019-4fb8e0c51f8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af025384-64d0-4150-857a-517c49704c92"
                    }
                  }
                ]
              },
              {
                "id": "be651835-6db3-44fe-89b4-8a5724757c5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d56924e-7162-42e8-846d-333a7867e298",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51686dc-be13-45ed-8f13-306e9129b6fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c170bc4f-a56a-490b-9110-801605021d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27766cd-adf6-4402-b272-a2bb4a292746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45b788ad-3d3d-48cf-bd0a-9f87ed317ddd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb8de5e0-1253-482e-984e-07b6a6d7b375",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10ce6692-319a-4024-8c15-f35ad2be1209"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc40eb7b-1e18-4e2d-8e88-1dba8a64b016",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27b4e3d7-8543-476f-91a3-40273585cd9e"
                    }
                  }
                ]
              },
              {
                "id": "dbb8531d-6c9c-48e8-bb1b-ff272670547f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0de55370-ae6a-4e98-a5fd-265bc80f71c2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0d99b4-632c-4169-8282-f68791c89a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dcbbd416-a17c-473f-8001-e6ef0afc071a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7f9919-6ea5-4e18-8603-e8078ce7c355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b1cbc8-2e69-44f8-b855-5a535107c12e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "29bcbc54-f145-49df-9ea8-6a0c8d63382f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "44b0b99e-724d-470d-a1d2-d370ea34aca3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76bd5013-abbd-402c-9230-f0cd091a10fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cbc49042-a598-4ec0-978b-a659fbe1c505"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5835e4d-6bd1-4fc5-93b0-aa3ff44965e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32a86b71-378d-4eb8-b74e-19c67871a45b"
                    }
                  }
                ]
              },
              {
                "id": "271125ad-df2b-4434-8bc0-edcfe838dbb6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "585b83a1-83d7-4b5d-94d6-6daa13132c13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6700bccc-63f7-46d5-af15-6cf27f82cd66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c52f6b28-9803-46a7-a7c3-9424a178e53f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "834eff1a-934d-456e-a336-2a4242e356c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63e6b121-d3be-48f5-a944-4e90a4bfe3a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "826b6902-dbd0-4920-8c00-cf0883f24da2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c467235-338d-4fa9-9388-569433cafa2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c034ade-c4aa-4b62-b693-52eef330dc6e"
            }
          }
        ]
      },
      {
        "id": "80cb9fdc-b1ef-4b7f-9cb3-3587ea415f1c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4d8c4c09-3645-4dad-8e01-8721ef4a9a91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0b541c2-213a-4718-8753-ba4ca9e598d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28d43926-203c-4fdf-84a7-1272a4e97bed",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487c1ca3-5fee-43c0-a6d3-ad427bcc0dbb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ef06d55a-72a0-4c72-bc0e-93d98e113be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32decd22-bdc8-40fc-8a73-0c7851cd860f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5c6a0f4-ac3b-47d1-a41a-dd62f24b1c40"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23278640-d71f-4878-b7e4-752974e29ebb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "469c0619-45b9-4f52-9a01-e1a3ea8d1f40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dba24037-8b12-46b9-8cbf-00912304ef14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "611c932b-6636-474b-a9ea-c3e537b85888"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad99b461-d0f7-4141-9197-47eb82db690d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2c7fcfed-01ce-4a2d-9a24-6a697821fc05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bde58009-d2e8-4741-b252-6162e465a60c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "889be5ea-ea00-4d71-b1b8-fb28b7d80073"
            }
          }
        ]
      },
      {
        "id": "39bd21f1-ee07-4baa-93db-ef543197b88d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "874ca3fa-1995-498a-a42d-dbcd387c0109",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c49da70f-54c1-4b06-850f-7366da2877e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89f33643-d251-4c26-8ae4-66851c954f85",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a4b898-f968-42e9-ad90-ee5922aef043",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00f90430-605e-4c20-a63d-c034ea498fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75878f5f-38b4-4af3-a709-e43ee50085f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ede0cdaf-3d1a-4546-921c-5e3d9ab58c44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df351739-d043-41c3-bc66-4197ec86dfdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "475c7a62-4f3a-4268-bd65-1a196e8573b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e271c14e-609c-4731-b157-c931a3ca61a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c91e4347-9a55-47c5-9c55-b898166224bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ce80ff2-c582-4bc5-896d-afad932f2ec8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f8ec1442-154a-411a-a78c-588e15ad0d8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7909c974-8d36-4e97-a001-f69fe60ed69f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1747b3da-2a63-4770-a940-6af0de8f3407"
            }
          }
        ]
      },
      {
        "id": "379263e6-d758-4ef1-964d-e1c52303ecdf",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fd9beb50-a285-474e-89bb-2a48f9f82e57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77609833-d2fa-4b57-bc4b-bc79e4b48c09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3145bdcf-b216-42a6-9776-bf873659f0f8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3f84a7-b862-4930-a7e9-1099af1a26fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "422231cd-0014-46c2-8bce-0981a78ef208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91c5f9d-b586-4bae-81fc-197a0b137ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb852544-1e3b-4f06-a3e6-84da3163b6c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "341702b7-c23f-47e7-8a73-442ccfe04c32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eec751ef-7a19-4062-8c78-a1e27ae5b117"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35be0591-6c5c-4065-b728-37ca989ad53b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4dcab485-5785-46fd-87fa-2ec047ba5150"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61b7bff2-65fb-4d94-95b9-f03724b5f2c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e6a3742a-4376-47bc-b1f9-2abebea4eb58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58276741-8b78-4d37-aac3-8b27ae1fcc32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc747cae-1c79-4e50-a7c4-48255cd959f1"
            }
          }
        ]
      },
      {
        "id": "c718f2e1-553e-4b84-8b1d-fd44badbf020",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f65702be-3957-469f-866f-a63605c024c9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d05601d-0d65-48a2-a9a1-9b86bde22de0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "18c1091c-20a0-41f1-a2e2-fe153eb98b68",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "407a198c-7781-4267-8710-5989ea367812",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0428844-0640-4ab4-bedb-e93b15a0d866",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 9.432539682539684,
      "responseMin": 2,
      "responseMax": 779,
      "responseSd": 53.925428123584794,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725756443217,
      "completed": 1725756453608
    },
    "executions": [
      {
        "id": "0f9a7c03-4d85-4b73-906f-afcaf91b3440",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dc677de6-76e0-4ba4-8d19-f1286cf330dd",
          "httpRequestId": "e543999e-83e4-4c4d-8400-cdba6cf98be6"
        },
        "item": {
          "id": "0f9a7c03-4d85-4b73-906f-afcaf91b3440",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2231cbdb-081e-4b9e-8600-fdd17208382b",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "b8556c02-56df-455e-ad52-c1fe1feb3ac6",
        "cursor": {
          "ref": "0605b70a-3d0c-4e56-ade0-5c2d5218e540",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9963d5a4-4a69-4aa5-8cbf-d4a2b8902334"
        },
        "item": {
          "id": "b8556c02-56df-455e-ad52-c1fe1feb3ac6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1f1e7bef-516a-4eeb-a753-7128c6688378",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "b8db8a47-75a0-4fb0-b409-a42e37676118",
        "cursor": {
          "ref": "8f63812d-ac96-4ae3-8d09-30f409291a11",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "af4aec00-6165-4c97-8e4f-d0f6c29aeb36"
        },
        "item": {
          "id": "b8db8a47-75a0-4fb0-b409-a42e37676118",
          "name": "did_json"
        },
        "response": {
          "id": "440f5166-6b06-4eeb-bc2b-e46749557659",
          "status": "OK",
          "code": 200,
          "responseTime": 214,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07ef123-760b-4b2a-a905-7bd898a8f57a",
        "cursor": {
          "ref": "798ed56e-9ad0-4582-8444-7e9ef4dadc4e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8d525a9d-af71-4d38-aaae-4b9a2aaa6903"
        },
        "item": {
          "id": "c07ef123-760b-4b2a-a905-7bd898a8f57a",
          "name": "did:invalid"
        },
        "response": {
          "id": "72277a73-4197-4c51-afea-4e0d61abe5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07ef123-760b-4b2a-a905-7bd898a8f57a",
        "cursor": {
          "ref": "798ed56e-9ad0-4582-8444-7e9ef4dadc4e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8d525a9d-af71-4d38-aaae-4b9a2aaa6903"
        },
        "item": {
          "id": "c07ef123-760b-4b2a-a905-7bd898a8f57a",
          "name": "did:invalid"
        },
        "response": {
          "id": "72277a73-4197-4c51-afea-4e0d61abe5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3641b1a3-2d1e-4361-b6b6-548e6868641b",
        "cursor": {
          "ref": "40983c6b-d922-45b1-a546-6f8c006f36d3",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "23878d92-6b2f-4dfe-acad-3705d41ab3eb"
        },
        "item": {
          "id": "3641b1a3-2d1e-4361-b6b6-548e6868641b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ec5a29d2-f121-47f8-9860-8388c0007c70",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0244431-0a43-4192-a7aa-9f4d9547d878",
        "cursor": {
          "ref": "e372f8d5-c235-4ec2-bf2b-f2109bdadfe4",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "83e01917-f3e4-47c4-87e4-309102871599"
        },
        "item": {
          "id": "f0244431-0a43-4192-a7aa-9f4d9547d878",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "17ace590-a305-4699-948a-d18c7ffeeef9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3aea7a-ee9b-442f-80e3-ba67203de03b",
        "cursor": {
          "ref": "37ce689a-3d5a-4b54-8736-8399b99709ef",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0ed7643d-cdbf-459f-9c4a-f8f9057737dd"
        },
        "item": {
          "id": "9c3aea7a-ee9b-442f-80e3-ba67203de03b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "09166bda-6c1d-40a9-8c1b-1ed832feb8fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8c1e61-fec3-49f0-961e-4c315af77e8f",
        "cursor": {
          "ref": "9dfb637a-364c-4e02-b906-68459d44263a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6f4c09c7-378a-4ab4-9892-dd3b9cb346a2"
        },
        "item": {
          "id": "bd8c1e61-fec3-49f0-961e-4c315af77e8f",
          "name": "identifiers"
        },
        "response": {
          "id": "6e93cda7-7777-41da-a254-01f485a2df5b",
          "status": "OK",
          "code": 200,
          "responseTime": 232,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ff3681-c2a6-480f-9f2f-0501cbb762e0",
        "cursor": {
          "ref": "3f67407f-5e01-4046-9cd3-1fa9704d0541",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "280868e1-aefe-4e2c-bdda-3cd08b330c52"
        },
        "item": {
          "id": "92ff3681-c2a6-480f-9f2f-0501cbb762e0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a680a6c5-b558-4597-aee1-a3a61477bac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d719f8-568b-4dee-a0da-8231f5ed250d",
        "cursor": {
          "ref": "a7b36502-ea6b-4e0f-9d83-44b64b178fc7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3a478fbe-fbef-4e92-be12-e3a676bb465e"
        },
        "item": {
          "id": "a9d719f8-568b-4dee-a0da-8231f5ed250d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fb86193a-a619-41a7-9497-5c8122033989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02247df-901f-4a2f-823a-8594e5dfe54f",
        "cursor": {
          "ref": "512a7da1-8afc-4c51-aaa5-d0428b6e524f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f271bb4a-e349-4ab3-a60e-89e3653adbac"
        },
        "item": {
          "id": "b02247df-901f-4a2f-823a-8594e5dfe54f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3eb72f2e-7079-48c0-8273-ff57082b1a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ae273e-cdc9-47b4-926a-a17cc645eba8",
        "cursor": {
          "ref": "290e30e0-ac5e-49eb-82c1-d4b6b5006bcc",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "08b06db1-7679-4d78-a44c-e66fa4089a06"
        },
        "item": {
          "id": "95ae273e-cdc9-47b4-926a-a17cc645eba8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "71f609e8-fd03-43c3-9241-346d5311d681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffec845-9de6-4aeb-b658-ee3b22beb17b",
        "cursor": {
          "ref": "41463fed-93d8-4bc9-9c0b-f5285ebcf524",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5b0c9d3c-2a3b-4a7c-bf87-3effdbf952c6"
        },
        "item": {
          "id": "6ffec845-9de6-4aeb-b658-ee3b22beb17b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e5718590-896a-42cb-a075-7b44b440614c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8eb14b5-d383-4545-8022-268d104b6485",
        "cursor": {
          "ref": "06c1e239-e7cc-489e-abc9-4a687f1fbb9f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a6195d72-f78d-49f4-8f35-714f1220c5af"
        },
        "item": {
          "id": "c8eb14b5-d383-4545-8022-268d104b6485",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a714a908-d2bf-4a16-ad9a-cae67396fd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d0ca5d-245d-4820-8ff7-f1eb54ffe1b2",
        "cursor": {
          "ref": "c10960f6-f6da-4d3d-b3f9-618296f9a5b7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "66f84a6b-e841-4788-b281-08862f60d561"
        },
        "item": {
          "id": "33d0ca5d-245d-4820-8ff7-f1eb54ffe1b2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "742b239a-234c-4b26-bd33-90912a97f169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebda5b2-a5f0-482a-9fcd-1a055893a2f1",
        "cursor": {
          "ref": "4b29b803-cdb9-450f-b84a-50859ab40cd7",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "690b5498-8eeb-46c7-be6d-f408a53388b2"
        },
        "item": {
          "id": "cebda5b2-a5f0-482a-9fcd-1a055893a2f1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2ee487e0-1e0e-4eb5-8ffe-d6bb38b174aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36da58d2-8e44-4ed1-89d4-1d6a2702a460",
        "cursor": {
          "ref": "63817463-6d9d-4cc0-925f-96bc3dd2b279",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2eed165f-b0a3-4430-998a-d3d09b689bc7"
        },
        "item": {
          "id": "36da58d2-8e44-4ed1-89d4-1d6a2702a460",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bac0eeb9-ea75-4811-b6c9-e5b6b410fc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aa3716-1665-43d5-ae61-fb9ecc63f263",
        "cursor": {
          "ref": "5ec35be2-a70c-4200-9d24-fcb259968507",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bd0a921d-48bc-4848-ada6-e689c6cd0549"
        },
        "item": {
          "id": "80aa3716-1665-43d5-ae61-fb9ecc63f263",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "29c4f1f6-e157-4fba-9ad9-c9f099edf6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb2f885-51f1-414f-a1a9-1e6ad864c5ca",
        "cursor": {
          "ref": "b429cc42-884c-487f-81f3-b4713afe559c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fd97a7d8-696b-4cb0-9c3f-f5b48052b744"
        },
        "item": {
          "id": "9eb2f885-51f1-414f-a1a9-1e6ad864c5ca",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8152045d-5ed7-4fac-9425-328e8a7a42b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1955d5-7cff-4b5c-87aa-ea0112abaf2b",
        "cursor": {
          "ref": "54f797c9-387a-4b44-9a3b-9bd392b1ff77",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7a4d41e4-5cab-4d76-9f4e-eacd4469049f"
        },
        "item": {
          "id": "3f1955d5-7cff-4b5c-87aa-ea0112abaf2b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1fc8bea4-d5a3-47f5-a242-1a1d158082b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1c0dc5-a561-495b-be60-65d3a11895d7",
        "cursor": {
          "ref": "db4194dd-9d96-49eb-82cf-06925c937980",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b041f67b-c4d0-4b53-9549-f0b282c9df09"
        },
        "item": {
          "id": "5a1c0dc5-a561-495b-be60-65d3a11895d7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "de04de55-d761-48b5-9196-b33038140830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b045b74-ad42-4755-b1f4-f63b4d51570f",
        "cursor": {
          "ref": "ec23301c-2aee-429c-8baf-63a6f9788bc5",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f92ac6fb-ab36-4421-b4b1-99dd3ec48719"
        },
        "item": {
          "id": "1b045b74-ad42-4755-b1f4-f63b4d51570f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5f790367-0fb2-4ed4-8c87-cb7d1dbe1397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab3acc2-25dd-4949-bae2-723e3f899365",
        "cursor": {
          "ref": "8b5c35e2-bd48-4e07-9f9e-cca26345be6e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9941e7ff-fc2b-4360-8471-b3abcf6ef75d"
        },
        "item": {
          "id": "eab3acc2-25dd-4949-bae2-723e3f899365",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4fc9092e-4bc2-4972-a76b-c409d2914e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fb1ec4-f1b1-4bb6-ad74-9c7a88e2584b",
        "cursor": {
          "ref": "4733baa0-384e-43ef-88a4-9d122f9a049d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f7160225-aba2-4dc5-a725-bd647b055910"
        },
        "item": {
          "id": "33fb1ec4-f1b1-4bb6-ad74-9c7a88e2584b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7c8e8307-e457-4b69-ad08-a3f9bf119a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d4a8be-2149-40c2-8bd8-8f3bc9989cef",
        "cursor": {
          "ref": "238e6b8c-3c61-4c35-8f4e-b66907973dd2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "709bd932-ab7a-4008-a478-96bf36f7fb5b"
        },
        "item": {
          "id": "f9d4a8be-2149-40c2-8bd8-8f3bc9989cef",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8831432d-9839-4cc7-a09f-6ef18c37507f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9aaa3a-aaab-4f59-b02a-0202f77ffaf4",
        "cursor": {
          "ref": "da394a3d-7897-4e99-8d64-fceae4fec5b1",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2f44048c-f768-4f7d-a3ca-8105abc788e7"
        },
        "item": {
          "id": "0c9aaa3a-aaab-4f59-b02a-0202f77ffaf4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "879b19e2-e485-411b-90de-b0c68896a410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1977e66b-f27b-4b23-8e83-4fc40675f9fd",
        "cursor": {
          "ref": "ae1599f5-efda-4ba8-8d36-a6ebaa5fe51f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "275ee912-bcb7-4d0c-94aa-fb5dac84f4c9"
        },
        "item": {
          "id": "1977e66b-f27b-4b23-8e83-4fc40675f9fd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9542335b-de8e-4d0e-9a95-88564666f7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b74244e-1e65-4029-b741-c1148c77ef07",
        "cursor": {
          "ref": "601a1076-b6cd-4a36-a4ca-7da6a35218d4",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7af6a362-dda8-4d13-ac12-88b32281bbed"
        },
        "item": {
          "id": "3b74244e-1e65-4029-b741-c1148c77ef07",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d4008f63-fede-44bd-926c-2f4a26255b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52c498b-0c68-4f39-9988-d9c31e6d63cb",
        "cursor": {
          "ref": "d6770d79-d929-4859-961f-225d37f69cd6",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f8aa85b7-4659-4ae8-8ef9-0758e4c07fdc"
        },
        "item": {
          "id": "f52c498b-0c68-4f39-9988-d9c31e6d63cb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fc166e46-c0c2-4741-a1d3-4a66a5a169fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949eb115-5cf8-4049-87fe-62aaf5b83f08",
        "cursor": {
          "ref": "e99e89b5-0a9e-4fa8-9291-c38736320808",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e54940b6-1a1f-4c3f-a110-ca04af06ded3"
        },
        "item": {
          "id": "949eb115-5cf8-4049-87fe-62aaf5b83f08",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9703ec46-f81a-4865-bf73-16ab0280c346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7435eb4-de39-4dc3-8c13-794f0a2f416a",
        "cursor": {
          "ref": "1cfa11aa-b740-44a1-ac7d-aff966b2d4a8",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "421f8e4c-f536-480d-90c0-286331415ed6"
        },
        "item": {
          "id": "b7435eb4-de39-4dc3-8c13-794f0a2f416a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "425ac48f-45d5-45ea-97c7-543e088c6cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c6992e-7e9e-4bcd-8900-073b78975a19",
        "cursor": {
          "ref": "eae9fca4-e9d9-4f5e-a25c-9bb397b92f0e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9cade491-be1c-465f-942d-3423a45f1648"
        },
        "item": {
          "id": "12c6992e-7e9e-4bcd-8900-073b78975a19",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "82ec9427-ef3a-4f82-8afd-88776af2c159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6b0931-4468-469f-ac2f-9b38aea3143d",
        "cursor": {
          "ref": "08f0cc08-a9bb-4d93-ab78-f6cf587e6b5a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a7ef27c2-f423-482c-a2a6-88bade0617df"
        },
        "item": {
          "id": "fb6b0931-4468-469f-ac2f-9b38aea3143d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3a8ecedb-dce3-487f-b499-a2461bbfe6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d2df07-7a27-427e-a707-e43488a79460",
        "cursor": {
          "ref": "e716873e-f1bd-4438-83e0-196e9939fb19",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "62366b18-898d-4b12-94f7-36a308a7450e"
        },
        "item": {
          "id": "a8d2df07-7a27-427e-a707-e43488a79460",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "973d1593-1c9e-44e2-a836-1b1b94789a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f234960-4b63-421c-a246-3a8b44445a2b",
        "cursor": {
          "ref": "7afecec2-12be-441b-b8f8-aee3d02e93e1",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "336be716-58da-4d1b-b9ef-b8b308509ffb"
        },
        "item": {
          "id": "0f234960-4b63-421c-a246-3a8b44445a2b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f366bb8f-5d87-47f1-a80f-938bbc906dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4368fbcf-c74a-40e7-a5b2-24e043a1902c",
        "cursor": {
          "ref": "f6544240-d04c-48b9-a83b-2a4a9ae29e56",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "42289ae8-4929-4904-aefb-064293ad2e5b"
        },
        "item": {
          "id": "4368fbcf-c74a-40e7-a5b2-24e043a1902c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c0468697-c694-4b71-9735-9ea6dde1eafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3141dfe-69e9-43ab-8cc7-9bc001db1f0d",
        "cursor": {
          "ref": "776e0ee9-e802-465b-b733-fc5e67a37b53",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d3ffa280-1b0a-4cbe-b19d-9cc9d1a92116"
        },
        "item": {
          "id": "d3141dfe-69e9-43ab-8cc7-9bc001db1f0d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dd5ae567-6402-4c07-9875-c6574296a686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7010ce01-14e1-4ae9-a2be-82ea4c577fc9",
        "cursor": {
          "ref": "a363abf9-f7af-4362-85cf-8759c41dc52d",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e05aa68c-396b-455d-94b7-5d0ab27e5699"
        },
        "item": {
          "id": "7010ce01-14e1-4ae9-a2be-82ea4c577fc9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "40967895-2413-4e89-951d-6eb5950937ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b49c1b5-c82d-4b96-a0ce-d85a47e526bf",
        "cursor": {
          "ref": "e87e2605-88e5-4041-bb2b-b7e74519b022",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "83d6cfa7-6791-4397-8697-bab5ccf8d740"
        },
        "item": {
          "id": "8b49c1b5-c82d-4b96-a0ce-d85a47e526bf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1be93453-6b97-4b5e-a2c0-55d3dfa2ee74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c21171b-b931-4451-bfc0-5061d6144a15",
        "cursor": {
          "ref": "667cda46-f494-4ad9-b484-58a0bc9179d1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "15a60a75-feed-45cb-a3c6-ac948231931d"
        },
        "item": {
          "id": "5c21171b-b931-4451-bfc0-5061d6144a15",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "17477841-bb80-44b4-999a-ec2e340dd123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e3c42c-5ac1-41d7-93fc-dcc523db29e4",
        "cursor": {
          "ref": "f373044c-5110-4a34-8f36-273b44c2da95",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c623dd49-36e0-4422-a233-e260a1274b66"
        },
        "item": {
          "id": "06e3c42c-5ac1-41d7-93fc-dcc523db29e4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "32f53e75-7159-4d85-9926-b4317d60b938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b48efe4-c232-48ec-9017-4eee83edc304",
        "cursor": {
          "ref": "e01e0937-70b1-4944-8bce-9483e6e8d0ec",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6714eac8-ef57-4fdf-9ccc-1f1783b9f15e"
        },
        "item": {
          "id": "7b48efe4-c232-48ec-9017-4eee83edc304",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f5cb1aea-c776-48e3-a9d6-ac746243d200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413f3fbf-c8ca-480e-a4b6-381e88d3c3e7",
        "cursor": {
          "ref": "d0b91207-b531-4347-85a9-e43a4ea5b3f9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "303148a3-c262-405c-8f77-4b92c621639e"
        },
        "item": {
          "id": "413f3fbf-c8ca-480e-a4b6-381e88d3c3e7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "95e83f6c-101e-4edc-9f61-487213a0ff54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78adcd10-df0d-4502-9fe2-2b9e33305a2f",
        "cursor": {
          "ref": "1eacf90a-70f1-410d-8d36-fd054b7e4c8a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7e528b2b-751b-4ffd-a169-b5f1043d7729"
        },
        "item": {
          "id": "78adcd10-df0d-4502-9fe2-2b9e33305a2f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e1aa8b4c-7b88-4773-ac71-33fa9ebaf5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1de5c68-999d-4833-b1f7-ec47e70dc1c8",
        "cursor": {
          "ref": "b13f2232-3202-4d10-ad21-d9f5bb3fe806",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "528d4f82-683a-43c8-8bf1-1820837f9173"
        },
        "item": {
          "id": "d1de5c68-999d-4833-b1f7-ec47e70dc1c8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "74e8d09c-515f-48d3-865f-2a77368fea7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a05dbcf-8201-467d-b29a-46d4e247f5f7",
        "cursor": {
          "ref": "c4a32cdf-80cb-4dab-a02d-38d1a8f2fd42",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c955351b-7a21-4d6b-9d37-69150904fdc8"
        },
        "item": {
          "id": "6a05dbcf-8201-467d-b29a-46d4e247f5f7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "39a80df3-8451-4823-8a03-ee4dd4110cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4288273-f228-48d7-8f1a-69816a056bb2",
        "cursor": {
          "ref": "ff5b149b-dd2c-48aa-aab6-1f107e679f87",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3efee981-ec69-41ad-a223-2cd708afbac7"
        },
        "item": {
          "id": "d4288273-f228-48d7-8f1a-69816a056bb2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "60e1efe2-c249-433c-8e06-9784da97b5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3fbb84-3132-4cef-84bd-f81a367ccd1d",
        "cursor": {
          "ref": "e6ed02f7-5ff4-421d-b3ae-10df47251912",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "31166566-906e-4ee5-accc-1713d30190de"
        },
        "item": {
          "id": "6b3fbb84-3132-4cef-84bd-f81a367ccd1d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c10b3bfe-e262-4537-a978-44977fd757f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5f2e0d-7821-4f77-b718-66249eb1d7bd",
        "cursor": {
          "ref": "4cad6eb6-427e-4ecd-a649-b70ae2e6fd05",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "07beb776-d59e-4f96-8ec2-ca6834b19759"
        },
        "item": {
          "id": "aa5f2e0d-7821-4f77-b718-66249eb1d7bd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8e88ea4e-821d-4d96-9b11-22dd845f1ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a595ce-9115-41f4-ae5c-4550859d08f1",
        "cursor": {
          "ref": "df0df65d-f227-40c1-ae90-d5d98142f26d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "aee72a19-dd2e-4029-a934-7afa47cdd61e"
        },
        "item": {
          "id": "37a595ce-9115-41f4-ae5c-4550859d08f1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9a195cb9-a3fe-4dc4-bed6-b23e1404a0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4d8353-91cb-47ca-b5fb-db9e5f48ffdc",
        "cursor": {
          "ref": "0b1fb6b4-7406-4a18-92f7-f53dda883d48",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f578ef74-cf12-4e4e-8535-40f89959c364"
        },
        "item": {
          "id": "9f4d8353-91cb-47ca-b5fb-db9e5f48ffdc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b6b50ffd-f04f-4b25-885f-d84067da1656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad409ea-45bb-4f77-9630-5f8df1feccd9",
        "cursor": {
          "ref": "c6da9b0e-2ad0-4f5b-bbcf-2f0b19ee4989",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e700432a-1f4f-4f62-b086-427fa64ced21"
        },
        "item": {
          "id": "1ad409ea-45bb-4f77-9630-5f8df1feccd9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e1756b67-0998-42f4-b253-09ba460e42c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fa2a34-f5b6-400c-8adc-32e2fef19f3c",
        "cursor": {
          "ref": "422e0f39-ed3f-4002-bc3d-591e879e0eb6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0e4156ae-476f-41f0-ab7d-6ea75bc0f08d"
        },
        "item": {
          "id": "f6fa2a34-f5b6-400c-8adc-32e2fef19f3c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "38e0fa5f-7959-42ed-8934-1fd99684fef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d9d30e-4cef-4a7b-91ce-a250e34a8fe8",
        "cursor": {
          "ref": "c0575beb-d5f6-487f-9869-95d7ef373cc9",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a7b1dd92-aee9-4fa7-b2be-c9acd755f4b5"
        },
        "item": {
          "id": "59d9d30e-4cef-4a7b-91ce-a250e34a8fe8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "567bed1c-44ba-4382-88d0-d316c296b159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbdb9ab-1041-4161-aad1-9b03718bd3fe",
        "cursor": {
          "ref": "fb194575-3960-4471-bca8-d85a87ef2a61",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2a94a222-85e4-4190-9cbe-2b9162d2ac48"
        },
        "item": {
          "id": "1cbdb9ab-1041-4161-aad1-9b03718bd3fe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0f26698a-11b4-45f2-a042-7e4d53426d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91250ba-3061-468a-8a90-24ea4dfb2b52",
        "cursor": {
          "ref": "9f7c4626-e99e-45a3-ad6f-3a445bb35faf",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f8d31edf-c0bb-4553-9943-ab27684d5ca1"
        },
        "item": {
          "id": "c91250ba-3061-468a-8a90-24ea4dfb2b52",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c9e55c33-1017-4066-8ca0-03c6e0f7109a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafcc85d-4f58-48eb-83cf-c7af1d11d032",
        "cursor": {
          "ref": "ad0bed92-906b-4480-83a9-effd7ffe0f1e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "37a753cd-378c-4014-9811-a5139b370b9f"
        },
        "item": {
          "id": "eafcc85d-4f58-48eb-83cf-c7af1d11d032",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a0306f85-ae86-4b75-8c95-37d3a5ca3215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b601fa73-2415-4cc2-b30a-2ab6869bec22",
        "cursor": {
          "ref": "0f474adb-7f43-42b2-bc21-c7f6f1e8cef4",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e97c84cf-257f-48a2-a955-f7b19ab51e47"
        },
        "item": {
          "id": "b601fa73-2415-4cc2-b30a-2ab6869bec22",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ad2558b5-edca-479e-8dde-c01c35cfbebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d5842b-34f8-4df9-8a6c-7691bd80a387",
        "cursor": {
          "ref": "32968065-d1a3-4031-b8d2-643f116c3c94",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dcf1fa53-8259-49db-9d96-8404a7bdf0c0"
        },
        "item": {
          "id": "58d5842b-34f8-4df9-8a6c-7691bd80a387",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b109447d-9831-4177-b769-94c6e4b37c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1983d21-9263-4699-aa0e-1c60a789e1c2",
        "cursor": {
          "ref": "e63d0bcb-9d77-4201-84f0-a340afcdb021",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "17bab089-b4f0-4b1f-b7ae-796c76ee4566"
        },
        "item": {
          "id": "d1983d21-9263-4699-aa0e-1c60a789e1c2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1cad98c8-0765-4f36-a1db-2671ab6940f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f6272c-80ed-4b16-a8f7-b76aa5cb1397",
        "cursor": {
          "ref": "fa98e796-2efb-4ac8-8960-32d65926d658",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "41d19bbe-3320-46ff-9642-b96774377286"
        },
        "item": {
          "id": "f2f6272c-80ed-4b16-a8f7-b76aa5cb1397",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "db0a8219-8f0d-4ff8-a45d-9b47d0ff0e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f81fea-ca98-4d85-b599-3dd9518f757b",
        "cursor": {
          "ref": "69df2b9a-fa1b-47a1-9ce9-c2628a297a3c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7f71b3b0-031a-4590-bdba-8d226bfa2ef3"
        },
        "item": {
          "id": "51f81fea-ca98-4d85-b599-3dd9518f757b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3786b5b9-f8ee-455d-a12e-02392c3daa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19f0a90-97d9-4499-a5eb-27c52aa70af8",
        "cursor": {
          "ref": "c2a61904-426a-4f5f-a2a5-b2ddcb0262ce",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b0d19963-94ef-4c42-b969-3aca28631ebd"
        },
        "item": {
          "id": "d19f0a90-97d9-4499-a5eb-27c52aa70af8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d1155d1d-cfb9-497f-b555-60c49a0e3ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bb94eb-5fcd-40ad-befa-fba826f9c477",
        "cursor": {
          "ref": "569ab305-8bf2-4847-8aa9-d332845d3ee6",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f242919e-4a4d-456e-8be6-43ff874bdd58"
        },
        "item": {
          "id": "37bb94eb-5fcd-40ad-befa-fba826f9c477",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a5611d18-4693-4e78-a1df-bf643ff1195e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd135d4-7394-447a-83e3-d8febd659033",
        "cursor": {
          "ref": "2c19fbe5-1b14-4e54-bad8-53e0a000749e",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2662249e-d4ad-4524-aa3a-18b8e2f754fb"
        },
        "item": {
          "id": "3dd135d4-7394-447a-83e3-d8febd659033",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a710adaf-2ee9-4930-b50c-93f7fee48f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c94a34-f4b0-4067-89a8-66545ced8dbb",
        "cursor": {
          "ref": "93f9fa5b-8faf-4cc4-a9aa-ef6090765b40",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6f9505a5-c083-4cb3-976f-42da3f09ec8f"
        },
        "item": {
          "id": "34c94a34-f4b0-4067-89a8-66545ced8dbb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d31d17b3-737d-4beb-ad51-fecfff248079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f648fd9-d1d0-4aa4-83a5-eb5d17eba58d",
        "cursor": {
          "ref": "da998c9e-1f1c-4b8b-908a-2c90775afef0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9d89d562-e44e-4327-99cf-f57200d00fe0"
        },
        "item": {
          "id": "5f648fd9-d1d0-4aa4-83a5-eb5d17eba58d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "04ccdfd5-c866-426c-b305-023866222a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1fef9d-006f-4372-a887-07d095c51c81",
        "cursor": {
          "ref": "b9074e52-de26-4f2a-b1de-c8604078784e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "46e9bb27-4bac-4b84-ae95-83838768d311"
        },
        "item": {
          "id": "9e1fef9d-006f-4372-a887-07d095c51c81",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "135a92ec-73de-48f3-9557-3da425d9b552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c79330a-22df-4f52-9c57-bad42a080a4b",
        "cursor": {
          "ref": "79064c4e-153a-43d1-acc5-7f5f1d159283",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d41ab74a-0f30-41f3-99e5-381c48571c15"
        },
        "item": {
          "id": "9c79330a-22df-4f52-9c57-bad42a080a4b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0bd5da23-6ee2-4df7-b0d4-050513eaa9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfb243c-3fe4-48af-9f7f-4a0379b62334",
        "cursor": {
          "ref": "24b49577-b3c1-47ee-a7ff-e04449dc6aac",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "871a723c-a16a-4c5b-8d0a-f1a289cc306f"
        },
        "item": {
          "id": "ddfb243c-3fe4-48af-9f7f-4a0379b62334",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6b288b27-04ec-4639-90b6-251e292aee42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7596cc3-07cb-402d-b65a-9b16398bd912",
        "cursor": {
          "ref": "8947e9e6-c9c1-487a-a036-08a5a9a532ff",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0bc3b4f2-7e7e-4caf-aefd-3f57ec9c97b0"
        },
        "item": {
          "id": "e7596cc3-07cb-402d-b65a-9b16398bd912",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3b4bdae3-fe76-4a34-99e5-0e8652f1a295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9362bc5d-1f8a-4596-ba89-83671298a904",
        "cursor": {
          "ref": "40706567-6df0-43bf-83e1-0018374680d1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "41904fdc-d019-46c9-8c5d-e03176ca3309"
        },
        "item": {
          "id": "9362bc5d-1f8a-4596-ba89-83671298a904",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f59f5de5-c5e7-4c12-94c8-7c5d96365f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aca4298-b748-4d97-8336-e16572c47d7c",
        "cursor": {
          "ref": "c80c531d-0935-4ad6-8e21-bc92085368e5",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ba882484-d513-4f7b-ac3b-b0631772a950"
        },
        "item": {
          "id": "6aca4298-b748-4d97-8336-e16572c47d7c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c712c036-7e34-453d-a8ed-768801e3781a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37512072-6ea6-4d65-8360-fa64077a6e1b",
        "cursor": {
          "ref": "abeff80d-ce25-4468-8aa0-8f8f3a780d5f",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c9e6822e-53af-462e-9d1c-2bf57115132b"
        },
        "item": {
          "id": "37512072-6ea6-4d65-8360-fa64077a6e1b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e5faad06-6b1f-4d64-8fc5-09d5dd84eef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1d126f-8f4d-4aae-981c-ff5ed3696700",
        "cursor": {
          "ref": "8f241074-67a8-485f-9afa-d92bfafd54e8",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ee2f3483-e792-4d16-8a79-08857c8e2841"
        },
        "item": {
          "id": "dc1d126f-8f4d-4aae-981c-ff5ed3696700",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "428a05d0-9d93-4839-bb9a-74cd17d08bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642d360e-cf98-4cde-8bbd-6cf1426ad326",
        "cursor": {
          "ref": "51bcacca-0806-4b45-a618-622d43640dab",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fb873e23-4718-4a70-b9b5-1195e0ae4818"
        },
        "item": {
          "id": "642d360e-cf98-4cde-8bbd-6cf1426ad326",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5ef22de8-99fd-4ade-85e9-89209189c987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319f6c94-9f79-4930-8317-efe858a7ad7d",
        "cursor": {
          "ref": "e770a2b5-f5ac-4e74-a7af-9a4bb630fc39",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ce3ae185-1496-4c6d-8ae1-e42fd2453cf5"
        },
        "item": {
          "id": "319f6c94-9f79-4930-8317-efe858a7ad7d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e5993f39-f89f-486f-8957-920e6b1d30cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65f65b5-7371-4424-8484-9419e77bd8f6",
        "cursor": {
          "ref": "c508145e-2cb5-43c0-bf60-52fc80eb6272",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cde017b8-9f04-40cf-85ca-0c15a3053008"
        },
        "item": {
          "id": "f65f65b5-7371-4424-8484-9419e77bd8f6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b2b97ad4-582b-4195-bf92-e834555f4786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da66f6c-0986-41b6-8c56-63b51529650d",
        "cursor": {
          "ref": "aa14e89d-2b4d-4b15-9154-0778bc6da356",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c3b13523-d80a-4932-bce6-449cb4548569"
        },
        "item": {
          "id": "7da66f6c-0986-41b6-8c56-63b51529650d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a9a6cd4e-ab05-41d7-b2d8-37ac7147eff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eefcb80-9771-4ef9-a832-675b9b2c9a85",
        "cursor": {
          "ref": "b36158df-bfea-4169-8df4-78280c4d0d7d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "abe4f612-0359-4367-b382-40dc2305dac6"
        },
        "item": {
          "id": "5eefcb80-9771-4ef9-a832-675b9b2c9a85",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bba5e83f-1af6-48f0-b8d0-41ba87cd7f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169c9b0c-c285-45a1-ac5b-9fee08502f2b",
        "cursor": {
          "ref": "97a27de7-ccaa-4666-a7c7-915919a0acbc",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9f76f527-c53b-44eb-aec1-7ba93ed50e79"
        },
        "item": {
          "id": "169c9b0c-c285-45a1-ac5b-9fee08502f2b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c8211e4b-56b1-4370-ac5e-c85981d9e7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8d74c8-f9e0-45d7-b312-7c682c6c97dc",
        "cursor": {
          "ref": "ef9d6c3e-e2a3-432d-a504-9a820abfcdbf",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2bf25b80-ab72-4a07-9970-79f47eae876e"
        },
        "item": {
          "id": "3b8d74c8-f9e0-45d7-b312-7c682c6c97dc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9c68307a-b07f-48e1-a933-cbd68a2221a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467ef71b-60ac-4fdc-8fab-500871342b55",
        "cursor": {
          "ref": "e7434546-66c6-4a49-ba83-f4bb296f786a",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ad7be1aa-80e0-435a-adcd-07ee39bee07d"
        },
        "item": {
          "id": "467ef71b-60ac-4fdc-8fab-500871342b55",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e401d350-dd40-4f93-8ee7-dcedf6336b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9008e7-4a8a-4b14-8e77-d8576fa98c34",
        "cursor": {
          "ref": "62236068-264f-4a7d-af93-369d04adb970",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bf10d3bc-774c-419c-ac1b-9a8b4e4bba79"
        },
        "item": {
          "id": "ea9008e7-4a8a-4b14-8e77-d8576fa98c34",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3d9ccec2-a7bf-4ae1-b33a-7913cef4be1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd629cbd-fd67-47e8-b344-1e54c7d11623",
        "cursor": {
          "ref": "6c441162-39c5-44f6-9df9-5bee04486c37",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7d2b2826-ffa1-4b72-8e68-c14f8fa0d165"
        },
        "item": {
          "id": "cd629cbd-fd67-47e8-b344-1e54c7d11623",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8eb56492-e842-4a88-beee-83b9007da4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32419c2d-2fbb-43e9-aebc-8acd8997f06a",
        "cursor": {
          "ref": "cfc8c25c-f26f-422c-b416-5e3133b71c04",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ebdcdbfb-5500-427f-b724-b94f63691117"
        },
        "item": {
          "id": "32419c2d-2fbb-43e9-aebc-8acd8997f06a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "91ae4072-7553-43e9-87e7-52dae947f287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cf4ccb-cd8e-4c8d-a409-b30921d4970f",
        "cursor": {
          "ref": "0d98cef4-cef7-4caf-8d2a-4027d6dcf672",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a204e858-425d-4b51-bedd-58910ba72311"
        },
        "item": {
          "id": "a2cf4ccb-cd8e-4c8d-a409-b30921d4970f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "25430639-3974-40bf-8c7e-f189d171bb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236b6269-f476-4e34-81b3-d7ed4c17bf71",
        "cursor": {
          "ref": "e0b73ecc-dbed-4db0-82b1-1c692365c252",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "57dcd5e3-5dbb-4186-87e7-bda50c6597a8"
        },
        "item": {
          "id": "236b6269-f476-4e34-81b3-d7ed4c17bf71",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9a166f21-339c-4eb2-ab9a-9dd2f3091974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c03b33-d42e-43d9-a408-a138751ae2f7",
        "cursor": {
          "ref": "8912d749-2524-46d1-9533-bdc54d836ed0",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7bfd43c5-e3ea-4390-ac65-c33ba5f27388"
        },
        "item": {
          "id": "86c03b33-d42e-43d9-a408-a138751ae2f7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3eef4393-b8af-4d38-ac0f-2dac16e3d5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02374235-9215-4c41-8d54-8045edf4fba0",
        "cursor": {
          "ref": "1215a76a-0199-4d34-98d4-1da23bb59f7a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7ec139fc-6187-41c0-84a4-448d37d7e5ca"
        },
        "item": {
          "id": "02374235-9215-4c41-8d54-8045edf4fba0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "286e92a4-b790-4bc2-be38-1480a30941a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f5a720-c0da-420d-a9d7-d4fd9d24a865",
        "cursor": {
          "ref": "5c0bb720-c699-4b9e-a03e-0eaf4e74a1ca",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ef220791-36c6-43e5-b976-19d4b7067e0b"
        },
        "item": {
          "id": "52f5a720-c0da-420d-a9d7-d4fd9d24a865",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ce4758be-758c-486d-a9d8-d34aaa795959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4b11d4-839b-4353-95dc-8ac5f694c4ce",
        "cursor": {
          "ref": "53e9b49e-e3de-4164-bff5-0ae87d1b24e9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0388b4d0-6b5b-40b3-82b2-15a085631abc"
        },
        "item": {
          "id": "af4b11d4-839b-4353-95dc-8ac5f694c4ce",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d3ced0a0-e838-43c4-a01d-9ae7c91b4a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0276fc2a-2ac0-43b9-bdfb-99f19e3391e7",
        "cursor": {
          "ref": "79865aef-17bb-4057-ae05-3453f2f88309",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ae6dbf5f-c524-411b-944d-06e94c92b10f"
        },
        "item": {
          "id": "0276fc2a-2ac0-43b9-bdfb-99f19e3391e7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4b496cc9-bb97-4ef2-b899-8753f35eb458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160395c3-5e7a-421d-9bcc-5e205bd85a21",
        "cursor": {
          "ref": "320e6459-1b76-4346-8343-f5b358be7a46",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1757ed9e-d14a-4b78-bc9f-f725ae8438d2"
        },
        "item": {
          "id": "160395c3-5e7a-421d-9bcc-5e205bd85a21",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "84ee8b6f-b715-41f8-aea6-a8debdb49326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19b67c0-1a46-441d-8b8c-e70b748454a2",
        "cursor": {
          "ref": "e3630c50-493a-4f6b-b640-3854ea676c27",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ca801eac-040f-489d-b25a-f613b1765c21"
        },
        "item": {
          "id": "c19b67c0-1a46-441d-8b8c-e70b748454a2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b521b44f-2e78-4e37-a5dd-6e00e9e839bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9962309e-8701-4bd1-9389-9ca13f3f1801",
        "cursor": {
          "ref": "a490d9df-5711-4734-8624-5f3b4bf66f4d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "daa3e741-c258-41a3-aa46-7d291eaedc4e"
        },
        "item": {
          "id": "9962309e-8701-4bd1-9389-9ca13f3f1801",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "89a5816d-d2f2-44b1-8570-4c70f980f315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51d656d-8583-4c28-ae15-34963d004095",
        "cursor": {
          "ref": "623e1a86-b5f0-4fa6-b28e-30bebf787fe7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "65b24f3c-967d-4e04-a43b-6db12421bfa4"
        },
        "item": {
          "id": "f51d656d-8583-4c28-ae15-34963d004095",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8b0b0dfc-a54f-4cf3-bb4d-70f582521193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d438f76b-d028-430e-9b13-1e4bfce568ab",
        "cursor": {
          "ref": "86366678-8816-41b1-8230-81574290de4a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5d983198-2cf5-4963-aca4-a958cd48510c"
        },
        "item": {
          "id": "d438f76b-d028-430e-9b13-1e4bfce568ab",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e77644f6-8984-4d6c-9c69-b70c7f0db407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c06632-02c4-4600-890a-58015d508f6c",
        "cursor": {
          "ref": "3205ebf9-84b8-49e0-b5a6-69e63e808ab5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1fda7bf5-451b-4736-83c8-16ca5c72a19e"
        },
        "item": {
          "id": "75c06632-02c4-4600-890a-58015d508f6c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c0389190-2448-4ac4-9e6b-aa078c7ecb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f61733-0b39-4d50-8c29-b774a0384890",
        "cursor": {
          "ref": "3f112c08-3060-4f9a-9383-5efa79539d3c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5953119c-c2d2-4706-944d-d16bf4bf4655"
        },
        "item": {
          "id": "a2f61733-0b39-4d50-8c29-b774a0384890",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bfde5ae2-58d1-495d-a0af-9367869bc069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd1615a-49ed-474f-a0b3-c0ea2dd11178",
        "cursor": {
          "ref": "9d5e6db2-9420-4013-a90e-85ffd6c299e9",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "08929630-c21e-4e7a-9f61-55ea3f951554"
        },
        "item": {
          "id": "7fd1615a-49ed-474f-a0b3-c0ea2dd11178",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "04d4668e-4911-4b0c-aeee-39c61e3d2257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5d2bb1-374c-4581-825a-41693619205a",
        "cursor": {
          "ref": "1188d1a5-95fe-4b20-a68c-2dd44ff3ffcf",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8674e5a1-3bd1-49c8-a522-8d9d498e6d25"
        },
        "item": {
          "id": "0d5d2bb1-374c-4581-825a-41693619205a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0e67d449-40ae-468d-b60e-e6fd5b97af3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2bc272cf-6e72-4bfc-97b8-b7dc7f0ac5a1",
        "cursor": {
          "ref": "bd81174d-8b12-42f5-a5b7-9e12108e42fc",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f13ea9bf-cd96-4964-9a7e-f098361861db"
        },
        "item": {
          "id": "2bc272cf-6e72-4bfc-97b8-b7dc7f0ac5a1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a51bcb82-749c-44c3-93fe-19877d96e462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d1a74d22-af3c-4c30-8fb1-a9b97d2ca07e",
        "cursor": {
          "ref": "fb44d8d6-1eab-4268-b62a-c84120616d33",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0b74cbfa-5a02-405a-944d-22bff5be4afc"
        },
        "item": {
          "id": "d1a74d22-af3c-4c30-8fb1-a9b97d2ca07e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dcb9d720-2509-4876-81e8-3d087ab5967d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6a6606db-a2dd-49f1-8b8e-bff917a4d247",
        "cursor": {
          "ref": "073c8153-2aca-41f2-b765-5fc39e2a6551",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c550c34a-7a20-490d-b887-59507fbaea70"
        },
        "item": {
          "id": "6a6606db-a2dd-49f1-8b8e-bff917a4d247",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "07d45901-b01c-4de5-850f-efc64bed5ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5294c896-d897-4e30-90e6-1428a9b8abc1",
        "cursor": {
          "ref": "92973da2-740c-4be3-bb6b-b581e2c252de",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8b66985a-024f-428e-bb41-48da502c3d00"
        },
        "item": {
          "id": "5294c896-d897-4e30-90e6-1428a9b8abc1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bd837376-4f61-4762-a78d-a8704900da74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e1a04165-ef8a-451e-8632-a5faa2dd5f04",
        "cursor": {
          "ref": "272d1194-942f-4f4b-a4f5-384082a85bf8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3f2a7c3f-4443-471e-ade4-ba99a91918d6"
        },
        "item": {
          "id": "e1a04165-ef8a-451e-8632-a5faa2dd5f04",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ba181831-a2d7-4ee1-8f77-4f1bd21c8933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f0afd45b-3a44-4ea2-ab10-cd86ae29762e",
        "cursor": {
          "ref": "9ad399d4-b91a-4f65-9a2c-b2c37f4f4709",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "489c12a7-a942-41f8-86c0-ff01457ddaa0"
        },
        "item": {
          "id": "f0afd45b-3a44-4ea2-ab10-cd86ae29762e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8abb1489-eac8-491b-8056-130139e7ca6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c5b5717c-4635-4832-810b-54b22206a696",
        "cursor": {
          "ref": "4cdd9e0d-ba87-479f-8b78-941761e6e862",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "71fc0ba4-89ea-4b94-8bb8-7f68acf1046e"
        },
        "item": {
          "id": "c5b5717c-4635-4832-810b-54b22206a696",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1939bd4f-17a5-41ab-bbb4-5aa9610da426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99093907-05de-47ce-8d48-6599cc4abba5",
        "cursor": {
          "ref": "243ebb71-ca2d-421e-9e8e-d86dffb1de20",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f544c34d-1ae4-4fae-ab39-9c96317804ad"
        },
        "item": {
          "id": "99093907-05de-47ce-8d48-6599cc4abba5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "29a6ee3c-8a09-4e04-ac5c-34973e9345da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803932a5-6173-46b5-8000-18ccc9597b95",
        "cursor": {
          "ref": "7cf87cf0-4c27-4123-8b9f-dc28f6a54ce9",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2766c2bf-d9f3-41b5-b90f-0532d4ef0b3e"
        },
        "item": {
          "id": "803932a5-6173-46b5-8000-18ccc9597b95",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8ba0756f-069a-4059-a59d-686a8be125e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dd86d5-c9dd-45f6-9169-a8d5dbaf5b25",
        "cursor": {
          "ref": "071d85b2-5f8f-4bee-933f-9b4afc5ae855",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5cd4c54e-6e1c-4c2b-afaf-bced69684921"
        },
        "item": {
          "id": "38dd86d5-c9dd-45f6-9169-a8d5dbaf5b25",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "145a0d05-fa48-4b9a-ba65-1a17b0432c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96954138-a83b-419f-96c4-eaded9a2430f",
        "cursor": {
          "ref": "e6130b8c-dcd4-4a4a-bf8b-991b567d9a57",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "819e0c09-4fe5-4c74-aaff-a45052c6abc2"
        },
        "item": {
          "id": "96954138-a83b-419f-96c4-eaded9a2430f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b7b7ce4b-7fab-4d6f-94d8-bf9f69e9f56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37e04b6-d932-4946-8d39-dfd0c46b3a81",
        "cursor": {
          "ref": "4d9660a9-9140-44f0-9a2e-38474f4f8422",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5e60cbf7-6489-4c8b-a0c3-54396c346b94"
        },
        "item": {
          "id": "e37e04b6-d932-4946-8d39-dfd0c46b3a81",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d94e7ae2-ef90-482a-9a1e-028bb1eb1b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afce63f-82c8-4625-af6f-ba08f0a4bb2f",
        "cursor": {
          "ref": "b5db1f21-48ad-42d6-ae6c-a6c8d9cc8543",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3f3facb8-8eac-4d5f-9de5-d8d79815be94"
        },
        "item": {
          "id": "6afce63f-82c8-4625-af6f-ba08f0a4bb2f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "119823f7-a48f-40ec-b00d-d332b3da24da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcb7e00-fd65-4ae9-8b61-bf7b5d12b44c",
        "cursor": {
          "ref": "c8790272-7295-4707-9b2f-c468ff943633",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b45eddcf-5bd8-443f-9fc1-e8b425c96750"
        },
        "item": {
          "id": "0dcb7e00-fd65-4ae9-8b61-bf7b5d12b44c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "432de18c-7f86-4590-93ed-9d08a091f785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca0c7ec-41c6-4893-8394-138b10fd205b",
        "cursor": {
          "ref": "a9334b30-5fdf-4b5e-96c1-608528ddfb10",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0e0e0d5b-3c3f-4fc3-9c5b-e369fe08411e"
        },
        "item": {
          "id": "eca0c7ec-41c6-4893-8394-138b10fd205b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "649be550-070b-4b9d-9998-370320fae5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0a9779-abe9-45de-9f11-ec4878efc64b",
        "cursor": {
          "ref": "af7db053-3e3f-49ed-8d76-69c8a73fbe69",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "49b2c0a3-8bfd-4afc-a1f2-a04ecf7f024b"
        },
        "item": {
          "id": "ea0a9779-abe9-45de-9f11-ec4878efc64b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6ecb1c76-ca51-46f8-9531-ec877d9e65d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcb64ad-5d9d-430b-ac3d-df3db001d366",
        "cursor": {
          "ref": "33d7e2c6-494e-446a-9810-f6750b42117a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9c607a92-db2f-45e9-86c6-a3984b645f25"
        },
        "item": {
          "id": "efcb64ad-5d9d-430b-ac3d-df3db001d366",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9376dc5c-3149-4e85-b6c0-74c2052783f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc1c27d-92ef-4103-bf67-5d6abf311a00",
        "cursor": {
          "ref": "3b9b35f1-7242-425d-85ee-bb5d6b9ffdd5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "911949f6-63fc-4331-88c1-f6e785996ff4"
        },
        "item": {
          "id": "4fc1c27d-92ef-4103-bf67-5d6abf311a00",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "58dbdbce-6c7c-4215-bd79-4e40faf202e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82343f2a-b42a-47cb-96df-61360e7889da",
        "cursor": {
          "ref": "2e0a4956-4651-451e-b9bc-27c0f2a1fc0b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5869fefd-3589-4044-a6e4-7f85e551540e"
        },
        "item": {
          "id": "82343f2a-b42a-47cb-96df-61360e7889da",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "86ad120f-95df-4506-87c7-2906d615344c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244a1efc-3318-447c-aeb4-586068f68816",
        "cursor": {
          "ref": "d63cc9e7-614d-4128-ac1f-bc5a4536546e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "15cb67f5-cf3c-470c-a106-60e433f78fb1"
        },
        "item": {
          "id": "244a1efc-3318-447c-aeb4-586068f68816",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "69439915-ffa9-4546-a58b-e3f4c832375a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56f63b7-2ef4-475d-858d-13d0ba7633d0",
        "cursor": {
          "ref": "1e73caab-0d0d-4599-bd22-38e6243e5638",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "123397e5-6224-4c57-b1cf-76950e33c0e9"
        },
        "item": {
          "id": "a56f63b7-2ef4-475d-858d-13d0ba7633d0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0571cb0f-f2ca-4a50-8dc6-0d80c8df29af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2727a13c-1d02-4e86-aa7e-d3b8bb3ca5a2",
        "cursor": {
          "ref": "e248ee46-04c4-4247-aea3-109aace0e382",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8f1cae08-721a-4b9a-a68c-15a998dac088"
        },
        "item": {
          "id": "2727a13c-1d02-4e86-aa7e-d3b8bb3ca5a2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1c66b521-4778-43f8-9a33-c01b7a22e0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d3598e-38fd-4e50-9243-b92d2d52bc2b",
        "cursor": {
          "ref": "ca18b51a-a55f-4c66-a582-abadae23a4eb",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d0656699-85ad-4972-8a1e-b61e126d79a8"
        },
        "item": {
          "id": "18d3598e-38fd-4e50-9243-b92d2d52bc2b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "574f528b-2e46-4e3c-80d2-6979b33240cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6b2669-d98f-4858-8897-19df4f0cb2c2",
        "cursor": {
          "ref": "60e90f55-4cee-403d-9f47-86543d5d53f0",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3f92f497-66bc-49e1-b9da-38e9b33bd909"
        },
        "item": {
          "id": "ef6b2669-d98f-4858-8897-19df4f0cb2c2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "886e4af5-cba7-4608-a203-dbd058b18ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd6de5a-6286-43b9-aa5b-a5d2fa9944c9",
        "cursor": {
          "ref": "775604ea-da33-4c2d-ba65-39402b724c43",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "13c63ef6-cb0c-4e44-a7a4-c6f889ba4f65"
        },
        "item": {
          "id": "2bd6de5a-6286-43b9-aa5b-a5d2fa9944c9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "95af936a-50a0-4722-8135-fca07de018d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2493730b-c5e2-4656-880d-540212fc1d6a",
        "cursor": {
          "ref": "1c40da5b-4fe8-4c03-8b0c-be49c0d14ba5",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b8a294c0-ff18-48b8-813e-54e8053e8d9f"
        },
        "item": {
          "id": "2493730b-c5e2-4656-880d-540212fc1d6a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3d305400-8cb1-4b64-8925-893f4f465c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560e75f4-f05e-4a37-ab89-9d91ceab57db",
        "cursor": {
          "ref": "0757cc37-0a53-4a26-9947-9d5b356ac9ad",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "12a3d0ac-b047-453d-b83e-ee05b6854cba"
        },
        "item": {
          "id": "560e75f4-f05e-4a37-ab89-9d91ceab57db",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "13b83d1a-9046-4592-a6c0-5cf981273145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3103d346-4744-4d49-be9c-708e2947f66f",
        "cursor": {
          "ref": "3cad9371-4c1a-4d4f-838a-604f419de9b2",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e61eb116-1a84-4ce6-b9e1-3082fcb87bad"
        },
        "item": {
          "id": "3103d346-4744-4d49-be9c-708e2947f66f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dfa58a46-47b5-43be-84e4-c290b4f51276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfc9d3c-1cf9-41d7-bcf5-c0cd76e8d1dc",
        "cursor": {
          "ref": "9de6aa1f-c203-4ec6-8c03-ca5c264b7de8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2cebac75-942e-40ef-9812-471884ad0a36"
        },
        "item": {
          "id": "cdfc9d3c-1cf9-41d7-bcf5-c0cd76e8d1dc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "818a4f82-d26d-45db-8887-8f0a47423d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b693f9-c8d0-45d5-8767-e0b44b8c0abb",
        "cursor": {
          "ref": "942aeefe-6ac0-4115-a53e-3b21b21e5d85",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "44d50d81-4ab2-46c0-a69e-4b05bcf578be"
        },
        "item": {
          "id": "b1b693f9-c8d0-45d5-8767-e0b44b8c0abb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4bc5bac2-5fef-403d-9aa3-1a1b04c7f60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fdb17c-5fa5-4341-aa55-d99d64f404e0",
        "cursor": {
          "ref": "72d18893-ed0c-4ef8-be36-2766e16264fc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3e7b64cd-5d9a-4766-b475-1287bb6ceb7b"
        },
        "item": {
          "id": "45fdb17c-5fa5-4341-aa55-d99d64f404e0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5e6bea0c-908e-4c1d-9973-96de7825113e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0653f989-560a-4980-8ce3-21828c8e24a6",
        "cursor": {
          "ref": "0dadebeb-e520-4b40-b84f-8d17c726aee7",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "62918ecd-3dd7-45ee-b613-356cbf12346b"
        },
        "item": {
          "id": "0653f989-560a-4980-8ce3-21828c8e24a6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "84693a84-7d33-4c67-9e6b-0735ae255193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bdb853-346a-4449-9cab-e786c84dfcff",
        "cursor": {
          "ref": "b8c91206-0083-4d40-9394-461004c59398",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5ffc4adb-f86e-4c1a-b121-e95d2016999c"
        },
        "item": {
          "id": "b1bdb853-346a-4449-9cab-e786c84dfcff",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fc8db3df-42c5-4f2c-b2d2-633bb2b251ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbad4d4-b590-43bb-8019-2819b8c79ffa",
        "cursor": {
          "ref": "c30c3e09-4d16-4272-bf39-206cc3267376",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "007bf3d8-92b3-433b-8947-49df54f2e899"
        },
        "item": {
          "id": "acbad4d4-b590-43bb-8019-2819b8c79ffa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2abff51f-ef80-4fa2-abb7-9308be98ef91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f731572-c8f2-49a0-adb2-82304223113d",
        "cursor": {
          "ref": "9094b623-e1a2-4dcd-98a0-9a50e6746efe",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bb5c1b93-aa41-4ad7-9e32-d82cef6e663d"
        },
        "item": {
          "id": "1f731572-c8f2-49a0-adb2-82304223113d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "85c70ae2-c1ca-4612-b34d-ade1decfdd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b19ea1-77bc-402d-bd9d-fac7346b5b21",
        "cursor": {
          "ref": "521c87da-e45b-4b59-9cd8-b5e64523a51c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d0b24274-dd1e-45a1-af4d-bad8d2799994"
        },
        "item": {
          "id": "e1b19ea1-77bc-402d-bd9d-fac7346b5b21",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3cc0c76e-b30a-4314-ba11-da2f993dfa53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1508802-9ede-4bf2-8542-47ca799873b3",
        "cursor": {
          "ref": "cf3cdd72-b726-4034-89cf-1b698765401a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a4a1862e-7d30-4b55-a274-f4fe809a7f59"
        },
        "item": {
          "id": "d1508802-9ede-4bf2-8542-47ca799873b3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8ae49ef2-6cb2-42f5-a436-6019320f8728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdec0a93-ee27-4039-8f4f-63b87699dcb0",
        "cursor": {
          "ref": "9267a62b-a870-4a76-9701-101aa713cca9",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0cbccd67-ff71-4d6e-880f-dc5f3b5bdb52"
        },
        "item": {
          "id": "bdec0a93-ee27-4039-8f4f-63b87699dcb0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d4c80a5d-b890-46d5-a0db-f5bf9e5435cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b6d344-9f02-4e5f-9ddf-ed45072d723f",
        "cursor": {
          "ref": "1b42d012-b654-4a82-b079-675a02d54bf4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "68fa87d7-f1da-4676-89b6-5992bdcaf4c2"
        },
        "item": {
          "id": "68b6d344-9f02-4e5f-9ddf-ed45072d723f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f66a95e4-dbe4-40c7-b06a-37c99035e885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162874fd-58a4-4ebc-a7a4-0645d790fe77",
        "cursor": {
          "ref": "fe2ce9b0-1d56-4518-85fe-292d464e9d14",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "27284728-34ef-445d-bde2-0db379825589"
        },
        "item": {
          "id": "162874fd-58a4-4ebc-a7a4-0645d790fe77",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8b14f20b-9f96-4f91-810d-f90e5a66f8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fca4894-c46e-4be1-814b-34bddd8c1ae8",
        "cursor": {
          "ref": "55f9d169-f63c-4373-9f54-70263a888aea",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "240d61d5-6d64-4dc2-8288-f672dfbd4cbe"
        },
        "item": {
          "id": "8fca4894-c46e-4be1-814b-34bddd8c1ae8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9ec005c8-0edf-4b29-b724-389ab88701ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b03e42-02a8-4008-a8f3-494a7a0641a3",
        "cursor": {
          "ref": "13045db5-3088-42b8-9696-afb4c425643a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0bb2492e-e5e1-4de7-b116-cc0ae8dc4ccd"
        },
        "item": {
          "id": "a0b03e42-02a8-4008-a8f3-494a7a0641a3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5f898ded-b2ae-44c3-b86d-e1bbc7488780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d927d7c-12d9-44b4-9fe6-b6f65b548216",
        "cursor": {
          "ref": "0a5c3ba2-f34c-4d2b-b0d0-77f78bc554c3",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9ff8cb1c-c2df-4a66-81c8-62a06ae7b2b6"
        },
        "item": {
          "id": "5d927d7c-12d9-44b4-9fe6-b6f65b548216",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "11ba9b84-1f93-4873-8306-880d0b062bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a0811b-55f3-42fe-b08e-f308a8450fea",
        "cursor": {
          "ref": "83863151-ba65-4599-994f-bd196b0c1e15",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "03035f7b-1f13-4530-84e4-f34631963d8c"
        },
        "item": {
          "id": "51a0811b-55f3-42fe-b08e-f308a8450fea",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "48937ce7-d889-476b-b910-004b6aecd606",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7f93ac-badd-4028-9654-f38be91aabc3",
        "cursor": {
          "ref": "8be90661-17d8-4a11-a5f8-5c1ee065a086",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2aa5e6e0-b72f-4b33-8001-89695c2cef67"
        },
        "item": {
          "id": "7d7f93ac-badd-4028-9654-f38be91aabc3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "27fb0e28-4933-4bcb-bf65-a7637c400dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c1cb3b-91e6-4106-9ad5-0fe4919573b3",
        "cursor": {
          "ref": "44a3cd4d-3d09-435c-8c8c-8a72e25b75f7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2415849d-a864-4953-b6f4-033569bcd413"
        },
        "item": {
          "id": "48c1cb3b-91e6-4106-9ad5-0fe4919573b3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7d7ba232-3984-4280-ab6c-821a2e87d662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64437e9f-52ae-424a-8096-5695ef199c2a",
        "cursor": {
          "ref": "da010aaf-3784-488c-9282-04e143c42cdf",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "16115f68-012d-446a-a636-bab7c185013e"
        },
        "item": {
          "id": "64437e9f-52ae-424a-8096-5695ef199c2a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3ca45d68-2e75-4ab3-93a6-484aa6ca503d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0953c438-e8fc-4415-8e42-0a49b0ca8b59",
        "cursor": {
          "ref": "8334aa32-80bc-4a46-b82b-ca1e1457007e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4da118f9-6b1d-45f7-bc3a-3e1a3e5708a7"
        },
        "item": {
          "id": "0953c438-e8fc-4415-8e42-0a49b0ca8b59",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d469235e-a428-4ec3-b3d8-e5b13cea52f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a81e0dc-ec60-4c16-918e-271e1c864cb9",
        "cursor": {
          "ref": "e253689c-ea8c-4d7b-ba7e-c05f30845e5a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e7eb4691-a273-4327-b306-d1389b34e128"
        },
        "item": {
          "id": "8a81e0dc-ec60-4c16-918e-271e1c864cb9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4a8db28c-c44d-47e0-aed1-b6efcce5972e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41564fef-6e6a-4932-abc6-86aa1e5a2bba",
        "cursor": {
          "ref": "0cdcdad9-3fac-4bf8-89d8-896c8f55c9af",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "26001cec-8c9e-4855-9341-6ca7ecf7dfdf"
        },
        "item": {
          "id": "41564fef-6e6a-4932-abc6-86aa1e5a2bba",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2fe56d7b-ed6a-4a46-95a2-c4863f59f119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247a7898-a687-45b2-9d84-38de3bc87e82",
        "cursor": {
          "ref": "e5bdf1d2-c135-4f39-93ff-f298637b1bba",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fa67e805-8c9c-49a1-94ee-1638f8017215"
        },
        "item": {
          "id": "247a7898-a687-45b2-9d84-38de3bc87e82",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fa0adb5b-fcca-4cec-962e-aa3d94097283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697c185a-fb0e-43f1-8f43-7a357fffd205",
        "cursor": {
          "ref": "4fda13ce-3886-4e32-8b0c-09359c5f88f4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ebbc8af8-4e76-4109-b7c4-7e0985ebfef5"
        },
        "item": {
          "id": "697c185a-fb0e-43f1-8f43-7a357fffd205",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6c6db14d-2db3-4be1-89e2-20f72a51b33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e8e673-9723-4898-9029-5be8f45a0576",
        "cursor": {
          "ref": "e805ab95-5f43-4f91-97fc-7825aaf8d10d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "aba9e93c-1b36-476b-9bdd-e4d2cb463da8"
        },
        "item": {
          "id": "e3e8e673-9723-4898-9029-5be8f45a0576",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "565b30c8-d845-4322-a51c-b4d40e80d854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7223b3-2137-41fb-a8e5-7fc9caee029c",
        "cursor": {
          "ref": "e7d04989-d3d1-4d41-80f9-81a8a951a660",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "362922c9-2490-4755-af78-d9524eb20fe8"
        },
        "item": {
          "id": "fd7223b3-2137-41fb-a8e5-7fc9caee029c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "410f8c9d-3b10-466f-88ac-d1d6523c56e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025cb194-f243-45be-a61f-d7a179937d96",
        "cursor": {
          "ref": "68a1c3d3-d14c-4cb9-8dcb-71ad3b521ded",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bf3c0979-70f3-4548-a41d-ee97553d3fe3"
        },
        "item": {
          "id": "025cb194-f243-45be-a61f-d7a179937d96",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2c53e6ea-5788-4e52-9d45-540b0906a78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeac5403-3841-45a2-b709-bbc554d0e90d",
        "cursor": {
          "ref": "eeeb9383-74f6-4a1c-a31f-ea0a8cace404",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8887eb11-e01b-4a88-9b89-17979a0f2b77"
        },
        "item": {
          "id": "aeac5403-3841-45a2-b709-bbc554d0e90d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "783e9a5e-8bee-4e02-8bfa-a518a5059678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a2c805-c934-42b1-b060-01a8ddebde5c",
        "cursor": {
          "ref": "4e9b4f57-e21f-4989-b0e9-7792da2231e9",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "74974b93-4782-425c-8a33-fef061e2ba7a"
        },
        "item": {
          "id": "19a2c805-c934-42b1-b060-01a8ddebde5c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "628d40b3-7780-480a-8325-eb1dbd6fe7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bfe2e4-910b-49e3-85d9-85345c3cd519",
        "cursor": {
          "ref": "1713235c-03c4-4aed-a200-cc28d2315b20",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "03c8cc5a-b129-428a-87ef-47da06dca012"
        },
        "item": {
          "id": "b1bfe2e4-910b-49e3-85d9-85345c3cd519",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "156de414-3fd8-491d-868a-4f19f11bc794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1cea8c-9bd4-4c06-9806-dd58b561c91e",
        "cursor": {
          "ref": "31c2823a-2ee8-4df6-a8df-a8d661832055",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eed326d2-31c0-4fc9-b873-64c7061a4573"
        },
        "item": {
          "id": "da1cea8c-9bd4-4c06-9806-dd58b561c91e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9c64b9cd-9d92-4ecc-81c6-e0af7fb9fc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935ee9eb-b951-47a8-b3e0-43029a178ff6",
        "cursor": {
          "ref": "d588841f-f20f-4368-a49d-67de9d6ecc69",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cebd7e14-bea0-49ed-a5a6-a8f1219ab0d9"
        },
        "item": {
          "id": "935ee9eb-b951-47a8-b3e0-43029a178ff6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "faf40db8-99c7-4fe9-ac6f-383aeb98b93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c50315-37ee-4d36-b35c-874164ddd916",
        "cursor": {
          "ref": "8b309931-3f62-4dc4-b07d-4644602d83b5",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "67ac555b-bbce-4af5-ba6e-9b819e652968"
        },
        "item": {
          "id": "23c50315-37ee-4d36-b35c-874164ddd916",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "79a2ce30-5322-4bb2-ac99-ef2cf21a7309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f81d58c-b937-4fe9-bf29-37692914a9df",
        "cursor": {
          "ref": "6f2f368a-3cf3-4e55-93de-2c932af4c8b5",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b7f278fc-8341-4d1d-9071-c41d26e23c93"
        },
        "item": {
          "id": "7f81d58c-b937-4fe9-bf29-37692914a9df",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cf3e034d-11d9-414e-91b2-a35fe6ff3c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c54d0e8-0b68-4795-9f96-2f42733af506",
        "cursor": {
          "ref": "e18726cd-f737-4170-8bee-292920a36bd6",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bfa1f334-1453-4321-91f5-1857e430cd1e"
        },
        "item": {
          "id": "1c54d0e8-0b68-4795-9f96-2f42733af506",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "80254b1b-84ad-4d15-8f34-ef5160d53620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47940177-d03c-469e-970f-d98a083143e8",
        "cursor": {
          "ref": "acfc0106-11a1-4e52-a93c-75550b3d88c8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d626937e-fba3-48c5-b38d-b751b6060efb"
        },
        "item": {
          "id": "47940177-d03c-469e-970f-d98a083143e8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "39319ebb-3f90-44cb-b8b9-78d0b7a282a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460d7f95-8142-4d68-a74f-75d02d127155",
        "cursor": {
          "ref": "8b236670-fceb-46b3-b118-36c5cbbefdb3",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ec5f85f1-2bc0-497c-9913-649fa807e5b5"
        },
        "item": {
          "id": "460d7f95-8142-4d68-a74f-75d02d127155",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "28b75576-29b7-49ce-9753-cfb9d78070e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c3c6ef-eb92-44b1-89bf-c9b65a3f2609",
        "cursor": {
          "ref": "1295581b-5c86-4fd1-af25-02851be96e60",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5d1f312f-2523-43c9-9722-b41d6b74805f"
        },
        "item": {
          "id": "05c3c6ef-eb92-44b1-89bf-c9b65a3f2609",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b7f99ad9-4f90-4954-9251-9368cfab5d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84ea108-ead0-46e4-a1c2-8e766207c7cf",
        "cursor": {
          "ref": "3f54ce23-21c6-49f8-9266-a565942ec990",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "29e2ebbd-443c-4ae7-b999-3da81fde4469"
        },
        "item": {
          "id": "d84ea108-ead0-46e4-a1c2-8e766207c7cf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "38013175-5101-4207-919d-c23c1bd58184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c50bed-7b6e-4fc2-b125-e4aef3929c61",
        "cursor": {
          "ref": "a6b5da24-62d4-4fa7-b2e1-8d22d6c29cd2",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4f888ba9-9a10-49b2-8459-581f8346afbb"
        },
        "item": {
          "id": "40c50bed-7b6e-4fc2-b125-e4aef3929c61",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "96fd185b-8878-4102-a988-d5631f1c4f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dcf002-84d5-44d7-91db-49efcc27a412",
        "cursor": {
          "ref": "90a24b0d-ad2b-45a4-996e-6cec34542595",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "179fd9f3-f0f3-4535-920c-fcac3190bbaf"
        },
        "item": {
          "id": "e1dcf002-84d5-44d7-91db-49efcc27a412",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a972f2b8-e2a4-4c2b-a7ab-4df7cc4688f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a993ab-e7a9-4c21-a735-813dd41519a9",
        "cursor": {
          "ref": "bb43450a-81da-4933-a0a7-e2318603e4be",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b8f02e95-1fd1-4797-be6e-10bcb481e72e"
        },
        "item": {
          "id": "48a993ab-e7a9-4c21-a735-813dd41519a9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d11bd468-b984-4925-92db-bd5122c6d5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4ad7da-2553-4023-92fd-630c2c4f4a28",
        "cursor": {
          "ref": "9c8da48d-ad32-4961-961c-dc6fca8ba3cd",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7a87c8d9-bc38-44b8-82a2-85524acf45f5"
        },
        "item": {
          "id": "4d4ad7da-2553-4023-92fd-630c2c4f4a28",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a181a8eb-75aa-4d15-93b4-2a040abe3c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1778114a-40bc-4d99-808d-b5c6b5b359cf",
        "cursor": {
          "ref": "5285c835-ef06-4a09-8d98-bcea31216f2d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0010d83f-0aa2-4994-9d56-32e6df37dba8"
        },
        "item": {
          "id": "1778114a-40bc-4d99-808d-b5c6b5b359cf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ec51ef81-d18a-4d2b-bf46-bed3a15b6b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ebc59b-55c7-40ce-bb2a-c389ae43c0fa",
        "cursor": {
          "ref": "ee62ef7e-2852-43a3-9da5-b925fd54fbd9",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "19b7aeb9-cf90-42c3-b459-689ce5f0f50d"
        },
        "item": {
          "id": "53ebc59b-55c7-40ce-bb2a-c389ae43c0fa",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d9ceddeb-392d-42f3-934e-e423868a17f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9b42ca-63f0-4745-abdd-855c4b0aad7b",
        "cursor": {
          "ref": "412b9fe6-de9c-45ae-9438-bc526ad0987a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0c22ee5d-4619-437d-9ae6-7f35077daed1"
        },
        "item": {
          "id": "bd9b42ca-63f0-4745-abdd-855c4b0aad7b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c4c9e1eb-e252-48a7-a88d-2e81b3297dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3368b7d7-0c14-4f49-bfef-ab2d3f9df12b",
        "cursor": {
          "ref": "a3644ade-86af-459c-98bc-15aa1768e0b5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c43bd106-3e27-4f52-926a-f91f77bee2c5"
        },
        "item": {
          "id": "3368b7d7-0c14-4f49-bfef-ab2d3f9df12b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "70b43e90-c774-42ee-b494-88eac32373ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325b91d2-b43e-420f-b2f0-c0725bcaf916",
        "cursor": {
          "ref": "1ce7651f-5ff6-484f-8d80-0f93406d22c1",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0e2c8085-66e8-4c79-bd9e-ccab6e4b743a"
        },
        "item": {
          "id": "325b91d2-b43e-420f-b2f0-c0725bcaf916",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e0f12c67-0416-48b8-ae5a-7262cc31efae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908efc21-c121-441d-809f-2bf62687d875",
        "cursor": {
          "ref": "b7a7f9df-a06c-48c1-bce8-4bd9a6868fb8",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8d652a2d-765e-45cc-b7a3-82fac28b5e4f"
        },
        "item": {
          "id": "908efc21-c121-441d-809f-2bf62687d875",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "36839fd9-6bdd-4848-8e2a-cdd96abafa73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8239679-7888-449a-a6f8-b2f3b9908374",
        "cursor": {
          "ref": "ac534b4e-5bf6-494f-b63f-b7057afde8b5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "efa76fac-e680-41d4-9f8e-9e088b71dfbd"
        },
        "item": {
          "id": "d8239679-7888-449a-a6f8-b2f3b9908374",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a25f0a51-a20d-49a4-9172-6203b006e9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ee5fb6-44fb-4f5d-992d-696ab4e0964e",
        "cursor": {
          "ref": "2c2cfdfa-99a1-4d4f-90b0-810e1dc9f658",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bcf93334-2d13-4041-8035-2acf6b47f26b"
        },
        "item": {
          "id": "84ee5fb6-44fb-4f5d-992d-696ab4e0964e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5fcdbaf2-cf2b-4719-ab2e-66a8819b8596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6eeb1b-2cfd-44f6-bf93-2d1a62cca653",
        "cursor": {
          "ref": "6d99a205-e7e9-49e2-b2d6-ef920b3adc20",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "84906cde-afa3-4a44-b9f4-2c2ffbeed54c"
        },
        "item": {
          "id": "cc6eeb1b-2cfd-44f6-bf93-2d1a62cca653",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "aa1171a5-9f5c-4b75-a391-07c62f01ca56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04aff6a-b197-4994-b9da-14fd7f4316b3",
        "cursor": {
          "ref": "fd9c6e92-2e75-4747-ad65-9f7ad18e40c7",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1b6e16d7-a99b-4803-b677-e73ca2b6ff75"
        },
        "item": {
          "id": "d04aff6a-b197-4994-b9da-14fd7f4316b3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fdada73f-8571-422b-9d9a-9691683885eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38610095-e951-4f66-b275-1440d24a00b7",
        "cursor": {
          "ref": "3be267de-6fb9-488f-844d-41cec251f168",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fe8723e4-cfe3-42bf-9bb9-55b9d3ff0b19"
        },
        "item": {
          "id": "38610095-e951-4f66-b275-1440d24a00b7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "021b82f9-ae35-44fc-96ab-104e3cee00ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a912556b-edc7-400f-8359-dd13ff1993be",
        "cursor": {
          "ref": "2256ff20-94d6-4fda-bfd4-681214f410c2",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "28b53d99-63db-410b-ae97-8c4178024c61"
        },
        "item": {
          "id": "a912556b-edc7-400f-8359-dd13ff1993be",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bd082b30-5b32-42c0-b551-df80ccaa713b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2f1029-1623-4087-bbc8-0d7a4e1ecf57",
        "cursor": {
          "ref": "ba99c807-021b-4451-a1dd-7f2c3efe3fd4",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f50f3fd4-5fe8-4ea9-89ca-71e6f7abd7e3"
        },
        "item": {
          "id": "3a2f1029-1623-4087-bbc8-0d7a4e1ecf57",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "076ea036-37df-4a18-9416-390a0d588910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991442cb-b9db-4ef6-88d8-175a579811a3",
        "cursor": {
          "ref": "23d41023-97bf-4a41-9da0-ac4b798ac9eb",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "29f6f59a-4025-4c87-a2f3-0a5126aed6ee"
        },
        "item": {
          "id": "991442cb-b9db-4ef6-88d8-175a579811a3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "55df8193-59b6-46be-9bc9-a7271c6e0b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606fed22-9986-40e8-ab06-749f6c5e2b30",
        "cursor": {
          "ref": "b885e0af-0a83-4511-ab12-fd7cf5dfc224",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "eca4fe54-61f0-40db-bd1b-baa51717a506"
        },
        "item": {
          "id": "606fed22-9986-40e8-ab06-749f6c5e2b30",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4c24cc7c-23da-4f52-9edc-521c75d75982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa3f657-1f51-4688-828d-0d2f1bc1a375",
        "cursor": {
          "ref": "fcf0098f-fd7f-4d46-8d63-47db15e34c61",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b468bb69-9c4d-4fba-844d-87b3717157e5"
        },
        "item": {
          "id": "eaa3f657-1f51-4688-828d-0d2f1bc1a375",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "66ca1714-bc29-47d5-9849-7eb03c361a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf0b2b9-2ad8-4ec8-9cea-71d230fcb45a",
        "cursor": {
          "ref": "2c1e2343-c495-499f-815e-4d4e9d83088a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e53fb816-e179-4da3-8efb-156d89d8bd34"
        },
        "item": {
          "id": "1cf0b2b9-2ad8-4ec8-9cea-71d230fcb45a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "53663764-c454-4c3c-99af-d5f97ce0d37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d66780-2038-4d50-a49d-a9676e189b96",
        "cursor": {
          "ref": "324370dc-af0d-47b0-8fe2-b83480c7ae28",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f1776750-c901-44a5-a7b8-f134318e3cf9"
        },
        "item": {
          "id": "f6d66780-2038-4d50-a49d-a9676e189b96",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c09a4a11-5238-425f-a04c-ff40957acf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f581ea55-1f05-41a3-ac1c-4686284aa891",
        "cursor": {
          "ref": "6fd0d3db-500a-4a8a-9657-3adbc1d1ecc0",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "255afafb-17ad-4e8c-94b5-040dddbd8876"
        },
        "item": {
          "id": "f581ea55-1f05-41a3-ac1c-4686284aa891",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "64d3ef33-c406-4e37-b68b-3272fbcdf23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eed2ce4-8bd3-4429-8dca-53e7c39042a3",
        "cursor": {
          "ref": "d52f86c9-3e2c-4bd2-a5e7-0f38a8b07676",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "781bc15c-6dd6-4b81-84a4-45eaba6a0161"
        },
        "item": {
          "id": "6eed2ce4-8bd3-4429-8dca-53e7c39042a3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "378e8542-fcb1-4eda-8b57-1f1cab731bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a29423-c751-4455-8c19-a90cd8339aa0",
        "cursor": {
          "ref": "73d875e1-a243-48cf-97b8-1c97538039de",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4fafc77f-68df-4fce-a6aa-dff13d3230e3"
        },
        "item": {
          "id": "98a29423-c751-4455-8c19-a90cd8339aa0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7014e373-73c7-4607-83f6-62aadb732a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606c0922-9600-4575-bc33-aa70ee69f0d6",
        "cursor": {
          "ref": "2559e9e3-1eb4-4287-90b4-76befdc92233",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "291e4028-7d81-47ca-b74b-9e07879e36e4"
        },
        "item": {
          "id": "606c0922-9600-4575-bc33-aa70ee69f0d6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bbe54f4e-6175-487a-b551-751193a051b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd70aaf-4aff-45f6-bca4-7a6264df4826",
        "cursor": {
          "ref": "49ced429-cc2f-4004-957e-8e6e1c2abc40",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0e3b5459-a061-43e8-b4f4-4fcbeedd0331"
        },
        "item": {
          "id": "ebd70aaf-4aff-45f6-bca4-7a6264df4826",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c6843b7b-c791-4a33-a7ca-8323b66268c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b9af19-1a81-4e34-9000-76b16f0126a0",
        "cursor": {
          "ref": "742808db-54f8-45b4-97bb-7d84a33189f5",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bd2210cf-0c88-47b4-9331-c89bb7f3a1de"
        },
        "item": {
          "id": "c6b9af19-1a81-4e34-9000-76b16f0126a0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "094b30f1-5ff0-4ec1-8b91-9d7a012e58aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4f3be7-200c-4d63-bf0c-97d7003a424f",
        "cursor": {
          "ref": "cc0e54c9-b5f2-4932-b6d9-362bb8732b9d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0307712e-b12b-4d4c-a7e7-c91cd14a9497"
        },
        "item": {
          "id": "6b4f3be7-200c-4d63-bf0c-97d7003a424f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d20bfb08-81c0-4213-bec0-4c81e1a7b05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b665052-ac3b-496f-88fb-605fd0fbb6cb",
        "cursor": {
          "ref": "5b92e734-3f11-46cf-a949-e88414375e5d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a6ca1e6f-46a7-4d7b-a3c4-e4f8f963a350"
        },
        "item": {
          "id": "8b665052-ac3b-496f-88fb-605fd0fbb6cb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3cc94093-5047-4148-9583-e69d7629a8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffab83a-b709-4a52-afad-a98af2a107d0",
        "cursor": {
          "ref": "7f9535cf-f58a-473f-9370-3643239922f0",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b6e8d19e-8e9b-4b2b-8344-370fdcdcd89a"
        },
        "item": {
          "id": "9ffab83a-b709-4a52-afad-a98af2a107d0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d6a71e77-23e8-4216-8bd4-3b9e3a6f93ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c54e581-12b6-4390-8d7e-6c292d7aabe5",
        "cursor": {
          "ref": "55b702d8-c0c6-486b-b2d2-57431ddaba71",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "44165c0c-7f8a-4e0d-88d3-34426607d33d"
        },
        "item": {
          "id": "9c54e581-12b6-4390-8d7e-6c292d7aabe5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "25f0fef2-c4f0-49b2-a691-61d790f78208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10affce-36ec-4acc-b8bf-020a35c565dc",
        "cursor": {
          "ref": "7245c95b-1f82-438e-a797-8ed9a6301ad3",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ed0e4870-fcde-4ac9-9e9f-543359d80448"
        },
        "item": {
          "id": "d10affce-36ec-4acc-b8bf-020a35c565dc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f521464b-ca3e-4862-acf6-d502d3272e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4213252d-a695-4019-9aaf-e1a5d416c83e",
        "cursor": {
          "ref": "9b43fe87-2052-41f7-b21e-d0a63c36e0cf",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "80763382-8663-496d-b497-d750ba87625b"
        },
        "item": {
          "id": "4213252d-a695-4019-9aaf-e1a5d416c83e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0241fcb5-9084-4f6c-9e63-0832be3a3d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09741d6a-5f82-4344-91c1-21e8d908e5b4",
        "cursor": {
          "ref": "0d632b6f-ca6b-425b-8bb8-11560b076b7a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b8b320ef-d4aa-43bb-a9db-4ac704adb63d"
        },
        "item": {
          "id": "09741d6a-5f82-4344-91c1-21e8d908e5b4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c41fe387-519d-4988-a42b-f3861d3896ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5e9982-8442-44e1-83c8-fce491729173",
        "cursor": {
          "ref": "82a557cf-6d25-4bbf-86e3-aad97e8da4a2",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f671e590-c301-49d4-97d9-c5b26c3c4d6c"
        },
        "item": {
          "id": "6f5e9982-8442-44e1-83c8-fce491729173",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "37272d79-52ed-46f3-a5c8-6823fcc12579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241f8332-aa18-4ce7-bd42-fcb72ac78bd4",
        "cursor": {
          "ref": "1ad5e0bc-36bf-4bcd-863b-04a9db1e952a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1b564e38-9f5d-4c24-9e99-847bebef2fd5"
        },
        "item": {
          "id": "241f8332-aa18-4ce7-bd42-fcb72ac78bd4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e5b139a7-8bea-4684-83a4-aa8f8bfe08f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0d6eec-70f4-49a7-b7a3-aed501ce108c",
        "cursor": {
          "ref": "f7009a5f-477d-4a60-ad99-3c98756b6f8b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "544f62b5-26f1-428a-87a8-90c6e070d5a9"
        },
        "item": {
          "id": "dc0d6eec-70f4-49a7-b7a3-aed501ce108c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3e28cb6a-2c9a-44bc-875f-78fa4fde1976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b6e4b2-3c42-4079-b69b-5a215649052f",
        "cursor": {
          "ref": "7bb1ba1e-5ea4-47f4-a89b-70404af411c5",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bb539a3d-0d9f-45c1-b299-fd8c25da5ad4"
        },
        "item": {
          "id": "17b6e4b2-3c42-4079-b69b-5a215649052f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "37a2d7a4-a24c-4fea-9420-7de1b937a80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffdfc63-6fb8-4006-b47d-d4758880bf33",
        "cursor": {
          "ref": "c8db9d6d-ac36-4ed0-b497-118f1a74a8d6",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6ae5f84a-74c4-48e7-91fa-4a8c826365d0"
        },
        "item": {
          "id": "4ffdfc63-6fb8-4006-b47d-d4758880bf33",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cf5297ba-4ca5-4b16-8f27-8c7a8d1a0fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cda686f-0fc0-4e62-a915-b75daf0c582d",
        "cursor": {
          "ref": "433c2bc3-2a3c-4437-afdc-e66ead2991ed",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "979c2064-4219-4adf-bcc0-8b27d5e6b411"
        },
        "item": {
          "id": "0cda686f-0fc0-4e62-a915-b75daf0c582d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "85bf8dcf-7637-4279-8288-ce3c747838fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf32b1e-d57d-4acc-b61a-f68295d51c72",
        "cursor": {
          "ref": "712839f9-b0d6-49a8-9149-e8b7721179da",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d8a27773-a08a-45ac-94a2-75d62861fbfa"
        },
        "item": {
          "id": "1bf32b1e-d57d-4acc-b61a-f68295d51c72",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "485c8982-9cff-4b53-872e-b86650fccf32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cb44ec-b181-43b2-a71d-3b415c12f76a",
        "cursor": {
          "ref": "466762b4-43d0-474e-8569-8adfde23b12e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5a4f9593-6c1e-4dfe-b9f5-e71e66c0b041"
        },
        "item": {
          "id": "57cb44ec-b181-43b2-a71d-3b415c12f76a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1a01dba8-a6d1-4215-aca4-731a12b83506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca64f593-3e81-41d6-83b6-3f1488bc564a",
        "cursor": {
          "ref": "c89fa91d-f68b-441c-8a35-ef2a4025a914",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "58955e30-9eeb-4ebe-85a7-5582e280571b"
        },
        "item": {
          "id": "ca64f593-3e81-41d6-83b6-3f1488bc564a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0cdea980-72ca-4a1f-9bd7-787af5efc2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b40df5-553b-4d67-8daa-074d20060c6e",
        "cursor": {
          "ref": "05eece46-b86c-4102-bcc8-d0ab42617577",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8183c169-b2c8-4e7e-ad08-639d81c75dde"
        },
        "item": {
          "id": "c7b40df5-553b-4d67-8daa-074d20060c6e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a4555acf-7592-4d8b-9382-2831ff5a4f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1afca23-7e51-4c37-ab15-fb2d48c39b8a",
        "cursor": {
          "ref": "47bf7b0c-6af6-4d72-bf1e-4a9f73770a26",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5458c933-441b-434d-b027-786840156943"
        },
        "item": {
          "id": "a1afca23-7e51-4c37-ab15-fb2d48c39b8a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0b994e30-8f9c-4de3-95c0-27dd3dd82908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fef365-6d4f-4c89-9bf4-628b78495920",
        "cursor": {
          "ref": "1f5f2fc3-3732-42c2-a298-b152f8ddcc5f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4ede56ee-5674-45af-9b4d-f1f2be2e7ec3"
        },
        "item": {
          "id": "26fef365-6d4f-4c89-9bf4-628b78495920",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5a7483ab-c99b-466a-ba1b-f640acbb7f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc102cab-44a5-4a7e-8ed1-7c5829e435aa",
        "cursor": {
          "ref": "05aea69e-9267-4c6a-8174-6bf55206b1cd",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "71cd2795-627d-4e37-b3e4-62de2b0f45c5"
        },
        "item": {
          "id": "bc102cab-44a5-4a7e-8ed1-7c5829e435aa",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "43d65476-0b44-4f56-aca1-41affa9acf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa67028-ea4d-4b77-8681-fb76679b55c2",
        "cursor": {
          "ref": "97430223-3fe7-492f-8518-249e6d4f3569",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0ebe7c6b-819a-4b3c-b346-df7fcd8a7274"
        },
        "item": {
          "id": "8aa67028-ea4d-4b77-8681-fb76679b55c2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "537b1fa8-bc22-4bb1-a86f-393f773230ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee0045a-a238-492e-bc77-4cebcd6f2baa",
        "cursor": {
          "ref": "bf5f670a-7bdb-4158-aa6a-991d17a0fb20",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d8849949-2315-4da9-a537-0d26df08c374"
        },
        "item": {
          "id": "aee0045a-a238-492e-bc77-4cebcd6f2baa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b18c2373-d85c-48b5-87ad-5235565ccfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2faa566d-cd58-4f87-a895-47d5833fde93",
        "cursor": {
          "ref": "58fd0837-431b-4a0a-b8d9-42cf51ea3b89",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "97390c1f-8fc2-496e-bdbb-f2ffa2a02401"
        },
        "item": {
          "id": "2faa566d-cd58-4f87-a895-47d5833fde93",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "25ccf16d-4873-45ac-9415-9923c5ac9bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c123e734-bd51-4758-ad09-3341bee8929a",
        "cursor": {
          "ref": "721afa76-8d5e-47f9-8d6b-bb936cf9a29f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6507ad96-8043-41a6-875e-a51561baa2d6"
        },
        "item": {
          "id": "c123e734-bd51-4758-ad09-3341bee8929a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f2e5ada2-8d7b-458e-9751-b7824cdc20d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b85bb1d-8b72-4045-a5c9-2eb4ef048988",
        "cursor": {
          "ref": "faacea58-0a37-492b-a100-9e2703701fd9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5f166914-dd4f-4515-9163-09cd468e85f5"
        },
        "item": {
          "id": "6b85bb1d-8b72-4045-a5c9-2eb4ef048988",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d0756a34-1387-4d11-9d81-65c4feb3d54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7488b952-d4e8-4f51-b4bb-1dac9008f658",
        "cursor": {
          "ref": "aead21f0-99cd-4370-a992-cd92813e5553",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "753a0a8f-0dd4-44f8-ae26-6be8b73d383b"
        },
        "item": {
          "id": "7488b952-d4e8-4f51-b4bb-1dac9008f658",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c682ba95-81c2-4e91-b409-cb530504e5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a923cbf2-2406-4034-b052-b61e346841a5",
        "cursor": {
          "ref": "b9d76cce-fc11-4e08-91ee-ac5018399f6b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6aefd9dc-c104-4ff6-a521-0fbecb7d1a80"
        },
        "item": {
          "id": "a923cbf2-2406-4034-b052-b61e346841a5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3748c319-04e1-4bca-ba2e-9403a72180f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df74df7f-3cf7-43b0-812d-ff43bc2c8e3e",
        "cursor": {
          "ref": "b3d39ee9-81c2-4a79-88db-1b4de0f8f2ca",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f152c3a0-8bcd-4379-968e-bf61b5fd1027"
        },
        "item": {
          "id": "df74df7f-3cf7-43b0-812d-ff43bc2c8e3e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9cffe64f-8369-4f84-8613-0a998603b6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2ce94c-162e-44a9-836a-82fba53aef0d",
        "cursor": {
          "ref": "453adb1a-970d-4dcc-b40a-c4d7461e19ac",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "02e54eae-54ff-496d-8146-e19aa57a5091"
        },
        "item": {
          "id": "de2ce94c-162e-44a9-836a-82fba53aef0d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "510f0db3-c217-4ef3-814c-759300225f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b930266c-6cb9-4be1-8c9f-20bd364c4d5a",
        "cursor": {
          "ref": "7f7cb560-212a-4737-9a5c-ebc2ff6b3efd",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e3c9c6b6-859e-4d12-93ac-de0f9d008982"
        },
        "item": {
          "id": "b930266c-6cb9-4be1-8c9f-20bd364c4d5a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c5639c8b-dc55-40b8-97a3-ad8abbc88292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e64779-721e-42a5-ae5b-c86318979cb0",
        "cursor": {
          "ref": "d441715a-96d5-4485-b9c7-f9cf9b312987",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6cb29de4-2e78-4052-a5e2-ddf0eb041b67"
        },
        "item": {
          "id": "f2e64779-721e-42a5-ae5b-c86318979cb0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "401ce53b-d61f-4eac-b60e-72d15a80b1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e016c67d-f814-4e97-b74a-eda6fba218e3",
        "cursor": {
          "ref": "1af4151d-9591-42a5-b460-d868e91fe786",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f8832a1a-4802-4e3a-af1a-229ea3a12d48"
        },
        "item": {
          "id": "e016c67d-f814-4e97-b74a-eda6fba218e3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e0203b29-91ca-44d9-ae88-54cc62e89650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e725ad0-ebda-444a-807b-b858971b1f38",
        "cursor": {
          "ref": "74380589-fd91-4cbf-ae22-2379224e952d",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c6a7f1a7-3d22-4787-9ebe-208deedeabcc"
        },
        "item": {
          "id": "4e725ad0-ebda-444a-807b-b858971b1f38",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a2b662bb-e9da-4c95-96ec-7e23c503e468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151d615d-3c1f-406d-b0db-b40e7c59b03c",
        "cursor": {
          "ref": "f73adec9-aa71-4a01-84de-3bb010252e78",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0e501f02-878f-4baf-9075-ea07be512f55"
        },
        "item": {
          "id": "151d615d-3c1f-406d-b0db-b40e7c59b03c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6841d8ba-00d9-4a60-a3ad-190105bce884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e981c18d-ac51-409a-a059-1e606e7c66b5",
        "cursor": {
          "ref": "f7cadbed-5fe6-482d-8884-dc918ef94971",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1d42030b-dc3a-4923-b19c-5ac7f152dbd8"
        },
        "item": {
          "id": "e981c18d-ac51-409a-a059-1e606e7c66b5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "839fc8d3-3fb8-4f61-b7c4-21f197e380cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eec742b-8b92-4a93-b2d7-78475e80263f",
        "cursor": {
          "ref": "1d7f0bd0-dc74-4e37-a0d4-fe7ce10e7092",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fdc2051a-c77c-4f05-b09f-035b33e92af1"
        },
        "item": {
          "id": "8eec742b-8b92-4a93-b2d7-78475e80263f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "739e673e-eda0-4703-94d6-fa77ab1d29c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a636248a-07f9-4700-9edb-946bf27657c3",
        "cursor": {
          "ref": "86a6e247-9481-4309-9d7d-ef5a600f351a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "03030fa8-a8ad-483b-ade3-38128c24656f"
        },
        "item": {
          "id": "a636248a-07f9-4700-9edb-946bf27657c3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8912afa7-de1b-4362-88f1-7bccf79f62d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635dd83b-23ba-483a-b16d-6ed577a45ae5",
        "cursor": {
          "ref": "17e625c7-ff5b-454b-95a6-a6fcd4da964e",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "eff73761-77ea-499e-be05-1f15a315803d"
        },
        "item": {
          "id": "635dd83b-23ba-483a-b16d-6ed577a45ae5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "216a1875-417b-4330-acca-4f091d06e75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f6fb08-a0cf-497e-8459-bab4223a7d56",
        "cursor": {
          "ref": "f3149dcf-0690-4e60-8730-72a7a66cf2ca",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bcacaf1a-6e76-4f0e-9d20-f922156f4d70"
        },
        "item": {
          "id": "c0f6fb08-a0cf-497e-8459-bab4223a7d56",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d3a02065-378e-456f-9cc8-59cf7524c46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fd0824-5621-4983-9d90-a3cabf7d31c9",
        "cursor": {
          "ref": "d5641784-9b84-4dd2-a702-b18a5476f682",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b4f218d9-ce32-4813-bf94-c52f19b6efb9"
        },
        "item": {
          "id": "12fd0824-5621-4983-9d90-a3cabf7d31c9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "70aeac16-2311-428a-95df-0cc6c551167a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f25d95-f787-486d-afc0-7e2949c67c55",
        "cursor": {
          "ref": "ec268fc8-97da-4107-8ef1-b38de8c63d49",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b2d009dd-bab9-4a33-8619-c43546f6f460"
        },
        "item": {
          "id": "51f25d95-f787-486d-afc0-7e2949c67c55",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a3b53f63-0236-4528-bddd-54d1c39e68e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f000e83c-460b-4576-9dda-cb1da3a5df0d",
        "cursor": {
          "ref": "a29b3efd-c09c-42dc-9c53-7bec2d542660",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "80f305ac-2f4e-43c0-be18-2180f3206d7e"
        },
        "item": {
          "id": "f000e83c-460b-4576-9dda-cb1da3a5df0d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "56e57744-e3b4-46de-9f47-68ce69f2d0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d534b673-4216-4671-b968-88bedbf5c273",
        "cursor": {
          "ref": "045b7798-e5bc-4709-96c8-6d8003248643",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "18e62cbb-22c4-4844-84d4-321c26174f07"
        },
        "item": {
          "id": "d534b673-4216-4671-b968-88bedbf5c273",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9e833dbe-03d9-452b-8c32-1a3d6248d09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f34befe-92f6-40e6-b1d0-9c845f237c69",
        "cursor": {
          "ref": "12aba25f-234b-49ea-b0c0-c4e36da3c04a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "56390548-93f1-4950-847d-7b839b9b7e3f"
        },
        "item": {
          "id": "1f34befe-92f6-40e6-b1d0-9c845f237c69",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d47cf7dc-e0ea-4982-bfeb-5cab7a7820ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81333d5d-7b0b-49c8-8196-216f51acfbf5",
        "cursor": {
          "ref": "0d954adb-1ccc-476c-937e-165c2078dd51",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0eecce0f-ef45-4cb2-83fc-7ca2524ee761"
        },
        "item": {
          "id": "81333d5d-7b0b-49c8-8196-216f51acfbf5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bdca9f3b-883a-4f76-a6d9-948f38c45acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb5105c-75eb-450c-8d3a-0301bc1263de",
        "cursor": {
          "ref": "5bf2f19a-ef4f-4a20-b6fd-c0670b3f3b9c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "01fa6e5c-ffe3-412c-855a-3aacc90599ea"
        },
        "item": {
          "id": "dbb5105c-75eb-450c-8d3a-0301bc1263de",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1d30f258-7fa4-45b9-99a5-afe385369b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d56924e-7162-42e8-846d-333a7867e298",
        "cursor": {
          "ref": "921dcec8-4e54-427d-9696-75d49cfba9d2",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9d8cf7b5-db72-41d0-a9c5-4da57fdeb41f"
        },
        "item": {
          "id": "5d56924e-7162-42e8-846d-333a7867e298",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f8703dd8-8efb-4219-9a20-2c8f11cea2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de55370-ae6a-4e98-a5fd-265bc80f71c2",
        "cursor": {
          "ref": "cb4392cc-1c2c-4976-9ee5-c6c582ebaf94",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ad3d0f23-b60c-4e34-addf-66bd73211660"
        },
        "item": {
          "id": "0de55370-ae6a-4e98-a5fd-265bc80f71c2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "40107987-778f-4b29-9403-a96dffd1c3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "44b0b99e-724d-470d-a1d2-d370ea34aca3",
        "cursor": {
          "ref": "115d9c04-8705-4d61-8cc9-d851d62a1f71",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e973c2db-77fe-4b05-adb8-1075f43dd44b"
        },
        "item": {
          "id": "44b0b99e-724d-470d-a1d2-d370ea34aca3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "967293b9-3b84-43da-8f78-25ba54307324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "271125ad-df2b-4434-8bc0-edcfe838dbb6",
        "cursor": {
          "ref": "0b7aa657-c735-4f13-92ad-ade95b348996",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a40b15f9-55cf-4cba-8012-425d9a89bfcd"
        },
        "item": {
          "id": "271125ad-df2b-4434-8bc0-edcfe838dbb6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "183d908f-b92e-4450-b9a4-977fe367ca8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "28d43926-203c-4fdf-84a7-1272a4e97bed",
        "cursor": {
          "ref": "2d1af319-66f0-4973-b7c7-3ba50c124357",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "17459a01-a594-479a-8df0-607f9a6ac987"
        },
        "item": {
          "id": "28d43926-203c-4fdf-84a7-1272a4e97bed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "221ed24f-4a79-469f-8475-a26dc307c9e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d43926-203c-4fdf-84a7-1272a4e97bed",
        "cursor": {
          "ref": "2d1af319-66f0-4973-b7c7-3ba50c124357",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "17459a01-a594-479a-8df0-607f9a6ac987"
        },
        "item": {
          "id": "28d43926-203c-4fdf-84a7-1272a4e97bed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "221ed24f-4a79-469f-8475-a26dc307c9e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f33643-d251-4c26-8ae4-66851c954f85",
        "cursor": {
          "ref": "9cbed562-bd07-41d4-b383-852a9ff1e8a2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e54c8046-49f7-47b4-8a04-b574c6726da6"
        },
        "item": {
          "id": "89f33643-d251-4c26-8ae4-66851c954f85",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "812a6f48-bd25-4d40-a536-7cc7e95c045c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3145bdcf-b216-42a6-9776-bf873659f0f8",
        "cursor": {
          "ref": "2811948b-530d-4176-bbfc-3273041bf3a9",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b162b401-bf11-483d-a10a-d760d43c3269"
        },
        "item": {
          "id": "3145bdcf-b216-42a6-9776-bf873659f0f8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0d05a5d8-7079-4e3c-a68a-e48e16f79433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}