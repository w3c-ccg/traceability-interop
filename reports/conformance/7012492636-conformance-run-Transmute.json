{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "332e41e2-72f6-4d21-9997-17ec5fa36c21",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ef0dff34-f4b2-4f3e-97d0-9994f4ba408c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3a6ab933-9c26-4d4e-ba3f-451e7e83dfa6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0f01187c-c9d7-4c7a-a773-846573f71b10"
                }
              }
            ]
          },
          {
            "id": "6d4bf775-f231-4280-865f-db8611459348",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14ed33ba-f628-4c13-81f4-86467ceba85d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ee23a9a1-73a4-40b6-b6d0-d9de895d66e4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0beb0fa8-b3b0-4091-ae50-7b7b1b9d6a0b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "52b5ade6-7275-49e0-bb17-3a638df487e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18faa65c-ce83-4f7c-8313-d2368bdc26d1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f19c16ac-ad3a-4f33-a821-f553117efafd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad0ac4eb-6eda-4a9c-85f6-0c1d429a6157"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7daaa1d-a88c-4224-bae6-aba3dde1d9ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e800924d-454f-4969-92cb-cd889e632184"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d6d16cd8-ce8e-45c5-b6f1-aab176240e63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "947f39c1-7472-46f7-81d9-366418cd8235"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc4beaa5-df0b-4403-b038-9fb396ce72ec",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6b62b171-35be-4b1c-86a4-071e3fc33ffd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b6ff28b-1253-44e7-832e-5b951cbedd14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cfaef0a-4df0-4244-82bc-69f188503b1d"
            }
          }
        ]
      },
      {
        "id": "490adf6c-98d6-4b41-ab23-748b1c8ff1a0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2d52aa05-82ae-4c40-b368-70ab0a73f697",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c7f97c5-4bd2-4188-91de-b4868501db8b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c7ad997-0f70-43af-8816-49dcd2547664",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eedd18f-b00a-4309-bdd8-1415b978b67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82f37ca2-4fa1-4dda-9ece-b0c68d43c734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca1c857-b01d-4d2f-b424-13f4d681c6fe",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b52eaaa-5250-4193-a868-6e7063d79dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9652780-acb2-48d2-8c88-cdf8df336e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f9bba2-9fb9-4f01-b589-f5ad8884f530",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593fd845-0ea8-4ba2-8a76-03c416e14032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a9cdd34-2be7-496f-a1c0-32f76f09988c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b95b0b39-a247-4978-86ea-a3d3719c9c6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3eeb59ac-698f-442f-a91c-8d73b44803e5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf03adb-2ba2-458e-a1f8-127ce0076565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21287674-62e8-4d26-9f14-c833c0bdec89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedf995d-be15-4c59-a8e2-7fa7444dfdfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e37de6-40af-4c6f-afd0-2b6b9d917970"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8537d46f-ad42-48e0-8406-b4c7697a6966",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66a719bd-e5e9-4413-8ff5-2ac03edd8efa",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be0d5906-11fc-498c-886a-fa9191ea71af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cbe0a725-3172-43b1-ada4-5620fc921686"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e44036be-8859-45a5-9996-8e89087610d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2ae722b2-bee3-41d3-a3d6-2da0a2db8749"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6ad2249-1694-49f0-bd94-c4340c15e846",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70f4c978-a607-4364-b366-28dac495e10b"
            }
          }
        ]
      },
      {
        "id": "0b1cd66b-1012-4590-a18a-83fa0c4eae34",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1d4bb3af-2c83-4b7b-b83c-171583ce26d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f9bf32c-4007-4f55-b809-c631d459857c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a035f57b-329f-4afa-b8e1-9624dd46eb85",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09124780-de97-4cee-a6e6-4e5ba54cfd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093762c2-7fd0-491f-b5f8-3801512ff320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840b0274-39b1-4441-99f0-bd3d709e9dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55fcb1ae-88ca-4724-841d-f4d6994663cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664a95d0-e3ec-44d3-9c81-1d46db9f1f52",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540fb821-9114-4668-983f-1f188dab9fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1739acf-4403-41f2-a736-de6a884e6dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36150c8c-03b4-4204-bd69-6924b5b2a268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12918f4a-7d9b-4e34-848a-a55815533a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad215c1b-89cf-4eda-954b-53bcdf558348",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4705471-6d78-4dca-bcaf-892299b40fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13878730-fcae-4e43-81ef-a3ad89b20efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e74854-edf3-4809-ac52-821c2a769060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c997307-fcef-47c1-b6e5-992ba812368d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d121db05-a0f4-4e60-9200-ea590260428e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988ea3bb-1e91-46f7-b537-3d85fc71bc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4c70c7-5e4e-45c6-adf7-c962b46bf378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cb01e9-e44c-4d70-8832-c839cfb85d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c0b68a6-31f0-4b7e-b6fb-95c25c9a38c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4250f476-bfa8-49d7-b91a-70680611c2ca",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa78def-4134-4f85-b53f-cbc91a185ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ddc908-23a6-48d4-aa79-d32b56bdc7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593f9b78-9f0c-4ae6-a9a1-e7ec2a6b97ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "131c6c59-63aa-4fcc-896c-170f96539b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b10e4c7-d051-4e87-8099-b24a4598ca54",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de82b018-1dfd-477d-8417-2b77d60bd9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80854d2a-d740-45df-a913-23f880e25251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5500b9ae-6df7-4bc1-8ce0-0edde8e5ff10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4244bc7c-a37a-455a-a792-f1a229d54066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b449d45-c781-4203-b2b6-5aa6de987bad",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d51fa47-bb15-4731-b5ca-3761027b8077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a041d1c5-9e74-4d48-a66d-0ccbda5399d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c95127-a348-42d4-bdcd-68b596590d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78d4c6eb-32e1-466c-b7ae-fba022b67493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f51fa6-abcf-453c-a4bb-50eb1759e4a0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f3ac35-b1c3-4ef5-946f-c2124fc1d659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30b1043-019a-4c30-a6ba-940bed6aa779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96174fee-90c4-46d5-8c06-80312936b087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d2de16c-3fa7-4ff7-86ea-96a7ed28dd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193d241f-d505-4080-8e34-e3e3c98bc87b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6599e2d6-8cd2-4c97-ba5a-df1d69b57a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1906166e-6e90-430d-a226-7be449a6772f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca83fec-bff6-4d92-a648-7a008bff2286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82e30e88-46eb-470e-9799-3c88f872f4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d55bbb-c006-492c-ad16-1e744082cf2f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e691ce7c-1d95-4cb2-83b1-1b50093d132e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f97102-7fc6-4286-b5c3-0e49808bae8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d9f3a4-1567-4e2d-ba0f-9fa8ff553780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9595ff9-b190-42a1-9cda-51b03f51a2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e05b9a3-a19a-420f-800d-f0a27d1a690d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d342e8-06aa-4534-9f6b-1508b7eb90a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197fe4da-dd33-448d-9f1d-5e5d92eb6741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967f6c20-1870-4638-81ab-463d379f7ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11b58483-9825-48a3-bcce-575c829e0b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972158b7-6a68-4f9c-af9b-b36ae8befedc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cb7c4f-fb21-40f5-a032-6cfc346b5ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5207b2e-58eb-4975-b5a6-5fd47780b3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0fb0c5-9bf4-4943-8468-9fc27810c9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c86c33f-315b-4c15-b43f-b0367abb470b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e11f19-2047-4c16-9071-0ef558fbdff3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c1aaab-8016-4731-bd6c-ea7ad4fecf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd60e532-e5bd-4763-9af4-42be95f1e82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a33502a-3dc9-43f1-8397-073c46deea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb8a21ba-6eb1-41b3-aea6-5e7e363e0898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad27177b-4475-44ef-8480-b3e7f555888e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8087ad37-56f9-46e6-85ac-cf34c5ab2050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746aa7c9-4de0-49f8-9c9d-e3bee3e96f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d765c7-38d8-438d-a5ab-9c65d1d5a60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a2ac2b3-3f79-4605-8cb8-ee4220e6bca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4892c0-6e20-4f2c-aaf7-a36c46d95993",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0bef5c-2532-4a57-aa4f-bf0ad8a6e467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d33158-f066-42ab-9e42-329744ddc3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc444f56-9a67-4b6b-ad2e-42e55ac6a374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c75a0261-acdf-49e6-b1fa-2220833c09b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd4b4d5-df89-4b89-8a9c-4c21d4707f1f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7f05a3-fb28-4e74-9747-fcc8f2376441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848138b5-3013-4e4f-992f-8a23c630eff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac2eda3-d56a-498b-9f9d-d361bf42834c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cfa5f02-9c0a-4bb6-a64f-4f920e72a41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7b5126-df95-4fba-a31e-7791ba2d9736",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7615da1c-475e-4973-9835-b1407c712043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa97228-5005-4f78-92dc-edb42e2e8c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebd28f7-237f-49fc-8e52-9130582bc53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b65669fa-3b07-486d-91f8-7713b91208e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302a37a7-4e3e-4b05-a5a2-c9fd04130091",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5580b4-889f-4847-958b-ddb6f7254d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b91f5d-7e03-4057-925b-14b6bfee6271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b8d19f-1d5f-4221-94be-3603569b6e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5e607f-656a-4778-8bac-c3d90c5f5f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952ac365-794b-479a-a7c7-68b5941f92f1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0528a115-b748-476e-ba78-5ee8075dc813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0703b7-c2ce-4e5c-a505-90bb1af685e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39186b8b-9f39-48e7-82b5-fa2bd65112b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd5c3e2-075f-4c2c-adb2-82a905ce8c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9384f88-2931-4ed6-865a-3978f3f8655b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c8814d-d2cf-47d5-8ccf-ac41c4d82718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dba32ca-4090-43eb-9c4a-79e10bd3b978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a9d28f-6d2a-4a06-9488-bca5f58d41dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27e08e8a-9956-4c6b-9f7d-f34933911b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dfb7a9-045f-4a36-8a8d-5291583e3cee",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd97aa24-14e6-4c0c-974b-92fbcad40ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c85dc41-9285-476e-a56b-1ca5c79c6a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128c416e-f468-4b8d-b746-5b7850397619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a790ee6-37d9-4f61-98d0-006682b19101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cb4bc2-5148-40cd-9580-9f3e02fd122c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ee56b5-23ba-4474-9bc8-fa0d1516d140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6893f02f-472d-4943-a919-f6c097dfbf22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f148515-a216-41f1-8cef-65f3e78b8abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "860f8bb5-634b-4bb1-b622-25536bba6174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc0e5be-2fbb-413f-a157-148d00367287",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c9afed-6265-41a2-9b9f-620bec3b753f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bcf11e-41dc-47ea-ab1c-039031d9bbda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900eec02-308b-441f-ada6-e839e1261454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32791826-0002-4cad-bba4-fe03aab45aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3767a886-fefa-493e-96f5-e5b6a070b9d6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caa86fa-b4ef-4781-b1b6-83ec0ff2f32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6358c9-e287-40bc-b59f-8dffeba727b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498fb89a-899c-4f53-a5c3-d8baff0f2967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c78f249-0ff0-4e5c-a589-10d80c510fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b54e87e-0ddb-4346-885f-bffa82f3e4fe",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c8245c-164e-4353-b370-6967a0e71a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31be46a-b419-44d3-99cb-96b75e89632a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961a0b39-c187-432d-bb8e-63b179afe7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1334e39b-21f7-4eb6-a516-2b4847435629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7398e02b-55f8-45ae-b940-dfbcb3f1e2fb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a3a990-4dce-4505-994d-fc2e8b838f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef70a31-97ea-4c7b-9e4d-bdcf48884349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3c9cd5-5586-4bfe-a636-42764c9abf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58d308de-f7f7-4e79-b68d-27b6387de4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204597c8-86db-43e0-a6bf-f253d3a5d509",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ee282e-1081-48fb-8228-a00fe846fbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223da2ce-d095-4d6c-8b24-c9439a564570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06e9943-5f7e-49a1-88dd-9c64d6a3c0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2b82ee-dff0-48ad-bb46-d8f311cb42d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b8f320-93b6-42d6-a2b4-ee529aeec077",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70fed18-b48f-416b-bf55-aa36026b8dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1725ca7-b5f4-49e5-9072-53c56c35ebd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b5f688-d4b8-476a-adb1-0889e65ad236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee85dd6e-e23a-4b90-99a6-416f04ec0a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee2a819-2f03-4ff0-afc6-a17429f4024f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35805099-e508-484d-9f73-d3f8ee6a0d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc5429b-6fc8-4a74-b23f-62047b495ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446eb15a-5bca-4888-a607-61aa0f1f512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44644d30-e99e-4151-8dbc-8f3584dbccbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7dacfc-a5fb-4aee-a955-ac46c93f67b6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168d0edf-c75b-4048-bffc-88cc2e2e253e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea96e3b7-ee24-4d36-a434-63067fd60e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aeb9b92-4daa-456a-bc4d-bf7a7e9b43e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e47e78d-9bb1-4980-b1f0-5233d9271e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926827e7-c53a-4fab-8d75-ab966a87dfc0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060b3d4b-97f3-4735-abdd-121a89553d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1d9fba-36dd-40cb-a7ca-f80a9fcd41da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09c7e8f-a11d-4bd4-b91c-f83fc70a06ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee429f40-5154-490e-8277-c8c8bddca680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3073ea25-2afe-4872-a625-eb5aaa32370c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fd52a0-db9c-4756-b0fd-0d57b2e8055c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e0189a-0761-4fb7-af9b-ac37328a67f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9376ffe0-bcc3-42aa-9aed-3b1140ba8748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9eda7d-01c1-4961-be76-d1fc4d42b813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45820c9-b8b4-47e3-9083-5d3ba6522a51",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c35c53b-f6c1-4c49-bf00-93dce59920dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb5c7c1-ab21-4f11-a5a0-249a2d72e9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f70efe-e012-49bf-86d4-f625cd2584de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b886a124-5a00-49a1-8d7e-faf3d50436ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7e21b5-d8ff-4fff-8973-2c63f004986d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cdf780-b771-4576-9823-38dbd377131d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d200d176-6928-4e9c-a1e3-fba31075835a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489efccc-4ab4-4d3f-9aff-6da0520ef140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2327adb-ed9a-4a03-8eed-df7e42a0bd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6704ca3-3506-4c27-a38a-d037db553955",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9794082f-f361-4dae-98f6-de9ec6db9e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2a0008-a306-4558-b61c-f06baae68d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fe9652-1dec-4cc3-9144-bc7e967f8788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5c29f767-0fe4-45a7-bdc0-32310b7648a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43027c04-4ad0-4551-b6fc-0b2cb550bfb5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a340ac-7fa9-4c24-a2c3-7b0886583fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f9efdb0-5689-45d8-bf89-7f7348d4ad35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a690b16a-5198-419f-ba2c-dfad6d62f13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35ac8fcc-be52-47a4-a8a6-f5094a215a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3a6f28-696c-4467-939b-47fcd5aea2f2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83635a69-5aac-41f7-891f-66adea45e9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba85fc1-9f81-443b-aef9-e8024bd1dae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573f8a00-036d-41e8-a9e6-3ce03f22615d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43b4f61a-e909-4e88-a9f4-667330e17915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b61be4a-37db-4b07-b06f-f96cb1d7f830",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8426115f-4163-4ab8-9cfe-c63af6d6f624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab23a86-20c3-4534-81f9-1ed5536038cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad227bf-c5fd-4ee5-a27b-ce38dd7abe46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6adba1f-8690-4067-b47a-7f9ee738a0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b7a3a3-d5ac-4e0b-84d0-910b786f8cfe",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feb25bc-d23e-4266-b204-4bc1b77952ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91540479-e7cd-4e49-833e-ef7ac683c43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ec9b67-9798-4f50-86dd-13b38e84ffdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8be7808b-b444-4a20-804e-4934aa72632b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428f6d74-6b9d-4b75-b7d4-2887854fea05",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ff3eba-2211-4057-b47f-bc0810d8b7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c138154d-7a46-4370-88e4-24429ef158ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825885fd-2d0f-48bf-8b44-c582372622e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a2f773-b5d0-44f4-a8e6-1acd1683af2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50464b80-b08b-469e-87b9-4b0ce6773d0f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a026dc-a6e2-4add-afdd-6f73ab24fc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e83411-1662-4d42-8c04-4e322ac98f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cec5441-dcdb-418e-885e-05f7dfdfff6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6db256c8-8e91-4cee-95bc-3399a0cfe522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7438c281-d3c8-49c2-9f4c-cc65a00548d0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db4af23-f784-4ba0-8a3f-72390974709b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75af52a-743f-459c-af60-2a00e3f1d4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4423feef-5d61-490c-8d65-89fa043d10dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "03156bba-96c0-4dd0-b6cc-cedb0d5da149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dfc997-03e6-4be0-8c3a-2e7c46823cf9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a803249-98e1-4693-9633-2435d93ddfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c66cbb-d9b4-4593-81d7-4f2c022bc313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e73fbe2-e683-4c0e-8734-9c59b844c888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a56d6f2-1acb-4202-850e-d9ce2684b151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c4981d-f871-4334-bfec-aff57ae79fc4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcff39a1-95c1-415d-bcd5-4ba198d40993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02b6b19-1090-45cc-91f9-4e5d976eb7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c688393c-f716-4881-af6c-d3ced4458460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2bf9508-ca32-4047-a522-a9f62929066e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118f14d9-752e-45bc-b0f3-ebc18fc3acbf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b3e196-75b7-4cae-a90a-f32069669c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fab8ed6-87b8-459d-83e6-03a68e9edfdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad5551e-aae4-49c7-9eac-ae5bacd5ba72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41141952-7caf-4a04-9777-2196317b8376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197ac606-2640-473c-8efb-fe51ba5b0c25",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779835d5-3a1c-4e71-baae-97fdda8de621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c532cc1-e064-4664-830e-065602792aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec4acfb-556b-4880-b8f7-1b5d515d9804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc1ccaa-1460-4f4c-8300-397ca6fa037c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff23bf83-b256-4d60-b0da-8918d6cfbe9e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e118a596-b2d5-42fa-bb54-29bfae195403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa8a2c5-e279-49b5-bd32-07f3d9464bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a7f30b-af69-4132-ba8b-372bc13d33ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a87bf42d-87b7-440c-8b8a-65a891e8057e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9c2723-5ac8-446a-a041-b131b8d5f177",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b4987c-39d4-4ceb-b8e5-f3e983dd5879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39803aba-d64f-4398-9d24-055c17e6fc73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee5c4db-67bd-4250-9234-a3a82565fd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e0fc69-79e9-43a1-8976-d89ad08de1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2672b475-4867-4466-9fef-eaa4456d56e7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2eee118-9083-4a68-918e-a6ad0b09c0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feccf0cf-9588-44f2-87cd-62a3b693399e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20960e1b-6fa8-4ee6-a737-819ce72ea908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d351d14-5f51-4687-86c5-f58dc5acd005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9de6f7-09c8-45ab-b9cf-8a893494b15b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e42b3f-5f95-4ebb-af0d-fecceef418d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303e9af9-6d1a-41c0-ab81-2f695df22df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdc7af8-f0d8-41e0-a326-a7180cc04439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8e0148-ed88-46e1-b2b5-9b8927387162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f08468c-166c-4f10-87b0-b1d0351d3c96",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3008a9-986b-4338-b7f9-a8defaa3bcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6f599a-d6aa-4311-a52d-e099c0c53206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b299950-5da3-477f-8813-08c4dbd0c814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a87c028-e0cc-4c94-b3f4-2e2e3e018f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7502dafe-0493-4004-b6d6-ea0a6fcbc8b0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64c44ca-3330-421a-b7d3-3ba76c90557a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf91f6cc-8869-4015-9f1a-674e779e4bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d394b9a-93bd-408a-8aa7-fa7aa1297301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbd7111-55a0-4ead-9ca6-bf8d32d36d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47090b7c-07c6-4b05-83c5-c5805cf83979",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa98f1f-7329-42d0-8669-28a355c06050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cf28f6-402e-4526-8d86-3bf6691bf318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1db919-a678-45cf-ae66-03b782e902b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab58e78-70b2-47db-be8a-b689c62bf6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f0380b-d19e-4236-9daf-ba1285e3df24",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6ca64f-79b9-4fb8-b1da-c36dddc51ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f088c5a3-2427-440d-bd41-6037f2b13262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a509d4d0-e13a-4149-995c-1d3cc8a781e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d693cde0-5c7a-4e78-8cf1-a6db5a194555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6fe195-ebff-4ae9-bfc5-5edd08e56432",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb63b5b0-fe05-4ead-b5d6-d0df834e5790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af8686f-505d-4ea7-88f7-3ac7ecba6330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c310ea1-8861-40de-a3d1-26c59b197251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d47fcc-f181-47da-bf4f-a4f2d5220323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52296d6-d99f-4d68-b2f8-012a207972a6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85adb08-90f6-4123-9625-7616bc9bfe5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5780dce4-bc37-44f9-b824-069f6c4f53e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb154b3-2845-4de8-92af-7c91b9d6f86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9a3203-1539-4358-90a0-fbb868ce056f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae51a8f-ad0f-4d2a-bb42-7052b52ba1de",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f1a109-4594-469b-9598-ee116112e822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec01de02-9af0-47ef-b2fa-59a478acd0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862c58d8-5b9f-49b8-88f0-32a7a0ac238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a352115-acb0-4482-a15a-29b0413d448e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428dfc71-1882-4e14-9097-ce5796dad402",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be61f49-1f28-4710-9aa0-d0be65b2cc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153325ce-c866-492e-b67c-5ca0cf12d4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e225c56e-69d0-4fab-a02c-2f5e84fc1f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "92dcac0f-155c-408d-8366-d6e125e63d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794ecf1a-74de-4121-ae91-d96fef2aa090",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ee6e00-2e5d-45d7-9c7c-fa472c1e93b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f6fff4-73f0-42db-8065-a6568f1ff71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6fdb31-451e-4128-8a02-d7204ad2bf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "79cf4e0a-4737-41c4-ac75-86f4fefddba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc44433-77c9-49b6-8b97-265a8f1c8a46",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e510b6a-dd69-402d-887c-e075593a4833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa251d33-b35f-461a-9d59-7d1579e0daf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab7f638-e75c-4e2e-bdc0-26909519268b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05cba1b3-749d-4260-9664-af7f3f6f70ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66abaaf-1725-46dc-befa-4e6a657a0094",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d676a0b5-af08-4177-acc0-0146417a711f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94454bf-f250-4788-be5c-3ca2d72b70cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235beb5b-dee0-4c94-aeda-257b0875d72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "131c4a3d-0bfc-4b66-bcca-f497cb8627a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6daf072-007e-4c75-8593-03dd555a7891",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6bdf87-fed0-49bc-857b-6489ad15faff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bbac0a-ddb0-4560-af8b-bf9678be183c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4915db6-9f0b-4a85-8049-074f7061dc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca381ef-d373-4402-bb93-49fcc27d28b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e98c7b-18ab-40c1-8b13-1e8b3a7b5970",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4209aa1b-197e-41ce-b9a4-55415dfc47be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2cb6f46-2061-4154-bff7-028b186485af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b7c6ef-a304-49ba-9a8f-2c1df91ea1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4015b7fa-1e19-41a0-b515-ee29212b08a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0190b3f3-e2c2-48ee-9710-a1ed15b9b1ab",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebd82b4-e124-4a08-bc51-ba6dc9f68aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1579ea8-b7bd-433f-a863-12ac001b2cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2c39db-2c37-4069-a72a-e056987bc962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "362fd713-d3b0-46e1-a43d-a226986db35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac581c7-5c6e-4edd-8937-b9e514ddc28d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d94c4b-a576-40fa-b461-058d74bdcded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cfe74b-4fc0-4d74-a4fe-c92f0c0caa0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce87ade8-72d2-42e0-b816-7476109fa1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc5b964-15aa-4d98-80d1-302d7086ca45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04b0ee9-ac77-4a1f-bf94-73e029bb682d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b593be24-fc99-48e4-985f-6f09545633d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff03af31-39a1-490a-aac1-1d942a63a7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b420f3-6e5b-4551-b545-25c1d43bdddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "688abf7d-1002-4991-afe1-237cfcff6bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a448b16e-92e8-4197-aa98-ef6c95f89964",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bcd2a5-3989-441b-9152-e6e39656ef04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b84f777-fd14-43df-9980-d96bc09105f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7447c232-4ad8-4991-bd91-11a7c4f13cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79ee6b3f-f087-48e1-8440-8253e6593ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4945dce-7c58-44dd-813e-bc90f2d8fe27",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd12c2c-cdca-4c68-8ad0-f41dae491ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13acf46-3f90-45df-8c8c-551204c0459c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d35e0e5-9e5a-432e-be5e-b2a479e13e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e925f7-d58a-4761-9e88-20e0e14320bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20aaa613-6a2a-460a-9d6e-952074a9af1e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4bd8b7-de99-4f2e-8b00-86f65829072b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504523a3-35fb-4c26-9d79-0542cd1baef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c311a65-ec10-4dbe-a0c1-0bce1e5fe37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "673dba1e-3e63-4069-a4f5-a8a9ce1c8ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e35a64-87cb-43d0-84c3-a63c2a764ebc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c044cdc6-97c4-4f40-9aee-46a52bdb83f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2c67c1-a283-40ae-9c61-15f70c5a89e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88a9e48-d33d-44f8-8eae-e585991b811c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7499120d-cf12-44ac-a5b1-4176224a0aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f8c689-d81e-4711-8c9f-d02a3e1b32a5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b49dcd-eb0c-407f-93f8-397bf83e510a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96f626f-05d3-45db-99ac-9f7669b1d499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177f16f7-2eb2-4b75-b21c-333bdac3dd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2cafc2e-e50b-4a84-9058-92085519c284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a02985-5687-418f-8175-7a315bad9617",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa0dc8c-4b02-4742-b7bd-853d668295b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312861c8-ecaa-4dbc-a26c-229be7ed32b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce99a73-8467-43ce-a11f-16754c0a35d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17c9c815-6f96-42df-b9e8-7ae6998a60df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08218edd-89d7-4d18-9949-b4ad8c944dee",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35bc554-94c6-42f4-a018-976c60ed9cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7984728e-6dfa-434a-b917-2cb5ee7fb52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6738ef-196b-4c45-921b-3d6aefb650ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a57af80c-e03f-420b-b6cf-a20d17333890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd5f95f-adfa-4778-be8f-28a8d0c313af",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3bb220-884f-4d43-9b99-99ee676c2096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690de8bf-e98a-42dc-a353-c07b122c0a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43299216-137a-452e-9ef5-12b5f06a08c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d42abc6-600f-4c20-87be-26a45c71a87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1590ae-a60a-4d01-8918-da956117463e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb7c5de-ff8c-4e55-a8d2-3f419f97d2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72091a3e-fc2d-4752-a0bc-7414ec1c4549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d23278-c47a-453e-af7b-d57be1e349a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe62c6be-1abe-4db5-9e22-a428095000af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da59fe79-9347-43a5-88f9-0b0fea32f85a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebd9616-6865-49f6-a9de-9877fb406063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63249440-cc3c-485a-8fab-85879b5ae114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec49a39-255c-4937-b994-81365c031a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afd09839-e973-4ae3-84cb-88b413632a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4009a377-dcd6-4a3a-8216-fecaf6f6453f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6163fa36-da86-4611-a13a-d59c74849eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1dccc8-44dd-451c-b402-3adbad68399e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f42a47-e4e7-46ab-aaf0-4d4a72c8bb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf50ace5-d122-40fd-b673-b44426f7e768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681eb005-efd4-4f6a-a8d3-99d55d88972f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5901e816-07b6-477b-aeef-4c1b7eebe1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec479100-a8ce-439b-a694-5c61dc9ae3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b9fa6a-6b16-444d-913f-4a5234cac4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b20d4aa5-a986-47c0-b20f-230959497b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43807ccf-d99c-4c34-adbd-e8b4732745b5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d62cba3-b739-438f-90ea-4fdcadc253ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a99878-c723-4157-9106-96115af8ce7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60c22b9-49d5-456d-8474-32b31e4d3193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d01be20-d837-4149-b715-ffbbaa935d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28142a3c-f35d-43e2-a43e-94a3d367145d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de4d333-1cd1-437a-8714-0287bc938597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb49f1d6-5c44-47c2-bfd3-a50d069722db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0eb1aff-a343-4ca3-ad14-2372c37e0e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db88f615-5805-4b52-9fbd-8b423b167835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452ac471-c6cd-4145-93a1-8beaa1a55f9d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8075c74c-b648-4703-98cb-21e98dbbd2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1782d4e3-a303-4866-b407-2592260f1a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde5e86c-a047-48b3-b403-deeb5f36810e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08589d71-4d45-4f97-9751-7afbb5540a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916c4fe4-4269-4d31-a9e3-fd584d4b457b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6506313e-ac82-4851-9a2a-f80bc186c529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c597d845-0cd8-4dca-b36a-1149edfb1cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1a7d65-152c-46dc-831e-3f08d4295912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0809f2-5e85-407a-acd9-5e623daf101d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60270fad-b9f9-4e1d-91a7-d71e64d1e6b6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549dfb2e-3ccc-49b2-90fd-3f27a8a3135b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec8b90f-6fe6-4e39-8a1b-240a7de49ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a816bb5-be83-4dcd-954b-4861bbf92121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06dca868-28f8-4988-8ccb-8791d50b928c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8de941c-7a48-452d-845d-f3eedf1a98c0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d79053-1dc8-420b-b2fd-7cc0f3b971b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8b800c-b4cf-41e7-8839-fb05f5c6c4bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840c7807-ad00-4c17-8145-c1fd15c15bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5f9286-b137-4e0c-8a83-60ad3d55d640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3214ec-3f53-4a44-ac42-6d3f296f7ad3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551adcb0-d0b2-455c-8555-22c821c97e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1207779e-cbb5-4b0c-bfe8-86620208ff8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c216503-c69a-4805-ae06-7868b732c56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28d47007-a455-48ef-be61-6b2f9d1351ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91e8291-cbfb-49fc-83f1-f500273e3d86",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7e70d6-3c8f-468f-b4bf-fa7cc7efb046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd7d8ae-8fab-455c-a2af-f4ba95b3b44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7180f2-6584-4794-b34e-7238c2a1a807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f115eb-140a-4bac-8eea-7d7ce0f30978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b627f2-62d8-4da4-9a29-10c9ffc5348b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11251e33-8220-4cf5-9834-fa788b5fc4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e667a8-28bc-4033-aace-cfd203fb974c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e707b7c8-94f7-4551-86da-71d8ca68544b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62c3d00c-7a6e-4b4c-a5d0-cbd831a0daeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92aa5d75-1350-4b8a-bebc-e217f32c8458",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9a0955-e806-47bc-a1c5-a7f467ff97c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab9f8c7-db52-4f76-9189-c7110d368cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc58ff0c-d1b1-4f9d-a36e-98364f3b7d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "479c9f82-1c7f-4057-b182-927188179ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b09280-e5c5-4790-8d2e-662de169bbc2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8037233-1756-4695-8d09-d88396d12def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12279f3-0549-4c02-acf2-b55c5cb0018f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d6c827-5479-4499-b00e-9d966458dd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac69462-8460-4c73-a941-ffd515b221b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96922b57-bbfa-438b-bbe6-83611c4b0bd2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20f1e8d-a0a3-41ef-8626-07f03d27a570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2872c339-5d65-401d-b513-9f75f86f5c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2fd039-7769-4ac8-baab-b390ed8e4eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "825ce0db-dfcd-4ac4-9fea-d58d1975b32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2a1832-d31f-4b3b-a52c-6c27cc6b4e78",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bffe58b-1151-4861-ad55-fd508b72ca8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c280d1a-bab9-4bf1-8802-0d2c6741b9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a802ed-0197-4838-8805-49b8d0979c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e40f52-a661-440d-bbbc-312cc293b019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16668e9b-ca2a-444c-8c26-4df8e04b29e6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc42b09-7050-48d8-8987-c24e146374f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "df4003b9-cf3e-4f56-8ac5-5e5682c44519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923021da-576f-408c-8b99-2c8b5baa6617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9da1aa6f-f179-4d05-a0ec-d6cdb022efec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "06078063-cf93-4495-aa03-3b13b5d19707",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ef28a3c-a9b9-468e-b881-872e01aebfad",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0860ebbc-cbcc-4095-aaac-b442e6c07bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c2eac99-e932-415f-8f22-82df9e7d01ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69422064-82ca-400c-830c-2d46ac9d2990",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc6126d8-db99-4179-82e2-bafeadab951f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fc2943d-e06b-4b0d-aaf4-2a4d9c682f30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17ad3a35-a869-4ad9-a9f9-76dde38a8bd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3437908c-e08d-400e-ba7a-af2021a19606",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65d476ca-38e5-4858-8808-79042760a708"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "26426ed4-88ec-45b3-b85b-6906a17824fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0fb8edbc-d4e7-48fb-83de-74c37c64a57d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "14e1550b-8ac6-4516-92d9-1636f1b7bfc7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3dffe07-1c54-468e-bd40-d7724ad86aab"
                }
              }
            ]
          },
          {
            "id": "0cb5e17d-a270-4de4-99a2-e674bdebc304",
            "name": "Positive Testing",
            "item": [
              {
                "id": "26d703e9-f50b-4033-9a42-a4f40f001be4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bea158bb-f945-4869-9508-550e537c8a90",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4558bd-b330-44ba-a261-2f6c5b7ae17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2e70e37f-7c70-476b-9a9e-eb67cbe8f97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb42703e-aa75-4e27-8d80-e7d9315c6796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8e9648-be16-4048-839b-60230594cd0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04a7d7f4-ac25-40ae-965d-ae55179bf087",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa7a19ea-0ff2-4bd9-99b3-2d4ca79f80a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae91c389-2206-4d7c-a7b5-ab0733aa864f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce41a762-3d91-4809-a3cf-a95fddf8b14a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f8cba121-ec35-4ec4-b76d-2efe1e5743d7"
                    }
                  }
                ]
              },
              {
                "id": "253c9b89-f199-4456-bd65-3617f150ad50",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a34c0a9-4e6a-464c-ba9b-4b4e284ac575",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a6f3b7e-d7af-4d15-97c5-7fbe1b57e430"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff36a41f-ea45-4ea9-8e9d-fa87ea7bfc5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a1a45b0e-dcc4-4187-b01d-7864d19aeeb6"
                    }
                  }
                ]
              },
              {
                "id": "62ec28e9-3d5b-4a4f-9ba9-220122743f51",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fefd8939-9d55-4c4a-a462-8603457fed30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae340f43-a568-4643-a296-024f947c1a83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9362e2ce-0cf3-43b2-9037-901f4aeb26fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "794e8f76-6b3a-47e4-9aff-5d9fcc225689"
                    }
                  }
                ]
              },
              {
                "id": "4b65809f-b166-49ac-a6e1-89c1d88e54d6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b4a08dc-b0a2-48dc-a7ec-360cd2765850",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d91fdf2b-0818-437e-8e65-d82ad657579b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aeab5ce6-6fd0-4c34-8d7c-4d671d36fd4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a10189d0-703c-4f55-be0e-8c581c91d1a4"
                    }
                  }
                ]
              },
              {
                "id": "d0a3498d-cd8a-483c-be0a-d68e3ea27635",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08bc4f29-4209-4507-bc68-7d801e14d826",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "feef184b-6b7c-4072-9a63-a50b664135d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7db81c67-ad02-4d70-8725-fa3b26026fd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "eae97a92-846a-460b-9bc0-27e55439ec87"
                    }
                  }
                ]
              },
              {
                "id": "4d95ce21-4b93-44dc-8bab-0b66ed1db056",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1a0bfc8-c318-47f9-a055-9c67e05ca91a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f558b544-5877-4853-bcc9-4fb2270ea502"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0782137b-85ac-48f9-a395-06311d26cfb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e7910fce-5b2d-4e6f-b6bb-ac36322baedb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00f7a8a3-e0b5-473d-898a-0a9d0ed86e70",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8c659be-1239-4a75-a7f3-4f86b790e285"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "32a79075-9e93-486c-b8f9-7ccbc93e1d7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b26432e3-e504-41f2-a4c6-12f8a68cf687"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3becf9c8-4231-45af-a086-842a6db64d4a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "929d2ad0-1a6a-4960-be66-10c4ca3128be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7196efce-c8d0-4e51-b0b8-26a2b337a09a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f026ab4-86b4-437b-bfa6-a23e58e55e12"
            }
          }
        ]
      },
      {
        "id": "371edae6-c4a8-4569-9f92-f5563ef5b08b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "35d0d96f-4ef9-46ef-abde-76fbbd627242",
            "name": "Negative Testing",
            "item": [
              {
                "id": "587fc467-bbc7-4f64-9fab-7466fc5b56b3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a60332a-5b1c-4b61-b44e-ed72ec390e37",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841c0ac1-85c8-4c6b-8810-6768389adacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67d140a-1721-4294-ab9f-70f34930e76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04bcc56-b377-40cc-a204-66051bf3c793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "65fd419b-7084-4fbf-83d0-8e5f7668c873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a537c9c-4a46-42ad-b058-a3bfd931a6f5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159cc079-f896-4a41-99fb-f866ef884063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9951775-b6a6-47a2-842c-cf6b6eae56e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7458494d-7ba3-43bb-805d-3b7e8e3f9e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e17f88a6-fc99-4a24-99e2-c826c6dbceab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f5d8a8-6a73-4716-a564-fd061c2b178b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66212a1c-9370-43e0-8042-ade92d3d6cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc7e89c-bc73-4a50-9b89-2158e06e7a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5caa09-d70d-4714-96a4-37eaa3f30e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2abcec-992b-4596-94ce-bd673e67a06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f867e7d-6c9b-4d09-938a-0b9187937c76",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf06660e-62f4-44cd-8da9-32915417ab96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e013f8-5c0c-4c30-a592-7bd909a511b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4720a785-11dd-4b10-9ec3-291e0ec93c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45df68c7-e169-48b0-93f7-cb14cbca68ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271e0343-be23-432f-ab3b-58b1d13e7231",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603b58f9-9d73-4076-9ca1-799e385d1fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cebbb9-4a2d-43b7-97b1-2ca8974c3ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fe3009-d944-40fc-965c-d48e957f0694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e76b8a3-221e-4396-a3b6-3bf0c9472957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cc9ccf-058f-4ba7-9239-eac770a736b5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba50612-6ee9-40bb-8ef9-4267465a4c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2fe44f-7e07-42f4-baf7-d82df87f8713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a15195-9c62-4453-80f2-c36a8b210b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f94ddfd-fec0-412d-96cd-b716bde8a0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef02590d-57f2-468f-9196-9ca5e2e6c7da",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df17e9ab-db7e-486c-8731-1b067b4a57f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9862d99b-d3ba-4140-b4c1-82ebe8a316fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e14ef26-4b29-4dad-8ca4-a53ec0e6217b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "79581d14-055e-4fa7-baea-4d6e0f41e52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76f0fbe-cc78-4718-bd73-12ad9f0dfb6b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cefb0ac-888a-41cd-893e-993577ef1021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1860a7-6999-436c-8c99-b512a1740720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f08aea2-900e-4802-adb1-a04bcd2ea641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6db5c1c-99ae-41d5-b2dd-027b18c8da8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83222ff7-86ea-46a2-bd06-f4163db7043c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b076e5-96e4-4a1b-a586-39493649aada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b506a7-9fa1-43a5-90f0-33f677ed1d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65ffd78-fc44-483a-b759-5cd503ec754d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5be17c-e97e-4a7d-9fe8-1219bc6b43e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647678eb-edb0-4244-b398-771b817be4df",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341c3ff1-800d-4323-873a-c3c912442e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706b6e31-1f76-4f1e-b1c3-69d94a089813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a339dd9c-54e8-40fc-85b0-79e59f8c619e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8f0161-6711-430b-a977-854de76e116a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d945ad3-86b0-48cc-9d66-b01bcdc10fff",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc30b82c-82dc-41a1-9fcb-aff75243da79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3636e3de-b5ef-4585-858c-81c0560a8c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f28410b-1a14-47d5-a863-05479a2651f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc8fe82-8d65-475e-aac0-5bedf25fe25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f738e7-b1cc-4b44-8547-bac65fc8945b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7292a4a-2259-479c-b96f-800b39f36dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf0ce84-3998-4802-9916-947c7628bd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b37cd8-830c-4a2b-b67f-2d1a37924883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1790f6a1-ec1a-4023-a9f5-62109dbee841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a07a40-e437-40df-9ef8-e1b53ae37d4e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d38a377-9259-4453-a36e-0e5217db336e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45da3113-2ca7-4984-b047-6c9bb42c58f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a8c3d9-6435-4c88-8443-58d758897dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "98c3597c-e7ea-42fa-8415-c852912afdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d44cd4d-7411-46e8-8a63-eebd7086caaa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf54fbe-fc01-46f5-8257-f6bc39dd75b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675a338c-1ce5-4689-89b7-aaf67d85928e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f694b9f-bfd5-4d02-9f15-52e082a5f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e2f99a-4c0d-46ca-b9f8-8b64269e8342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f253a456-c589-4f8c-9730-166db8ac0563",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeddf4d5-3778-4648-9263-e4272242b205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0f1971-e612-48c5-9157-a83c4dc86a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13c52b4-1cc2-41f2-ab70-f7981475a754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb2f4ed-93b1-46e9-8def-04d6b768106f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558efc55-b6bd-4b3b-9b0f-6c92c486eac0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9203a8-23f1-4919-93cb-a67a29bc646b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6528f495-7d18-4c64-832b-b636de04c3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea064a9c-1ea5-4461-990b-b35e0b9dce10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0171750-1a24-40a0-aede-e4fe31ac8872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1001698-9f84-407d-8ce6-433d4664cd4c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df8b087-6d61-4ee5-9f47-ec222ccf2d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a351894-311b-45d5-bfd8-e7d8067ed1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512b97c5-e48f-4171-b951-cf249dde6614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8144f2-3170-4c5c-8afa-589d7f29d732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e93d695-ff27-471c-908d-4a7d9f23a339",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfc6a60-d02b-4c49-9fce-a82a76183239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3dcd3f-7f99-4142-a8f2-04541b8cb4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30597d14-cfbe-417e-8740-73265b95dff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af19782f-25c2-44f3-974b-63f4540272e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb0de5b-79ab-47a9-b9ff-dc4fa8715179",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab330213-a52f-48e7-ac8e-9270d096fd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8e5934-624a-4022-9105-5c282319ede1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df84a556-efd6-47cc-a5c8-17c228e7c25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00872095-bfb8-442b-96d7-c090841a1c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da124f86-52e6-4643-bbc1-06e33c5c9aaa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd43862-f8ac-4c1d-8db8-f9b294d12798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8e17d8-deb8-44d4-96df-9420a961e7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d8a276-5de3-4d3f-a436-d76c14e376f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab74099-ab0e-42ce-aa5f-459056a8c939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d989e5a-1e37-447c-a28d-34f4dc2e2db8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d9e712-9bdd-40c7-8f18-e181afbef0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85710d27-d9ac-4224-9e91-85a0bd34125c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51899d5b-19a3-4434-a4a0-357b8fad2294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d24394f-4d5e-47fc-b5e8-f86845364711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8041c9-35d6-4b81-a582-92bc5db08718",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e634488c-f6f9-4e17-8b23-10fa3058ca09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5337b8b-37b9-4cfe-ae57-f4ac4b9d0a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b887ca-9791-4da1-a0ff-c0545fc031be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ead21b1-581f-4e0e-8574-a7aa4e3729ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1344f21f-cfc1-47b6-a266-95922d66cd73",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c11196-0a7f-41e3-aac7-459b7e793805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc6f4bd-4788-4f73-8758-1b7fd2b261c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4bec0d-6f07-4464-a496-ef3bc2548399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d785c121-a1cb-4c0f-bdfb-a3bc6e7b082e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e45f33-84d1-4f9c-80b9-6bc298e0e648",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c99783a-4687-4df0-adf7-80e65f049887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab8f6a9-5701-4a06-bffe-a7df5e31f65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500f3c07-c067-40c9-8660-aed82e554f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aed6f91-2871-4335-95b0-3af8b5e4dce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e77708b-735d-4d7d-aa6f-c0e3f103b922",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab68781-0f9d-47c6-9de7-51b773edd1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08f2eba-82dd-4794-8f91-3935f2111da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6e6b85-f259-463f-8dda-804df6dfb0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "438aedfd-5874-4b7f-97b3-9d8e6ee5fc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01adc9be-2760-44c3-9853-6cb7c48c0c91",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8a1d27-3d06-4f69-9d5f-9a2040801cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7194534-04d7-4baf-ab10-cd4579d5edb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecd3956-4e62-4dce-8fb9-b3843625e3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2888abb-835d-484c-8906-948b6076ce31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9c34fa-f9ea-47b9-829a-03e6ae75eaa8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef6ae44-721f-4a26-91d1-025d4fca3767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7021a134-c694-4b81-a41c-aed24c6e3c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9175daa-d2f6-41b3-bee7-84c33184c674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fce53921-44ac-405f-a2b8-9ff725105120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb41edb-a46f-4a38-a1f4-fdf9f9c7832c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c11cdd-e81b-49b1-ae84-59585be234ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612100db-7c47-42c6-891b-6318539788a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f58ac9-952e-44c7-b078-cb77338c5bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d595b143-0781-4d9b-afe6-05a5682ad97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d09d25-6c1c-404a-98e0-0ca2fb901b1c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4229e3-9ccd-492e-a93e-d04531521e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38806e84-f1a7-4ed3-8503-bb10093577ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14df4e7f-9dfa-4149-bb03-959a5991b883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6b8484-7cc8-41ac-afd6-eb46f20664dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b519489-836c-47ca-97c7-21d055e3db7c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5514c8-49eb-4e86-8862-eba6468f2377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50df72ac-a7ea-4402-ac60-09d1306182fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf01ba5-0898-44fa-81ec-153a3aff7162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75af0e58-8cd2-4fdd-82b6-84e8f11938e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d25910-eadd-4ef6-bac7-182f3dbf59f8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ede10d0-8781-4b9f-8246-038c3216e8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c8f400-39db-4d7b-a479-22a6070af399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4617eb-f199-4bab-abe5-2b2224bf2fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb927c7-cfce-4356-8aac-1ca735ebf0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ccc55f-493a-477b-9063-5ec6fbe746db",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf92cce-6656-4144-a5de-5e1757f2ea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd0fec9-248c-42fd-9a67-f3f59e83c1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2b8501-2a59-4154-8618-3c640a0e26fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b08db4-f2af-4f04-b81c-47b2f56d03bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25ef6225-c31b-4854-8665-2e15ab6833f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7965168-30d5-4c95-ad03-bfa7bf2ff41d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d0cf21-1b5e-4e6a-9a72-6371d036a573",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb430c1-af53-4f2e-9ce0-37500e169f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b9e796-0fee-4011-af3a-a5619244264f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8824de96-e270-4c2c-8d74-f50e67cefb28"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa905645-2a82-4431-921c-8fe4290af95e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63a848a2-5ca3-416c-9b8d-bcefc2289a69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "529b67dc-e8a7-4ddc-95a3-392eb47f1c40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "418bde5d-26eb-46d5-99f4-1da8e7ab9b77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9f4fb06-7250-4cc2-80df-c2244fca8683",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6416d846-34ff-4abf-acf3-fd57794d708e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5b73a78-1516-4fad-ae91-e72a510e298c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36df733b-b65f-46d7-aeb9-a562de27fc07"
            }
          }
        ]
      },
      {
        "id": "3acfca64-01a4-483a-8bf6-8af0c9958730",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0a5dfd7d-e6df-4d9a-88ac-dd2ee8b2589d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "733a5163-5287-415e-945d-5f84f0ce6a7e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6711592b-2bf1-4ac9-8369-cedc8fda77af",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85ec4d3-e79c-4142-bf5a-05245d7b1666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61375ada-3fd0-470e-a71e-2f6d889be626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8706b3-c491-47ad-ab1c-81f729d73a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce5d68c-7299-4256-83c2-11ac4dac5dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d026f6b-dde0-4e13-a945-c4204347a040",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8efe79d-fc84-4000-b3e1-e43e5bed901c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd9c436-78b8-4d21-9636-8fd614ff3579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b58c1b1-ce66-4ddf-9dd6-c43ed68a21d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef42531-5a13-4c7c-ad5a-8446f216b734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77ed71c-d48a-4a40-a1fb-fbd94be7b0b4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832deb46-1682-4083-a44e-ba46edc4c9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d009ae-4b5c-49d9-98d0-369ea2ee9be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff510a6f-655e-4aa2-a795-5fb2f48ddd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cda8cfd8-08ff-4235-a532-c771bfa894a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7ee822-8d20-4009-bb91-89ad1c266134",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d13646-4bb4-482e-af40-b61b214d5775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297b9f96-4f7c-4a9a-b395-6dd931603213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70143d6b-2170-4a07-bf0d-1d6cc43b0ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8c1e7e-8015-4bca-ab04-c7b3aa2c7139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3c02ad-5abc-4400-867f-1527336a95b1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d7b195-485a-4909-aca7-abb4c9947a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be03d4eb-a568-401b-937a-3c3d49f06d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19a301f-e27e-4adc-ac96-bc8b2846d177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e23583d6-7130-4654-bbf4-47a964d72665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b0920a-7d6c-48f2-a7d8-657f21f82020",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e1e59c-554e-4a27-8846-50bf97b86905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c282d1c2-ac8d-409e-8a05-6cd4fedd1356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb65aeb-298a-4b08-b3da-684cc64d9809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35e583ad-3433-4582-9624-127946cca49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea7a9ba-bba7-4879-8164-98e30803c474",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05531cc3-61ab-4858-95cc-5cd95206be80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f625b3-f705-4732-a0c1-bd99a78f08e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1f817b-1b71-4255-ae24-5221d8de427c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "75c39e25-fbab-401b-b33d-27f854f7d8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6293c572-4c25-4d38-82e0-8b0a1e9c1211",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494ab317-6c36-4bd3-b401-e05a5f64998f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8002dfc-dfbd-407a-9d02-4f867cf36dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b24f244-792c-49f6-9602-17caf325d34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e90cb0b-3311-492b-b03b-a9811c355282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53fc6d1-38cc-4c7c-a981-e6415c89cb00",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefb6349-f471-46ee-b53e-fb518c4c5615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f714532-7561-4521-9f18-5bba06f02fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b064596-be45-40f6-b490-3260558fe9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae252dc-d656-4a4f-bf2f-26c24852ab0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2879ae4-e9a5-4de6-b105-417dddd5be71",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebacdad0-f0f4-4e1f-853b-d4bebed1c2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f340fb27-8959-4771-80e3-93196cddd118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7acc3d1-b343-4804-869a-d595f03ad94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b653c7b0-3c2c-4d7a-a3b6-7bc0fc523176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958afb1b-1009-4af1-a7d5-dfb756b99453",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574b8ef2-19b5-404d-95d6-0d4a23c86002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3951ed-3e70-471b-8d51-964f3ad2bfb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31c3f2d-743c-45f0-893f-7f019f4b4633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "537ae5ea-9dc1-4242-9cd1-6e047c9efb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6820f74a-aa34-43b0-8492-621ecf990372",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2f9c41-8b52-4149-9788-74e580a94353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2951662-da78-42b2-b320-2184708ba9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c509e2d-9092-4ac4-b7cf-5b930bae5481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "701d1ce9-4d38-4c74-a1b3-682a6e8566b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef8bfb4-edeb-4b7f-b780-77c0bcc47fc2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9504a4b4-b126-4a17-8545-50de412306a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25732c10-b0b9-4e8c-9abe-871a4a062a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b052261e-b76d-4fbe-b054-2b8741d196aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f194d9e-c14c-41cf-be19-5780527cd293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ed90cb-c108-49ea-975b-31c1155fd06d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6370fcae-8882-4092-bdfa-3d57625b86fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b144097-cd1a-4324-a416-d52157bccb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a364d216-1a8d-41e6-94ad-e197e84a96a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e4cdb8-dea5-43c3-a77c-53eaf85f7dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde0ddd8-e3e9-4da0-b108-d023bf6736a4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af042d71-e209-4cee-9f9c-95e3f8c70b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf36cd9e-3d34-40d6-90d8-a13c6ebd7ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e936f9-1ced-468b-99ba-fb82bc0f15da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "03a87690-7c16-4c82-80ee-48d02b91066b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56d43a6-4b05-4f80-86ba-779dcdd1ef20",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6880ee-aa1f-45c0-9529-cfd700b8aa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8fbe11-bff8-48a0-9656-99db5636d322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b89f4b6-3740-44c4-a5a9-45aeb21153ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0777e3-9a08-4358-a768-566ee0e6b894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0073de59-79e5-4b8c-bd84-584dd91c3627",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc608da-3bb4-491e-8fad-ea67588103c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78768a93-b7af-4a02-b334-957b6a86d24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d14c75-45f5-4b2a-ab5a-2f6c6f988182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "290e2349-d4f3-4043-a753-b794f0ed6634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a420434-bbff-4d0d-b75a-433ea684c79d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467b5531-e16f-4125-ba5f-5020fc45f0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82484342-c199-478f-bb68-92b0654add3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b64d697-491a-412c-9989-dbbf83b13399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e617a67-8bb1-4e69-9e21-f305d585baa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73cc640-fad5-41cc-87e5-faae9e7ca156",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a473dd1d-dfaf-49b0-b20e-f6943bef69f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909a20a8-6e38-49b8-abcc-d3374b7387de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9d5398-e2fb-40ad-8bb4-33f7d2b48280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55008329-1549-4242-8ff4-601746659e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92630b6d-7db5-4a0e-8c23-54346e23773d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6a4b6f-e573-4ea9-b8a6-0cfc7ff6bd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5036b79-4790-4015-b40d-b3da675f708f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23490ce0-9833-422c-b8ff-079fcf017bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38569be9-f621-4685-b48f-9b9f06a4857a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461d2eff-2e71-4832-9297-2df637a6ffa5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3226d2c2-3def-4cad-a3a2-eb7eda181758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d3d8d3-ba42-4a16-b75b-3ee20a4ce36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc90186-53e1-49ac-b449-d45b51c5a099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07c8e2c0-13ab-43ce-bff2-14307f1995c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81843a98-f4ef-433d-b8d6-6aba924b2953",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73462f80-463d-49db-b7fe-3e76bce026ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa94870-cd0a-4461-9e32-89925016490d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f089271-0fc2-4243-af28-4a3a9f7eb4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3d258c-b564-4583-9294-b6dcb3d82952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea161dc-64e7-4c8d-ad51-245a795befaa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61177152-af06-4dd2-a5fd-fe32a34a6b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5e3ca3-7430-4f36-bca8-33aa037946a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92977905-98cf-456e-afa1-aede4b6340d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bccc3d4a-96e2-4abf-b4a5-45f1772e630b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9fbd22-a774-4ae7-a4fe-f2f00f91b282",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b76c9e8-5bee-4732-855a-a2ab86105667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be259dab-dd11-4a95-9471-e8d3d29a7cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade5aafa-ec9a-410b-a061-64351ce88f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2acf51-1ee5-47ef-b290-81af95259e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea1a1f9-e3dd-4dcf-b002-1328dbffc8dd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb799166-1d30-4eed-b696-dc5c21bda846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bf4be9-9165-4ba7-be1a-969738a06b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146847b7-48fd-429e-85f1-341e65d52bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f17758a-dd9a-4d08-a539-c004d236f6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3d7287-ec41-4114-8bf2-f291731390e3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad11226-c6db-4833-8cff-99b32e2d5977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51383e6-0b27-4fdc-80de-aa339fb6dea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8fb327-60cd-4e52-b94e-2582e991b03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5055fe18-2a56-42d7-9699-97a461567f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b712dba-19b5-4012-a3e7-c2a3984882fb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb8b8ab-a5c6-46e5-8418-d727234b01b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5dcadad-4d4d-4582-8a60-4e553940821b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e6cf29-b356-40c9-9c25-a0cd9a825852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07f7ff71-715a-40a3-97b4-d4b0f3fed879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08eca5fc-ac37-4ad6-8d48-b872f0d7c01d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03d6e55-989e-4644-bab2-d09747dbbff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8675af24-0f80-41d6-a837-273060894c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462e6b45-6cba-4530-afd3-9ff7393f7f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b122d7-fd6a-4157-b623-8dce67745b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918608bf-0ddc-40aa-b0c5-3a1159540590",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eceb9a07-5e03-4af5-882f-7ec7758bdcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b6ae2e-3c1b-44a9-9895-8470fb056369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6eb3c93-aa1d-4dad-9db3-dfd2b76b4d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea885f17-16d2-49cd-ace1-5447cb052ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72ef9aa-efbd-4018-a740-fc4ca1d969f9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3d5d4c-22d6-4590-8ab1-0b8e9fa871bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec600b0-9137-4b73-8e5e-b57bbc460cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84d1942-7337-4a27-9b66-999e85415510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cea9b6ac-d38b-4a1d-93a3-be08f21ad306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901c7760-22a8-42a6-b1cf-ad00b0665ba1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427f4dc2-18ac-4633-8a0f-f5dd6cdea8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc340942-6374-43a6-95c1-13c870d1e920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab8a5bc-0952-4e38-a966-4d9dcd04021f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3852fd-2aa0-4f9f-8898-253f6166d399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b107f60-53e2-4955-8195-a7c429749dee",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc053e9-8869-40e3-a027-72099e5179a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923d6cdb-8c5b-4769-a40b-d2b260b2554e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bad686-3f85-4033-968d-6bb7a1e6310c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad8b94e-6f95-46d1-a73a-efa26d37b4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a4fa42-db81-4c7e-aeca-88362d5f7676",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fe76c8-04bb-4300-9d50-26bdcafd0276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e03b76-9909-43e3-ab42-b96418409b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c380f2ad-ea18-440d-89cc-2dcb46550096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53541eab-6ef6-4ae5-a085-c81d7d9cf49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5102d25d-734a-4abe-a453-41c878aecf27",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0e7428-7473-4bd3-81bc-6a789564de80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f978ce24-e2dd-4ac3-a287-41ffc8fb8cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88523997-6e38-4e19-8cdf-b98b71ac373f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac26336f-cf0e-4b19-962a-5f9d1738e2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dd09a5-e463-42fa-9165-359b67fb6373",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea248f40-db3d-4d10-af53-b269803e2af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836b75b1-01f9-4982-8635-1eccf0b02172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d38902-7dbb-47aa-9dc9-7e1a9e2f8130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2996ae-ba60-4fc0-aea0-fbebcde049a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790274c1-e3aa-4316-b2a7-2965f9afb421",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafdcc15-56f3-4ccf-b3b5-b4b3f7c3b9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b0f689-9ba4-43d4-a55b-730ae5715eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b7cfff-d1fd-4ed9-8b37-ba8250696c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4979aa1-2ef5-46f4-b9eb-e07267c106f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d36dd66-8ea6-4b49-b5e1-348d78925dc6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18866c0f-b751-42fc-a3c6-8344b096ed62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb147dc9-de5d-4dcf-9912-37152eb80d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc204c0c-5634-4250-b73e-fb71547abb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24aa1d84-73f2-4067-aa42-ff23a5482d4c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f9193499-8927-49a3-97bd-5e247057e77a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6b90d46-4baa-4ca2-a6c3-915898058e8d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53220131-bdf4-49a5-91c4-4845e212326b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8bdde108-16a5-4730-979c-9887022afe23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cb6a63-4757-4a1c-b068-d0222ab21cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d7fd7af-bc63-45c5-bec2-4edb8a4fbb6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d0425c8-48bf-40ad-b64e-def252b5838e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f419d24-b3c3-463f-8b00-cdb207ce38a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3147c76b-b7a1-4571-a5c4-84d1aea5e81c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f4d6b3e-ffdb-4040-be6a-975e6d0dfd3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afe6fecb-3fd6-48a9-971e-4f8340084512",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0cc06b0a-f0e8-4c79-863a-72698c878b5b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f22670e8-f6fd-464e-9359-fab814502226",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7266c69-5b80-42b2-bd5a-693a7870a426"
            }
          }
        ]
      },
      {
        "id": "5f07ec80-2142-4b75-9de6-a1a4ea32642f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "509d37cb-ab79-4b0d-8862-3eda3e2c62fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ad7f7e7-8255-413f-8976-76d26f6bb867",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ee66dd1-ffd2-4399-bec4-163d70f361a4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191ab575-716b-4cd9-946a-a1e198296d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d88e03a-5c9c-4179-84bc-f280fdc6c2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaa927e-2b28-4619-b24b-db269c6023f6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5ab27e-dbad-48ed-981e-b0781ed7c247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd37ede0-6e3f-4fe7-934e-50d4e5044a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed42a8b-2939-4e84-92c8-58ffc6d5cd6a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185ace02-e632-4442-97c3-452e707312ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa41110-3e27-4951-8ce3-322e84487615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d4427d-5f2a-4e5c-82b8-0610b6756df9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dda294e-ce7c-4c98-b6e3-5892f1f14716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16178d30-4a24-411b-bb1f-39b289a716a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39011aba-e16d-47a5-902d-2f7d27e57f4f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aaecd7e-78be-42a3-ac20-5e0f59b95172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3e5edd-07cc-4e19-948f-e53c84c88021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb6389f-3f8e-4d0f-a53d-ea22817ce998",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34095c1f-a07e-4bd8-afcc-211e877d9232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0d3059-f462-4171-8283-2c99b75a75cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd42d4ee-f2e9-4d88-ae4a-e2084e1b733b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd682cd9-3f37-481e-aaa9-53f07ff23a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea235da-6dcf-4734-976c-fb1ad310ef30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e7d618-cac3-40a3-bbf3-8107fc0ae66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da696f0-067a-495a-a35a-4b35ed81c5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e661058-af4f-4013-8ad2-ddef28b927f2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6baceb9f-fc85-4cb4-8072-0463e10518c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8608f717-3f96-4197-826b-157f05865e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992b9924-3d2b-4f59-912b-0fad6826d6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "460db939-3731-4aca-976c-594960195cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec813730-8d06-439a-9cd2-c3cc54febdea",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683ec6de-b7c4-4caa-9d08-89c7baad3d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d90d8f75-a4d3-425c-879d-f3207fc5a0bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5df128-e6ae-42f0-9403-7f19e7f05287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7afa603-7b38-48f1-a0a4-fb1c667ddded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95318f9-5385-4170-a1aa-509c90c1e326",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440b9ad2-6a28-459e-8eac-cf9f058b7ecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "432dc126-6633-4d2d-9fc1-b4b48a1e4555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e026ea0-0d2d-47e6-91a8-5ab71457b83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e95910-b859-4373-8d17-3dd69ea3d219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9499d0c4-1f4f-4b00-8f3b-473e496f0885",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ef9c61-d179-4348-be80-70a8110a62f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad01547-0030-4a32-8c0a-f3ef7b478fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465bf217-de33-46f9-b30a-c6c79ca4be17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0cf1aa-35a1-48b4-b6e4-acca96ac90e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ccc57d-cd55-4302-96f9-4cb64dbe7af4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3846cd2-3043-496f-b01d-9517fef35956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478dda64-25bd-4f71-ac75-21136bec4282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f82643-dc00-4865-bcdb-3f4fba54e2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb867ed-9e98-47fc-88a8-a0d1e4dbf6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71dec3ea-1d0d-45b2-92d4-a042778c41dd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6bcb21-63d1-45fe-9082-eed88e8833c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30b96686-36bd-4393-9000-b6e83caaf35b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab02d89-717f-4b7c-b79b-1ccf7d41533e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9ef7bc-27ea-4f20-a0ee-ca501683b49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbfdb09-6d7c-4a36-82f0-f835033adeeb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f9882e-0dba-41aa-9091-2aba61a6b049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e187026e-3534-448c-b154-95110dd3130a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b7ffa6-2fc0-4847-a051-32cfca145343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7119cb7-cbd0-4997-8b54-42b22f079bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8cd99a-a5d8-4701-9609-7aa8c8c5f435",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2810071-2267-493e-9fda-5e2cee6662db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24d80f82-219d-47d8-a97a-0de54278b573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c707f61-dcd5-40dc-bf73-cd0a05502988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a3c0f7-081e-4d28-b937-f09433d80bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bb0b42-81a0-4596-bef0-3f3b095edf34",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccbf2df-0404-4eae-add6-0672b109828c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "233a7e71-b606-44e9-8139-f471c3128a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d9570b-27d6-41c6-afb9-986c919e599b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bb6cb4-ccf4-47bf-a863-2c95bfa92635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc44700f-3dcc-44a3-8ead-ebf48fb54f1d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4a9ee8-63f7-4163-b6fe-aa5a709949b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6bd1b4-f9a1-46b6-8734-4a9fb452501b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1851c8-fa0d-44d6-b8a3-3171b56c8088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34bbfc1e-ba70-4e88-8db8-3570e3016d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6a3b07-93ac-4a01-854c-04779b72aeab",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a04d988-ca36-4b7a-8add-db9d4401fea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df85e430-78d5-46d0-91da-570a40f0a371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c272ac-afae-400a-957c-e2134ef1c46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be761f6-41af-4824-ae41-8e0bd48f6648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf66f55-6b00-447a-b516-96008bb32b20",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bcd750-f5fa-4714-8d7f-04c7d0f88618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25ff08f-ba1a-4b52-b196-8a776e8f4daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d11983a-a043-4f42-969d-162b154b0bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b99f0b7-7e5e-4799-83fa-4ffb9d893f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a535900-9201-4852-8408-8e99391cb132",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9286e8e2-d337-4db0-9aa1-f7e6bc34a523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc74750-adb9-4635-896c-c660a3638f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6820f34-ed41-46af-8c50-874b8b0bf2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29d93b0-9712-46f0-b8ac-d8c0cb8acb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd5ee6b-2941-4595-9ac4-656c99355a34",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bd34ae-cf95-4063-a4e4-dbac79dbb7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3922e5-993f-45bf-b236-c11ba9cb5991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f87ad63-cf77-428b-b201-cc0cf9433ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50573a6c-1a70-4fd3-9c50-5c6c17e8bbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f546c0e3-3fd0-4b2d-a252-6ef7bde948ad",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b4d14e-88af-457f-be88-3f0ac0902dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1ba53a-1f72-407c-b368-27e727bb2a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1179c5-399d-4099-a7ea-4c9b9d4ad939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23adda4-c4fa-4759-9f9a-a6997848d3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e196a4a-cf6c-46e0-8365-765f485e21cd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a09cfe3-a4f5-43eb-9f04-02b7b87bdaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1d27e7-47d5-47b3-b657-9be2202942d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf6d36d-227f-417d-b199-ce586a76bde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00f313f-52df-48a7-97dc-2c3b1388871f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fee73c7-6dbb-4c58-8f81-d9b77798cb94",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a5e46a-16dc-4a7c-aee0-04ddd130b161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0cfd7f3-5bdd-4833-b7db-85c4f95bcfff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb223b0-81a7-491c-a0f4-77a31276c69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722296ea-3582-4042-ac25-0b4ba98af121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbbc5db-08ab-41eb-8602-7049a7c22cdd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7b6a4c-ef3c-4bcb-a4e9-1f882eb6f51e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990a4f6b-9bae-401d-a230-9cff211c5d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19094707-3e34-4c1c-a010-07b8373e7c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d394c45e-5b2c-4989-9941-6a69625c33af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3c3b9e-d86a-4b6e-b0d1-bb5e96dd55f4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20b87f5-e881-47ab-80e6-b7d02053c2bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d4d08f-d633-4d54-8685-4072190f852f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1270c8c-e7fa-4c26-8497-765815dc2337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8815ee8-8cc8-4beb-92df-e79e745dfe50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23de2287-b651-49ef-b85e-2ccd4732e5f4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3234a2-4ed3-4827-9e75-c0f012f402d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bde26e7-6453-4c2c-87a7-d61bb53edc7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1036ad08-73c6-44b7-9021-55a6af80f40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22e732d-650c-4548-8c6d-aa70f6d8812a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de6fe96-af56-4fe9-aaf1-9682c92792c8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dace7f-3c2b-4ff4-ad6f-befb9d234bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed31ac07-c2db-4690-a1ad-3e03dcab784a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57a0f97-49ca-431c-b893-1313f5645964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a746eb4-5a86-445c-a4d3-dc96d06b116d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911e4516-7477-4491-bed3-2d1b611e98a8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6dd400-ad94-4a0b-aa8a-b9aaf629e27b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5dc11c0-9bf6-4f09-b766-3ad7cc3a9bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10aa748-503d-41a1-a9aa-dfc1ceff7d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdeea528-dbc9-4860-92d2-9308a35e20db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae687399-657b-4078-b77a-a03b0ce70198",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb9e630-d23f-4f17-9197-acbdedc5bcf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f6200ca-d617-4897-8fd4-8b654e5e973d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59b841b-ca60-47ec-81f0-6fefeecbad87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0617180f-3a0e-407a-a0d4-162ce2368ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664dbd72-0eb5-4c67-b811-0838ce1dc5d6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec49af10-2d60-46fc-8ddb-3c05520e52f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad1b27dc-4321-4504-9bb5-9cb4932455b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c0e4a4-43b0-4558-93cb-24feecf36ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1e1d54-2e23-44db-9d4b-3d28e465888d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0690458c-d64a-4533-bc3a-14054fa589f0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1124761f-e17f-4bc5-b6a0-716565fad116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e4d8052-e8be-49dd-bc6f-28633a21f1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda12281-2150-4918-9cee-e51a1756edf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df96cb7c-472f-416f-8c84-bccf5c71cf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85cd97c-6dde-4be1-b59d-c47afe7f45d9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392e1280-cb5f-4a63-9b2a-cee44094c017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a23f4e1a-5c64-42cc-b5d2-3b681e9e95c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "065fee92-4657-4f25-9fce-c62454acc4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88b9569-a48b-4188-a0ce-a3abbd85ff80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b030582-a8be-4b84-a3a3-d7d07d9068ec",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d95cbe7-5ae8-4492-9c1a-578513b5d79e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a8830ea-5b41-43c2-bd17-1d7d90f36c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a96ba1c-3b12-4fd1-84fa-0e5a5ed06d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5f50f0-3374-406c-b148-c7bdee017eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4245f6-ec5c-4524-ab3d-fa55c7ce5b74",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8631c956-9f97-40e9-aea0-d210e1c73b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56950dab-94fa-46f4-bc93-52b3b81317e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6349a191-b21e-453c-aecb-a0bf56b3783c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1984c555-afc4-42f5-96a2-5dfb0ec3868f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5ec040-2ff0-4e1c-9e02-5295ca43ce51",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8236e4ce-2231-4fb6-8a92-4ce6db633c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06210bab-8ba3-4fab-b2b4-8c90af8cf7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92dce02-8d87-4f9d-8d5f-41b34870c07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a90456-9cf9-4a38-bd47-f07a3d8d0049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b32754f-fcb9-4070-b477-86d64c284a6e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa2a017-9e98-4d95-aca6-1f7e6e090195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593d4f40-4c8f-4d5b-a4dc-21e042e62694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2127c4a1-1a72-41fb-8ee3-24288cdb4dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f563b879-688e-4156-956a-df2afad12072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3cf30a-18ed-42d0-a095-ee367010cff1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38df76b2-c709-4c9e-ad3c-ad813574505a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ba110d-8850-45a4-bfe2-06e7ec71ea8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0bc06e-6313-4683-b341-a9e54f5ca1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32a05b4-e02c-42b8-b570-5a595b6e1025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8f86e3-97d5-4259-b769-24c594b0ea35",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c127fc7-3751-4d20-9c14-8903ea2089f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f00b9e-b0d6-49de-b908-1a22201786b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a353bb4-6881-45d5-9b4e-9bf0a9a31533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb147d6-9574-4ff6-bf78-b123a348abda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732f1104-3b61-4634-9eec-17093746d7a1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af05d50-604d-4d75-be10-c94396b2f471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3ed818-7ade-4902-9a12-bf322df8fee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec343a92-c174-427f-8fda-ae1e591d0d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e657d3d5-dfd6-4fc6-b750-0b842f48743a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d374470a-5e52-418c-a678-fba56ce0488f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00491ba9-c016-47bb-9d07-1e679a8989a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b914c7e-2ebb-4dd7-a69a-ebe74c522c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "665b4af6-99e5-43f8-b48a-1e54cb2cfa26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb537b5-e754-462a-94c5-fb7ad6a8ac98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475adb68-d0b3-4765-a5a0-f5eeb3c742cf",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ec214c-7741-404e-81f5-8d58f52a5bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c50d354-9596-45ff-9d36-272decdcf680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b1ca1c-3cfd-4411-a455-68f4a1c8b8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f272a7-b6cb-4cbe-8ed0-09c4b24ab9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e804b9-084c-42da-9592-e86fc0caca26",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e5c599-bf72-4dc9-9d20-6467892a2fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e59688-3f7e-4ae0-b99b-849c3d79c9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c52b791-f1e7-4576-9dc9-4a3e246fc1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4660b895-0ce1-49b7-807d-59238064e5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d6a0ed-29c4-4df0-9b3a-423064c1766e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c2d00b-495c-4e4a-8753-898d2e1dfab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425ca29c-a46a-4235-886e-33d5ef1201c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddbe9f0-9e73-4f68-b27b-318d993890a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d19284-4184-4f5f-9c75-575efc5476aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f186dd2f-d1c8-4bb5-ac29-e51b77c3d92c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aab3c6-9807-4dc3-9268-c66b5b8e72d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073af910-4c9b-440e-8eb6-6e7351b61367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8abd08-ec78-4001-bd91-4f206b386b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e114147-e7a1-4020-9a59-e1c7d6dc6c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f8f26a-fb21-4599-baaa-d31108747a00",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89022b26-9fcb-4258-8791-8a8875f4fe0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3719eb-6db2-49da-91c1-139a13671a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88baed0-8b41-45c5-a785-44e11791c9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16312faf-668d-41f2-8391-48fdfbeabc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d51afa7-5ae0-4530-8f13-706a6ad09ffc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26886efc-76c2-4e5a-abdb-02b0e1e1f015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62bac040-ca6d-44a8-81cc-99f5dabb3c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076e0a19-93af-4be3-9bbe-8957525f7302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9955cad-de02-49d7-9258-c379b202b7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688815cd-c5e0-4232-a1d9-893fdd7f76dd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531b7cb6-6487-4401-94db-6c3ffff78da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018225d7-85ae-4e99-a453-f8c2493607d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e24e35-8a52-4cd9-8fac-cb6a0afbc921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928860d1-c7bf-4a43-9a9f-ac3ef1a3cc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191de3e7-407d-42f1-8129-b078df25bb90",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf0bde2-b318-4919-afae-0ca81c0daddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ad25aa-96dd-417c-ad40-934cff7f45f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88574446-7a0c-4b8d-8e0d-ab29d07b4a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ac4593-a1c4-4590-a671-e731f2c469af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e993e1a-e584-411e-97dd-a49efe1a69d4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3756f895-704f-4e98-8a51-9d3680f946bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5abb90-9140-44cb-a482-d0ffce16e5ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfd67eb-2cca-4400-825e-1249dcb3209f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444f7c76-ad47-4b87-b5c4-c380d0721913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a13a743-8848-4837-ba41-52c00b9a08e3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70519ca7-d991-41bf-a025-5356c4663732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee1e78c-e14d-4dda-adbc-9856a1b86c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd44ab0-a46d-4696-953c-c2fc953a2408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b9c68a-6926-41cf-a770-aabdb15e84d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc8e6f1-51fd-40bb-82b9-1267dd88a031",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b96bbd-e433-4518-90ce-85dac5b15e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3d3b6b-b90e-4a1a-be40-fa0c13235056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e98849-e829-4051-9dce-b6912d352e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c6de25-7ebc-43e1-95ad-ec9c71970c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475e4c14-7261-448a-b5a9-774e22b3c8ce",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d6d204-58f5-4127-b073-3d22076385ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87631098-a83d-439a-8d7f-49e4fb7732e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6608488-3e0b-4a12-8f1a-cd6e39acdd56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f859ccc-dd57-439a-9fb5-5b21fb322df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec9a271-6f45-4f2a-bf45-61f7a529c83d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a805421a-66ab-4dd2-a0a2-d476008b3043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bad849-5d3c-4077-a776-218047586e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe7e997-b717-4c7b-b14a-0cc86660c0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc003cd-33c5-4a00-9981-18bf5ef04627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31659042-f338-4dba-9846-2101a9868ebe",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3491fa-5c3c-4a40-8673-747adad375aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f7ffbe-7ab8-4c42-ac40-3ab307397a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c71e059-7cb9-4de8-8ff3-4a1c5460c92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1ca7a2-9fe7-4d3f-a254-0a185afaae31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0a66ec-a6dd-4683-964c-745024c32345",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368d2c4e-62f8-40d8-ba0c-ba4237a91feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ca3ead-0a4f-48fe-b68a-511dbe578573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21638e68-77a8-4359-8433-8c92c4e504e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7841d1b1-d5b7-4957-9b46-8ceb85d78649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00660036-6a9e-433b-b887-3cc5b27570a1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055e3db5-b49a-438c-96e6-ac100418664c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4595f0c0-68ec-4f2e-9dbc-51c922d1090d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd2874b-03a6-4d57-96f1-4deefa988d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa0c52f-a799-41d2-b55e-c10fe1aa0dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc6c1f7-c63a-4735-9a34-f3c614e8e103",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e130aa7a-3b4d-4f28-9979-bcff2c9f15c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b5c761-a34d-4360-b26d-e32366a404c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552f75a0-d055-4b57-a6c6-38ab0481d2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb414ba-ad72-4245-ab1e-c3d6a19e16e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f130d027-18a3-4450-9ae3-9d8099900b9d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48125269-d31d-4f53-bcca-2dff451f138a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da7172e-729a-43e5-8491-c5d137f3d984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f32674b-ec83-4129-9ef5-e24dd430cd50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c515e694-1865-45d8-9f7b-9a88a7da8341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972ca72f-760e-4f9d-b5e6-833a2c4664c9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a755e7-a0f3-4351-87f0-7bab6849e518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd830e5-f737-4ac0-809e-05494f62c5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f5f563-b284-4031-aba1-ba07651a7264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6ae4dd-6d84-4a70-9c70-0cf4ecbca6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2b3dbc-2307-47eb-9342-60b04de9bca3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c79f6f-e538-4171-9b43-266f811f6a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1287978-2004-4940-99c8-da3287b91754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dc364b-b2da-4935-b603-73c01d5cf4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b882ebd-030e-4c45-ac88-b3a5868ced9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d465d320-d246-40a6-9657-14ce03694f61",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3faa57-07e9-4b97-83ca-10c1efd07b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf866ba-73e1-4a65-9138-c252f3e296c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab5ebac-f07e-415d-bbc3-8e9a31ec6c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477300e9-770a-4ccf-9327-7a38e821d137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26237b90-98c7-4dea-8f46-bc8215d13b4a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabc97f0-c7dd-4b0e-8b51-3b6bf91ad5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3252c79-cf80-401f-8ab2-b3eec1b902fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93632d67-6ba4-4a2c-9a1d-550cc9fe602c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01581d8f-b21a-4b64-afbb-1059b32ffa24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233fec59-560a-4382-a323-7b903c1657fe",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2276ddb3-5d6a-41a7-b5f7-ef0d4bdee631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85472302-15f9-4a7d-8809-a88d29541dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13445da9-a290-4253-a429-9d926c621c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c3624a-a0a5-47ec-ab28-d1fb06632253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a339f839-af03-4d36-9552-479d745b04a3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a947945b-a804-4fb9-934a-27129a6d6307",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0063776c-f5f9-449d-9ea8-68424d660fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2db6c65-6ab9-4d48-b62d-bff422ce3b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8380924-2de8-43cd-8c24-089bb4687ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968d893c-0bec-45bc-ba6d-758f78d5fd1c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2058513-78e8-4bc6-98a1-62f35e9d41a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efbdd92c-26b3-41f7-a08e-b9a1fdabf910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fdb171-54be-4fc2-b956-4cdecc0cf3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8514364-16bf-46f0-adff-97c7fbbd2186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bad636d-28c7-4ac7-80d6-58216fbebf21",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee637210-f77e-41c4-b66d-121043e4ee72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54dd3c02-9bf1-44b0-a387-39d958cda681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "502c374c-fefa-4da3-a6bc-1680df1ed67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50867a8e-5a63-48ec-9dfd-376b44c3dea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cf9b86-1e31-4d98-8aad-7b97940098fb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a8a783-0aa8-4b75-b1c1-5b078e67a3c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cbd48d9-a371-4e47-bd99-3fbc27f24ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f6e416-5341-41db-92d6-1c89d990cf66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056fe899-4bf8-4fe8-8ee3-3312227065b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ca456c-fd65-445a-addb-9d1e088c1f28",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c11166a-1d28-4123-a319-d9fdfa744c53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2cf6eed-498c-4efc-a081-b923d0da0374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635c79d8-da83-4766-acfc-8e33d83fb4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbd876b-ece8-44a8-9f09-09273cae6301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddddf5da-32fe-4664-9cc0-d6e245b077b8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0d0def-2dcd-4bc1-85ab-3bc054da42a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a89712d2-9ef4-4457-921d-436f521e3bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7c60c2-4530-4332-95d6-9dea652f2c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe42dfbb-c6cd-490f-a185-78cae2ce213d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6053de5c-0d1f-4754-a6b4-df16e78d62f2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4d322f-f1b5-4bbb-8fd4-ead4b39ed523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36b2bab0-87b7-4dd1-ad4b-28302a408801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9935132a-4b8c-4dfc-9857-f3231fa02d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d04993-f87c-4fa1-a60d-70488c73df17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e2ea44-64ca-4619-90cf-de2acebe193c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2de9c7-80f3-4af1-af45-ff0b7f4f14ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e93dff-f0ec-47a6-930a-dd1b8e32af43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e058e8-3409-4b3c-badf-513289c001aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfb0af2-599d-49ba-b284-44aed576e045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cef953-98f1-4ed4-8e12-1b9c0ca3af45",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49373264-85a4-4318-b018-47080ed67e12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67bffc81-691e-41a3-9373-87ddbb936364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f082953b-29a6-4081-8859-e9961e8b2116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9856a6bc-9d7b-4413-8d47-2a6c3df92fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfa942a-ad74-4591-9018-b64e34a8adcb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a56f2c-d50c-45db-b638-602f5ec86c78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14d78a8-f4ba-4a26-a273-5d04926a32c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff983893-51e7-4be1-a935-b429d4e83bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa246076-19b8-4c55-9a59-c4b133a5a00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707c27a3-fe60-4b99-a10c-acf6e0f4a079",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71d4f24-717f-4ded-bd56-90fdcac28691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896e127f-6ec5-447e-a8a5-5456ecc2bf16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbce9d9-5c00-4d64-a310-a923d5630e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87e1429-e696-414a-8661-783827db3f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0885c3-34de-48dc-a1de-f3d109add47d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99337cc1-8454-4947-a1ee-f1019e4e0c03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc5781fc-9895-4d32-a6e5-cb7c190a27e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfc2603-e3c7-4155-ad55-e4d65bb838a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17246190-2aaa-4932-9dae-374e666f4d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c781550-a3eb-4866-bb34-79e27f007f2f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377d64c2-966c-4c8c-9684-0a9817c38fde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf4f265-c320-4773-bf5e-7c924b347fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02424c9c-a92f-43fc-93b3-23332c4f2090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18360589-d3ea-4fa7-b198-46e57c6fb2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6c7611-e20a-4c16-94fd-570f99ea3c9c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f273be-a968-4fd2-9d24-394a2394f557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2f50c61-90ca-468d-a8c8-b03a24da80be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a779ea-bd24-4a23-8630-fad7bffc3a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626fd11f-b12f-4d24-8749-04ac0e80d3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f30a9c1-5821-4d16-929a-a93388d8d98e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08e10f8-a3ee-4531-9959-ebf61f0b873c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2114e927-b472-468e-935b-78d782222d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da42997-0fd0-4077-b3f3-c399d20f0992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b24e2fb-3126-4c23-a0c0-c4aac8468b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d448ff-12d3-4982-b83b-a92a8fc9a66f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8417a4c-b276-45b2-8c77-72e53e90530d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa3555a-4bfb-4712-a14c-d2e9e495f861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf59828-36c4-4b62-8beb-3d251eb968af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba1b7be-b9cb-4df6-8aaa-975c48d37d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3959a0-0805-4882-8d88-6589adf4f799",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b613b2d-98f0-41ce-8627-248e6d5ca054",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f79562d3-43f6-43b8-ba89-f6ebed602e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e701963c-8c1a-4fe6-b819-ee014beb46da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3155739a-4ef9-4c6f-9e13-e95d84cf1ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a4cc7f-4bef-48f2-9361-9e2cb01f5ba9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9547f22d-f3a1-4ed0-a862-e2ac6f9cc4e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0667af1-8862-4892-9ff5-4fae3758cb1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9734b3d-102c-409e-80a2-2fb780cff762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edac6b9-cef6-44dd-9e7d-ae988a33c2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9eabb98-3781-44a4-8bac-87d7551d7394",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c2da30-7ec0-4720-a0e9-37c90d316f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db55d758-674f-4ad2-99c0-1e445afa079b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118a1b29-9771-4280-8351-b6ec83fbced5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a610aba7-601f-413a-8e03-16c38af68ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb00216c-d4fd-4f47-8dab-29ee9d40ff67",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853d780e-55d4-4b69-9672-5be6381f2294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "703363de-1880-4d85-8b8c-0d1959152023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5e5b25-2344-416c-ac01-f51e73f9b3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32aa4412-949c-4652-8d38-9af0ce49ec0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc11085-b9e4-4608-b9f3-4d9c0811c9e6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e690111-e4d4-4bf2-ab25-29aad9d6922b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e9809d-2d2e-4e59-b6d3-ed0fefb9dc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03a7835-eafa-445a-aa24-75bb54924769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def0b28b-b7a6-4d69-a8c2-14e8560946c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c283527a-ad63-446a-94fb-8985c7acdf76",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ab3673-5127-44be-a169-23a2ff4b2eb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddebabad-a27c-4d34-8d19-3036c89abaa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5944f4-25b0-464c-a84a-9c9575273c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269c7ffe-48c0-42ac-a55f-9de9f413187c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded03685-bc6a-4599-bf58-c50b9ec1c2a1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b964ff5-955a-4b1f-bb0b-d618b395f0a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b81fbd-f54b-48f1-a9be-f2be61090a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47fcc5e-4cae-4ae1-aa19-20956b7aa835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d2ec22-7239-4581-ae71-20f7f5daf8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784713c3-ec27-463a-8cb6-7bc586cac986",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e4f45c-b449-414c-8f92-f4d3252bb249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c08b266a-72aa-44d2-8c1d-373eb24d30c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bb8c11-cd27-4623-a35a-f97b89957a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1daf2f-8c9e-4665-8929-af470c05abd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a93a7d-1d76-4940-ade6-2737c38ada05",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58beb940-332c-4b39-9bb7-64cfbfe0b986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e257014-57f5-4093-bbe4-1c51d44584fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d28547-ce65-40b0-a338-0ba3ec1d9f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb866cb1-638e-4e17-83c3-97ca1a6468a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3527108-232e-4b03-9bdb-67faf63809de",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ead94a-04a9-489f-991f-5b809a5cc64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2f9c35b-840a-4525-8bf6-401c7b808661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cc8aa2-6a05-404f-ba33-5fd8ee092957",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec3308b-a1cf-4c46-8409-1b30d85270fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77397203-c2b5-4eca-8088-498076276769",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cd0593-d8ca-46e9-8541-b1fb10074679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13e12636-e38a-41c6-a084-e89d1e006a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9343fc59-e811-4f8f-8ac1-0b237ca01d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cf48a4-944f-456c-a9b5-021db540c61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba28b818-da68-4196-9d90-fa154344e375",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f8222b-e82c-463b-bd22-c17d66879f84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3da029-39f3-43d4-9e4d-f216ae5d4026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56be329-18a6-43bd-a9fa-44b0bb1a9121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bfe6a7-c7a8-438a-bcc5-f01306980e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b8a329-4ac9-42f2-8e11-bcc51ae9a9d2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8a6ce0-a9c1-45d6-9248-f42a65f25fa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a718149-0868-41ef-b2be-585f3f81dac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb58e13b-75ff-47b0-8452-0367d81e4e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a437e25-4764-4c8e-8928-2b0e55bfd96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd02076-fdf0-4adf-a3b1-cd5c6c8fe229",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9693d9-d4c9-495e-866c-6d60bcd58e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3189b888-8ad5-4116-9de4-94f6f806f1aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a187f3-2e9d-4ece-b113-480ccf4ca092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842fd6b9-bcfb-427e-9507-5b7e4092e8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33927de2-baa8-4231-b213-64f30a73e5dd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37712a0b-bfac-47c3-88eb-818a294e73b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb3174c-3dfd-47ad-968e-6f26f66253c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83aa2ca3-e547-4422-8625-a8c73e08bea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cd27ed-4a35-4292-b110-13be21686a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3503f0-4f04-4d0e-a51d-94811f20f1fe",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98b8921-373a-4cc9-80ce-1c8f13dee578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56ee28c0-6022-4ff6-a8ec-8dc13a419542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0707a1-932a-41c9-95aa-dc110e8c5cde",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2009c7b-a0f2-4659-9388-0201b839c760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d422a02d-d399-4a4b-8b66-820c104544ba",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19417a88-6a54-4fb6-a781-172bfab348dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b12a50f0-d3e8-4c0e-b9f8-c5f3d5a6bfc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b57bfc6-d35a-4f27-bbf0-39ba9e9e32f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982bb4bc-4d46-492f-89a5-ca7386500510"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85b32d50-a64f-4b8b-90c4-87641ec6c39b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7fdd12f-32ff-4d7d-9c54-d23bed251c4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a04a3c22-da54-4ee1-8f38-71bf199489bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9db1d1c2-8992-4df2-9047-eb9a27f9c0a1"
                    }
                  }
                ]
              },
              {
                "id": "381b2b0e-0ec9-4466-8eaf-2471f01f6011",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eca491d2-1017-499e-afaa-23381612f5d8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4bdc24-c2ae-49d8-b531-1688e856395d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d7965089-71c2-49dd-8d07-ca77a4a49cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252421f3-d0f5-414f-9910-5cdd332b8deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "637bbb39-1276-4834-9537-eb95b4bc4a85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56df5b42-c24e-4ba2-8434-bbbfecc98ec5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a76bc6bd-14f5-4376-b8a3-f2c61dd9807f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5006e6b-79ff-4221-9bfa-11257af60a99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "922e2ada-fd00-42e8-9ec0-de7fd08bb8db"
                    }
                  }
                ]
              },
              {
                "id": "bb8c79ab-af5a-46e1-8b48-5b4758776b47",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4f88e2dd-d10e-4963-94ad-2fa83eb91909",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca08dbab-f7a6-44ca-aec9-5515caef4930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "da84a142-8105-4c1e-8921-0a38187eb945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10078d0e-54c4-4261-bad5-ca8ec77dd165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4395e7e-8267-4dd0-b808-cdda95aa244b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1010fb3e-96d5-4c7f-835b-0eefd2a31ae6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "59b61efc-02e9-45a5-8e6d-ab0669a95eed",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "798c14c6-a08d-4eb1-9dee-285855bc7e89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6b553c17-f452-46d6-b9a7-33f8c2c23738"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "080a9c4d-1d1f-4e0b-9e94-44918175b1f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68cbca90-e6fc-4495-961a-e0a439597ebd"
                    }
                  }
                ]
              },
              {
                "id": "6755c617-4a75-4343-992b-2517a780bd74",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5353b4cc-5e26-4a4d-83b0-a8f18a194a89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "650f5f87-10ba-45bd-a845-fda82ac83608"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4a47dd0-3cbd-4826-bb44-66e70dd70e23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "222411db-ad8d-49ad-b9f3-e66d17290315"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4aa566a7-4e4e-49dd-b41e-a85061afbe75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "94cb035f-a2ea-4a05-b027-c64e7d430f78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b05f4b9e-c886-4c34-ac42-eb2fe0557506",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2ae675a-1558-4bae-93ed-1922a27ff1e2"
            }
          }
        ]
      },
      {
        "id": "e6833bfc-3ef9-44a6-8ed2-f2d023c1f0a4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cbd6176d-35e2-4240-8886-2a6ead3b49c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4917fb8d-6017-4d69-82ec-ec8a44fdcbb5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3af93a46-ca8e-4d6b-a5dd-3d5390b5e9e8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e07bf2-f935-44af-a426-fbd24ea47b3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2f10095a-e6e9-4d1f-88d4-f79bd4df3737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3297363f-d513-4e52-95f5-258e7e37314d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6773ebc-258e-4a53-8718-e4c344852e37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4af5516b-0523-4639-971f-82ad85521015",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1ae6199-a4af-40c5-8f93-524df6460404"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e19c4057-8a14-426a-8e24-2464f34ff030",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a40d2e86-10ff-47e8-bfd4-70db848c781b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97a943a9-a440-4932-a752-80f54301617d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9cbdaa42-9548-47ec-8229-f9a982040f20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ebeed609-9aa0-4c31-874c-f86f8175492b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c7f987f-38f0-4240-b989-1400c8cf8982"
            }
          }
        ]
      },
      {
        "id": "de85a3f1-1484-4d19-877a-fe2201c27008",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a4c5fdd2-bdd9-4de4-9ee1-8f32f22c0f74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ddbd016-d605-4795-bb3b-0b59480c7aae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38b3f1d9-3413-44fb-88df-fd183ac60d86",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888dffb0-bb29-4abb-adcb-3fc75c738806",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c0ade8a-f655-4c07-b86f-f2979ae039ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aea294c-380e-4c0c-874b-e18e189569a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78a703b0-54a0-4cce-a3c0-e195d6be4553"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a4f7fcb-4d67-49b6-9905-25eb1d3808f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca6f550c-f234-45e7-8829-9bb7810c325b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3885b15b-7644-4f53-b25d-e4732ec89591",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6236c5a-7388-4e11-8986-4b512fea5ccb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1494ef4-94b2-4962-a1f7-d36f52d9f9a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa325926-eae4-40e4-9999-047a9e61159f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8395e2ce-8e4e-487c-8854-5837625c3f6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c52a84c-ea82-4f65-bf36-e0c64cda7289"
            }
          }
        ]
      },
      {
        "id": "14c9e9df-b661-4ae4-86ba-b061515f03fc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "48d9cc83-63a2-46c5-af6d-597a2efc6a1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7280a078-a9a1-48b5-aac0-c493b78c9467",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1fc910b-59a8-4c0e-949e-ef5e95d3985e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5927e91b-5c76-450c-a6d3-f901b1a317ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "077c72e3-729d-4772-ad43-38be0f342a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1ba800-c70f-4835-8f75-da16ca1aa650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ff5c21b-b464-44fe-8889-aeedd0b52e54"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1110677e-2048-4677-9051-0b79e1f42287",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "765f7398-61c6-40b5-aa1a-e6c492cbb2a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67ae59db-625c-4c84-bbe7-e21fb64fe70f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64c5800b-6d31-4da7-a969-d54257537a3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d64b0e8-6b58-4f0b-9a7c-5616d05e82b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cf2beb93-888d-4e62-b70d-6b0649c1771f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edda0fe8-af92-4b9f-8463-1ff89f8757e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6684041-7045-405a-87a9-945d893c1681"
            }
          }
        ]
      },
      {
        "id": "81bcb63d-84ff-43da-b5d4-467c9a1b747c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f143e82a-ecf8-4c54-8259-1ea7c4a8a680",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8bfd8109-4fd3-4776-8f01-39840f88bbf7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1918f88a-d458-473a-b20c-d014165bdd78",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5da98494-a9b6-42c8-ad72-f780578d5bfa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9192134-ac9f-4dba-88e0-1072b20d5c21",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 234.15438596491228,
      "responseMin": 6,
      "responseMax": 9401,
      "responseSd": 1177.1726120756948,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701131769101,
      "completed": 1701131845544
    },
    "executions": [
      {
        "id": "ef0dff34-f4b2-4f3e-97d0-9994f4ba408c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e7aa59d7-eb15-41dc-9c90-13a4ef2e45ce",
          "httpRequestId": "4a5cef88-9044-4265-9fe0-803848235681"
        },
        "item": {
          "id": "ef0dff34-f4b2-4f3e-97d0-9994f4ba408c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b5454b6a-4788-4c60-b710-7b8567aa92e0",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "6d4bf775-f231-4280-865f-db8611459348",
        "cursor": {
          "ref": "91807cd3-7b43-492a-aa0f-aeed2d44c107",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "797c733d-352c-4fce-9f5c-cca2ae1b3c6d"
        },
        "item": {
          "id": "6d4bf775-f231-4280-865f-db8611459348",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2b9b69a4-1a07-401e-a6cb-19a808e6aad4",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "18faa65c-ce83-4f7c-8313-d2368bdc26d1",
        "cursor": {
          "ref": "3b0b9fe1-28f6-4286-b11f-c6fb6e5b47b4",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7aa01ddc-df9c-4356-a797-c650a2b3189f"
        },
        "item": {
          "id": "18faa65c-ce83-4f7c-8313-d2368bdc26d1",
          "name": "did_json"
        },
        "response": {
          "id": "4d5aa5a7-aa78-4143-b0de-7fcdafa1c776",
          "status": "OK",
          "code": 200,
          "responseTime": 1421,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7ad997-0f70-43af-8816-49dcd2547664",
        "cursor": {
          "ref": "40fbcafa-3f8b-4fd9-9358-41f573102b08",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9364abb1-b0c0-488a-bb1e-6b87aa43e3a7"
        },
        "item": {
          "id": "9c7ad997-0f70-43af-8816-49dcd2547664",
          "name": "did:invalid"
        },
        "response": {
          "id": "393b43c2-a8e4-461e-b0e2-c1b34748db6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7ad997-0f70-43af-8816-49dcd2547664",
        "cursor": {
          "ref": "40fbcafa-3f8b-4fd9-9358-41f573102b08",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9364abb1-b0c0-488a-bb1e-6b87aa43e3a7"
        },
        "item": {
          "id": "9c7ad997-0f70-43af-8816-49dcd2547664",
          "name": "did:invalid"
        },
        "response": {
          "id": "393b43c2-a8e4-461e-b0e2-c1b34748db6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca1c857-b01d-4d2f-b424-13f4d681c6fe",
        "cursor": {
          "ref": "2ff6cec4-0e6c-4d2a-b9c5-6aff8e9cd744",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d517e593-231c-4936-89c3-1b830a182f32"
        },
        "item": {
          "id": "aca1c857-b01d-4d2f-b424-13f4d681c6fe",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0a60fb86-dcce-4df6-95b5-104e4028922e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 99,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f9bba2-9fb9-4f01-b589-f5ad8884f530",
        "cursor": {
          "ref": "9a7bd610-c2c7-4477-8dfb-fb874b280590",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "98e26642-d82c-4cd5-9773-336eb1a5258c"
        },
        "item": {
          "id": "31f9bba2-9fb9-4f01-b589-f5ad8884f530",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "04302ab7-4eb4-4a93-a227-1ad4891a2ce9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1099,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eeb59ac-698f-442f-a91c-8d73b44803e5",
        "cursor": {
          "ref": "09f4de07-335f-47cf-887f-f2a9f14481fb",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0d84a571-f58f-48e0-93cd-2ae4328db0ff"
        },
        "item": {
          "id": "3eeb59ac-698f-442f-a91c-8d73b44803e5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "63a047a5-432e-4b01-afd5-392ee9607b6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a719bd-e5e9-4413-8ff5-2ac03edd8efa",
        "cursor": {
          "ref": "0bc6aafd-f39d-433e-b35e-31c9d07c72eb",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ddfe504b-4e8e-4b8d-aa0c-d105953a90a6"
        },
        "item": {
          "id": "66a719bd-e5e9-4413-8ff5-2ac03edd8efa",
          "name": "identifiers"
        },
        "response": {
          "id": "1948e2af-950a-49f9-8fed-ef2fbd54378c",
          "status": "OK",
          "code": 200,
          "responseTime": 1252,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a035f57b-329f-4afa-b8e1-9624dd46eb85",
        "cursor": {
          "ref": "8ec655ec-3e2e-4c37-a080-11954af26733",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2f30fec6-79f1-4b47-9f13-7706d8df8d5d"
        },
        "item": {
          "id": "a035f57b-329f-4afa-b8e1-9624dd46eb85",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9ce95733-c407-4d5c-9086-61f2363af1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664a95d0-e3ec-44d3-9c81-1d46db9f1f52",
        "cursor": {
          "ref": "fa03f3a6-4327-465d-886f-4b17e501ce78",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "74f4cf0c-e6d1-40d2-b257-65de38b29ed1"
        },
        "item": {
          "id": "664a95d0-e3ec-44d3-9c81-1d46db9f1f52",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4a4a38a0-51b5-4ed3-b1b4-e87abbb9a23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad215c1b-89cf-4eda-954b-53bcdf558348",
        "cursor": {
          "ref": "a3d2bea3-8df0-4879-8160-ddc73af8a25f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6d35ce6b-23bc-4e45-b51e-81c3221c5fa9"
        },
        "item": {
          "id": "ad215c1b-89cf-4eda-954b-53bcdf558348",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ba6b427d-ed20-4a58-8a63-823a3ce20710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d121db05-a0f4-4e60-9200-ea590260428e",
        "cursor": {
          "ref": "e5e16d87-649c-41b1-91ed-1381dd326d17",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d555f8cf-c0d4-412b-9f6c-34aae3cd42d9"
        },
        "item": {
          "id": "d121db05-a0f4-4e60-9200-ea590260428e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2b48db3e-e63c-43e8-80df-7fdd057fb5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4250f476-bfa8-49d7-b91a-70680611c2ca",
        "cursor": {
          "ref": "efabb46c-d27d-4ef7-ab95-d91e282d5a06",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "32bf13f1-e4d6-419f-b70c-5187ee35320d"
        },
        "item": {
          "id": "4250f476-bfa8-49d7-b91a-70680611c2ca",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "36b9b1ed-0e08-4c3f-8421-c9ce8d7ea348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b10e4c7-d051-4e87-8099-b24a4598ca54",
        "cursor": {
          "ref": "1f82569b-5029-4e49-816b-5efc5fb81e75",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ce412446-349b-4d3f-a3e1-542269446799"
        },
        "item": {
          "id": "5b10e4c7-d051-4e87-8099-b24a4598ca54",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0169c70e-7525-4f9e-a375-b5fd0b016d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b449d45-c781-4203-b2b6-5aa6de987bad",
        "cursor": {
          "ref": "e3faca61-b5dd-4f7f-a4bc-8214b274a95e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2e0c95fe-9eb9-4b23-a133-03e6bae7bde0"
        },
        "item": {
          "id": "2b449d45-c781-4203-b2b6-5aa6de987bad",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "15491583-b8e6-4370-9b72-12b556446eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f51fa6-abcf-453c-a4bb-50eb1759e4a0",
        "cursor": {
          "ref": "23eae890-e0d4-4841-958c-92c4624a7cb4",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a753033d-cacd-466c-a227-488c81427b6a"
        },
        "item": {
          "id": "e6f51fa6-abcf-453c-a4bb-50eb1759e4a0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "58b3e2a1-e0cd-4bf2-9fd2-f3bc4f2723d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193d241f-d505-4080-8e34-e3e3c98bc87b",
        "cursor": {
          "ref": "4a582fc7-c0b6-4817-81b5-6d4479b3dd06",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "08edf865-d84d-40bb-aa9b-72d485fbfca4"
        },
        "item": {
          "id": "193d241f-d505-4080-8e34-e3e3c98bc87b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "349fd80c-4806-4cf1-9c3c-b14cc808ac9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d55bbb-c006-492c-ad16-1e744082cf2f",
        "cursor": {
          "ref": "a43f6009-9c9a-4919-856f-bc7c8a391de3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6209eb3d-4588-48ea-b88b-308e74a8b9c7"
        },
        "item": {
          "id": "a6d55bbb-c006-492c-ad16-1e744082cf2f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "712e3bb6-45df-4ad1-a430-cf680569116f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e05b9a3-a19a-420f-800d-f0a27d1a690d",
        "cursor": {
          "ref": "c0da9d25-7f80-4b15-b2d3-adefb6f1f7c1",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1b40ed26-f344-468f-a54f-d98ebce89789"
        },
        "item": {
          "id": "0e05b9a3-a19a-420f-800d-f0a27d1a690d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3c6f71c1-f289-4944-b217-8bd780289232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972158b7-6a68-4f9c-af9b-b36ae8befedc",
        "cursor": {
          "ref": "be3902e0-0bbf-4905-8ee9-ea61950f0932",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d655d0d5-8aca-43a8-bd96-5f3eeb543ac2"
        },
        "item": {
          "id": "972158b7-6a68-4f9c-af9b-b36ae8befedc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c752557f-f60b-48f3-85a7-a32acbad3a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e11f19-2047-4c16-9071-0ef558fbdff3",
        "cursor": {
          "ref": "93acd1a0-c612-4631-aa0f-e7ad10a06abb",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d6baa2fe-ab42-4f33-a6af-b923098bb4f3"
        },
        "item": {
          "id": "29e11f19-2047-4c16-9071-0ef558fbdff3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b5947f14-2a2f-4a8b-a541-f8121558fc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad27177b-4475-44ef-8480-b3e7f555888e",
        "cursor": {
          "ref": "55e04f78-6303-4904-a2f7-8e176810cebf",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b31d07b5-8b87-4b5c-a2a9-535f7ce50a47"
        },
        "item": {
          "id": "ad27177b-4475-44ef-8480-b3e7f555888e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b2f85a15-faec-462d-9b2b-163b5ca690a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4892c0-6e20-4f2c-aaf7-a36c46d95993",
        "cursor": {
          "ref": "3360e433-e6c7-48e4-85fa-a48c6108f1d3",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "82e1311a-d803-4b5d-98df-5d2fa33d75a2"
        },
        "item": {
          "id": "2a4892c0-6e20-4f2c-aaf7-a36c46d95993",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1a139f44-c19b-4a7c-b478-0ac82c734d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd4b4d5-df89-4b89-8a9c-4c21d4707f1f",
        "cursor": {
          "ref": "e1e0d391-affb-4bf1-9138-22d7d7d465ea",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c9d863cd-68a9-4a95-bddf-c1f0b58cb04c"
        },
        "item": {
          "id": "ddd4b4d5-df89-4b89-8a9c-4c21d4707f1f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bb627d20-ffef-4db8-a960-3f51f712fe2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7b5126-df95-4fba-a31e-7791ba2d9736",
        "cursor": {
          "ref": "2f592d56-2fa6-40a5-b993-eb8f0bb93888",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "841ea10d-3c06-49ee-9a83-944ef8f4cf30"
        },
        "item": {
          "id": "fa7b5126-df95-4fba-a31e-7791ba2d9736",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "818cc52b-88a1-47a1-b970-2fc150a3337e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302a37a7-4e3e-4b05-a5a2-c9fd04130091",
        "cursor": {
          "ref": "46fb05db-fddd-4f98-9c9b-fce20ae3a8cd",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ccb8e4ae-b6d7-49ce-82eb-11ea3cceb28b"
        },
        "item": {
          "id": "302a37a7-4e3e-4b05-a5a2-c9fd04130091",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3c53b95f-68b4-46f5-8559-6bf90e11d894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952ac365-794b-479a-a7c7-68b5941f92f1",
        "cursor": {
          "ref": "24e01bee-4e10-49cf-b7b0-d338cd072b92",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b6551a64-0e32-48c2-a650-53ac47b65633"
        },
        "item": {
          "id": "952ac365-794b-479a-a7c7-68b5941f92f1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3bbb0fe8-758a-41b9-b78c-0e7ffd3f2bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9384f88-2931-4ed6-865a-3978f3f8655b",
        "cursor": {
          "ref": "de2955c3-0147-4f1a-aa3f-96a7086d632a",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "231c71ec-f6b9-4445-bb55-c9640ff2ac9f"
        },
        "item": {
          "id": "a9384f88-2931-4ed6-865a-3978f3f8655b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "380279a7-e3bc-4155-8285-5c31ceaf296b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dfb7a9-045f-4a36-8a8d-5291583e3cee",
        "cursor": {
          "ref": "3241d722-9f76-4f8f-abd8-38682fcecbbe",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "38ffc380-6901-4d58-9ae4-ab8adccf2dd2"
        },
        "item": {
          "id": "e4dfb7a9-045f-4a36-8a8d-5291583e3cee",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2308705e-195a-4591-bbef-9c534762dc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cb4bc2-5148-40cd-9580-9f3e02fd122c",
        "cursor": {
          "ref": "f45e99d4-967c-45dd-8b3d-d32043522f56",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4adfe64a-9b73-4474-a4be-4dd63bd7399e"
        },
        "item": {
          "id": "50cb4bc2-5148-40cd-9580-9f3e02fd122c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0e145e8f-b133-46f6-8952-783f06c2e3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc0e5be-2fbb-413f-a157-148d00367287",
        "cursor": {
          "ref": "e550b098-0ba9-4350-b3bf-d4feb9ccd456",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "eda73a58-226c-4a5a-bc39-3cf2e4d5c781"
        },
        "item": {
          "id": "dfc0e5be-2fbb-413f-a157-148d00367287",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ebe81ee1-c154-4b9a-9856-8dc7778b0bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3767a886-fefa-493e-96f5-e5b6a070b9d6",
        "cursor": {
          "ref": "035ade7d-0ed8-41fc-8e9a-b03975f46eff",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "67b01b72-b452-45e8-a148-e6fdb2190f43"
        },
        "item": {
          "id": "3767a886-fefa-493e-96f5-e5b6a070b9d6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "106f81c4-bd76-4f48-8618-60528b8ce9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b54e87e-0ddb-4346-885f-bffa82f3e4fe",
        "cursor": {
          "ref": "e7fe1b73-e4a4-419a-9475-683796ff9832",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d1d10d5c-5b23-4f35-9b52-d64907d5d82d"
        },
        "item": {
          "id": "1b54e87e-0ddb-4346-885f-bffa82f3e4fe",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "92931436-61f2-4fad-9226-d2f314a1cdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7398e02b-55f8-45ae-b940-dfbcb3f1e2fb",
        "cursor": {
          "ref": "c2d0b4e4-d26e-4d8e-aa48-599d17e4c131",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b3d476ec-7d28-4e34-81e0-4b63914a647d"
        },
        "item": {
          "id": "7398e02b-55f8-45ae-b940-dfbcb3f1e2fb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e523b7a0-05cc-4223-aa13-b01dc2e48c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204597c8-86db-43e0-a6bf-f253d3a5d509",
        "cursor": {
          "ref": "336ce16a-333e-4745-9c92-f6f9b5a90c2d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1703ea75-7cbc-4fd3-960d-ccdc19e25145"
        },
        "item": {
          "id": "204597c8-86db-43e0-a6bf-f253d3a5d509",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "003ed0ea-56c8-4898-b5b2-0ae207d7dd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b8f320-93b6-42d6-a2b4-ee529aeec077",
        "cursor": {
          "ref": "1184d672-8ada-4f6e-a8fc-3d52218764b5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c5977fee-f44f-42b7-8e90-6dcd6cd6ef70"
        },
        "item": {
          "id": "99b8f320-93b6-42d6-a2b4-ee529aeec077",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "56a3c0d9-5e55-42fc-b10c-82fa8113cd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee2a819-2f03-4ff0-afc6-a17429f4024f",
        "cursor": {
          "ref": "d13cb829-a216-456b-bc1a-6e69d5000b78",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "efb336f9-9d2f-4641-a7db-b8cc6e5b7178"
        },
        "item": {
          "id": "4ee2a819-2f03-4ff0-afc6-a17429f4024f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "65de87af-734c-48f1-a33e-06a3456aa9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7dacfc-a5fb-4aee-a955-ac46c93f67b6",
        "cursor": {
          "ref": "8b5b0169-4549-40b2-ac55-092dd8d3dd07",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c91fcc8e-1a38-4a9e-978f-17097fd0195d"
        },
        "item": {
          "id": "4e7dacfc-a5fb-4aee-a955-ac46c93f67b6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f6b53b96-7dd6-4230-8939-a26b98629256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926827e7-c53a-4fab-8d75-ab966a87dfc0",
        "cursor": {
          "ref": "c6bd0362-5978-40d6-a261-e7790fe09266",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "668617ae-dbd6-4434-83bc-e1ec127bec8c"
        },
        "item": {
          "id": "926827e7-c53a-4fab-8d75-ab966a87dfc0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fe828adc-025c-41e4-84d9-99ad95bb5c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3073ea25-2afe-4872-a625-eb5aaa32370c",
        "cursor": {
          "ref": "b8a522bd-43d2-4887-beeb-905dc1967545",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3a2e0b92-6134-48ee-954e-2a0e4579a144"
        },
        "item": {
          "id": "3073ea25-2afe-4872-a625-eb5aaa32370c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "19d137ee-b278-4b6e-9737-40c3a1ca5911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45820c9-b8b4-47e3-9083-5d3ba6522a51",
        "cursor": {
          "ref": "a9d75a10-57f1-4256-9232-00c35cdeaa44",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9a3285da-648d-473a-97a3-c3143571ec6b"
        },
        "item": {
          "id": "d45820c9-b8b4-47e3-9083-5d3ba6522a51",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a675e674-ab62-4c36-9f02-fd302aff3ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7e21b5-d8ff-4fff-8973-2c63f004986d",
        "cursor": {
          "ref": "6c644c1f-ea98-4b80-8170-2be282585dab",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bd2074b1-460a-4744-bae9-063fdb7f27a6"
        },
        "item": {
          "id": "0a7e21b5-d8ff-4fff-8973-2c63f004986d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "912bfad1-9150-4ecc-81c5-ca2829ba64e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6704ca3-3506-4c27-a38a-d037db553955",
        "cursor": {
          "ref": "5a87a1a1-3fe9-4d6c-a7a2-ff7095328542",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "208ecfaa-bd68-4741-8645-ca31e8696fb2"
        },
        "item": {
          "id": "c6704ca3-3506-4c27-a38a-d037db553955",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8ce57ba7-da54-413c-ae53-e00388bbfa62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43027c04-4ad0-4551-b6fc-0b2cb550bfb5",
        "cursor": {
          "ref": "ea98fc20-2c4f-4b33-92f3-fd470feb487c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "587289ce-5b08-447d-b4e4-59bdd15836b3"
        },
        "item": {
          "id": "43027c04-4ad0-4551-b6fc-0b2cb550bfb5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "899d5f5b-5844-4d05-b053-4b0a9e373c82",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1483,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3a6f28-696c-4467-939b-47fcd5aea2f2",
        "cursor": {
          "ref": "42fa6989-f36f-42e0-b4c7-c2b14bc96c05",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aaa6839a-7315-4346-8580-52e781caf47e"
        },
        "item": {
          "id": "6e3a6f28-696c-4467-939b-47fcd5aea2f2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a344cce7-ebc8-46c9-a1aa-edf194864235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b61be4a-37db-4b07-b06f-f96cb1d7f830",
        "cursor": {
          "ref": "4d0d94a8-9120-4a90-819d-1a88ff5accf3",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1867d132-4263-414b-9d58-6bd3d101ebf6"
        },
        "item": {
          "id": "2b61be4a-37db-4b07-b06f-f96cb1d7f830",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e575d393-5106-4676-9376-d80e5a5df634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b7a3a3-d5ac-4e0b-84d0-910b786f8cfe",
        "cursor": {
          "ref": "bb935fe5-5a5b-4513-8eb9-19bc2122f38a",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6aec6509-56fd-4f3a-a7ab-20c7e6be7c4c"
        },
        "item": {
          "id": "f6b7a3a3-d5ac-4e0b-84d0-910b786f8cfe",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "41027edc-f654-4644-9324-199dcd52fe29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428f6d74-6b9d-4b75-b7d4-2887854fea05",
        "cursor": {
          "ref": "8c75dce2-898c-4b13-a9e7-70dfe13923a7",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "13e7e1f9-9728-44b2-b297-8ee87aa297c9"
        },
        "item": {
          "id": "428f6d74-6b9d-4b75-b7d4-2887854fea05",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "db860e60-1682-478a-9e5d-655d39da3a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50464b80-b08b-469e-87b9-4b0ce6773d0f",
        "cursor": {
          "ref": "7cf95c80-7584-4601-9a63-3729dd9d893c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "403b927c-57e3-4707-a9d5-d3f4e96b6004"
        },
        "item": {
          "id": "50464b80-b08b-469e-87b9-4b0ce6773d0f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "467bb6f3-f304-44be-a965-14f6b90a318a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7438c281-d3c8-49c2-9f4c-cc65a00548d0",
        "cursor": {
          "ref": "421f47ae-59ff-4252-98d1-b0749102399d",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1f82bf11-ad92-4caf-9d78-01a16241b0cb"
        },
        "item": {
          "id": "7438c281-d3c8-49c2-9f4c-cc65a00548d0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3b4fe9de-81c6-4f12-8cd9-2f74b43718ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dfc997-03e6-4be0-8c3a-2e7c46823cf9",
        "cursor": {
          "ref": "65383fb9-7cc3-4f60-90ba-19713fb90262",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ab55496d-6037-4d62-8c6a-96f26b64fcf8"
        },
        "item": {
          "id": "f9dfc997-03e6-4be0-8c3a-2e7c46823cf9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a370bfe9-0b56-4c42-bdef-f693dbbd2023",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1486,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c4981d-f871-4334-bfec-aff57ae79fc4",
        "cursor": {
          "ref": "4d9c5a10-ab6b-48c2-b104-cda0e58d286b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ed4f2645-0685-4a10-965a-2286e70bf8fa"
        },
        "item": {
          "id": "d1c4981d-f871-4334-bfec-aff57ae79fc4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dd46c2ff-db86-495c-a1c6-8b9e71358cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118f14d9-752e-45bc-b0f3-ebc18fc3acbf",
        "cursor": {
          "ref": "5ded667b-2569-407d-bee3-cc6a31d4286b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a6461399-06ef-4408-9418-84aabd52fcbb"
        },
        "item": {
          "id": "118f14d9-752e-45bc-b0f3-ebc18fc3acbf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "aff340ce-5fdb-4923-bfb8-16e4bfd4180a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197ac606-2640-473c-8efb-fe51ba5b0c25",
        "cursor": {
          "ref": "38d399d8-0bf5-424b-8677-c0342e22a91a",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "60533349-79cb-4b7d-91a0-899278cc029d"
        },
        "item": {
          "id": "197ac606-2640-473c-8efb-fe51ba5b0c25",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "027164aa-318f-48ca-891e-faf70725f8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff23bf83-b256-4d60-b0da-8918d6cfbe9e",
        "cursor": {
          "ref": "0c0f4ffe-37a2-45b4-80e8-7117d80b1c8c",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8f2189a1-bdb0-46f7-93f2-beb86ea1caa9"
        },
        "item": {
          "id": "ff23bf83-b256-4d60-b0da-8918d6cfbe9e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bb6161ff-397e-44c0-8e4c-637c26f48a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9c2723-5ac8-446a-a041-b131b8d5f177",
        "cursor": {
          "ref": "d2e225e5-14ba-4d6b-b9cd-c73314b84d2f",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ddc71016-a850-4fe1-bbbf-1e9b22f0d454"
        },
        "item": {
          "id": "fc9c2723-5ac8-446a-a041-b131b8d5f177",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0fd4a381-72a8-45a5-990d-8d61e3a49278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2672b475-4867-4466-9fef-eaa4456d56e7",
        "cursor": {
          "ref": "a7d3e1cc-6ae8-403d-9465-857c14201baa",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "956fed65-bcce-46c4-a830-cb55e8da4141"
        },
        "item": {
          "id": "2672b475-4867-4466-9fef-eaa4456d56e7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bc426653-15d7-4e77-a78d-0eed61ec88ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9de6f7-09c8-45ab-b9cf-8a893494b15b",
        "cursor": {
          "ref": "93570bbb-9ed1-40cd-98ac-1fd51511b3fd",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5c3376ea-cbf4-479f-b50a-434463d0adab"
        },
        "item": {
          "id": "1a9de6f7-09c8-45ab-b9cf-8a893494b15b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "20b520d8-9e9b-472f-9fa1-c1e513cb7c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f08468c-166c-4f10-87b0-b1d0351d3c96",
        "cursor": {
          "ref": "6e2bfba7-c5e4-4272-8741-46118d00f517",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1145f6f1-1abd-400d-9396-2b80916d5fbc"
        },
        "item": {
          "id": "8f08468c-166c-4f10-87b0-b1d0351d3c96",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dee41371-2d12-4c8e-9978-bc49b0bf9df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7502dafe-0493-4004-b6d6-ea0a6fcbc8b0",
        "cursor": {
          "ref": "574684d1-e639-4aed-a88b-8e7ebe9d74a6",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "43a91fd1-9b47-46c4-98ce-b90728ca7326"
        },
        "item": {
          "id": "7502dafe-0493-4004-b6d6-ea0a6fcbc8b0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6a625c0f-0ce9-40ae-9d74-8fdda2d9cef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47090b7c-07c6-4b05-83c5-c5805cf83979",
        "cursor": {
          "ref": "7fa07cd7-2c7f-462e-8b78-4d6cd55232ea",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "28aa2012-cfaa-4877-a707-a1327ecc6192"
        },
        "item": {
          "id": "47090b7c-07c6-4b05-83c5-c5805cf83979",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a12c67d5-08d8-4043-b371-5d66b39343c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f0380b-d19e-4236-9daf-ba1285e3df24",
        "cursor": {
          "ref": "39af6402-6b07-4531-a1ac-ca28f28d8354",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b593f211-ebce-47b6-ae9c-90df7272ac36"
        },
        "item": {
          "id": "77f0380b-d19e-4236-9daf-ba1285e3df24",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0f16cf57-b7d7-47d8-86e0-7efa486894a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6fe195-ebff-4ae9-bfc5-5edd08e56432",
        "cursor": {
          "ref": "0590f51f-4285-4e75-9df8-251e3f05aa3b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5b7bc222-8df3-491c-ab7a-3d9bff3fec89"
        },
        "item": {
          "id": "ae6fe195-ebff-4ae9-bfc5-5edd08e56432",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "eec7fe24-1ea1-49e2-92b0-6724f54bfc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52296d6-d99f-4d68-b2f8-012a207972a6",
        "cursor": {
          "ref": "fcf826c0-9566-4338-bf62-705b80e81a2f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "123972a8-31d2-479b-9f87-c5f3c3403ff8"
        },
        "item": {
          "id": "a52296d6-d99f-4d68-b2f8-012a207972a6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "582f2c0a-6f68-4036-a94a-464c2730cb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae51a8f-ad0f-4d2a-bb42-7052b52ba1de",
        "cursor": {
          "ref": "2762b769-7897-4133-bbf3-4f7c3ec4f6e7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "08adf339-5256-4919-acc3-250741ad5682"
        },
        "item": {
          "id": "dae51a8f-ad0f-4d2a-bb42-7052b52ba1de",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "be5d32a1-3088-441f-b2f3-c1522d7d2252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428dfc71-1882-4e14-9097-ce5796dad402",
        "cursor": {
          "ref": "9b8f66b3-e722-4cce-b84f-1439b5f30140",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "29cae35d-6099-4ed5-a816-9baa57ddbf04"
        },
        "item": {
          "id": "428dfc71-1882-4e14-9097-ce5796dad402",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "12a43752-c774-4836-98e2-9f76b1f550e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794ecf1a-74de-4121-ae91-d96fef2aa090",
        "cursor": {
          "ref": "777f6659-a165-4a35-93a9-a99bb22b080c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cb850b5f-6433-4d6b-9797-4d0cb75b88aa"
        },
        "item": {
          "id": "794ecf1a-74de-4121-ae91-d96fef2aa090",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0e909995-3f00-40ae-8642-ab4e86cb1f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc44433-77c9-49b6-8b97-265a8f1c8a46",
        "cursor": {
          "ref": "2ded97a1-9bd7-4b32-bfbd-1534fdc0079b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e52f8a71-2741-4297-b717-0bc738c3746c"
        },
        "item": {
          "id": "7dc44433-77c9-49b6-8b97-265a8f1c8a46",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8550d6fa-687f-46f7-804a-f509988756ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66abaaf-1725-46dc-befa-4e6a657a0094",
        "cursor": {
          "ref": "4eb3901c-1cc1-4b2c-96b7-e961e3ad4ee7",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "55864686-8fe7-4067-8597-83761ea3acdb"
        },
        "item": {
          "id": "a66abaaf-1725-46dc-befa-4e6a657a0094",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cbf37770-76c8-4de3-956b-4d8c9013c6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6daf072-007e-4c75-8593-03dd555a7891",
        "cursor": {
          "ref": "99948b7a-2254-4f74-a7c4-876ef5f7602d",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6be1d43e-7f88-49d8-841c-012f1865566a"
        },
        "item": {
          "id": "d6daf072-007e-4c75-8593-03dd555a7891",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3ed50b38-b176-4352-90e1-5f475af0af80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e98c7b-18ab-40c1-8b13-1e8b3a7b5970",
        "cursor": {
          "ref": "09fcf0b5-213f-46a7-ac66-160d4d0b7059",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0dfd8bae-f1bd-4a5b-8187-243e7c36fcd6"
        },
        "item": {
          "id": "26e98c7b-18ab-40c1-8b13-1e8b3a7b5970",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e1cdae3b-8257-4b91-a5bb-3b68ff67793c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0190b3f3-e2c2-48ee-9710-a1ed15b9b1ab",
        "cursor": {
          "ref": "a896b76d-eaed-491e-ad07-f9316d714b68",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "da71e38d-e645-4ede-bb60-ed0828dc1986"
        },
        "item": {
          "id": "0190b3f3-e2c2-48ee-9710-a1ed15b9b1ab",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9c783e43-4f30-4684-bfc4-6c279c65ef4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac581c7-5c6e-4edd-8937-b9e514ddc28d",
        "cursor": {
          "ref": "a3031b3b-3c9d-4c97-aef7-3d1306f0eaed",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2780be5f-4c7b-4caf-999b-50a6e9ec33b3"
        },
        "item": {
          "id": "eac581c7-5c6e-4edd-8937-b9e514ddc28d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8f7364cb-0b1c-4619-b880-932c7c69b7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04b0ee9-ac77-4a1f-bf94-73e029bb682d",
        "cursor": {
          "ref": "637de166-609e-4c1a-b4b8-99edec6bb10c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7575dd09-ee87-40f5-b6ce-db8c75f7a1c9"
        },
        "item": {
          "id": "f04b0ee9-ac77-4a1f-bf94-73e029bb682d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "43a4d73d-aa25-4c3e-bc6f-6da512ba2f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a448b16e-92e8-4197-aa98-ef6c95f89964",
        "cursor": {
          "ref": "af18d5a0-783e-4a90-997c-5d2cd9c23738",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d4dd404f-5852-4622-8378-01e1e2ba0afb"
        },
        "item": {
          "id": "a448b16e-92e8-4197-aa98-ef6c95f89964",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "81e30ecc-9e5a-477d-a6fb-441a8a0ea6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4945dce-7c58-44dd-813e-bc90f2d8fe27",
        "cursor": {
          "ref": "a0c934eb-c032-4176-87f3-6e5561c0b51d",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0e82f0c4-1665-4816-ae78-e5b2956bf4f2"
        },
        "item": {
          "id": "c4945dce-7c58-44dd-813e-bc90f2d8fe27",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c8dbfe33-adff-443b-a7c1-a3b99c18deec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20aaa613-6a2a-460a-9d6e-952074a9af1e",
        "cursor": {
          "ref": "75654b6d-f56a-4fb4-9cef-ad71970dbb8f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b85b5252-4130-4812-bb9b-0233e4f7eaa4"
        },
        "item": {
          "id": "20aaa613-6a2a-460a-9d6e-952074a9af1e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0807c86e-c329-43ef-a23a-9a6406f861ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e35a64-87cb-43d0-84c3-a63c2a764ebc",
        "cursor": {
          "ref": "a1a2b754-0eb3-4069-94f3-c3951a2b1e14",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9a866f3c-26c3-4d79-b0ad-0c55924d18ef"
        },
        "item": {
          "id": "08e35a64-87cb-43d0-84c3-a63c2a764ebc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "91247d28-3849-49bc-9c06-f7ba8c0117f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f8c689-d81e-4711-8c9f-d02a3e1b32a5",
        "cursor": {
          "ref": "16fd5cdf-739e-494c-bc8e-9d379f5d0348",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "92299f24-0dc8-43bb-a489-564d5e3ad5c8"
        },
        "item": {
          "id": "f9f8c689-d81e-4711-8c9f-d02a3e1b32a5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4c0a9509-8f92-42cd-824f-576f15a3ef5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a02985-5687-418f-8175-7a315bad9617",
        "cursor": {
          "ref": "f3fadd9f-283a-4f24-abb3-784849ea75cd",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "52920046-0084-44c8-a839-ef520883eeda"
        },
        "item": {
          "id": "d9a02985-5687-418f-8175-7a315bad9617",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9500bd9c-7900-4d44-8b05-1c1e87811b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08218edd-89d7-4d18-9949-b4ad8c944dee",
        "cursor": {
          "ref": "ece3bfcd-19d2-4230-ae7f-ab5d4bb12dbc",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cdc0c2f2-a65d-4df8-b9d7-4da685c26136"
        },
        "item": {
          "id": "08218edd-89d7-4d18-9949-b4ad8c944dee",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e05d68a0-7f02-48e5-bc6c-bfcf37756b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd5f95f-adfa-4778-be8f-28a8d0c313af",
        "cursor": {
          "ref": "116d8b04-c184-4653-bd69-1a17ee9f3fb8",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "352c8db4-fe3c-413a-b086-6151b9c71bb7"
        },
        "item": {
          "id": "5dd5f95f-adfa-4778-be8f-28a8d0c313af",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8cfe2191-b7fa-4a2a-8213-aecd3748a0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1590ae-a60a-4d01-8918-da956117463e",
        "cursor": {
          "ref": "b41073f2-21c2-4568-b645-e59c17bf4788",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "845d34bc-468b-42df-b4db-b1d072af2384"
        },
        "item": {
          "id": "dc1590ae-a60a-4d01-8918-da956117463e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9346eb8e-7e9a-4a5e-b453-38f89fcf338e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da59fe79-9347-43a5-88f9-0b0fea32f85a",
        "cursor": {
          "ref": "cd44d6e8-b022-4534-9400-6d817e1264d3",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "26026d23-d0f8-434b-bcff-e099ca4d23f4"
        },
        "item": {
          "id": "da59fe79-9347-43a5-88f9-0b0fea32f85a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7cd4bdbd-d863-4aa1-a7d9-25af166cbb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4009a377-dcd6-4a3a-8216-fecaf6f6453f",
        "cursor": {
          "ref": "f3657775-0511-486f-9311-88b5594adc68",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ee8dfd0b-911a-4363-a545-b99e27d87189"
        },
        "item": {
          "id": "4009a377-dcd6-4a3a-8216-fecaf6f6453f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "befd0c3d-5a06-4b7a-9c04-2c1c82353309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681eb005-efd4-4f6a-a8d3-99d55d88972f",
        "cursor": {
          "ref": "5c97747a-0ebb-4683-9912-5ffcf6ea4024",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c6f1cc02-5227-426e-99f9-1b535b8ca3b9"
        },
        "item": {
          "id": "681eb005-efd4-4f6a-a8d3-99d55d88972f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "33c49182-dba1-47ab-ba5b-affac07a7864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43807ccf-d99c-4c34-adbd-e8b4732745b5",
        "cursor": {
          "ref": "f936d20c-1784-4a9c-9c86-3fa2387ce855",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "15347cc5-5222-4d96-8b16-17af4cdd8b54"
        },
        "item": {
          "id": "43807ccf-d99c-4c34-adbd-e8b4732745b5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "79be4435-5460-4f28-9cbc-6576e01ed756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28142a3c-f35d-43e2-a43e-94a3d367145d",
        "cursor": {
          "ref": "e228edd9-e596-4d56-8b86-fd0bbe117263",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "728a1880-e118-47ea-bc86-a94313c54ce3"
        },
        "item": {
          "id": "28142a3c-f35d-43e2-a43e-94a3d367145d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "db567770-99d8-4b6c-ad16-0942410b7246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452ac471-c6cd-4145-93a1-8beaa1a55f9d",
        "cursor": {
          "ref": "088a1990-dd04-47fe-bcac-8d02d8135aee",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "59afe49d-5613-48cd-8ce3-5b9e53de533a"
        },
        "item": {
          "id": "452ac471-c6cd-4145-93a1-8beaa1a55f9d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "eccf759b-45e7-48f5-b510-9eec37276400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916c4fe4-4269-4d31-a9e3-fd584d4b457b",
        "cursor": {
          "ref": "0f600365-bebf-4ac6-a855-22272851c0c4",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a951b51e-2bdb-430b-978c-ed647ca7863e"
        },
        "item": {
          "id": "916c4fe4-4269-4d31-a9e3-fd584d4b457b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8fc9e1db-633b-471b-86f8-6bb0464e7f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60270fad-b9f9-4e1d-91a7-d71e64d1e6b6",
        "cursor": {
          "ref": "05c0a3a4-8f8d-44bd-8b87-798cb0b15835",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "26a7f157-f55d-4ef1-83ae-33df068fe47f"
        },
        "item": {
          "id": "60270fad-b9f9-4e1d-91a7-d71e64d1e6b6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "632f9294-ae23-4009-ab6f-42025aa43925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8de941c-7a48-452d-845d-f3eedf1a98c0",
        "cursor": {
          "ref": "274c7314-a7d7-451b-ade3-d15d92edadc9",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3870a751-c153-4b90-a0c1-ac3c1596cf73"
        },
        "item": {
          "id": "f8de941c-7a48-452d-845d-f3eedf1a98c0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "823f10c3-8651-4eb3-84a2-5840ff5251a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3214ec-3f53-4a44-ac42-6d3f296f7ad3",
        "cursor": {
          "ref": "0bca97cd-9e21-4a52-b6c8-184c6aff5672",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b7f1296f-c8ad-4f33-aad2-502aee6541a5"
        },
        "item": {
          "id": "4d3214ec-3f53-4a44-ac42-6d3f296f7ad3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7ec78feb-4bc6-45c4-9cad-12fbaffaf31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91e8291-cbfb-49fc-83f1-f500273e3d86",
        "cursor": {
          "ref": "d8eb4f30-333c-465a-bba5-a6e962fc33e9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "10edfb96-8da4-41c5-a4b6-bc8d66e26faa"
        },
        "item": {
          "id": "b91e8291-cbfb-49fc-83f1-f500273e3d86",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "820d86b8-c40e-4944-b31c-13b82b6ced7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b627f2-62d8-4da4-9a29-10c9ffc5348b",
        "cursor": {
          "ref": "d713cc77-58b7-425c-ad18-287565447c73",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bc4496fc-a639-48fb-99a1-2e466e099c4c"
        },
        "item": {
          "id": "47b627f2-62d8-4da4-9a29-10c9ffc5348b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "22f45202-28f1-4eef-ae00-37f21f187422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92aa5d75-1350-4b8a-bebc-e217f32c8458",
        "cursor": {
          "ref": "38208758-401c-4031-8504-9d79c5092f12",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3f89b5ab-1c66-46ce-99ea-085630fe1413"
        },
        "item": {
          "id": "92aa5d75-1350-4b8a-bebc-e217f32c8458",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "81dbff03-034e-4339-a035-63865972c766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b09280-e5c5-4790-8d2e-662de169bbc2",
        "cursor": {
          "ref": "db514a31-c371-4af7-9aa3-f957627f2bce",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e26fd5bb-66fb-4301-bc70-dc112c3e4669"
        },
        "item": {
          "id": "61b09280-e5c5-4790-8d2e-662de169bbc2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f6700be5-6906-4779-91e3-6db2ca9d0a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96922b57-bbfa-438b-bbe6-83611c4b0bd2",
        "cursor": {
          "ref": "5647d56d-d963-401c-96f5-1939302c2763",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0547be58-6ba4-4aa8-87a1-502295d3a3ce"
        },
        "item": {
          "id": "96922b57-bbfa-438b-bbe6-83611c4b0bd2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fd636005-5b09-4e3f-9309-c8f6c8de3a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2a1832-d31f-4b3b-a52c-6c27cc6b4e78",
        "cursor": {
          "ref": "27cb638c-c63c-4cdb-888a-6ae990a891ad",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1a152e94-6ef6-4c1b-ab99-08162e028b07"
        },
        "item": {
          "id": "bf2a1832-d31f-4b3b-a52c-6c27cc6b4e78",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0f630aad-fefa-4577-b9f3-ceee7fa65806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16668e9b-ca2a-444c-8c26-4df8e04b29e6",
        "cursor": {
          "ref": "c3caccc5-8f80-4e64-b15f-9b1bdbed598a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f869790a-726b-40d2-8ac5-aa89381d0fc9"
        },
        "item": {
          "id": "16668e9b-ca2a-444c-8c26-4df8e04b29e6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3631ed4e-ec7f-4f6f-a11e-c47626de76d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef28a3c-a9b9-468e-b881-872e01aebfad",
        "cursor": {
          "ref": "a214eff3-9dec-49fb-b6a0-d0fa69e03569",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "94a8089c-84ae-4ec4-bec8-9412b637f6b2"
        },
        "item": {
          "id": "8ef28a3c-a9b9-468e-b881-872e01aebfad",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "94782adb-e002-442a-8bef-f30e4bf12b5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea158bb-f945-4869-9508-550e537c8a90",
        "cursor": {
          "ref": "cc62477d-920e-4a81-b7cb-c6db06d0d7ae",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b4f45982-bfcb-46d1-bbf3-32b2cde766de"
        },
        "item": {
          "id": "bea158bb-f945-4869-9508-550e537c8a90",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "df16bd70-81f5-4200-bd20-66f3b50ef107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "04a7d7f4-ac25-40ae-965d-ae55179bf087",
        "cursor": {
          "ref": "6e1bb831-808b-44ef-955f-3bfaa2758fe0",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3424ef06-0267-4c81-a4c8-376c769cff35"
        },
        "item": {
          "id": "04a7d7f4-ac25-40ae-965d-ae55179bf087",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ad9c587a-6274-4cb0-80c4-c5341194a4eb",
          "status": "Created",
          "code": 201,
          "responseTime": 9343,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "253c9b89-f199-4456-bd65-3617f150ad50",
        "cursor": {
          "ref": "1fb0333d-9333-4d83-b118-8a272a774a48",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2285a227-9bd1-44e3-8f77-6c25f5ab501f"
        },
        "item": {
          "id": "253c9b89-f199-4456-bd65-3617f150ad50",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c52e2ac7-08f6-40e3-a1d5-a698622e7596",
          "status": "Created",
          "code": 201,
          "responseTime": 8510,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ec28e9-3d5b-4a4f-9ba9-220122743f51",
        "cursor": {
          "ref": "4c5bccfe-8a2b-4233-be3b-e1d518dde61a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "df2dce6d-688d-4967-97e0-52332aa532b0"
        },
        "item": {
          "id": "62ec28e9-3d5b-4a4f-9ba9-220122743f51",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "989e761a-8b22-4283-ae08-ac3bf0049752",
          "status": "Created",
          "code": 201,
          "responseTime": 8519,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b65809f-b166-49ac-a6e1-89c1d88e54d6",
        "cursor": {
          "ref": "b544644c-c4da-4ac2-8bae-9a0a89d1398a",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "77f40be2-440c-4829-b4de-e20b0c6d0377"
        },
        "item": {
          "id": "4b65809f-b166-49ac-a6e1-89c1d88e54d6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d56e320c-4668-46b7-9a43-38adb02d8650",
          "status": "Created",
          "code": 201,
          "responseTime": 9401,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a3498d-cd8a-483c-be0a-d68e3ea27635",
        "cursor": {
          "ref": "d02fc67e-cf2c-4199-9dba-3b498d9d5be1",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e65d1ee5-fcc7-408e-85c8-ed8e9df9cab5"
        },
        "item": {
          "id": "d0a3498d-cd8a-483c-be0a-d68e3ea27635",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a90e23af-7551-43b0-8b8b-1f4c967b0b28",
          "status": "Created",
          "code": 201,
          "responseTime": 8646,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d95ce21-4b93-44dc-8bab-0b66ed1db056",
        "cursor": {
          "ref": "ed90ee12-f898-457a-be81-6ff9eead6ff7",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a4d42201-c7d6-4841-9b66-8fc9d242a30a"
        },
        "item": {
          "id": "4d95ce21-4b93-44dc-8bab-0b66ed1db056",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ffc9722d-430f-4a32-b204-92bf4b81a727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1a60332a-5b1c-4b61-b44e-ed72ec390e37",
        "cursor": {
          "ref": "95e10f81-3205-4bc0-9a4f-28f8d9f3d9e5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8bcf4e61-b05c-47e0-9f5e-106d5aa0dfd3"
        },
        "item": {
          "id": "1a60332a-5b1c-4b61-b44e-ed72ec390e37",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9cb7b35b-a3ce-4f3f-8da8-e26ebbd5c32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a537c9c-4a46-42ad-b058-a3bfd931a6f5",
        "cursor": {
          "ref": "13501b9f-c474-43c5-a82d-3d0e5dfd3636",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f8190ec4-ef6a-43f9-b7a0-c37bc567017d"
        },
        "item": {
          "id": "2a537c9c-4a46-42ad-b058-a3bfd931a6f5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d9962b82-81ff-4d9a-bd6b-fcd39626fb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f5d8a8-6a73-4716-a564-fd061c2b178b",
        "cursor": {
          "ref": "bc3705dc-6f4a-4bfb-8ce7-8477a612ee62",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c243c0c3-7af5-4fe4-8f3c-bea7c2f95c73"
        },
        "item": {
          "id": "76f5d8a8-6a73-4716-a564-fd061c2b178b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7e3541bc-43c1-442e-84be-97d5e6b6a9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f867e7d-6c9b-4d09-938a-0b9187937c76",
        "cursor": {
          "ref": "a25534fc-2042-4a4a-9db6-ef44264167ce",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b3c1f4da-f7ff-417a-99cc-f504e8371b98"
        },
        "item": {
          "id": "3f867e7d-6c9b-4d09-938a-0b9187937c76",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1af4462e-a254-4bdf-bb41-baf548f13cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271e0343-be23-432f-ab3b-58b1d13e7231",
        "cursor": {
          "ref": "451e2cd9-8d26-42d4-b008-bbd650b360f5",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c2a65496-372c-4f64-923e-1f230b5eca92"
        },
        "item": {
          "id": "271e0343-be23-432f-ab3b-58b1d13e7231",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "650adc75-a330-4924-97ca-df5a618aba7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cc9ccf-058f-4ba7-9239-eac770a736b5",
        "cursor": {
          "ref": "fa439367-c2d4-4ccb-8c0c-b5c801f6d29f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ef4dd8e6-5281-41ea-83f0-925ffad9f258"
        },
        "item": {
          "id": "a9cc9ccf-058f-4ba7-9239-eac770a736b5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "134d9aa5-21e2-4538-9ca2-106b9f2c0adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef02590d-57f2-468f-9196-9ca5e2e6c7da",
        "cursor": {
          "ref": "137d2fc8-008e-451e-9534-9ecbd5a81e3f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1818faf7-4a63-4cb4-9f97-878a77dcfc49"
        },
        "item": {
          "id": "ef02590d-57f2-468f-9196-9ca5e2e6c7da",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ea1e21d9-8d36-4b8b-a998-46547675624b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76f0fbe-cc78-4718-bd73-12ad9f0dfb6b",
        "cursor": {
          "ref": "3692c3e1-ec30-44fa-8070-60c283e91dc0",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "54921558-52bc-4cfa-9d24-b19aa9b57985"
        },
        "item": {
          "id": "e76f0fbe-cc78-4718-bd73-12ad9f0dfb6b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ed8a3ef1-afe7-4295-a041-8d9e9541e114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83222ff7-86ea-46a2-bd06-f4163db7043c",
        "cursor": {
          "ref": "19b6c905-df75-409e-ac49-8992b7551821",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a1d1eaeb-e3f9-4249-90f2-2ee9de76584f"
        },
        "item": {
          "id": "83222ff7-86ea-46a2-bd06-f4163db7043c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "772a788a-c0aa-43e4-bbeb-b5fe785545c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647678eb-edb0-4244-b398-771b817be4df",
        "cursor": {
          "ref": "a44d9f41-20c5-4610-a3f8-eb7f5183325f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d4120555-1ce9-4b1e-bf62-478d0dddf253"
        },
        "item": {
          "id": "647678eb-edb0-4244-b398-771b817be4df",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "76b27962-a35d-4b36-ab0c-070b0691a795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d945ad3-86b0-48cc-9d66-b01bcdc10fff",
        "cursor": {
          "ref": "122819b3-4e95-47a4-aedc-cbef6a068561",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d977c01c-9688-4abc-8210-6a0786a814f9"
        },
        "item": {
          "id": "2d945ad3-86b0-48cc-9d66-b01bcdc10fff",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0323e090-c50c-4203-b68d-de94280c2c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f738e7-b1cc-4b44-8547-bac65fc8945b",
        "cursor": {
          "ref": "682c0b88-45e8-4478-a851-d66ef5cf9dab",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "daed1319-0bb0-4d0d-9594-bd74e642d184"
        },
        "item": {
          "id": "28f738e7-b1cc-4b44-8547-bac65fc8945b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c914582a-6e7f-4a78-94d5-990ff9be8ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a07a40-e437-40df-9ef8-e1b53ae37d4e",
        "cursor": {
          "ref": "633ba60a-bc62-4f08-bc41-80a2eb7ff379",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8fec8b00-2557-4957-98ba-f8a998161f44"
        },
        "item": {
          "id": "46a07a40-e437-40df-9ef8-e1b53ae37d4e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8c04e873-bb7c-4721-9e9f-5a7af34f486d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d44cd4d-7411-46e8-8a63-eebd7086caaa",
        "cursor": {
          "ref": "45c7e64d-338c-4566-a329-e9639d2972d8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "afa05bcc-50b1-401d-8dbe-621c0188bd32"
        },
        "item": {
          "id": "1d44cd4d-7411-46e8-8a63-eebd7086caaa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7a221e8c-ba07-4b20-b10a-a785ab5e11c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f253a456-c589-4f8c-9730-166db8ac0563",
        "cursor": {
          "ref": "034c744d-c44b-4592-8b32-1e2eef8cef91",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "068d6f37-2786-4a48-897c-b68d045c73f7"
        },
        "item": {
          "id": "f253a456-c589-4f8c-9730-166db8ac0563",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2ce9c2bb-9754-4e33-8685-19b067af0e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558efc55-b6bd-4b3b-9b0f-6c92c486eac0",
        "cursor": {
          "ref": "16e0e23b-85a8-46f8-9abe-7a69e24f26a1",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c4de7857-cb89-41a1-bef6-8b6d4b82bdf9"
        },
        "item": {
          "id": "558efc55-b6bd-4b3b-9b0f-6c92c486eac0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b6ed81ed-b976-43c2-bc16-5c6b35ca83a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1001698-9f84-407d-8ce6-433d4664cd4c",
        "cursor": {
          "ref": "2d117c07-b71c-48f3-a6f7-a7f25993f7a6",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a3afa2bc-8cbc-4417-a097-7de17cac8d29"
        },
        "item": {
          "id": "a1001698-9f84-407d-8ce6-433d4664cd4c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "32ba8b9e-a021-47ba-b4b7-979591b744b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e93d695-ff27-471c-908d-4a7d9f23a339",
        "cursor": {
          "ref": "04b5950e-e89e-44b3-a353-5049ff4ae7ba",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3f11560e-4e47-4f80-8f78-fd013a41949b"
        },
        "item": {
          "id": "1e93d695-ff27-471c-908d-4a7d9f23a339",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "42f36529-fe25-494a-b845-b7189ab0beef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb0de5b-79ab-47a9-b9ff-dc4fa8715179",
        "cursor": {
          "ref": "0f42731d-72d8-4715-98f1-a5cfb400460f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e8427fe9-eefa-4fad-91c7-d47d80476fc3"
        },
        "item": {
          "id": "3bb0de5b-79ab-47a9-b9ff-dc4fa8715179",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6cd01611-fb0f-4f01-8a23-cf10f16f610c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da124f86-52e6-4643-bbc1-06e33c5c9aaa",
        "cursor": {
          "ref": "a88e9e26-36f0-416c-bade-a45b34373e9a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8e70aeef-fb39-48ab-b8c7-1c0b6b42e203"
        },
        "item": {
          "id": "da124f86-52e6-4643-bbc1-06e33c5c9aaa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e6af654d-395c-4dfe-bfcd-795c2c407ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d989e5a-1e37-447c-a28d-34f4dc2e2db8",
        "cursor": {
          "ref": "28fecccd-8d32-44f5-a5b1-7e9165e0ea66",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1a8fc13e-8ffa-4993-86b1-d455ae575889"
        },
        "item": {
          "id": "7d989e5a-1e37-447c-a28d-34f4dc2e2db8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1da5bd23-2e32-42d8-b824-18b227b8b409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8041c9-35d6-4b81-a582-92bc5db08718",
        "cursor": {
          "ref": "3c8b01f3-af40-433a-adc3-28536b0293fd",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "20e29433-8ba8-46a2-a352-ddc483323174"
        },
        "item": {
          "id": "3c8041c9-35d6-4b81-a582-92bc5db08718",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fe6e0d08-b8e4-4d24-8d98-3bae5a6912bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1344f21f-cfc1-47b6-a266-95922d66cd73",
        "cursor": {
          "ref": "4f993dee-eb48-42e9-923a-a86b646a8d55",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bc58d280-4909-469a-8aa6-f7eadea3ac91"
        },
        "item": {
          "id": "1344f21f-cfc1-47b6-a266-95922d66cd73",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "663c5acd-1869-4867-aabc-67d0bfc70872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e45f33-84d1-4f9c-80b9-6bc298e0e648",
        "cursor": {
          "ref": "bd042e13-93b1-432a-a2c4-569ff3595bf9",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9b1a2c36-f557-45f9-988b-d1f855b7e929"
        },
        "item": {
          "id": "e4e45f33-84d1-4f9c-80b9-6bc298e0e648",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c985d2d9-a1a4-4587-9f66-946442a787ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e77708b-735d-4d7d-aa6f-c0e3f103b922",
        "cursor": {
          "ref": "7a803781-572e-4306-a8ab-abfa3c3afb9a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a80b5399-7687-4051-8c63-fc894b85b46e"
        },
        "item": {
          "id": "8e77708b-735d-4d7d-aa6f-c0e3f103b922",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eaeca0c3-38f4-4797-8297-3885116d4257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01adc9be-2760-44c3-9853-6cb7c48c0c91",
        "cursor": {
          "ref": "3a90f9f1-4684-499d-b784-b04fa0d2816d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ffa28bcd-5c40-434c-af5b-71c2ff48fe0c"
        },
        "item": {
          "id": "01adc9be-2760-44c3-9853-6cb7c48c0c91",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "af10ea6f-5dba-41e6-8a0e-049a20eb4086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9c34fa-f9ea-47b9-829a-03e6ae75eaa8",
        "cursor": {
          "ref": "5c7984f8-7a50-48c2-adad-e2dc14bf17a4",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "46a707db-febe-4b54-a6e7-30cb59948106"
        },
        "item": {
          "id": "cd9c34fa-f9ea-47b9-829a-03e6ae75eaa8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "52db5090-692d-4992-9265-0e0d29e6875d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb41edb-a46f-4a38-a1f4-fdf9f9c7832c",
        "cursor": {
          "ref": "fa6172d6-f6f3-481d-80e0-f5af5e22468f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3047a493-9025-4605-85aa-3317efaa2140"
        },
        "item": {
          "id": "0fb41edb-a46f-4a38-a1f4-fdf9f9c7832c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9ce0917e-6d84-4457-b488-a48e860fd65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d09d25-6c1c-404a-98e0-0ca2fb901b1c",
        "cursor": {
          "ref": "4a0d3747-b76e-415e-b48f-aef0aabfe2bc",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "faaefcd8-5a48-4db9-9021-80bdb30ab25b"
        },
        "item": {
          "id": "33d09d25-6c1c-404a-98e0-0ca2fb901b1c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3829fd17-28b0-4d9f-b5c7-775f85aeaa61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b519489-836c-47ca-97c7-21d055e3db7c",
        "cursor": {
          "ref": "a79442cb-6aa2-4bc2-850f-8f85a4e95773",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6e36c394-2b46-4bc6-bf9d-0b4cc56f480b"
        },
        "item": {
          "id": "6b519489-836c-47ca-97c7-21d055e3db7c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "83d4979e-2ce3-4e68-9df0-05a990a5cac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d25910-eadd-4ef6-bac7-182f3dbf59f8",
        "cursor": {
          "ref": "740f89b7-79e0-47b4-972a-56aeb50e882d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "320354d8-faea-4b24-b580-aae557312cab"
        },
        "item": {
          "id": "f2d25910-eadd-4ef6-bac7-182f3dbf59f8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2b8305fb-769b-407e-9270-e775e4de387a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ccc55f-493a-477b-9063-5ec6fbe746db",
        "cursor": {
          "ref": "3206af5a-e3c0-40ab-a110-eae447e68bd5",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0b552f11-050e-4ffb-af5f-7f28f22745c0"
        },
        "item": {
          "id": "05ccc55f-493a-477b-9063-5ec6fbe746db",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c2b74946-b069-4715-a401-d436c623efa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7965168-30d5-4c95-ad03-bfa7bf2ff41d",
        "cursor": {
          "ref": "b94b608d-4612-4a56-a065-7b90d231c29b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "df0cbc4c-e878-4330-a8c3-05751062c35a"
        },
        "item": {
          "id": "b7965168-30d5-4c95-ad03-bfa7bf2ff41d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fe81dd91-b481-4910-96bc-20d0b95c6385",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6711592b-2bf1-4ac9-8369-cedc8fda77af",
        "cursor": {
          "ref": "545871c4-cff3-4c74-8522-85411c537337",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "48093b0a-32bd-4a07-ba29-81a7dd883541"
        },
        "item": {
          "id": "6711592b-2bf1-4ac9-8369-cedc8fda77af",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "793f3bdb-3e06-40e2-a355-9a8803f855f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d026f6b-dde0-4e13-a945-c4204347a040",
        "cursor": {
          "ref": "70723bae-7dd0-4832-ab1a-a01623440e5e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ebea24d8-7d01-4b7e-879a-62d738bc5427"
        },
        "item": {
          "id": "9d026f6b-dde0-4e13-a945-c4204347a040",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5a208c88-9270-4c65-9014-8bc187c2beae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77ed71c-d48a-4a40-a1fb-fbd94be7b0b4",
        "cursor": {
          "ref": "11c2407c-b0aa-418e-9e48-a40c8e6fae16",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a708410d-f666-4a9e-a252-f46618351cd6"
        },
        "item": {
          "id": "a77ed71c-d48a-4a40-a1fb-fbd94be7b0b4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "89230e75-01a7-477e-9ed4-3706116925fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7ee822-8d20-4009-bb91-89ad1c266134",
        "cursor": {
          "ref": "d6cf3551-3265-4c3f-b160-3bf625f52b1a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bbcc79c0-6542-45bc-acbd-510b274e9f6c"
        },
        "item": {
          "id": "ff7ee822-8d20-4009-bb91-89ad1c266134",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b6390836-aa29-46be-863c-8ee9d4559bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3c02ad-5abc-4400-867f-1527336a95b1",
        "cursor": {
          "ref": "9f5aba8d-5254-4a36-b54e-38788d45abb3",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "92970148-a6da-4141-bdac-09ee5a1c5c31"
        },
        "item": {
          "id": "8e3c02ad-5abc-4400-867f-1527336a95b1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6890cd0e-68fe-432d-90bb-014dd8e02515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b0920a-7d6c-48f2-a7d8-657f21f82020",
        "cursor": {
          "ref": "a0e57c30-ffcd-43c8-aba5-261d5471c587",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d443eeff-266e-408e-8da4-0be795ee7509"
        },
        "item": {
          "id": "e9b0920a-7d6c-48f2-a7d8-657f21f82020",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b377c7a8-6429-4090-9307-c2f47614b757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea7a9ba-bba7-4879-8164-98e30803c474",
        "cursor": {
          "ref": "03aff332-195d-48f1-9a41-7e0e822ae533",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0aa9ec27-69b4-422d-ba4f-8a9a9448d79c"
        },
        "item": {
          "id": "dea7a9ba-bba7-4879-8164-98e30803c474",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a6133808-7bb2-4ed6-a5c3-6a9759abaf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6293c572-4c25-4d38-82e0-8b0a1e9c1211",
        "cursor": {
          "ref": "f427eec2-c799-4409-b52a-93b2d76e66fa",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6c4a80f6-05e0-47d3-a020-d78c144046ed"
        },
        "item": {
          "id": "6293c572-4c25-4d38-82e0-8b0a1e9c1211",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2a96950b-fa9a-40e3-b313-e89f1b9eceb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53fc6d1-38cc-4c7c-a981-e6415c89cb00",
        "cursor": {
          "ref": "2eefdbe0-93a6-442b-a1af-df26ef59b33f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4a27e9b7-2f7e-4f7e-8f2b-7222e658a0d9"
        },
        "item": {
          "id": "a53fc6d1-38cc-4c7c-a981-e6415c89cb00",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "34138510-26ed-4269-8c95-c3be529cdbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2879ae4-e9a5-4de6-b105-417dddd5be71",
        "cursor": {
          "ref": "d75fa909-b7f2-4012-8eee-cab7cee6b7aa",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f911a6f9-6ddc-4d18-8a3d-64456ccf15e0"
        },
        "item": {
          "id": "d2879ae4-e9a5-4de6-b105-417dddd5be71",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e484c0db-86f2-4bb5-8a6a-33a5fbeaa6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958afb1b-1009-4af1-a7d5-dfb756b99453",
        "cursor": {
          "ref": "23a4dca7-c4b0-4345-a267-260b6db55736",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cc38e4a7-4be2-4659-a7fb-305f393df99e"
        },
        "item": {
          "id": "958afb1b-1009-4af1-a7d5-dfb756b99453",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "02af637e-210f-45f9-8a54-d34e5680335d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6820f74a-aa34-43b0-8492-621ecf990372",
        "cursor": {
          "ref": "126f62b5-de0f-4e73-a3e9-c48cdb2898f8",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "762a0dee-50b7-4ad3-ad65-328bf19fb32b"
        },
        "item": {
          "id": "6820f74a-aa34-43b0-8492-621ecf990372",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "209e1c38-f2a2-4b36-bffb-8bc52fe46277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef8bfb4-edeb-4b7f-b780-77c0bcc47fc2",
        "cursor": {
          "ref": "c98ebe7f-5bd4-4958-8c92-f266443d9323",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "58739012-2acc-4a0c-9b41-37a0cb827d7c"
        },
        "item": {
          "id": "5ef8bfb4-edeb-4b7f-b780-77c0bcc47fc2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6502b2ef-479b-4d1e-9070-9a86c26eccbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ed90cb-c108-49ea-975b-31c1155fd06d",
        "cursor": {
          "ref": "967d36e5-3da1-4b6c-bb32-5cbf1eea4892",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "faed8940-aa3f-4e16-8417-29c2b3f0fbb7"
        },
        "item": {
          "id": "18ed90cb-c108-49ea-975b-31c1155fd06d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7957cb35-4e55-45ca-a4e2-dc3d6f80e210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde0ddd8-e3e9-4da0-b108-d023bf6736a4",
        "cursor": {
          "ref": "58d63152-af78-4b6e-994f-281ad1e807a4",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1a906bda-b6c8-408d-a72a-3815df6a5722"
        },
        "item": {
          "id": "dde0ddd8-e3e9-4da0-b108-d023bf6736a4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "aa441ef4-cfe5-4170-8875-83e66dd8bd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56d43a6-4b05-4f80-86ba-779dcdd1ef20",
        "cursor": {
          "ref": "99cf5f32-c029-48a6-8569-d3ba84c7f537",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5eb96cd0-6a6e-4d9b-9d53-945058bf1a2e"
        },
        "item": {
          "id": "b56d43a6-4b05-4f80-86ba-779dcdd1ef20",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ddea8e04-7670-4aa0-a65b-966bbdfa92ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0073de59-79e5-4b8c-bd84-584dd91c3627",
        "cursor": {
          "ref": "5051d7f3-b90f-422d-a86f-33d29aea6888",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "991a3db7-a9ac-4d35-8e1c-90b2b774ed22"
        },
        "item": {
          "id": "0073de59-79e5-4b8c-bd84-584dd91c3627",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "779e5924-729e-44d3-9135-3e826548ea98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a420434-bbff-4d0d-b75a-433ea684c79d",
        "cursor": {
          "ref": "f36fac46-68c9-41c5-9888-5e11ef71332c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4fde7514-fe21-493b-bc6b-cedd7473468c"
        },
        "item": {
          "id": "1a420434-bbff-4d0d-b75a-433ea684c79d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c7268838-71a4-405f-a52f-fb99dc92aba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73cc640-fad5-41cc-87e5-faae9e7ca156",
        "cursor": {
          "ref": "36e8d301-d519-49d8-b7db-1ad9c2e70f57",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e295b410-e6c1-4058-a7d6-983c82c566f5"
        },
        "item": {
          "id": "d73cc640-fad5-41cc-87e5-faae9e7ca156",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3cb9fe38-d16b-46fc-9eb8-5d09f5bf06d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92630b6d-7db5-4a0e-8c23-54346e23773d",
        "cursor": {
          "ref": "d1557b5c-e5e5-41ba-b244-217f3d766361",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c41996a8-8810-4ec0-a80c-0da1a97dcd66"
        },
        "item": {
          "id": "92630b6d-7db5-4a0e-8c23-54346e23773d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9d77bb25-6ff2-4690-a2bb-e14474d81549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461d2eff-2e71-4832-9297-2df637a6ffa5",
        "cursor": {
          "ref": "6854413c-0cca-4343-83fc-d092cb17c1c9",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "539b60df-bcf5-4153-b911-0f3a93b04352"
        },
        "item": {
          "id": "461d2eff-2e71-4832-9297-2df637a6ffa5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ec8baea4-6a57-407d-a7b1-a27bb675b3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81843a98-f4ef-433d-b8d6-6aba924b2953",
        "cursor": {
          "ref": "6dc71218-39fe-47ae-a28e-773fdbb940c2",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3ae129ea-8de1-4d74-acc5-cd1f2a2ee71f"
        },
        "item": {
          "id": "81843a98-f4ef-433d-b8d6-6aba924b2953",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7ea397d3-1657-476b-9eb5-a6bc59d2f0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea161dc-64e7-4c8d-ad51-245a795befaa",
        "cursor": {
          "ref": "975b6653-f977-4f18-ad95-30e09a527887",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1bf67f26-150f-466e-a8c0-5b575d1e1a31"
        },
        "item": {
          "id": "8ea161dc-64e7-4c8d-ad51-245a795befaa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b81ed561-4082-4464-b8fa-67823e95cfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9fbd22-a774-4ae7-a4fe-f2f00f91b282",
        "cursor": {
          "ref": "ea663b1a-86cb-4e34-b79f-cd83908cac07",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1622f2ad-74ca-4d2a-8449-d609b453d2e6"
        },
        "item": {
          "id": "fe9fbd22-a774-4ae7-a4fe-f2f00f91b282",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a28891f1-8b91-462e-8294-5fe3a6aaba92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea1a1f9-e3dd-4dcf-b002-1328dbffc8dd",
        "cursor": {
          "ref": "25d85eca-ee9a-4a39-842e-4755715ba355",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3c813882-cf32-4718-a48d-69c7ed41ea3b"
        },
        "item": {
          "id": "6ea1a1f9-e3dd-4dcf-b002-1328dbffc8dd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eb555c04-d20b-46c2-949a-2058cc277d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3d7287-ec41-4114-8bf2-f291731390e3",
        "cursor": {
          "ref": "a3896aef-83e1-4eba-a489-361dedea47d8",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "71476861-25d6-44b5-9506-1ddda5757307"
        },
        "item": {
          "id": "9b3d7287-ec41-4114-8bf2-f291731390e3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6ec2fa04-d388-42ca-a566-da3cb7ab0761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b712dba-19b5-4012-a3e7-c2a3984882fb",
        "cursor": {
          "ref": "1528642b-5a17-4c79-ba0e-fb6f97cb5df0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a396bef0-6b1f-4c7a-970d-0700879ccb85"
        },
        "item": {
          "id": "8b712dba-19b5-4012-a3e7-c2a3984882fb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0d697334-9ef9-4acd-b6f1-da18bda1f399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08eca5fc-ac37-4ad6-8d48-b872f0d7c01d",
        "cursor": {
          "ref": "26c9dc8d-8008-40f2-bcf4-0f898acb0f81",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3667b9d5-5f4f-45a8-abba-c1f1e484abd7"
        },
        "item": {
          "id": "08eca5fc-ac37-4ad6-8d48-b872f0d7c01d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "453ee847-b2e8-49a1-b4b6-0ea4107bbe96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918608bf-0ddc-40aa-b0c5-3a1159540590",
        "cursor": {
          "ref": "5344a9d0-b8b0-4be4-a5ec-9a61fa091661",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "471bd0bc-3f8f-4d1d-bdb8-867de180cf92"
        },
        "item": {
          "id": "918608bf-0ddc-40aa-b0c5-3a1159540590",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "069ec579-c52d-4211-83d3-0d00062ae3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72ef9aa-efbd-4018-a740-fc4ca1d969f9",
        "cursor": {
          "ref": "4bf0dbff-f5c5-4f91-8ec9-0d33a2650280",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "73e1993b-398d-4e4e-bd8e-6a7dde1e99c1"
        },
        "item": {
          "id": "f72ef9aa-efbd-4018-a740-fc4ca1d969f9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "301f90e7-add5-49b3-9fb9-abb96679a7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901c7760-22a8-42a6-b1cf-ad00b0665ba1",
        "cursor": {
          "ref": "62fd31e5-09f4-4c0b-8fec-4c1eaba16058",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "749e44d9-7426-4350-b1b2-4dcae25d7962"
        },
        "item": {
          "id": "901c7760-22a8-42a6-b1cf-ad00b0665ba1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e9dc9cb5-c6dc-43b1-92fe-29b7ac94b738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b107f60-53e2-4955-8195-a7c429749dee",
        "cursor": {
          "ref": "3e4b8f9a-db30-4291-993c-9b807169733d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e6772b04-99c5-4192-bf69-93f69e33b1d2"
        },
        "item": {
          "id": "7b107f60-53e2-4955-8195-a7c429749dee",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "13c7bcac-31f1-455d-8232-4db870aa762e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a4fa42-db81-4c7e-aeca-88362d5f7676",
        "cursor": {
          "ref": "7d83f3ce-f374-4c64-b70c-6f65258d7fb9",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "81a265ec-0d46-4101-98f7-6ffbc805796c"
        },
        "item": {
          "id": "83a4fa42-db81-4c7e-aeca-88362d5f7676",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "46584943-fa81-4cb3-9681-92f290edaec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5102d25d-734a-4abe-a453-41c878aecf27",
        "cursor": {
          "ref": "c5be585a-749b-44ff-9d62-149c54cb1e32",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ef752e93-4e60-4c99-9d63-c5eb4c29a3d3"
        },
        "item": {
          "id": "5102d25d-734a-4abe-a453-41c878aecf27",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "463360e9-d208-4334-a6a4-98fc2fcfad22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dd09a5-e463-42fa-9165-359b67fb6373",
        "cursor": {
          "ref": "b017977a-e45f-4a3f-a3d4-4a342defe9b7",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5737488d-5c4b-4383-b473-133d60a1a612"
        },
        "item": {
          "id": "63dd09a5-e463-42fa-9165-359b67fb6373",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "873f60ea-e21a-4d2d-81e2-97dde5bbddd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790274c1-e3aa-4316-b2a7-2965f9afb421",
        "cursor": {
          "ref": "7d332b0c-633e-4080-9969-6d0ee1e5419f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "83613664-29a8-49f2-8aff-708415460825"
        },
        "item": {
          "id": "790274c1-e3aa-4316-b2a7-2965f9afb421",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "379faedd-a837-4e57-be72-05190406a317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d36dd66-8ea6-4b49-b5e1-348d78925dc6",
        "cursor": {
          "ref": "0e32160f-96a8-41c7-93f0-fde7adf89565",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f337ce5d-cf34-4bdb-a373-c38e01b113eb"
        },
        "item": {
          "id": "0d36dd66-8ea6-4b49-b5e1-348d78925dc6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6596b5f8-5d3b-451e-9e6a-6922eb369da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b90d46-4baa-4ca2-a6c3-915898058e8d",
        "cursor": {
          "ref": "d28c528b-0748-4c27-8128-af1ba2bf68ba",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5e3e4bc3-08ca-4a80-81ea-564a9128e22a"
        },
        "item": {
          "id": "e6b90d46-4baa-4ca2-a6c3-915898058e8d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "072cce8c-ad2d-449d-a8fd-f20ea2ec0934",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee66dd1-ffd2-4399-bec4-163d70f361a4",
        "cursor": {
          "ref": "3ad87f17-e9f1-403e-ba27-5cde2a955d1a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "41be7423-9625-4a6f-92e3-b64466b53bc4"
        },
        "item": {
          "id": "3ee66dd1-ffd2-4399-bec4-163d70f361a4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1d24c93a-c56d-4feb-847e-9aa98faf56b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaa927e-2b28-4619-b24b-db269c6023f6",
        "cursor": {
          "ref": "22514e31-a14e-4243-bc9c-b797da730ef7",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ed55dbae-1bd6-4a16-acbf-959f67acad85"
        },
        "item": {
          "id": "cbaa927e-2b28-4619-b24b-db269c6023f6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "86616c51-06b4-4cf9-a6d8-09b17afcae26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed42a8b-2939-4e84-92c8-58ffc6d5cd6a",
        "cursor": {
          "ref": "61fd2419-f9a9-47e7-8e43-b0dcf55e495a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7c7cf566-1899-4254-bf7b-af20df3e2ea6"
        },
        "item": {
          "id": "0ed42a8b-2939-4e84-92c8-58ffc6d5cd6a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "49d5a56d-da08-4818-afc5-2630851c2562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d4427d-5f2a-4e5c-82b8-0610b6756df9",
        "cursor": {
          "ref": "df61c190-0bb8-4296-949a-363e44ba2da5",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c985e13f-acbc-4e59-95ea-2d02f97f2528"
        },
        "item": {
          "id": "44d4427d-5f2a-4e5c-82b8-0610b6756df9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cc1a200e-cd7c-4710-8f04-d23dcf36a65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39011aba-e16d-47a5-902d-2f7d27e57f4f",
        "cursor": {
          "ref": "d65f030b-8e03-4c79-a4ab-7dea9364151a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e601f858-65de-4add-b231-cac7f5bf2f11"
        },
        "item": {
          "id": "39011aba-e16d-47a5-902d-2f7d27e57f4f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b78b0946-fd55-4904-a5ea-c1de41a761a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb6389f-3f8e-4d0f-a53d-ea22817ce998",
        "cursor": {
          "ref": "de06b9de-9831-485e-99fe-ea59b2fc8f5f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a7fa687d-d885-420b-b354-7f5ba3258737"
        },
        "item": {
          "id": "bfb6389f-3f8e-4d0f-a53d-ea22817ce998",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "105f370c-7f6c-4e25-aea5-d71992533f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd42d4ee-f2e9-4d88-ae4a-e2084e1b733b",
        "cursor": {
          "ref": "50e6ab4f-3593-4544-9204-823336e4c083",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1707542a-f69e-469e-bf61-88e5ec6c197e"
        },
        "item": {
          "id": "bd42d4ee-f2e9-4d88-ae4a-e2084e1b733b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "67ac8783-6371-4942-9de8-9a333d0434ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e661058-af4f-4013-8ad2-ddef28b927f2",
        "cursor": {
          "ref": "f2d0d852-9f35-4a50-894f-41bcba39d704",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4229e988-c20a-4b39-9970-c0912e5c6b29"
        },
        "item": {
          "id": "8e661058-af4f-4013-8ad2-ddef28b927f2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "14e1fd97-66fc-4ab2-a204-fec1b8df4b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec813730-8d06-439a-9cd2-c3cc54febdea",
        "cursor": {
          "ref": "330adc59-1f65-4ee9-acfe-db82c66cd34e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "02d34a55-3366-4730-8978-0bbdcc480777"
        },
        "item": {
          "id": "ec813730-8d06-439a-9cd2-c3cc54febdea",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2576a012-a7d9-4f18-87ac-5409bfc3e718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95318f9-5385-4170-a1aa-509c90c1e326",
        "cursor": {
          "ref": "dad84e56-7f0e-41c8-bb06-892de45dfc2f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1b071d40-2b8a-48c9-baaa-c51c0b1514f4"
        },
        "item": {
          "id": "b95318f9-5385-4170-a1aa-509c90c1e326",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8c569efa-62bf-4588-862c-7f21d585a7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9499d0c4-1f4f-4b00-8f3b-473e496f0885",
        "cursor": {
          "ref": "6fea2327-894a-4201-965d-0d29c0493fe1",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bb1180bd-a665-4fc4-b435-4a2a905ae015"
        },
        "item": {
          "id": "9499d0c4-1f4f-4b00-8f3b-473e496f0885",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2176eaf9-8fa0-44f1-b76e-f4215b9c6983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ccc57d-cd55-4302-96f9-4cb64dbe7af4",
        "cursor": {
          "ref": "858058f2-79ac-4d4a-963f-f6b7f1f5c411",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "57765c26-9b2f-4432-8d80-36d23de3be46"
        },
        "item": {
          "id": "51ccc57d-cd55-4302-96f9-4cb64dbe7af4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "03161309-c591-4896-a908-a3d660b1c6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dec3ea-1d0d-45b2-92d4-a042778c41dd",
        "cursor": {
          "ref": "a6c7a04d-b595-46ef-9c16-110e32ac618f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "17201ac9-c0f0-4027-99c9-a8436bc2e8a9"
        },
        "item": {
          "id": "71dec3ea-1d0d-45b2-92d4-a042778c41dd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f13186b8-9f18-49d4-abca-267f4c51d366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbfdb09-6d7c-4a36-82f0-f835033adeeb",
        "cursor": {
          "ref": "63cee7ba-2421-4e33-bda0-55f6e285b89f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b3ca0a53-983c-436e-bcc5-824d09385b66"
        },
        "item": {
          "id": "3dbfdb09-6d7c-4a36-82f0-f835033adeeb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "82fb73ec-2d3a-499e-99e1-958331ac6260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8cd99a-a5d8-4701-9609-7aa8c8c5f435",
        "cursor": {
          "ref": "17f1cc34-d389-49cd-8b0f-05bd188d21a2",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f12e8911-dc85-4ec8-ae9f-68187646dbc8"
        },
        "item": {
          "id": "0d8cd99a-a5d8-4701-9609-7aa8c8c5f435",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c7545cb7-ae10-4161-8add-c95565700578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bb0b42-81a0-4596-bef0-3f3b095edf34",
        "cursor": {
          "ref": "19e3ad3d-0c29-4656-9170-e1a1736f6b62",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6e098571-a40d-4ffa-b6d6-15337b0fec6a"
        },
        "item": {
          "id": "85bb0b42-81a0-4596-bef0-3f3b095edf34",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b52b4a77-620c-44cb-84cc-5fcdb0f59795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc44700f-3dcc-44a3-8ead-ebf48fb54f1d",
        "cursor": {
          "ref": "0f986167-cb7b-4b3b-bf9e-f0fbd495bb11",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c536ffd6-a58e-488b-a60d-ed46918e4e61"
        },
        "item": {
          "id": "bc44700f-3dcc-44a3-8ead-ebf48fb54f1d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c2ea50ba-a66d-489c-ab2b-df0f379259fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6a3b07-93ac-4a01-854c-04779b72aeab",
        "cursor": {
          "ref": "66256f93-2ba8-4753-8a28-bb386a68dcbd",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a1addd21-ad47-4baf-8080-c2eb1fdb6447"
        },
        "item": {
          "id": "ca6a3b07-93ac-4a01-854c-04779b72aeab",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4f1e304d-94cd-4c85-a692-22e3a7c9b9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf66f55-6b00-447a-b516-96008bb32b20",
        "cursor": {
          "ref": "6209a272-0aa3-480b-8270-e0f0ae63726d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "341b2445-43c1-400e-94d7-3d771cd07090"
        },
        "item": {
          "id": "bbf66f55-6b00-447a-b516-96008bb32b20",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4c1ab2ea-2a2b-4983-90ce-58bcfcde37c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a535900-9201-4852-8408-8e99391cb132",
        "cursor": {
          "ref": "619c2c94-ee3c-4793-9a3a-9159887b4dee",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b5289217-8eef-4c98-a258-bdc9dd15fb06"
        },
        "item": {
          "id": "2a535900-9201-4852-8408-8e99391cb132",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "20bd55e3-dfe0-405a-8748-235f2e0343f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd5ee6b-2941-4595-9ac4-656c99355a34",
        "cursor": {
          "ref": "1aaede88-f1b7-43b2-aa09-0f3c3785e720",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "262a8fe9-9f98-4dee-afc6-b374b6ba00f0"
        },
        "item": {
          "id": "6cd5ee6b-2941-4595-9ac4-656c99355a34",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7764d70b-fa4e-4588-9486-787a15e11b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f546c0e3-3fd0-4b2d-a252-6ef7bde948ad",
        "cursor": {
          "ref": "a02589ed-3c02-4cd7-aeaf-d60fa2b663cd",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1fb72062-65ed-4924-a292-dd032ad50bf0"
        },
        "item": {
          "id": "f546c0e3-3fd0-4b2d-a252-6ef7bde948ad",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e5600550-f2b0-4a91-a3ed-986b5b3a7fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e196a4a-cf6c-46e0-8365-765f485e21cd",
        "cursor": {
          "ref": "1554c2fd-5b5a-48d7-88e3-575ccf905f11",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5cf5f7c2-083a-40a6-acd5-8a56f2a603a0"
        },
        "item": {
          "id": "2e196a4a-cf6c-46e0-8365-765f485e21cd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "49dc8c78-409e-4b11-a328-01721aa58f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fee73c7-6dbb-4c58-8f81-d9b77798cb94",
        "cursor": {
          "ref": "7f158fd2-b978-4081-b5d2-f9bc1e2cf378",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "56bdb304-17a8-40b2-99a6-60a95a0056d0"
        },
        "item": {
          "id": "8fee73c7-6dbb-4c58-8f81-d9b77798cb94",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5bdb90a6-f967-4da2-b495-d90539561ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbbc5db-08ab-41eb-8602-7049a7c22cdd",
        "cursor": {
          "ref": "aa567fb4-e5ff-4010-bf47-e918fe6ba8b1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a9cc15a1-3850-4005-885f-a6c82103f65d"
        },
        "item": {
          "id": "acbbc5db-08ab-41eb-8602-7049a7c22cdd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b0fde09d-0113-4cb8-ba42-ce06faff1ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3c3b9e-d86a-4b6e-b0d1-bb5e96dd55f4",
        "cursor": {
          "ref": "a85d1b29-5566-4d3f-af2d-b87eb10843eb",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "09c55e65-231f-420f-8b73-746fe4594f72"
        },
        "item": {
          "id": "df3c3b9e-d86a-4b6e-b0d1-bb5e96dd55f4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9f3f2516-1a6e-4d8f-a8fa-251df40111b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23de2287-b651-49ef-b85e-2ccd4732e5f4",
        "cursor": {
          "ref": "bde3cd9a-6d34-4028-8812-1bf2d2c7633a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5b2b878f-8782-4fa9-a22b-59c55fd2a424"
        },
        "item": {
          "id": "23de2287-b651-49ef-b85e-2ccd4732e5f4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b7c55c8f-b307-49ac-8cc2-2421d533de9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de6fe96-af56-4fe9-aaf1-9682c92792c8",
        "cursor": {
          "ref": "42198ea2-7a37-4b0e-9df0-6a854e4fa951",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6b74d199-f106-4783-b559-c8ef1f385d58"
        },
        "item": {
          "id": "7de6fe96-af56-4fe9-aaf1-9682c92792c8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "647ef067-039a-42a7-80a7-6018cb5a6072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911e4516-7477-4491-bed3-2d1b611e98a8",
        "cursor": {
          "ref": "bb11f80e-dd53-4ae9-b119-f84eaae7ae11",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7a752f9a-4f0e-4e60-a585-d46844807e9d"
        },
        "item": {
          "id": "911e4516-7477-4491-bed3-2d1b611e98a8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c7ea93c8-b170-41e4-ac16-ae95a9d0f6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae687399-657b-4078-b77a-a03b0ce70198",
        "cursor": {
          "ref": "f73c5fd5-e8a8-4f87-b7e2-6799b4da4220",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "873c4244-3c4c-48b2-bf9d-f7f47486f48e"
        },
        "item": {
          "id": "ae687399-657b-4078-b77a-a03b0ce70198",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cafa52e7-2e26-4e41-912f-37cbf5c61cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664dbd72-0eb5-4c67-b811-0838ce1dc5d6",
        "cursor": {
          "ref": "8c0df5f0-43ec-46bd-bb57-168d608cf569",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "36f5fab0-a54c-4f79-b94a-5f33abdd085b"
        },
        "item": {
          "id": "664dbd72-0eb5-4c67-b811-0838ce1dc5d6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7bacb554-623b-4f9c-8a18-4d342577940f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0690458c-d64a-4533-bc3a-14054fa589f0",
        "cursor": {
          "ref": "bf272d44-d195-4aa4-ac82-9c29d439c282",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0a03c78f-c47b-4bdc-9154-f2e5fd3d918e"
        },
        "item": {
          "id": "0690458c-d64a-4533-bc3a-14054fa589f0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dafa8a34-b0c0-43f9-95f7-4df26fcee4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85cd97c-6dde-4be1-b59d-c47afe7f45d9",
        "cursor": {
          "ref": "90beaf80-91eb-4848-87e4-ea2aebcf5985",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d64662ec-9890-40fc-96b9-72591da6fac2"
        },
        "item": {
          "id": "b85cd97c-6dde-4be1-b59d-c47afe7f45d9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f824dea3-8e82-42fa-a1cb-357a1cd175f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b030582-a8be-4b84-a3a3-d7d07d9068ec",
        "cursor": {
          "ref": "132d2629-cdf3-4846-84fb-dd7295bcb8db",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bea27910-6f31-44ce-b770-cf98fb4c563a"
        },
        "item": {
          "id": "6b030582-a8be-4b84-a3a3-d7d07d9068ec",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3472d69c-1d7a-4f39-b784-12e3f0206f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4245f6-ec5c-4524-ab3d-fa55c7ce5b74",
        "cursor": {
          "ref": "e2dee923-7412-4474-a26c-f3ca532e6c4d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "21c37d64-d592-4624-966a-8e32bedbead6"
        },
        "item": {
          "id": "5f4245f6-ec5c-4524-ab3d-fa55c7ce5b74",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b560f53b-b0a3-4513-a7dc-4164a9ea83f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5ec040-2ff0-4e1c-9e02-5295ca43ce51",
        "cursor": {
          "ref": "0da17409-5eb4-449f-9ca8-ba7bb09cc4b8",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a322e695-9e38-41ae-b4cb-5147e10404c4"
        },
        "item": {
          "id": "8c5ec040-2ff0-4e1c-9e02-5295ca43ce51",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f62bc358-e33f-4552-9b7d-f10e2bcd9064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b32754f-fcb9-4070-b477-86d64c284a6e",
        "cursor": {
          "ref": "77f95e27-1c49-4021-a297-3e2e3bfe7f1f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2242ef62-3eb0-4b6c-961a-69198f4295ea"
        },
        "item": {
          "id": "0b32754f-fcb9-4070-b477-86d64c284a6e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5ade1f43-076a-4df3-b8c0-bb3c194736ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3cf30a-18ed-42d0-a095-ee367010cff1",
        "cursor": {
          "ref": "567af321-8480-4fa2-b40a-417ccbe29ce4",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6f055c02-c751-4d3c-b23c-deea736a215b"
        },
        "item": {
          "id": "6b3cf30a-18ed-42d0-a095-ee367010cff1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "950ed3cf-bb7d-467c-950e-9cc769a6c386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8f86e3-97d5-4259-b769-24c594b0ea35",
        "cursor": {
          "ref": "244db300-967a-4de4-8657-cb8b704325d9",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e206c73f-8d9f-45ef-9565-59c69c79f6ca"
        },
        "item": {
          "id": "5c8f86e3-97d5-4259-b769-24c594b0ea35",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4a1af572-7525-44d3-ad06-3a9ed040926b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732f1104-3b61-4634-9eec-17093746d7a1",
        "cursor": {
          "ref": "5ff95070-0f0d-412f-830b-cd368398fadb",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f6182494-907a-4568-b2d2-a35a454e5e7e"
        },
        "item": {
          "id": "732f1104-3b61-4634-9eec-17093746d7a1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0eefa40f-06e8-4dca-b8a8-28107a8408be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d374470a-5e52-418c-a678-fba56ce0488f",
        "cursor": {
          "ref": "4760d1d0-4880-4c0f-b1de-b01a46250897",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8037a836-3470-41d7-81f8-afc923f6dc51"
        },
        "item": {
          "id": "d374470a-5e52-418c-a678-fba56ce0488f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "76d8465a-6ae2-438d-a95d-eb9eb5a44a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475adb68-d0b3-4765-a5a0-f5eeb3c742cf",
        "cursor": {
          "ref": "17e727f3-1573-4401-af3a-f7144db7cd44",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ea17d1c1-01a4-437b-a7fc-6971fd701dcb"
        },
        "item": {
          "id": "475adb68-d0b3-4765-a5a0-f5eeb3c742cf",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dd28818d-97d0-4e1a-bced-a8c5765bbd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e804b9-084c-42da-9592-e86fc0caca26",
        "cursor": {
          "ref": "ec459835-cc40-4d9f-8a6e-38da6943a8fb",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8b4a2707-5a42-46ce-8825-8d5472db7803"
        },
        "item": {
          "id": "c4e804b9-084c-42da-9592-e86fc0caca26",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b3091ef3-9981-407a-83d7-c425a8af17ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d6a0ed-29c4-4df0-9b3a-423064c1766e",
        "cursor": {
          "ref": "12adc963-53ae-4682-b64f-9e1665230772",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ce7fdcee-d033-4c4f-a4e8-685a03131511"
        },
        "item": {
          "id": "95d6a0ed-29c4-4df0-9b3a-423064c1766e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5ccac5ac-b4cf-4569-8a29-667cd1d85c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f186dd2f-d1c8-4bb5-ac29-e51b77c3d92c",
        "cursor": {
          "ref": "6aff3983-260b-48e6-8c00-35e6032331e0",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e46af523-9eb0-4bd2-8a3a-a639302114d1"
        },
        "item": {
          "id": "f186dd2f-d1c8-4bb5-ac29-e51b77c3d92c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0321edfe-e807-4dc0-aa7c-3b729ccfdf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f8f26a-fb21-4599-baaa-d31108747a00",
        "cursor": {
          "ref": "ed9363a5-c35e-4364-b2a7-6f006b3aa2f1",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3210b131-058c-4d33-9928-0cf127eb5b81"
        },
        "item": {
          "id": "f2f8f26a-fb21-4599-baaa-d31108747a00",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "88c4e918-ce92-4853-9efc-242ad58bd6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d51afa7-5ae0-4530-8f13-706a6ad09ffc",
        "cursor": {
          "ref": "b7edd309-08a9-433b-a377-2ce41263fdb0",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6a9ac667-d51f-498e-8e41-ec0c740224fe"
        },
        "item": {
          "id": "9d51afa7-5ae0-4530-8f13-706a6ad09ffc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "92de4b25-1162-40b0-aa5f-2134845a0ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688815cd-c5e0-4232-a1d9-893fdd7f76dd",
        "cursor": {
          "ref": "61019589-dbcb-44d2-8507-86de3193d388",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6e750220-a426-4c67-bd2a-64bcbf837f90"
        },
        "item": {
          "id": "688815cd-c5e0-4232-a1d9-893fdd7f76dd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1925bc95-28cc-4b68-ad87-5e4b3b5f761a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191de3e7-407d-42f1-8129-b078df25bb90",
        "cursor": {
          "ref": "7364ad3d-de0e-424d-a0a9-4c49f78db8e7",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7ff1a197-09d5-4a50-a30f-008e1d93d3fd"
        },
        "item": {
          "id": "191de3e7-407d-42f1-8129-b078df25bb90",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fdfe18c8-64da-495a-90d1-e2435b4dcbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e993e1a-e584-411e-97dd-a49efe1a69d4",
        "cursor": {
          "ref": "5462f6c9-592e-407f-979b-f2353e43ac9a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "60eb8a38-4c9f-435e-aed5-2d4a4c880f01"
        },
        "item": {
          "id": "0e993e1a-e584-411e-97dd-a49efe1a69d4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "37a2a27b-c95b-419d-a1ad-c401f2e627f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a13a743-8848-4837-ba41-52c00b9a08e3",
        "cursor": {
          "ref": "fd0e14e3-73fe-4c2e-979d-c2c40e896b72",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "caa0b181-36e5-4ca7-aebd-b812b7a8950e"
        },
        "item": {
          "id": "9a13a743-8848-4837-ba41-52c00b9a08e3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5932a35d-ea79-47e4-bc92-dd955321e1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc8e6f1-51fd-40bb-82b9-1267dd88a031",
        "cursor": {
          "ref": "c95f760e-32fd-4d09-a98c-0e5dbf03dda8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ea6169f7-374b-4027-91ea-872e79a32383"
        },
        "item": {
          "id": "cbc8e6f1-51fd-40bb-82b9-1267dd88a031",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0b6764e6-6bb7-47cf-bbc5-a96434797d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475e4c14-7261-448a-b5a9-774e22b3c8ce",
        "cursor": {
          "ref": "0e17cec8-6cab-4734-8595-58c1d034921d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d15fa332-115c-4209-8a92-dfec122bd5fa"
        },
        "item": {
          "id": "475e4c14-7261-448a-b5a9-774e22b3c8ce",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f1f2d7fa-3517-4101-b5a2-6a2813ace8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec9a271-6f45-4f2a-bf45-61f7a529c83d",
        "cursor": {
          "ref": "b02d795e-484c-4faa-a87a-fe1d403abdb1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e7225068-76ad-4e6b-bdf9-947c9c3b5af4"
        },
        "item": {
          "id": "aec9a271-6f45-4f2a-bf45-61f7a529c83d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "930320e8-02ec-4b21-9e84-9a2e017225c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31659042-f338-4dba-9846-2101a9868ebe",
        "cursor": {
          "ref": "8c432b7e-f1e3-4f12-9422-25a38aef62c3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6ff1c4f7-3153-46af-b1bf-ad4df32bb888"
        },
        "item": {
          "id": "31659042-f338-4dba-9846-2101a9868ebe",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3ac44201-f022-42d1-890e-32fd2d993264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0a66ec-a6dd-4683-964c-745024c32345",
        "cursor": {
          "ref": "1e17967f-07d9-4711-b5ed-e4efc4542405",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f719c7e6-bb12-4c97-9c24-9ab78b40607f"
        },
        "item": {
          "id": "1b0a66ec-a6dd-4683-964c-745024c32345",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c2459516-4bb3-4cd2-8cf6-d19afff7ef71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00660036-6a9e-433b-b887-3cc5b27570a1",
        "cursor": {
          "ref": "2ac5eb1d-1773-4b73-adad-48212b19cf55",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "954037dd-1abc-4958-b5e7-78f5a15d9669"
        },
        "item": {
          "id": "00660036-6a9e-433b-b887-3cc5b27570a1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fd99d5bd-cdb4-42f1-9d0a-eec53cf267f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc6c1f7-c63a-4735-9a34-f3c614e8e103",
        "cursor": {
          "ref": "b00531cf-9090-493c-a40e-16db47f942e2",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fe316386-e173-4350-a1d2-c46965544063"
        },
        "item": {
          "id": "6fc6c1f7-c63a-4735-9a34-f3c614e8e103",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e6e5144c-b9a3-4c96-92ef-232d7cb4a46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f130d027-18a3-4450-9ae3-9d8099900b9d",
        "cursor": {
          "ref": "46487483-ee9d-476c-94b4-2617072a2975",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4499a631-cbec-4c0e-8b41-bec6812d4f6b"
        },
        "item": {
          "id": "f130d027-18a3-4450-9ae3-9d8099900b9d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d34584cf-944d-4c12-ba46-f21465c2e81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972ca72f-760e-4f9d-b5e6-833a2c4664c9",
        "cursor": {
          "ref": "9612b74f-f241-417d-810e-2c3d248f5caf",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f90a67c7-2e2a-4235-aaa1-24cccf90af80"
        },
        "item": {
          "id": "972ca72f-760e-4f9d-b5e6-833a2c4664c9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "73286e98-b39d-47b8-aa67-653c31fbaee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2b3dbc-2307-47eb-9342-60b04de9bca3",
        "cursor": {
          "ref": "813e1e79-e0c7-45bc-a789-cc4e9d36638e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b9aaa19e-35e4-42ab-9ce6-faf8601aa9cb"
        },
        "item": {
          "id": "7a2b3dbc-2307-47eb-9342-60b04de9bca3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "13b398f9-d8c8-41d4-a81d-12e34e09bd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d465d320-d246-40a6-9657-14ce03694f61",
        "cursor": {
          "ref": "13e67b7c-832c-4be7-a23d-ac83899350da",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3b9aed81-78ec-4923-af8e-aa0f35279d8f"
        },
        "item": {
          "id": "d465d320-d246-40a6-9657-14ce03694f61",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9a4154b0-1f0e-4839-8e4f-0acd02d4048d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26237b90-98c7-4dea-8f46-bc8215d13b4a",
        "cursor": {
          "ref": "f7329fd7-edc3-45ae-b8cb-0e1c468f200c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2510abfd-3c5c-4037-8a15-0bda5933db2a"
        },
        "item": {
          "id": "26237b90-98c7-4dea-8f46-bc8215d13b4a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7c11f067-94a4-4aa0-a25d-6b356f5fa29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233fec59-560a-4382-a323-7b903c1657fe",
        "cursor": {
          "ref": "e59ec2b2-ad33-491c-a528-a2b11d15dca7",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "06faec6f-cd43-4e29-a4c0-7d2f329b78b3"
        },
        "item": {
          "id": "233fec59-560a-4382-a323-7b903c1657fe",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bf615f84-2f9e-4f9b-a3c5-0d0b150779c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a339f839-af03-4d36-9552-479d745b04a3",
        "cursor": {
          "ref": "a5d9cda1-1fb9-471d-ab1a-a98b15b9c403",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6447a0b7-150e-43ca-bbc5-fd5f9a29d619"
        },
        "item": {
          "id": "a339f839-af03-4d36-9552-479d745b04a3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "af3f955f-6868-4e48-a341-fc3f2def0be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968d893c-0bec-45bc-ba6d-758f78d5fd1c",
        "cursor": {
          "ref": "9e275417-7085-4d28-9646-82137cab1d07",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9701928d-0c43-472c-9e6d-a8dbcb4979ee"
        },
        "item": {
          "id": "968d893c-0bec-45bc-ba6d-758f78d5fd1c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "aab828b7-bea8-486c-8eea-44448d873e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bad636d-28c7-4ac7-80d6-58216fbebf21",
        "cursor": {
          "ref": "2a4367f1-fa6a-4c47-a053-18db557010af",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "655c59fa-6b5d-4d5c-96d6-fc1e2f69b815"
        },
        "item": {
          "id": "8bad636d-28c7-4ac7-80d6-58216fbebf21",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ec4f02dd-dc73-4972-8432-4a01b5ef53dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cf9b86-1e31-4d98-8aad-7b97940098fb",
        "cursor": {
          "ref": "6a3b848b-ecf4-46e0-9fbc-68b323a68d69",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6cafb66e-7105-4bc1-8a34-59bddc658648"
        },
        "item": {
          "id": "72cf9b86-1e31-4d98-8aad-7b97940098fb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2c526ec9-fdab-43b4-b479-06a517d5991b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ca456c-fd65-445a-addb-9d1e088c1f28",
        "cursor": {
          "ref": "ba5340f2-ee83-42a5-9c5d-ef94bc6e54ff",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e22ce2e7-f9c1-4824-9daa-e34e68afd1a1"
        },
        "item": {
          "id": "67ca456c-fd65-445a-addb-9d1e088c1f28",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2d2e0f4a-f7f2-42d7-b28a-acefba6fa8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddddf5da-32fe-4664-9cc0-d6e245b077b8",
        "cursor": {
          "ref": "b44bdcde-6bcf-4b81-90eb-a28a1573002e",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b94a1418-a3b5-4652-b497-10c1c9ad2dca"
        },
        "item": {
          "id": "ddddf5da-32fe-4664-9cc0-d6e245b077b8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "034e2d11-df6f-4aaf-bad1-4b4e305db586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6053de5c-0d1f-4754-a6b4-df16e78d62f2",
        "cursor": {
          "ref": "943df29e-df68-4eea-b95f-f126b0301254",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1bf5180c-9462-4630-98aa-4171736f9e2e"
        },
        "item": {
          "id": "6053de5c-0d1f-4754-a6b4-df16e78d62f2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4f709cbe-0076-42ac-b30f-5b0749b0321b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e2ea44-64ca-4619-90cf-de2acebe193c",
        "cursor": {
          "ref": "374b08d2-2439-442e-8eff-d25480688e5a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5cc94bdf-cbc6-4c6f-be3c-bdde9d7cd63a"
        },
        "item": {
          "id": "19e2ea44-64ca-4619-90cf-de2acebe193c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c99539be-85da-4e21-9375-90935786c976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cef953-98f1-4ed4-8e12-1b9c0ca3af45",
        "cursor": {
          "ref": "99ae49ed-e130-4a6d-96ca-478bef9a5fbe",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "610c290d-b26a-45a7-9c12-156cfa976daf"
        },
        "item": {
          "id": "61cef953-98f1-4ed4-8e12-1b9c0ca3af45",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3969d5d1-a980-4d69-b97f-89b644c3752b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfa942a-ad74-4591-9018-b64e34a8adcb",
        "cursor": {
          "ref": "363d9939-a0b6-49b8-9f6b-5f8abac624d6",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6ea5b482-a933-4fc3-ac29-b9e279600907"
        },
        "item": {
          "id": "8bfa942a-ad74-4591-9018-b64e34a8adcb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6ef31ad7-6c06-440c-a507-0a37104d3f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707c27a3-fe60-4b99-a10c-acf6e0f4a079",
        "cursor": {
          "ref": "415a28b7-55f6-4b97-adaf-a13a3c651846",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ef349778-3b55-4345-af61-0b60f3e8f94b"
        },
        "item": {
          "id": "707c27a3-fe60-4b99-a10c-acf6e0f4a079",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "820ea97a-5718-4380-9379-4ebd69adaff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0885c3-34de-48dc-a1de-f3d109add47d",
        "cursor": {
          "ref": "37b4bde9-f801-456d-9f40-7779f2e6ebfe",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "656b6bfd-6e29-4ee7-b2ed-822f9635c7bf"
        },
        "item": {
          "id": "7a0885c3-34de-48dc-a1de-f3d109add47d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "674ca30d-121e-4d0c-ad2c-b015993e0062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c781550-a3eb-4866-bb34-79e27f007f2f",
        "cursor": {
          "ref": "2e95bdd6-e844-4609-8a01-35fe4c96d56b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "05cfc51f-b549-4c9e-bfd9-258ab7221f10"
        },
        "item": {
          "id": "6c781550-a3eb-4866-bb34-79e27f007f2f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f4f19e20-3308-47b6-8f21-8f175817a4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6c7611-e20a-4c16-94fd-570f99ea3c9c",
        "cursor": {
          "ref": "549d310e-c64b-44ed-b524-a0da0eda1975",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a4cd8289-88c2-4bbb-9e5a-8a0d5d00b476"
        },
        "item": {
          "id": "3d6c7611-e20a-4c16-94fd-570f99ea3c9c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2df253f9-07e0-45c6-90a1-89ee433a870b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f30a9c1-5821-4d16-929a-a93388d8d98e",
        "cursor": {
          "ref": "6752216c-c48a-4c87-9b5e-d6d847cb62e4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "77baa01b-691c-4c5a-9245-e3c3f9ec879b"
        },
        "item": {
          "id": "1f30a9c1-5821-4d16-929a-a93388d8d98e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1f0685af-9f0a-4dd7-805b-88fddc69f2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d448ff-12d3-4982-b83b-a92a8fc9a66f",
        "cursor": {
          "ref": "36a77901-ca53-4844-aa70-35f44077cda1",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9c4d4e25-08a7-4731-99cf-6befc2d4c546"
        },
        "item": {
          "id": "e2d448ff-12d3-4982-b83b-a92a8fc9a66f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c661ba8d-e0fb-4ef3-bc46-30bd70d5f85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3959a0-0805-4882-8d88-6589adf4f799",
        "cursor": {
          "ref": "5865c6a1-a9f3-4b4a-b8d1-7db545f6401a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f33af5c1-db78-4e41-a0e6-8d13bc312648"
        },
        "item": {
          "id": "bb3959a0-0805-4882-8d88-6589adf4f799",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "57b9b013-38a6-4a35-900f-54d765e7dfcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a4cc7f-4bef-48f2-9361-9e2cb01f5ba9",
        "cursor": {
          "ref": "beae8fc0-dbf9-448d-81bb-86547e46c016",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "242641c4-c935-4b85-ab91-acfa296666e4"
        },
        "item": {
          "id": "72a4cc7f-4bef-48f2-9361-9e2cb01f5ba9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7f234054-7453-4413-b0eb-6c420fad4f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eabb98-3781-44a4-8bac-87d7551d7394",
        "cursor": {
          "ref": "c39f2b33-9d4b-4b37-84d2-6bacbb8714af",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "80288863-70ac-434b-aa7a-8e24d5d69851"
        },
        "item": {
          "id": "f9eabb98-3781-44a4-8bac-87d7551d7394",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "65fffee6-b9ce-4bc1-ba53-861ff8f08618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb00216c-d4fd-4f47-8dab-29ee9d40ff67",
        "cursor": {
          "ref": "3f39be8e-df2b-44fe-80c0-c06cfce8f52e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "eaa65a47-1cd3-49de-ac25-5dd3ac467cf0"
        },
        "item": {
          "id": "cb00216c-d4fd-4f47-8dab-29ee9d40ff67",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "88ef24e7-e151-42c9-ad40-07ea45e0e1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc11085-b9e4-4608-b9f3-4d9c0811c9e6",
        "cursor": {
          "ref": "7e63c3d7-e01f-4b17-b393-c6a2e7a4d41f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bc16183b-b699-4119-b12d-d13ad7758dbe"
        },
        "item": {
          "id": "dfc11085-b9e4-4608-b9f3-4d9c0811c9e6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "26ea2d48-165b-4869-90ea-6892cff08ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c283527a-ad63-446a-94fb-8985c7acdf76",
        "cursor": {
          "ref": "e7510552-f901-4baa-a082-ef380c3a92ba",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8011f7b8-bc2e-4d6e-8c75-da56944b0e5e"
        },
        "item": {
          "id": "c283527a-ad63-446a-94fb-8985c7acdf76",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2f2e07f9-7578-47cc-a77c-e03421825553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded03685-bc6a-4599-bf58-c50b9ec1c2a1",
        "cursor": {
          "ref": "1aa29e47-9013-4e46-a51e-0e1c5619e390",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ccc11db8-ab04-4061-b41f-8802d5290e1e"
        },
        "item": {
          "id": "ded03685-bc6a-4599-bf58-c50b9ec1c2a1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4b826104-c61c-4d70-8a2b-b1e7a8d13d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784713c3-ec27-463a-8cb6-7bc586cac986",
        "cursor": {
          "ref": "0f22f585-a519-4929-aea7-d1c8f380799e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d81c9a0d-d0d0-417e-877b-6c9a89425dc8"
        },
        "item": {
          "id": "784713c3-ec27-463a-8cb6-7bc586cac986",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a7b4806c-a1df-4e3a-8259-44d2ed661c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a93a7d-1d76-4940-ade6-2737c38ada05",
        "cursor": {
          "ref": "9230bc73-ccb3-414b-baf8-c32bb0ef834d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bdbfc9ab-bbe4-4818-a916-85000ba96b72"
        },
        "item": {
          "id": "c6a93a7d-1d76-4940-ade6-2737c38ada05",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e25bafab-4369-4d91-b6f4-de070d224ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3527108-232e-4b03-9bdb-67faf63809de",
        "cursor": {
          "ref": "6871275c-79e4-4ab7-892c-89959ebec49b",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e01c3428-91d8-46bf-bb38-5403774ac30b"
        },
        "item": {
          "id": "a3527108-232e-4b03-9bdb-67faf63809de",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2fa57074-ae29-4252-8768-34d119714c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77397203-c2b5-4eca-8088-498076276769",
        "cursor": {
          "ref": "ad99e8bf-858f-483a-9bba-04eae2dfc72c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e325a62e-4d11-465d-9d03-32932e2a58e6"
        },
        "item": {
          "id": "77397203-c2b5-4eca-8088-498076276769",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "49963fe9-ff4a-49d9-86ce-ed595cbeb601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba28b818-da68-4196-9d90-fa154344e375",
        "cursor": {
          "ref": "a920dff0-667b-4db6-b82f-2712d042f3d1",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1bc14c64-0e77-4f7e-a1a1-ef9f925baca8"
        },
        "item": {
          "id": "ba28b818-da68-4196-9d90-fa154344e375",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9a7ece67-e559-44c5-98f7-f99c4ab72df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b8a329-4ac9-42f2-8e11-bcc51ae9a9d2",
        "cursor": {
          "ref": "5c5d0710-39c9-425f-b9da-2482b87b578c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ca11f514-eaf2-48d2-80bb-39290191679d"
        },
        "item": {
          "id": "44b8a329-4ac9-42f2-8e11-bcc51ae9a9d2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "047c7264-4d6b-43e3-8af0-bf8a01c135c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd02076-fdf0-4adf-a3b1-cd5c6c8fe229",
        "cursor": {
          "ref": "1ce88b21-1959-46e6-a1cf-89293b235180",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "73e4c6de-7523-4cbc-b21f-57307962f6b9"
        },
        "item": {
          "id": "bfd02076-fdf0-4adf-a3b1-cd5c6c8fe229",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b299a15c-2ff2-43a5-bbfe-748689ea6126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33927de2-baa8-4231-b213-64f30a73e5dd",
        "cursor": {
          "ref": "79b0d7e0-3c75-4649-8373-0f0719997b7e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "469fbf89-11d2-4b4e-bd31-cb82738724f7"
        },
        "item": {
          "id": "33927de2-baa8-4231-b213-64f30a73e5dd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "56c64f1d-c85a-4df3-912d-10b1f2fc88af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3503f0-4f04-4d0e-a51d-94811f20f1fe",
        "cursor": {
          "ref": "43c126ee-c7c0-489c-822d-beccd52060c9",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1429f9b4-fe73-4992-9944-3f87b86db6cf"
        },
        "item": {
          "id": "aa3503f0-4f04-4d0e-a51d-94811f20f1fe",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7ccec3a3-a24e-4bcd-917a-80f0ae475b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d422a02d-d399-4a4b-8b66-820c104544ba",
        "cursor": {
          "ref": "ae99ac77-0065-4a00-b3c5-01204ed7402f",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8fe5be6e-fb95-43d9-8c8f-5a2c70dce6b9"
        },
        "item": {
          "id": "d422a02d-d399-4a4b-8b66-820c104544ba",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "77ee3491-702c-4cee-b7b7-559a4cd6fc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca491d2-1017-499e-afaa-23381612f5d8",
        "cursor": {
          "ref": "644ed35b-6248-40ca-ba37-2f6694fdd9f4",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a12bc584-9781-4b67-ad63-32a5206664e9"
        },
        "item": {
          "id": "eca491d2-1017-499e-afaa-23381612f5d8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "200109c5-c64b-4b68-a77d-d7d3c803b658",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f88e2dd-d10e-4963-94ad-2fa83eb91909",
        "cursor": {
          "ref": "fff22a15-157f-479e-b243-fde7d7ee1919",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "cec986a6-0344-4463-ad24-b6406ce48ad1"
        },
        "item": {
          "id": "4f88e2dd-d10e-4963-94ad-2fa83eb91909",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "243e2fd4-28e6-4721-b311-d6e0ffe84ec6",
          "status": "OK",
          "code": 200,
          "responseTime": 143,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b61efc-02e9-45a5-8e6d-ab0669a95eed",
        "cursor": {
          "ref": "c6d9693d-c13d-4107-abab-17cc98b0a1b8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ced59d07-71fe-40f8-91b9-7d07cb92d8f6"
        },
        "item": {
          "id": "59b61efc-02e9-45a5-8e6d-ab0669a95eed",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ca99a340-266f-4b4f-9b45-c4531f5f2484",
          "status": "OK",
          "code": 200,
          "responseTime": 1385,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6755c617-4a75-4343-992b-2517a780bd74",
        "cursor": {
          "ref": "b9fe9ead-89e5-4959-a747-c6a3ebe72662",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2acc33cc-4543-4630-9fb8-5dcccd2c02b2"
        },
        "item": {
          "id": "6755c617-4a75-4343-992b-2517a780bd74",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "670a57a5-0b31-47f4-bf8a-edc526b91d10",
          "status": "OK",
          "code": 200,
          "responseTime": 1314,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af93a46-ca8e-4d6b-a5dd-3d5390b5e9e8",
        "cursor": {
          "ref": "4b1f3c75-86d8-4fac-8286-14fba7a36b8a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1813ed1d-195f-4d14-ab11-47f2775e2b3b"
        },
        "item": {
          "id": "3af93a46-ca8e-4d6b-a5dd-3d5390b5e9e8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5542ec3e-7231-4a2b-bfa6-cbda12f58984",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af93a46-ca8e-4d6b-a5dd-3d5390b5e9e8",
        "cursor": {
          "ref": "4b1f3c75-86d8-4fac-8286-14fba7a36b8a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1813ed1d-195f-4d14-ab11-47f2775e2b3b"
        },
        "item": {
          "id": "3af93a46-ca8e-4d6b-a5dd-3d5390b5e9e8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5542ec3e-7231-4a2b-bfa6-cbda12f58984",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b3f1d9-3413-44fb-88df-fd183ac60d86",
        "cursor": {
          "ref": "19c3456d-8827-4b4b-b6b2-790b4f665b3c",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b999e9db-69fa-4456-bf0e-edf31c122651"
        },
        "item": {
          "id": "38b3f1d9-3413-44fb-88df-fd183ac60d86",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8f599f1b-3535-423d-9ef3-ec82ca60fc22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fc910b-59a8-4c0e-949e-ef5e95d3985e",
        "cursor": {
          "ref": "e03fb905-db86-41ed-aecf-dc203bbb5b0f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "7c9c00b0-5930-42ae-8964-2216fc8ad129"
        },
        "item": {
          "id": "e1fc910b-59a8-4c0e-949e-ef5e95d3985e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "60dd997c-3943-4c9c-b350-12f1e9195c3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}