{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f8d84304-629f-46b7-80bf-83bf4bd73e9b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bbf1bf1f-273a-4193-9b57-ed798b7a0b61",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6659647f-a9aa-46c5-b2e3-6cc1a0437e4e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e98767fd-49d8-4836-a737-2ec48250c1e9"
                }
              }
            ]
          },
          {
            "id": "bcd72aef-72a8-4947-859e-bc85c643cd8e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3e6b812-d828-402e-b97a-0523be6080a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0e6bd5f0-4179-479c-a6d7-196c184a920f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a7c7001b-cdaf-44f2-a307-24c3c117d449",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "08626a1a-56a4-4a0f-8159-2113982e2d12",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1c94000e-4509-4b1e-ac40-dd3cbed3e12d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "522df946-5faf-4d47-b6e4-7264f7cdd167",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a6172b3-2755-4cf0-94c7-4227e9743c6d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "245f0855-73df-4e64-abe7-b1660e6532c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f236add2-dfd9-4fdc-9eef-07da39ff3031"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "234644fd-ebb3-4fe3-8b12-a40a0854e4e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ba2ad31-8b4e-476a-8398-143afa8059ff"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c39dc7f8-d7bb-41ca-a374-3b1b82f5e40c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "db676b3f-f9d5-4478-9691-50c90bded120"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c26e006d-a694-4c99-8c5b-2e0575550b6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92cc0413-3946-42ca-9d5b-52a5dcd3a3fc"
            }
          }
        ]
      },
      {
        "id": "f58b1fe8-7840-411a-9bef-7a21bff6ca01",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9a708611-2f6d-4564-abc6-02a6ac54f31c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57656398-0963-4f37-9886-f24c77e63bf1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "75399549-5179-493b-9304-9cb619f2e412",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fa1d6c-cf8a-49cc-acf7-864ffa8d89f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66de4d30-3f47-428b-9835-7cf35ea8a295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379073ea-0e8b-48d9-a4c1-949ef2bdec84",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57b3fe2-17e2-4068-8093-96681463506b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "748ead0b-da81-4106-805e-61480fd3f02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88d2aa9-2f88-4c59-bf28-ad020347bffb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945ce517-bbdc-4aec-8a78-97804ac5bc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c280a303-8263-4057-bb8a-f36a7e0ae68e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "36e9b63f-689e-404e-8150-eef5e8e5bbfb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6746a645-007a-48ca-bae3-1577e018674f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a50f274-12ad-43bb-8057-b08f1ca0ed86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af10432d-3176-4a80-8ee8-243a5235e231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4773c72f-c9be-4e4f-8244-531939415f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34794b74-683f-4771-b44b-64ae320446e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4b728969-2ec0-442f-a467-a70d4047831d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e8d5cfe3-2bc3-4553-bf82-29fd722a170a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7722d2ce-dd96-4129-92d3-14835e92b290",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4750a9ae-4300-42c1-8261-adbab2487cb5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81b9582f-fea4-469c-84b7-fd371b0e9d59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7f7b5451-1e11-4d6f-8475-aea297ecfa3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f9d729d-1f9c-4bde-b053-742246c9e504",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f36cdf5-0fe9-4ea2-9e0d-eb734a2614c3"
            }
          }
        ]
      },
      {
        "id": "b1b1e76c-f7a0-4c9e-970a-27f614334926",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "861cb400-dda0-4cba-a33d-a9521cd61f3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92098808-fc70-42f8-9d5a-ec26d5a5310d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5aea37b8-bc5e-41fb-9244-9bfd24e9ebd2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10135db-3094-4df9-9541-a359c4c5928c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722dedac-9f44-45f6-9109-9d5d9bae0c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b492ba2-664b-41b8-a601-849bd4784291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80ba82ba-21e9-4303-9263-7c117ccb2b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d71a444-40af-4df6-97c4-308271cb2c13",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d44bca4-b9b6-4462-a695-54561d69154a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c8cd55-fb74-4fd1-ab56-2e068fb315b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f544ce8e-e69f-43e9-9798-a193828e5fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "151483f6-fcd2-4a8f-936d-0b8acdc06193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41b1dfb-6f7d-4855-862a-444946a156c3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbf2ac4-73c8-4547-9a09-de7c1a715e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc609ffe-47fc-4646-b6db-cc3c8bbfd29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de19226-bfd9-4980-b7fe-2b9e0a8c971a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b073e47-7b11-4688-b70e-c3d818fa9b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bdc5b1-543f-4ffd-b729-c20380b94017",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e30bc65-9cef-40b4-9264-a1dbfb8be2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef739ac-2e62-4fc8-9b87-71320e3ff14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1108f5ce-bf02-4538-83e5-e4df7754d905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97f313e4-55dc-4d13-af30-ce42e3021032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45251592-b8cf-4c9a-a7f7-b993ba1ed6ad",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa58710-45cb-4fe9-8374-ca81d39d6f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0181cca3-003c-4bb3-a232-73feb2c5c782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d018a5e0-eb66-4acf-94f3-73c8b3d40f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7591ccf-b7a0-4ce3-b165-19b7da8c7539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df2a42b-67ab-4930-8ab2-c58ed2d72d0c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943c58da-85ed-4994-9126-07db954d5773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84167ae9-0af7-47ef-9864-f967ef08a8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a4b83a-3073-44b7-b89f-eb315689a526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd26470f-4c33-4897-860b-a5345904c824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af328dae-0cdb-4ff6-a532-2349b8010b57",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89465251-9c95-4479-a151-49cffd9e2aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef60f50-f2a6-4ded-9c24-7a9140fd72a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71badcac-8e6f-415b-af74-32cec968e802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb446d3f-384f-4248-85a7-5ec8d57827c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f808529-0770-41c6-9843-4cb37ba9f3ad",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7656b7bf-97ee-4aba-bf26-e55e964d2e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6aa208-d38c-4582-a7cf-d93741ed3a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6e879d-25ad-4f6c-98cb-3d270e10e21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fb67821-1e12-45a9-9235-73cbf083aef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc032c52-10ae-4a4b-991a-a944fc412a78",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a8d33d-03a0-465e-81d3-d0962585f6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf06b2a-6b68-4da5-ab62-38f0ee6dbf92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ec33a7-73e5-465f-a8f7-6f3e32ffbdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55d7d5b9-861e-4725-9bc4-38770d29e492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3552f0-9d46-4341-bb93-e0f520c97f26",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c40894e-22d2-4116-a93d-e1d5a83b6365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18519857-a382-4f82-8004-5548b8057b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5481c2-d784-48c5-a947-36ff049fa2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4219f08c-814e-4b38-a34f-d99985bc3934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead41a8a-5290-4343-9b23-fabe974839ff",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb3cffa-80b1-4d51-b66e-0a51bb022880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445d0225-52cc-4950-8bbb-c7602ece48ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8308aa5-6716-4ddd-980b-905d94a2d975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db9934e3-4497-46ee-8d29-4ac30c31ddc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f381411c-9079-485f-8620-896256e1cd7e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eba63b0-5c52-43f0-b353-7f39c537a3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddc8646-7be5-4980-9575-3a25f7f7f73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aeccbd2-6f67-480d-a01c-c7857ec079bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c8aa5af-d69d-45f2-8f18-639ba2387dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777f3376-8278-4ba5-9dbb-d3ecfc42adba",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1290c09f-025d-49e0-955a-6a6d2820bd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012b965a-9d48-4372-a754-ae4cbe31ad09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30755d3e-9c21-4e74-b013-702bed61dd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbb20146-f61e-43dc-8c15-e9ae94fa017c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25acb87a-cd49-46d3-be2a-9d6a03b7d233",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ed12a0-8845-41ca-9e27-40a8e3f34922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc95fca3-bf72-4782-89a4-4a4120cf2a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbbc09c-5078-4d1c-b74d-ea01f30cacc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1bb082b-193d-4486-84d0-20e553ecb5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26d8052-ced9-4d04-b3d9-b484c1b2522a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae9c77f-3817-4e78-8a53-cd79cb872a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1adb79-9549-4615-a819-dc755ae332a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d06c0d5-6893-4dad-a964-665115eaa5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "161dfd84-6029-47d3-8bb0-d5782f2f95a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c320f7e-097b-4a23-bae9-fb802249f73a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192d1dd3-414a-400c-b952-69981411e698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4462c86e-704a-4361-82d4-b56b184be74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9d09c1-21c4-4334-ab44-c8a75d3069e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dbedacc-e26a-4333-b618-72b4bd3dc585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45b87ce-0696-4f8c-b7dd-52ba8ab1a2ac",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c911989-baa7-4cce-8a4f-0617d9668fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f55f0b7-009f-4af8-a50c-6151e9e29d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85c4ca1-51f1-471a-931a-98eb276875d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dc2cc06-db28-402b-bfec-06e46ade4fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3ad9a5-f461-4354-bb3f-cf4ccf8cabd6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f0a631-556b-4884-815b-2a7e840be294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbe5ef0-7d3d-464d-a5a5-eb6aa6cbc0c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1e4188-0fa2-4f83-9e80-dbfb9d31b5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3562ce7c-2aee-4aea-83c7-17b7886253d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448eca98-edf8-4ad5-9fd8-9c07dc32ba57",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe193672-96d3-460a-b7ea-042d0873f526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0094a8f5-24ac-4b54-8fe8-5b1f3316c409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493ef664-82c7-432e-8e17-e87cf294c999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12ab390a-b597-4f14-922a-5674c6db8497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2223af88-b11b-4cd2-9d4b-49ef1d8687f5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d1a557-222f-4b84-93a4-224228c49612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28086fd3-cd62-4758-8e0c-65574b87ef44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c88647f-0555-442a-9153-60b2aaee7a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2680516-eedd-42ba-ab00-37923f215a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f44f649-ace4-4486-9c10-e7f4a7fa492b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8c6245-6364-4ba0-a114-0f8cba97af6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618f37ab-2365-4909-9762-227cc9a1a704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831f335f-9a22-43f6-945a-c795ae174778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88da809b-4f92-4f24-93ae-32dd403a00aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626c3fca-b29a-4606-ba61-04ef5acc9a3d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8e0917-b352-4804-a5ba-1040a25edf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b959d1-a96f-4abc-b45e-1df838d207de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfad230-edbe-4b9c-8d34-9d811b5b6e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35df5859-0678-44f6-9b12-e3ad4fee89d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b3a691-28f0-490c-8c2e-b1fecb2a99d2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf68123e-766e-40d4-a6d8-2acdb0b59ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b7f3d6-cb1f-454a-8cbd-5a14e63b558d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2018e18c-d93a-4e1e-bff6-526426ea3113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cbccaa-c3ab-43b9-9b53-b37a4cfdd149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953cd52b-452f-42c4-b7f3-a399b128b364",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf1859c-4d74-4a79-b6db-d694e9974a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4a1dc3-3a6c-43cb-a22d-dac744059064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9af98dd-8ca0-411c-a85a-cea769c3d270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1429145e-7938-4430-8d70-925fb65c8fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52be555a-8ad0-4744-a7a2-5a25a83c3846",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888aed12-ede8-42d9-8add-1d623135b209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe25ab6-b3d3-469d-9c09-d86ee09d0219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c490fc42-ed57-4162-ad6e-175fbf9e2aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fca1205-1a04-4846-88fb-c44155737dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40c62b4-ff1e-4846-8d57-8ce8a2db5af8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d600278-ea64-4a8e-bf74-ceee9503d2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434684de-2166-4733-8972-8a8f8311974d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11970e76-66b5-44bd-ba5b-d0fe9441755b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d342bac3-4510-4670-afa9-a2fedd05682e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc932f81-36e6-4136-8c29-a46f8c1a1531",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e683c9e0-a876-44f3-9aa0-ed78d15cdc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abd413b-f7a7-41ab-993c-45a2e465ea12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940814eb-bf07-4464-8165-f4023d9d222b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8660ce82-a999-4f61-bade-cd67a7646dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc43592-4230-48cd-b927-d2dfe813928b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e718603-aa05-40f6-b149-a6c37d733f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27fa733a-7e87-485b-84d9-b9e66293b7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc227617-ed9a-4f2c-b32f-677bd857eca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5112275-b967-447a-a62f-24f074770e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7720b9-8a9b-49b1-b6d7-6247e036349e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54dc4b2-7046-4156-916b-eed047a8d34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2193be52-1656-4aee-b84f-68b783762039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ebc2ed-1c01-4b41-b5ed-fa7fdd084e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d57221f-e011-44c2-8d09-9786ec745b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3296996-2460-49f8-9ad8-7313fb65db4f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1ad973-1df4-4b68-85c1-e1ce753663a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb27cf8-0f54-40e3-b789-127b542cae0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f26e64-00bb-48a6-ae10-44caa12e4b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "de3feffe-d944-4637-9c67-15a2f0864236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c015e3fb-e139-4351-a313-47b804d565e3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9957cc-de3d-413b-88a1-a46e402283d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca52f69-5806-4176-b1ad-ed6bd527014d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce478872-27d4-41aa-a1de-1e1e4c7fa9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f76dfa11-74d8-4290-8377-2be52047209f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e61a96-84d7-4b3d-82de-292669090d18",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95cc28c-cfdb-4a76-919a-aee47df0417d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cab0a5f-b02e-4a74-a5d6-81714188bc93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ab3846-aca7-4c5f-bf35-1d6c0d0b8128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "483f4cef-4067-4d0f-abfe-afd98ebefbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db60c08-0c69-4518-a19e-9e1b2e717c38",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7ed655-e53a-4e96-826a-d354469308b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7127c63-a1bb-4339-b526-738ca719a545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d327db-bbc7-49ad-b310-266ad7640e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a545f36-2bb0-480d-8a6b-54aac9f6b6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee89968c-9220-4303-a002-9623903da416",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065957d5-2f88-49d6-86ef-42c6adbd061f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8516e7ce-1a2e-4ddf-a89d-22a88f96f68e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da692c4-bd99-4267-b8fb-4fcffaa10253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49c4b057-402f-45a2-bb0a-c7a0ad9ca1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8127ab96-3ae3-4337-8274-c9782ac14514",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8acc26-9eb4-4416-88f6-ced87eb08a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a51ed3-0d4d-4930-9191-82b5f976de21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba92428-3ed6-44f1-bc5d-a96c0bc7c181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0cec741f-6d3c-4fd9-b377-3aff888dc570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139a166e-6bf0-4815-9b40-1a9fb75a5ef6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032d2779-d408-42f7-81d7-1fa44f1f8934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dd69684-42f7-4f24-a87f-1db7c9ce50ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dee65cc-7ae1-488e-9f78-6b43cb7a6f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e56c3353-63c2-4011-9f84-20a98ff471d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b98b3b4-6dfa-41a2-afc9-2957d92084a7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5f998d-dbaf-4da7-b525-e06df4e5e494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc23ddac-65ea-4c6f-80ed-affed3742990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69ff686-a46e-4d4d-95d9-db7495dc40db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3287e9a3-7f87-4180-8505-8da0e487e6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f957872-6505-401e-9fbb-26c216958c4d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1a351a-2bb0-4281-970d-13b47d61ebbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f827722-1bb7-4da6-9c07-488478499b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acaa3165-1529-41ba-95e9-c3583e886ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6980dd-9b23-4769-8c9a-72c168826e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812c7602-5d67-4483-9eda-31e2bf13811e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b1dd63-21fd-4335-a6fa-259399c39746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e2c48f-689f-4dd7-9b09-29780ba507ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a760122-7896-4d70-a295-d4094903c4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c68da7fd-a405-4fd7-ac3b-6f6288256680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9639615d-acea-420d-9a45-cea15169d6b6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fe2ccc-9ecd-477e-a3f1-06c2441e8b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1a3a2b-15d1-457a-b74d-add893d9dc6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e18e50-5fd0-41a4-8330-213dd4194fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "82aa0c6c-ca75-4eca-b5c1-f05c808bb38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb0c7c9-dd6f-4a6e-8f73-f417827914d1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e019c4c0-9f9d-4cb0-99fc-1e4f7db2129f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39beaa5-3720-49be-bcc3-8eb7bc4842e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17364e0-b612-40bc-acad-d7c61e5278e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "42c6e4d5-2476-4ada-a312-7440582797ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59ea6d7-bc5e-4ab2-9c97-54afaa90b3c0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de31b81d-d03b-4d70-905b-014d0659c079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af06bcd-24dd-43df-a69e-12ae0e3b1e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe29cc4-e863-4860-9868-1f072f702be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "66ea200d-7815-426f-bac5-d110c24db217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b951171-c0d7-47a7-a105-cb56aa4136f2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8f1666-af84-4d5b-9fe3-0d6bcbb52450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f914e626-7266-4930-af8f-fdf41cd614b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b12d18-4273-4de1-80a9-ce7ef22e8401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e72bece-a543-4dae-810a-52f92af919a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a875bc8f-77ab-4ed1-9d37-7e6e533b9c7f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1c2659-097f-451c-bbc2-473956c695f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9036510-b1bd-433a-8312-525e753be703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437cd69f-611e-4bdd-8a8a-7969467e9cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fececabf-4a71-4614-bec8-b60f657843bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3ecb6b-7901-4762-b159-6abcd398e967",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2f4f69-650b-4247-997d-a41f7c14c882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624adccd-0378-4e59-9100-771c21f9096b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c695960b-6686-46fa-97e8-96a5d715bfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "93790510-6140-4855-a5ef-484fbf4680ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1eb8e9-b407-4eb6-813c-16a7ff07e1bb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9423ec0-2665-4a30-91c8-5c831d15d67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9143a732-cd9b-4357-bd1d-1ec764195fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3771a08-a71e-462b-aba1-0bf918dba20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2955d203-e7c0-497c-a769-33beec63376f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd757bb-8fe2-48be-a06d-eac8b15ba90f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbf916d-399a-4f39-97bb-0c1a2b33e1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd65c032-4841-467b-8f4c-d3dac1a7a420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16d5b84-6ccc-4e4f-b170-7119bbfbe940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d509b467-16ff-4537-b459-bd9c9a0abb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0662cdd0-81e9-4648-85ae-5dce6382e061",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff80d29d-4040-4fd9-bee2-dda97ef56a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c322eee4-6717-4900-9440-de9e1b1448a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ba2545-6b86-44e5-a8c6-40e3e33ed665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d30e00-b271-4634-9c21-edb907535756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baac501-95f3-406d-956f-46aa47f78e81",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57213c6-d4b4-41d6-a009-de5fe934067a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6d61c3-fafb-47f4-95aa-52b50ec33e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dfdc24-f0ff-41d1-a950-4d78c3ed8d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31219723-91f6-42a6-82b4-5728f37d0e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0438e43-47ae-470f-b7d2-3321907a9ed9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dc9eb2-35f1-451f-831e-1a06d7a55f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c58a9f-a0f7-4cc4-ab14-282cfeab31ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226a14ff-2511-44bb-a1f3-eba936906686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66e5b26e-6c73-4b79-abc8-9c2b0d1ffb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fcd37f-1273-4dad-bfcf-25a6596d0a5b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa6f52f-95f1-4325-9f61-a403924d54cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23781559-b9c9-41c2-9923-6e2215760e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044a725c-87ac-464e-b920-20bdbabec79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "109b30c1-9296-4778-89ac-90c245372ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2815a67-8d59-487e-8512-89f7ca7cc837",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a8837f-cde7-48fc-8daf-c7089f66d01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b68bc3-5b20-4589-aae4-9b6b3da9b4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c56ff6-23a6-4528-851f-adfda71e2d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45e8cab5-825a-4a10-b705-1b6be1ce94e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1270a774-5f54-458b-8b66-e8f6a978413f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee3eba0-cc6a-4e5e-b245-813ed8b0cfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3885082-8c37-4da7-a860-79587c4326b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f572609f-a444-4a46-8008-8109bef64937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50917dc6-106b-4ce4-929a-ca3ce4237032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5710c404-8581-4b5e-a5a8-452921e76325",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821e03f5-8269-453c-a033-5cde3f087dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d29c252-bc4c-43f4-bf50-19f8ac6f122b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d782d0da-0c3a-41d3-95da-9fcd70a1ff48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba992941-3a32-4d7f-9901-be0b6cd591ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511ba6d2-c711-499e-b295-904820d1087c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1db904-78fc-4fab-99c7-cba9971923ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfab0d8b-d7d5-42ca-9f4f-f96c9af0d23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a81c2a-b9a2-4cbc-9845-903fb7cba450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a92a075-c518-41c0-b4fb-92dd7a42d217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b530d6-cb8f-4ff8-beef-e4e7e0f9be8d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00261441-2471-4551-9b11-e76ef7e5eb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4766ee7-94a6-41af-bff7-4cef8718b343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582b4962-fd3b-4c35-a39f-338e43a6cf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8647b6ab-d545-434b-ab46-c410b137ae92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d6567d-f238-464e-ac9d-d0932e05da45",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e4beb0-39f3-4e76-8f12-ea6dbe845d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1386e686-e77c-4ee3-96fa-47b201a6148a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b459c3-ba7e-4436-b7fb-08ee34e7d477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "74127c5e-1070-473a-bff2-fa7c51025be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39146d91-c169-4e92-903c-e8e1f35ccc54",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f164600-336c-4c25-89b9-7c2e9cbcfaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39437b3-8efa-4221-b22e-bed0ad552685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2eacdb-54a7-44ec-ac0d-f776490fea3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ec10f5-de1d-4849-991e-e13a1c11b59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de66737a-55bb-4991-a302-b8ce2f8590fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0aa7e56-4a99-49af-8386-33ed03732df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0480660f-2ea9-4060-859d-c2688149d3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f229709-2e3e-4313-8ba3-7e8c9394e583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0526c2-0b94-4243-8bcc-f4da343c8cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecd92a2-5fba-4876-8113-13d42c836e7e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a48c39a-b565-4095-adc7-2e1edbe738f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e385e05-e7dc-4b2c-a98c-7d982861ff04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55de306-82a5-48a9-9104-16f338c0c017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b9a3b8c-d2d8-4733-8643-4858687e9870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ff4a60-c4b5-4136-9826-725cb077ad83",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f548192b-3a03-46aa-8cb9-17cc1f71ccf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c136819-0473-4dea-a4cb-f9217471c621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048aec2b-03b6-49ea-a5fe-a192eebca5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad479274-2370-4f70-978b-1df9abb95cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5085dc48-565c-410e-9048-fe99fd3a1279",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69408d01-9cce-42d9-b9c0-c111097323c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220e7671-b774-4d8e-9ff0-bb89ef425556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb7496d-7a1f-453e-89e5-4c69793d867a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0162e43-a01e-41c7-ad1f-765863412ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e84d6f-10ed-4c5d-97a7-f29c7e62ff32",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ef542a-0232-4191-93e0-4cd405cb5fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88cb598-d420-402b-b378-cb0ecf065d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d33f14c-7f9f-4a22-adbe-8f7f2cd70058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee423511-fcef-4f7a-97aa-467d0d8e960b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3de97fc-2009-465c-b4a0-4eb507fa3805",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c356c9-066d-42dc-9943-f1693458de53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c91eb9-3d56-4b87-866c-43fa71aee0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80752a3-3dc1-4087-a1c0-dc5b87c9273c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4311fd51-e73f-4cb0-b2f3-a82539726202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9957fc8a-16ee-40e7-8fe4-3209fb8ca059",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e54cc70-03b1-471d-96b4-a4b2611bc856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7024c112-7b28-43da-8291-a519303bcae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90110347-50b8-4f29-8a9f-ebabeb2ddedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6caea33-2e17-417b-aaa2-a2fdbc4e7c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1100c8ae-0919-4413-a495-dd42f7688cc4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d893f6d-29da-4097-b84f-3a78fad99eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9dcd6c-942c-4b9b-a913-4833a0b66648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20371d4b-2cec-47bb-98ff-81c672c24899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1bb2a6-2c49-47a2-847d-c3ef18b5b45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801272e4-8704-4bdb-aac5-797304259115",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71b4e79-08d6-4792-ad35-5ad8959cdec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b44a804-8e92-41b3-aa4e-8002ccefacfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28508da-e9a3-4f61-bd84-06ed63342312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0626c032-a728-4044-be09-aab8660616c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46ec265-f64b-4586-8dd0-23c8563fc424",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bf9c13-c711-4190-b223-ac71a946a1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221acbdf-f080-46a7-aea0-cce79f3524fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6beb5aa1-b222-4ec0-9926-a545a905fc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20e5d43-1ff1-4a46-ad23-048340dd88fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e44db8a-4f6e-4538-a848-1279f0a407f9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aeb874a-ea9d-40c2-923a-ffdf9e4fef3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379ff4c0-b61e-4ac5-bcc0-6de934c5c6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f327c313-b93b-4891-bc10-bcce97ba0def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6810c201-6a80-44c1-aa6d-a13f794d5882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f4c183-0224-4148-a7d4-449a490493bf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a808f6e-fea1-4dc4-846e-d8620373a8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3caa6bb-8544-4055-8540-593f07f331fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedc7c9f-9855-4d13-8a90-395605e8e97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43a6359e-0db5-482c-b1b9-4e9606bc3aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1dd968f-d7a2-4587-893f-f7e3f0fb2b53",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8a7e43-7c20-4a2b-b44c-c25ad943cb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e570383-3476-4c1e-a1c7-9edcf9b027e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9a2f58-1822-4893-afb1-e5d21463728d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95d47062-69ac-4043-b30c-89ff31b34e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a75344-31ed-407c-881c-62f5da337b82",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784479be-e53a-4ac2-8b15-ecd420258660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac5cb10-6d64-4560-bea3-3008ad47a492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8632a4-df73-4fda-9b67-b1c2df504898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69cc649e-3803-4b76-8508-c3c54ea67858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c41877e-6da7-44c9-9a7c-ba23583efbf2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2e44ef-9926-470f-8b57-b16bf394ee1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a807d5-251d-4934-a0d7-24009cb23d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcf6401-beea-4e45-812c-cad729fb4091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83a88d10-5c58-4896-b1ea-646163a48f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1244d78c-c8f9-4180-8e4f-050617124a82",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c692bc-154f-44f6-8dc0-61fc9266ab8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197f7e5b-9b10-4fe2-aecf-84bc9325da70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37d508e-fbfa-4290-81a7-a05d625048cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc05ff5-1265-4a60-8d23-a432ec31fb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a29d8c-a9fb-4524-b61f-8e43c0875fe4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7cc480-13e7-4f76-8f25-d0100cdb2530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e0e93c-9e21-4685-831c-28724c75d951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e20ff8-c444-40bd-b162-c1bf5b875727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2713c1b4-2c41-4f33-b9c6-f7bc19ddc18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c48fe0-d815-4d9a-bc7d-833f38bc717d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4a5ca3-215d-4063-b6a1-151ec7c3bf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f27fc51-dc7f-49c8-b0ba-61eafe1c0cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c301fd35-7d06-47fd-a35d-9b5da90734f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08721f9b-1d40-403b-94a6-0f7abe0e77ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f82b4f-9ff4-46e3-8788-0cec8a11249d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c6ec32-3b18-4a95-a07c-bb4abf6ae997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3839a5-aa8e-4bf8-b812-da6677655aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fc4ab3-dcb0-468d-93a9-ce203ae62103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3beebbc8-28b8-4d1b-9a10-42ff65bc9373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b130bd-4563-4868-8b19-385fe1d018e2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0413d1f-c6cc-4910-8a6a-d53903b06275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90de46b-3862-405a-89a5-d1bf4af6366c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb9d1d3-9303-431b-84c2-b9a367bc52c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f68813be-e580-4b15-8872-bf52b1673b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6671c52-4d37-47c2-81b8-c196aefa4014",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e97b17a-9502-4e62-bc7b-299b91b58129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b2f49a-63b9-41e5-ad19-6453930843d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cf4b4f-cbc9-42e2-b005-b4620c5be7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fb09ae-45ec-4de1-945b-2ac3375e4f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794a4b64-33f3-4a95-b4e1-a5243529aca4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa925ef-2d1a-492f-8679-029baaf6ec86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be0c330-fe7a-43cc-b8aa-9a8edb19fbc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accc7129-1447-48af-adc7-068ded376e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64d681f4-d2be-4184-922a-12de072295dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de367a06-bbeb-4012-a912-d4c2a85b87d7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116799f4-f355-4827-bfe8-a66c65b11fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db11ee7f-02a7-4e0f-af8d-8e1548565f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a8c38a-0909-495e-b6e1-1efe1281476a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38ac5086-6eed-418c-8838-082cc1bb5a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a8f7d9-0930-4698-b82c-45ea5fc5f8fa",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5a6e80-bd4e-44a6-bb2b-9f14136e3a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555046fc-52a4-4a8b-b8e6-3f67b076651d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d248726-daf4-4b15-a430-7fe85c2a0173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d535227-5682-42f2-bb63-1db8aa4c9f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055a6cd1-2135-4a22-a50c-854a24369ab7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57da66c-642a-4646-8dc1-4d7621c230ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4966fe3e-14ae-4f70-82e7-ded925cf6941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5bec11-f1b3-4684-b65a-3633334cbe84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f79b02d6-ca04-4737-b028-80fef1317ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d014be4-3cb3-40ba-9689-b34946399e51",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f15225-d23a-4390-9bd3-2260ab67e813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b75a58f-debb-4be8-af79-f6896fddf667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830373d7-716d-411f-8e45-45dcb33c94d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd915ba6-8586-4244-a13c-85d6afb98766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec0bf2f-b4fb-42d7-a999-7b3e13c9af5c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f2326e-3aed-4024-9c58-3d3a7caef50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99664e9-655a-4136-bbbf-bab1033dcb86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f0442c-7bd2-4219-96e4-3deda813f219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcb1b35-1b2e-42c5-a6c4-7be3921f741c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c638303-becd-4d59-ab76-2f1d0f3fd220",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce2e311-73f6-413a-8a1f-9519ea08a663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202a2477-3df3-4d58-90f0-364d2e3717f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b748d6-8572-4240-9b94-12a6abd1bf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d806e0df-5d13-46ac-93bb-ff924b9b9b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5195ab09-7374-447c-9221-dd5f406da798",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62af1645-db8f-43c3-a0a8-bf96db23e67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926854e4-faac-4aa4-97df-e28f03825c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0dcccb-73c0-4cc8-8ff1-cc9e98aa36fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "01d660f1-f7b8-48e8-9d63-68342fc48a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b529ec-45ba-4e26-ad9e-5fe9364cfc6b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29dd1a62-38dd-4610-92c8-a4457a8da9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ef441f-7848-406e-8dc1-19cc5befe455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b10235-369d-4289-b149-8bf28d2ce81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac58bc3a-9a59-44af-b963-2d383eca3cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d039e8e7-d237-488b-a9e0-2241547135d0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef008c2-b790-4cd9-b6ce-92d56122de50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffbb8c6-c7c3-4cc4-8d3b-bd1b51e41145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf60d597-f94a-47a8-be69-bdeee69d4c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "196c7823-a9fa-4ca2-87c2-a182561cd40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898c3a46-ed92-4e65-b659-73bca48312e5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2c0c3d-3caa-41e0-a45a-e8de29751f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5e9b51-9507-4ec5-b784-b6632e6c3b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d65a746-94cf-43a7-8bbd-d5a97ef8b93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb568ed7-2747-4826-b3b1-ed6fab5b2b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c695e135-eafa-4609-9382-b0d3ed9c57b9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcac4335-f4df-4187-8844-42263ffd2c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bcb210-80dc-4f76-8ed1-64ba7a89dd79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d4da5a-17e1-4bdf-bb97-60e0bd71fc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d73a3471-3d81-4b0c-b7ff-58d8714faf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75a49ee-4ca7-438a-b584-80cb40b4cf8a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe138f1-47ff-4ef0-8025-af28382c01c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eed3783a-f48a-4ea7-b7c9-6321a51e76da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7c1409-be70-408d-8333-9dbdd23e2702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4ad5ea-5afc-4505-b639-957435159914"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ce93853-d03d-4905-bb60-2a1604fc3a83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ad60908-148e-44d5-916b-6b26e8d6c47d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe509dc-c4ee-43a2-9a6c-b7375954cab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d41056c-9ee2-4dd0-a56e-168b0f25adc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a30859f-9f74-4bea-80ca-9540f6a2495f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aff56b4e-477f-46e6-90ec-d5759740d76f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4b961ef-e74c-498a-9870-af7d11692207",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a8d0468-bfcd-44eb-96f7-22e103606ef1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b9a2576-fc44-47f6-8273-922f1d5defa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b48d20bd-bc3a-4263-99df-8eff3867c67a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b0ba76c-84f3-4173-8479-71bd128edd95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e57854c-da09-4e07-9b5b-7bcca054dabd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "41fa8488-3889-46af-8d88-79ff546d600b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04ed9da4-b649-4bb7-a022-d8753f72527e"
                }
              }
            ]
          },
          {
            "id": "dfc10788-2860-40d7-9904-1e8d9a6518a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92e0c6f6-8a5c-4d3d-90da-e56bfeb7550e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3a33abc9-deee-4bb5-ad78-c33f0e6e2539",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1ae445-d090-4159-92c1-105448a6c23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7f4da564-27b9-40b8-82b0-b763c334fed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4eb0887-f3f6-4f95-86b3-ac4834c4486b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dde3bc5-68df-4c28-8359-55697702831c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e9119f0-a187-4aad-b97d-b125d7367313",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "442ae08c-dcf8-4b98-bc90-0902691862b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63fbd76b-da67-46a1-a937-edb3183413bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35cc5f94-42dc-47f8-afa5-fd0630c53242",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0aab276a-2fd2-4209-922f-da15c0ebf4af"
                    }
                  }
                ]
              },
              {
                "id": "2ed24500-b80d-4acd-bbc8-697c5ecb857b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c822479f-4097-4c92-a468-60c17ccd5fe2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d7cc659-23c4-4284-803e-9900c3f6485d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ecb7bbd-cd14-46bd-a9e6-a8437ca72e55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ebc264fc-bec9-481e-ac3f-ff110bce6f12"
                    }
                  }
                ]
              },
              {
                "id": "e225ec2a-c004-4d98-b3c8-c9d841c3ced9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4826cf2e-2503-4083-bf94-4ce8e45e2426",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9365935d-24d3-40fe-8d05-171e3b2c68ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56e56c6a-5a73-4232-9439-a8eb0d91fc10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5b452d53-15a5-4239-b7fc-8c882728f477"
                    }
                  }
                ]
              },
              {
                "id": "e8993e58-3898-4d39-8a9c-d4f5ec3cb8ad",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62f2b695-81fa-4bf1-aef3-918337875bd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9058d898-0e9a-40ce-809a-a522e2a58bd8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc6a8e0e-5d4d-4451-bf40-9b60b39a6bf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "38faf562-3ba3-48b6-a499-ccfa15cbb722"
                    }
                  }
                ]
              },
              {
                "id": "9817a612-9ca2-4dc0-9894-fd8f34fe874f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8810106-6eb1-4ef2-a39c-c902be60c229",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42993359-60d6-4b81-9ec1-f6fe722dd280"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "448c4a2e-b6e0-4606-9461-ed40be9d2cca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "db9792fa-68aa-4dd8-afbd-6e312ce3f602"
                    }
                  }
                ]
              },
              {
                "id": "41721747-08f3-4d58-acbc-a5dc8d33f0eb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f93107b-1426-4968-801c-21f53e565329",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba35160e-30c8-4611-a257-8fd5f6455c43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36a5dde3-d192-4bb0-a69b-f2714c1dd877",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b15d46f7-d8d3-489c-86a8-340fbc4ccbca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e765f87-7216-4d28-8bcb-280905415fa9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1838888-804f-40b3-b60a-3fbc67dbd864"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "31c9621f-d212-4ad0-b075-dd20acfe2971",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a79419d-5ca4-49a3-9198-2912f67dddf4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3f82b93-d98b-4714-9b2a-04663db839f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cc047f17-8f9d-4d35-91a1-d94e3791edef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82d3a9f0-f81a-427f-823c-064204dc09ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "529fdfa3-5b8a-4b73-aa85-14959762e3ae"
            }
          }
        ]
      },
      {
        "id": "fa93ae10-5b87-459e-8c2c-1f53d5bd7e4a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "35c88328-5415-41a3-b6c2-3c979790d7fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e0790a9-afbd-4155-91af-aee65cdae4fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1c7e289-38a3-496f-a7b8-860951c7d615",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddf063d-3447-4150-accc-ef36cec1e8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c36a4b-4ec3-42a0-ba6d-5b54c10719ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4bd670-dab5-44da-a305-b204a24a5ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "baae48cc-15e1-4788-ae9c-7a5f0c3212d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76523d19-8028-4eea-a6f6-ea6f8678619e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da0122b-30ee-4e2c-b3b1-23fbc11f8f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2c5d26-a6e2-4ae7-88c0-6f132f9768f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969b8461-f542-439c-adb3-3509facebe8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d285635a-5d54-4336-8f32-61260064fb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99decced-3ee5-4e01-8698-17d0651d496f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bd5f43-5ded-479b-9c88-79af5aeaf579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90525c4-dd7a-482a-92c2-08c2682fbc87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76132215-c4ff-46d6-8c41-6d7b115ec63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94259847-1b5f-4499-b3ea-c9ea9c1006f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68019183-601e-4bc8-823a-b176db2ccd59",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a224e5-c9f5-4ef0-b492-0a33a5a2b0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52096a78-dc43-4c4b-8947-d2263bea9e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa35b03b-3b95-4be9-8eea-91b7731de731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac24c569-9037-410a-ab74-ad0540dd68e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30413173-4b32-4e4f-b3be-7ae5d851ea25",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd31c716-d34f-4074-ae46-b688e421073f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3045fb93-14ab-492f-8b81-b256973a8aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95491adf-f0e5-4d91-8414-541d6e5f86d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "956641cb-abe6-4b5b-82df-36e02952a0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e63708-ff5b-462e-8144-42a7a359c999",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e7d346-41ca-4fee-a523-847a91b31745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72bc212-66c7-406c-ac5a-b6f91bdadf64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8091ea-e821-4f10-91ff-fbcfc1ca1312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5489367f-6292-4e89-98f6-6c1b7c0eb31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6966379b-f6d6-4b12-8aae-dba1877d1c92",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e201ed-434c-45b7-9aa7-f2f9983147cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077c550a-02fa-4b59-a2aa-9d8a2f885744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3569dadc-dd2a-417e-84a6-0ad95f47a51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "efbfa753-ec40-4995-928d-07719ce393c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd62cef9-d85d-470f-883b-b3df199848f4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb16b92-03c2-42b2-80bf-68e993061ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7095ae1f-5dbf-4eb9-8901-c8a9ad3e8d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f4430f-91e7-4105-a57c-7789f60f33d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "787fc01a-6a2a-4860-91e3-04ceb7ac395f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae0d6a4-e9cd-4e8f-9e2e-7d46fa7f6a5b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319212ce-b45a-4bec-85b9-a1e95253f9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc755bc-b54d-487f-8b45-589d5ff1789a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c45592-7b37-454c-8f7c-f5b7df9de368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e769608-a4e2-4f2f-831e-2c9f8eb0105c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6be00df-0ed1-4dc4-bf7f-51569aa45435",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70032410-af31-4d87-95a0-90ef7428c9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5358f3c0-9739-4c79-a9a5-18e9f8f7f415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58863744-befc-454f-b416-7e591d94a445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13ceab8f-48be-4723-b90e-b40bff0d8c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ac97d9-7818-413b-9e34-770efdbc6d44",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d607bbb3-0e32-46a0-809f-5bb7e74242bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889c335c-cbc6-48aa-af9b-3293f1d67c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685d90e9-2aa9-47f8-aec2-6579ba199f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "64f7acdf-90f4-4b7a-924d-48b610c62ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e119e1-6867-4b59-b4cb-24473e8f29b0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd5ed8b-945a-4886-be17-75f9f15b5993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0707883b-3f77-43ca-ab97-ae29ad969f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7da9609-ee72-4cc5-8525-b6b3c1a77f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad71fc54-dfc5-46fd-ab0d-73f82cadaaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31057e72-28c0-4670-9441-e4e92121d900",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfd3e4b-5260-4793-8423-42bb70cf88d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca34d83-bbac-4c14-a5d1-3343f549fdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bba6e44-77b4-4dc0-9352-f0d32e701cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20fff2c5-6497-4e0e-ad9d-b165db940157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a44100-e118-4ad5-ba34-63c479ea3b62",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d4c40f-9315-4c56-aeee-513cdefe9a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d23cce0-3f9f-4d6c-9756-b734ea5bca7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96dd7453-bbd5-4a1b-b723-ad6153d45b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "759d1970-8c7c-4887-8194-a417a9008485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b9e0ac-ad9d-41f2-b173-0c035d41d3e3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e60ebd-5376-4794-b396-8e89c1fd3f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c71d6e-1400-422e-bb89-a587a7843187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fe5f12-7b36-4da4-a4f7-7e604d6acb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c94d6033-5dc7-4e0a-9457-17ba3c6fc080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cf6bb0-3fbc-4b52-aeeb-6beff0b161df",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aeba253-6581-4ecd-812e-a5be9dabd594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756c80c7-9ec8-4812-ab37-5747307e8334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daef48fa-bc50-4013-b04f-aa077b482025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "730b9dea-8173-4f85-8280-bab7f4f6d065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b294312f-154b-4424-90e4-73b8b8182be8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9953a05-97a8-41f8-8c5c-9ed8e4d3461b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5604875b-3bbc-46c6-aedd-f4018dae49d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be05644a-2bd4-4abd-8b41-1ae87bf03010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "658f17e9-edf3-4e9a-8bee-d9605af75def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e995cf66-a055-4d2c-b5aa-3e0e54776a38",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfe446c-e9ee-4087-ae9f-40cb3c82d9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce5dd3b-0730-463d-a8e2-cf9107e5aea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045c9afa-3a52-4204-9159-7a7740bce4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1925504c-16fb-4dd3-b468-52d88462af8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7ad31b-e781-43b7-b7ec-82874f15ab81",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b89e8f8-05ba-4bdd-954f-f0fbe37f3f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d944186-281f-4f87-8593-9a9f2a157da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221f54d7-a863-4aa2-9e80-ba64607bd4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee39687b-79ef-44f4-9ec4-bd743bb3247c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b91c51-20d9-43d2-838d-2ba57e738e9b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa625b5-fb04-40f9-8600-fa40aaa9c097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387096c1-29d1-4f9b-b83e-c13a5b943ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abc25ac-987a-4224-ac15-0bbba177fed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64fc8227-3401-4604-b340-d9eec9f0580e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8dc7be-2051-4944-9795-797dc44410db",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246ff83d-fb0b-4f68-99f5-00532213bc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbe2327-a195-4778-9caa-1d00e033d5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9314f6ad-844b-4f4a-b3de-22a7da1ada3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef835967-f019-423b-bfa8-77b01a38906c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c978f3f5-3f43-4494-b1a7-39d2e92766a3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69470bdc-a0cc-4712-b1be-9768cbd65d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75d40da-4a33-405e-9f75-fd22c3e34b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b8d226-afbe-407a-8c1b-be6ebd22952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0854781-a426-4fa4-a775-f147bdb80f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b136400-724b-4360-ac56-d62e25d09f1d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7eae19a-b7b1-4657-94e1-9b1b22be5a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e7b9e7-0118-4418-9c01-fa99b5afe67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d8c748-f82d-4a40-8cdc-33384f4ecdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef919fa-6c6f-4d1f-b0cc-e14968a37143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203a726c-fcdc-4a49-b638-173954b54cc4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1779d3-d2f9-4dee-a259-21729fbb2ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc527ef-d809-47c1-97be-6b473894a4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f331721c-2e9c-4d54-b9c4-9c19e49d1c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e96a74-8d16-495d-8f0f-0a64596624b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bbf810-faab-4a20-bbd3-a0f1d7e37b1e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebc46dd-9c0b-4403-b8b8-e0b1b6d19c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee52d3b0-fed7-4198-b57c-5912e4082c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb6afbf-add8-47c4-aa47-8e0d737c225a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f7148b-88cc-464c-ad7e-89e25c3d1afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c870ace8-da31-4eca-9c6f-ff388b6aac53",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de09ef37-b6f7-4730-8ae0-9085e4861be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8546e701-9ea3-4d99-9f98-441e95de5837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e3fbc7-0068-4025-a6f9-55afb761098a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f41420a6-5b95-469a-bf0c-c3cbf1f2ce7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7671af-a409-431b-882c-17bc5b2f6b6c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f468e2-626b-4511-b30c-908ecc0bdebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6df6c6-1ab1-41f4-9f15-ab466c2b131c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b6af83-5daa-4f80-b6b6-a0f14e2d48a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a8d1fd-722c-4b51-b793-e2854a13b7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022d6fcf-b8fb-4b12-a522-dca172fa0ce4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa01096d-a1d5-40b7-82be-359592678de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ad7127-fa72-46e0-b8b6-0e5a5b0bd6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ede6e4-3ad8-456d-85d2-436864eeebb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4faf18-1bdb-4a8f-9334-245ae2e36212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a869ea-73fc-4206-ac9c-6cd4fce825cb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb637d7-6de1-4214-b25e-931c896c4eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e217c295-b9db-4a5d-93be-5a8c42f82951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40616bd2-ac62-49df-b68b-cf28a011a9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "866187a2-bcc3-42b2-a3a8-9cce6c98bd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c36e86-52e7-4bdb-b4e7-770f3bfa32a3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc5a348-6d2d-4002-baf8-b7f54a577daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239e3038-6695-40b3-adcc-a9285abc3ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d790cba0-0ee8-4fb8-9db9-5ae19c3b7fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ef0e39-f607-4097-8662-51eb0c704eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c020ab2-161b-44c7-a3a3-e23f5cdab5e8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d3fa5b-7f33-4cae-9a0d-a7dee977cbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbbec55-fa57-461f-9dd2-722d5f7d8055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a967933-b068-4588-ab5f-912f8ae7fb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acc444c9-77e9-4876-816b-2e1b33b035af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d870ea2-97ee-48d6-a4ac-b2374091572d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b563de-3abf-4f5b-82eb-77b0c7f5d261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719f3d6e-d231-495e-b1c6-2eb6e3ebfc09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6d17da-156e-47fd-83a3-682c74e5dec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c169835-a375-4f2d-b711-31b84d6b2dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439c7d08-c2d2-4c48-b5d4-b174e03b3e85",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afe3b5c-daa6-4b03-a3de-3158991496e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b29a9d-add3-4bae-85f0-7d9c5d9f3869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce49016-4c42-4047-9de9-c3cade171a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bfe28ff-a898-4134-a8c1-f671461a16c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57ff8ff-6950-4888-aea4-ea91e4f6d10c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1dc30c-88b3-495e-873a-477300972a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafe2be6-942c-478a-a746-0c9b6d8e1e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6171b897-376b-407a-858b-a70a1ecc251c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "853201ec-4bab-41b7-9c7d-278bd1469dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4b7d39-d4e9-4215-b162-f6ed2a4166e1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45d89ac-7e66-4f31-bb62-2f445b0035d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3862b3-1c01-4622-8b6e-23736235bffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe453c5-c13e-460f-afe8-afa3d59c9b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8638b0-d7b6-429b-b223-e441e5a27e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542becb9-7ad9-4468-b698-da07d56ec6bf",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020ee5d2-265d-419b-bc12-b3000ec916d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebeceb55-4c0b-4e57-911e-e230a646858c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd225ee-c809-4d7c-96aa-9d2ae6683201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa69c82-da21-4e9f-a0b6-143cdf3afb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a11739-75cd-4d20-b10f-e63026b7840d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea490df8-1f2a-48a7-be0c-6eb78933a468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3061dfec-6de9-4e27-a7f8-f3921040b725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252af051-dbc9-4f68-86f6-1dd379bf270e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfdedc8-cb6a-4f39-827d-d25571d4729c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87f71238-5d6e-4e21-96e0-4b712e504dd6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1394f6a-0650-43b6-be54-4d5bbf43516b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807e55f5-4a35-4df7-9387-dccba2651f78",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7d6c75-fdd7-439c-b5e2-e1b5d11f5ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3ce85b-25e5-4f88-9ebd-524f0791bb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5af92c36-e4d4-4d40-9f77-39a2f1350f5b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "152cd3bd-3037-44b5-8b39-e6530100bf85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e701eb88-a30b-41c1-8902-f0608967ae1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a1ce7ba-c946-4ff8-95b2-d43b4f17d88a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32926fd1-9404-4a27-9a45-4a8cd2e6c1ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "272cd379-a552-4ad3-bca6-7981110ded60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "71ed4361-bd74-4dee-86f6-175260ccfc74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76847a8e-69be-44e3-bd60-932f2cb04c65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34540dd2-7b54-4a24-a464-dc806c78452b"
            }
          }
        ]
      },
      {
        "id": "2068a02a-7f47-4beb-8b57-5eee1d03bc96",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "347901bd-ee67-405f-9d21-99c4bd168bd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e975bfc6-b826-4787-9ac7-81c490b75de6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dbe55b13-c6de-412d-94a3-be3efa8e2fa1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1a1b9a-50dd-4308-8558-03f4e9df8e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafe53e3-9f2c-4858-828e-7307c930c781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e5ab91-5b65-4118-9b09-f29e14adf720",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e345ed-a874-47fc-bad8-4acf546c235a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8dbde4d-7655-4f05-b241-981bfd80ae14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9629d514-70ff-420b-a43e-b2f165c081b4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25350f59-9a86-41c2-857c-06dcc851d44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046d8657-e7b1-44ec-988d-bf095d831b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f9a097-539c-42d9-bb57-c6e586b519d7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4eb6ead-312e-473b-8ab0-ecbe5928e7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1017ac3-4268-488a-b3ec-a3f6a7eba135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e10786d-9126-4468-83cd-3fb0da23a056",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ce6550-d398-488c-9eff-20a3c6508b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244b9349-6778-4ce8-ba29-61537302dac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bed5cd6-bfd9-47e6-a007-5eec4f131abb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2717a2bc-0686-4f55-ae76-f6641709f1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b00663-f793-4f02-9fc3-d9ed8454f05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20de517-8717-4bc1-8b18-d83ffb910359",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360347cb-a1fd-4c59-8e34-002f0e3687f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cb65f1-6719-4900-adfc-8e6b10411fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f863b8d7-1ee0-47ce-9e88-9056dee918cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cde46cc-c5d8-4a4b-b5b5-cab355e2d324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf69b82-7a86-4b9a-a5a2-a699f3e61bda",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a91646-9c9f-4e9e-ad0d-6c0bf2b70b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f07b5e4d-6785-4e80-b70f-765dc10ae07b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebb3002-f0ce-490f-b405-6b0b14255bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b6ba29-5a43-4a7f-9ec9-8ee465e9b5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b5c469-3fc6-48e2-869d-9e506d8f4895",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a948db69-a94d-4bce-b868-a5ddcf399cad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f563df90-cb1a-4795-a23b-87a8facc3bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccad2bf-80d8-4dc9-a28c-fa25995df212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85559968-8b88-4cca-bdee-5d7fb20ef77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0833d41-e340-4941-b161-5290da873790",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9e585f-a755-437a-865e-ce70a6480424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87556239-ca0b-422e-b8be-9c09b5ff8927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf73bd75-1c27-441a-9045-dd1851fb3263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3ca609-dff4-4f38-ae9f-cc08c13ec1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eee673f-9dd0-4dde-8529-c4e7f9dac794",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412f8e31-e76c-4bb2-aa52-c4db92dac4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024679e5-149b-4bb2-b44e-ca54a08fd2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9255d1-656d-4c0b-9a81-07b03a6ca86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b6286c-033a-4d89-9edb-81e04ae21dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b82d604-e484-4f6f-adff-f6f77008e438",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5023d8f5-4f1f-418a-83d8-669b4f0fe96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d063ab-4e93-4c15-98a2-67ca09a4a259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4724badf-b780-4c76-b23e-a3d0aac262e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a688dbe-0a72-44c4-a630-97bf1ef2a9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dee97d-5a91-4268-a174-9f625c41ca9a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb68ad7b-9758-40d9-98bc-acbdaf66ee0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "266ca95d-40cb-476e-9a7f-1455161e7d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c87608d-b05c-4fb4-8ab1-d935010fcc42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ea44a8-f977-4e45-a236-10daed8dcdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1223228c-c6b1-48a6-bef8-a561c3b094a4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e2d0b4-d6d0-424b-b67e-7736015635c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fcd979e-7510-4dbe-88d8-fa9eabbdf417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e52e59-155f-43ef-9a2c-535eeaab5c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf296e0-38f1-4ef4-9807-b1b0d35e754e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce19cb3e-efc6-4858-816c-57712939ef04",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63695319-76cd-4eb7-871f-9f3eed207f90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4aaf413-9026-4409-bf30-bdcb2e3f4675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc88973-d9f6-4174-a728-84a75201d060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e6128d-f009-459d-a35c-b43950a9d0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b1e38b-7dc1-4e82-adda-85a842000e2b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5df046-ba35-4d5c-80ff-1dca98a2502e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca2984a5-55c4-404b-a62b-808af9d04aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bc2d2c-9046-47ee-ba3d-940b9281fcd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbcb1d8-f38e-462b-bc64-dbcd8c8e5837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8eb8f96-71ab-4451-bebc-9a195977d37d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73216637-2617-456f-ab40-7140df8494f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea58601-79fc-4b44-b171-881ec4280fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e076713-f448-4028-803a-97fc525076d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57457940-687b-43c7-b1b9-bbe373e946b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce1d427-0e47-4b2d-99de-47df17b21dad",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4351310b-0cb0-4def-a792-a21e56b7057d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7698dd-bea9-4292-9f31-a60c3a06bd08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa412c8c-e12b-4659-a237-b0bee1ee17f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b049aa76-2ccf-4918-b81d-c98f521ee2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38735db2-c9d3-474b-b095-4c92ed87a5d3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e3cb67-24ee-46aa-92e2-43fc6f2e6c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411de194-ebdf-4069-a5b6-60c5991219bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6fb78e-51be-442c-8583-0d38e2da0fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1488b844-3c14-408b-9b09-8fd885908162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72a25d0-2200-4690-935f-8d367fef9ee1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfe0922-cbfb-4f9d-982f-a5d29096c5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be47e871-d735-4e7a-b0b2-aea5fe619ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58ecc2e-55fd-4f44-8241-221ea15dc6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080cefe6-0d64-4bd2-acb8-82549b618036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b1d7b0-3959-4394-a499-b1ab64381eb6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60911b60-87a5-4e78-b1df-7f049ae48cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729e8c81-8b7b-4aaa-9fef-dad959dc9e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03dadef-bd7d-42f2-8dac-fd407cfdfbe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7362f0ff-ffd7-4ddb-809b-b3e81d2cdad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761140a5-b74f-40cd-9ddf-9c08c6c3a392",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef19268b-8a3f-4bb1-b4b0-f7da7ff8f93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc28973-cca8-46f5-ad02-8fefbe2a3091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a1eced-24dd-4695-be9a-79d0f25118a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd942a3-b97d-43fa-b410-568e63591d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2df1689-2f02-4b4d-a20c-e0b4b95548e8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e85b22b-b40a-43f1-ab28-adb9d771192c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45653816-6684-461a-add9-2be5efe6f1b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd723ae-b35c-4238-9cd9-27fdb3c5e969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8baafd39-c483-413e-8f5f-346fcf11229b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3e1516-6c5a-4c90-a5df-a9fb8110bec3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a341e2-123b-45e4-a45c-bac3619d6af0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66c4b8bd-81e2-4260-b45b-be434978c00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2187924-9485-4a48-9292-66ce64d071e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1a6ac7-edb7-4b3b-9cf0-e00d006622e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58cfec1-60b4-4116-8f07-57cdc0dccd53",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ed1708-c6f2-471c-afa7-f5170088dc5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ab33f73-9809-4cae-918d-6b53848c46b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dae41b-03ce-4264-b970-8851c0c71b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b6f8a7-8214-4030-9902-d188b7170f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41386bbd-5f64-4fdd-b07f-e6ba8803629e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda11ef0-503c-4af1-828f-a2827d9030ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a1aa844-b84c-477b-a896-33d2d14b604a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14323a93-f95e-4ba4-ab35-9ec358413569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020b99be-f628-4965-858e-460956e9b1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e7724d-5287-4925-9b5f-2a5eee3ccceb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdec3534-d8b9-45ae-a316-45d1db8e2269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8008b02f-b21a-4b83-b35c-5ebf77a7f0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ba9aff-e6c9-4bde-949c-c3bc930d9e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497805a9-9ac3-4421-a7f0-4731117b1cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269ebdd4-29fc-4836-94e8-39b63056c121",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092c682b-5c25-4b0b-9986-b6890ef4b703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e322cef8-b006-4c5b-bd71-3c37469d1c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cc91df-aed9-4429-ba35-b29a0e43ac87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15d24cd-6fd0-4b78-a066-6a9652bc71d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e954e9-6ba9-46e4-8815-e92946dc8310",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcbb9ba-27e0-41ad-9738-6d80e331ee31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658c8441-d021-43dd-b225-f63750d1c7f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79d30ad-bab1-46cd-beca-9580c21da274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc42b0a2-940b-484c-a1be-6c486aaf8f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0f61c3-35d9-4600-97ec-594a67e73e33",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cd0c64-b42b-47af-b3f9-64c02215362f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "174f0da4-6775-4b9a-b717-93c55f731c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78552cc-8840-4a6d-afd3-f3804231ebdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bff3a5a-daf7-458d-8750-03d5b1df9562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f24ebde-af07-4ee7-ae75-e3879a3d51a6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acf5828-502d-4fa9-9dbd-9d622c8deaac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63dc99ee-b069-4ec1-b030-d523753a2749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e55235f-0f7b-4df1-9b56-0bb4052effcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf17e69d-4e03-494a-b0b1-acb30724fd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7efd041-593e-4511-99ba-66cdefd1a87c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf81500-dcd1-4392-8d55-a1d80ee6c952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb2d194c-6444-4d42-b1da-884710a5fd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cbe811-51da-46c4-841e-76e499bf3c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9ac460-68ef-4ef8-9691-a204a3f535ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329b19a4-1b20-4f04-adfb-808547c3b8bb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad9216f-85f4-4d9f-9963-caac8ca5beb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c49ac5-27bc-45df-9e35-41f936699a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b01abc0-baf3-496a-8685-e6bcf11a5cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e480678-b302-4879-aa61-1e8e590895db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f84dc9-f9f6-4bdc-9168-faa44d939125",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517f8281-75f9-4a6e-bed2-da6e007f6cf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f8a76c-553d-4874-bb7d-06e125cd1f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf90bbf-499d-40e7-ba4b-acc1e179fe61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f477648f-bd69-40de-94f1-eced30f34101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08409dc5-1f16-40d4-8d7e-0ae127200937",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fd061d-0965-4f05-9005-71e590867184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf0b05c-51f8-4502-9af6-1518141d43d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda97b32-dcbe-413f-a49a-a12efab783ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97621a2-7ac6-4533-9a98-83cbb8b9b093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc51cdbe-dee5-4920-9430-3c8117b73b6d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5582ccf-6f67-44bd-9f90-617176149658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268f08dd-9c7d-4582-af11-6b191bc920c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf282759-7740-4a67-9620-ba9458bcbddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a7510d-a2a6-4474-8b9f-39994290959d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eaaf1b-5053-4a0d-9bd1-f284a5c76897",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e2fedf-1ae7-4d53-8a84-38cd956c85b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2f2ec0-d8f7-4112-ad5c-dfb15a19e366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc7a7ee-0068-41ee-a034-30df80eb98c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abcdb64-fddf-493d-9c14-753b9350e5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc72cf0-7b64-4c3f-92e5-d01e84bf60d0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10732631-605e-4dc3-b966-766322d32f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c41253-538c-40e9-87a8-592fbfb40efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc6a5bf-b069-4c31-b80a-84d76e44a74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af676751-911b-4652-95d9-004e07ebc340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdca16d4-b912-4161-9119-372b28dcfbeb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc54f6e-a12e-4248-b033-c12c21caa39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe27c2ee-50a3-4c61-adf3-9366af31859d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c9f8f2-34c2-4437-bbe0-21adea40d08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b106da-c6dd-40be-a5ec-b14d650bfe42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a804943c-d60a-4d8c-9d74-33ff78235e75",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfa7bb0-d60f-4cfb-a4f4-3cfc88420217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0674ff93-d443-4827-840d-c99b7089caaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bc5f85-10a1-4db4-9fd7-88f3372e9917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d0db09-e5a4-4fe3-a1c8-f58b7be43c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac66c445-1a24-425a-9dc4-5358262985db",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5f0773-fb4b-4315-a4c1-0268d8f49f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2073b3-4e22-4a28-a1be-bbb9c085178c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9925b314-8abe-4245-9507-675c7ed2aa51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b13319a-14e6-44c7-a174-2172fba4b802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124c16e5-4b59-46e8-a893-00a5b70c3a5d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca01c34d-b77c-439b-98bc-4ff159639023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb7ae30-35b7-456f-9039-9740317f7e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29066896-69c5-49b9-b148-a54ee13e8622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdca2009-5c27-413b-947f-b8de54cf09c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f63df6a-1422-4de3-9f40-2a2fb71ce1a4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d94e40-c65b-44b3-af54-844683080b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e27e2a-1eb8-4c2c-b3d4-7556043a6aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74aff22f-8722-4b41-a995-d9016c2f7993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d0c7ba-3e8c-4791-a8a6-44ec425dca6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb06cab-5610-43bb-818c-ed63a0cac367",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8c9118-e412-4765-8f61-7c1b6a4a6555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5232b9da-cbf5-4875-ab05-1ad4affcd585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4c7a72-a5b1-46fb-b13b-a478f5cadde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fdc921-afe7-4748-ac7b-2d9b78e77df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666cb7ec-1d85-468e-8f9f-41cef98d9931",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4f9e60-c8dd-4a32-9157-77cfac743e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe52092-4ebc-4c2d-b27c-3a43d4b6cea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd153b8-4f8b-497e-abea-06cc592fcf0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95237d5-c404-4687-af9e-94b189e1cce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c33c91b-4a0a-421e-8e56-3a40abbdd337",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ae0feb-ae5c-40d8-b66e-34693e043178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3425089-e8b3-4a51-b8b2-7e98580d17a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6277cd58-b538-4560-aefe-0d8d7ec382f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8afdc43-1766-441c-acdd-41cff8ba3053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a7cc7a-2578-4cf5-8b69-8ed9f11fcff3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77f459e-92e1-4bc9-bf49-b924c4f336b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403d1fa7-b6df-4fc4-bf29-0de82317b4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cb9db1-60c6-42dc-87e8-11650c3aeb86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716806d4-b163-45e2-bd60-eacb14fea95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9518aa7d-1f27-4ff0-8d70-012609ec1461",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4a6218-a2d9-4dfa-97a7-124aba91993f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fe4eef-3602-4b73-b641-c86768ecdf97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad7b4f4-301c-4467-a21b-f9f3604828d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae1dc07-86de-49e5-8b42-a8248cc6ee2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883fce32-01a1-4b88-ad82-d2c0521cb450",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669c828d-52d2-4731-bd0e-0e7641ee0169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dfad534-b57d-4d2e-9de2-674fc67f0c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86209d36-3169-4ef9-8c8f-5058bd674e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb1be02-be2e-4cb5-b803-09fa8e7833aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c841e3-55a6-40d5-95a3-20348441cfda",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dceb2de9-4eba-4d5f-8582-75baea707245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e7cce9-7fc0-44b2-ab9a-fa50591f8f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27631d7d-fe18-4356-9100-d7fcf765a6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b355cda3-f020-4e26-816d-7668fbcbb18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6d5cb4-dfa6-4845-94f2-7af6c886b855",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2e6bf9-a6bd-45d1-bb6b-9dda1b0b3aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be9fb5e-449f-4a99-8068-e26e99befe09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb403c5-0191-43b9-b992-b8f4fe02df35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33015d89-4f1a-43f6-a99e-399a6f268823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a252f4e-e7bb-4b61-bb04-b4b8a9d63c82",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba5779c-8e17-4195-9e7d-e5afad93683d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4a80e5-55aa-4744-8c50-3922289d3895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bcbb7d-ff3f-4741-a242-b74cb80474cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efeb9398-6232-46f8-932e-c07491b87831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3064c34d-1fa4-4b17-9946-329d9e25f6d1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa77e99-b846-4b03-8e1e-9eed59c7c6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75d351f-e5a0-4458-9185-ff1342a36af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe689dc-7852-49c9-b008-f59a6dc7923c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de53b6b-d38a-4082-91be-3298b9c1c492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ea6f9f-92b0-49bf-86bf-2b7dd4be5ea7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9c4ac8-6804-4482-8fbb-69e466d08556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd11a451-1b89-4ead-856e-eb8b03308e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf9c169-4c9b-4908-873a-9838c19d095e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a513f9-08b4-4b51-ac5d-cdc0c40aa250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66677a8f-b053-4c8a-9269-181feab6deaa",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c714d3-34c7-4cc7-88bc-1c8e568d24d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65b8289-cd77-4aec-b814-af95001e910a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b9ae8a-b363-45e3-8b7b-3d04412d6e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2c18f9-5a1a-4483-a5c0-ce213463ce0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7e6568-5b33-4c86-9d5a-8509e2b6060d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36c1bff-6e32-4b27-8312-5747bbe5aed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f01a3fd-a3e1-4ad9-8171-0180fc6c81f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14506e54-024a-4f3d-82ca-a9da0d32a5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e7d7fa-324f-427a-8805-3fc0fae8b5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9bd1c4-4654-4e21-9da4-586f9a329ccd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db24854c-452c-45a6-95bc-423a3c143bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4944fc-c70d-409c-b685-3e419d386acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431314fd-b7c7-4f10-ae42-60eaa5e00783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5627ab-ac5f-4a14-a2c9-964922f91359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728ab9f1-96ed-4ad0-9fd1-e3885c8b82bb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e00a62-a3e6-4897-b35a-d4398e71fe0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd694c49-7394-4b47-8305-903008fa6d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf18ca4-6cad-4ed9-9376-8c628ebb440a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3575767e-80cb-4fba-9d05-4bdc564b3443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbe3fe0-dad4-4ff5-be6b-5fff253e1bd8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14005a64-f62e-4796-ba49-cba79e59dc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69709a8-4637-439a-aee4-6e13fee99e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc75e260-30c5-4412-bcca-e9bea18f516b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb3299c-afc4-451b-938d-d583b3d7fb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af4ab52-cd3b-4b8b-88ad-9fee7d628db1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642f4cfe-eb6f-40c9-acfb-8e76f740cbc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5033d5-a157-447d-82c1-d5b2ba9f5539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "591ed62c-cf1e-416d-993d-f92e2f4fd974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d891f3d1-5401-47c0-8be1-0b657d3d6d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772315d9-aa60-4f55-ac4a-f5e9e4107632",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8a3f9f-002d-4db4-a739-8dcd9a90b8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17ac800-27d9-4608-832b-b81534147de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151b1480-54e7-43b4-a910-30fda025f4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee7e5e5-b794-45ae-a977-33d855a60480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9882ffda-f57d-4e18-a47d-ca9715ed7a01",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221f415f-feae-41aa-a67a-7e6dd363e459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca39937-926d-4ea1-b154-9c1f1ba54410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "159edd9d-9b6e-4025-8a5c-9bdb254b99ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b34d71-df8d-4d9a-8e83-5bd68613895e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fa9c08-20dc-4198-82cd-cf1cd4eac154",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906e3b95-4ee6-4c8d-8895-98a98690ba15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05b5c76-4159-42a2-9a79-2d3e6e9c95f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62f9cba-63d7-4db4-8f22-ac17321e53d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06faf25e-8b17-4573-a96e-dd39c1c12d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556f2638-4985-4d67-bd2c-c15c0e09ad18",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86c622c-3f19-4a5c-a50c-40ed70b4b995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9f5b7eb-c04b-4aa0-a11a-a086bf7e42fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e8686e-473e-4d58-b041-f04d1381c485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4863a337-d56f-42db-a932-56f313dfda31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b33a3fb-1550-4908-82cc-603cafffc69d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83de5ba0-b004-4c66-b8c1-b08f933f6c67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91dacab7-5a4b-4889-8410-e9eb187e68bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17b47c2-e3ea-47f8-875d-5dc438cd5333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c3b312-ff54-4e95-a188-d382c8126c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc20267-552f-44c7-a710-f5a61e99eb81",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d833ff-5c15-4c6d-a076-937e32eb5a07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe05bc37-66f9-4577-9fcf-2ec4b7252775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f759eb-218a-47c9-834c-ff4aa0d8aedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da87cf9-1d21-439d-84c5-3b6618db00ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191c9c20-76a9-4cfe-bf75-d2027f10de9c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa86a33-83c0-430e-be1e-a8d8fc00cde6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1055b90a-38ff-46b9-82bc-784bff38ecb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccb6d7c-443f-45e3-8876-9fa4e0dc6d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabe9ecc-25de-441c-bce7-ac1e0ae6b89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e917424-b8f1-419e-a495-2f0f0632e865",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf58149a-f191-45aa-b8b2-7120f050f976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37285b3d-790c-45a3-8969-f41270d60552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3f1dfd-8596-4b8f-9376-6b4aed4d1703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5afabe8-7b7c-4c0d-a43d-5c50fda6e1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97e1247-d5d7-4e8a-8b80-877e6f897ab4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6772a2f-2d8c-4d54-ab0d-ecc063f4b66c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aecc22c3-2102-4a76-b3e1-1cf15c73d324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a556f42d-ad82-48ce-8857-19ff10974dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467da054-0cbb-4585-9383-b5f9d5269040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69aaba07-100d-4e2a-9f87-3d79c64e3fa3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1792ab5b-c63a-4b83-b58e-598989c367bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "909558b7-c914-455d-8018-9d85389442eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d240dee4-95f0-4a1a-b018-5431ee9af6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a059ad0-4b22-4a35-9d90-eec39d51b93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7b60bd-1861-4bfb-8b22-7b3ff6875ee6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b80b966-b20e-4631-a5b0-bec2bc332c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ececd9-be5e-4468-80b9-8203f3c5aa6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb1d5b4-9486-4678-9848-ba64ee350fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b454339-d1bd-4511-860c-532949b4a5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac1fb97-be26-4fae-ad94-466048d0cb64",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac64545a-8a0b-4d48-938e-20066472a89f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e87bf0f9-94ba-441d-b7a3-c8152ba7f653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5afa30-4803-497e-96e7-c7ac86ff2f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fff467-8546-46c1-892d-9cee832f7e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15378d5-1a0c-4ba1-8187-e433d75ea822",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1793ef5e-9fe2-43b5-b0ea-8b0b4ba89490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9997a61-2054-4456-b940-e985e409be69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ce1ab0-f3ab-413b-ae5a-cb9e4dc20f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84aa3f9-f3ef-43fd-af3d-7a46f8d3f920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaedf0a-0bd3-4700-b110-c354e4171ff2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b7ab4c-0f5b-4226-9b41-7d9e244d70e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76cc8df4-506d-4dd2-bd27-25cc982a8370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f018fadc-8950-44cb-8ba0-e53e9e1adf7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317fa544-f1c0-42ea-bc6c-9271daca8155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f4865d-629d-4d84-8886-956401df4813",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515104af-4ce3-44b6-a1d2-040a110cfb98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba52d3e9-f417-4ee3-a21e-1ca95a878f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c8a944-a2eb-491d-9c0c-6cf856a78f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fa89da-d778-44a5-8da1-e427289b167d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee8136f-83e3-4be8-b3c0-1d129cc10876",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3f493f-afbb-41df-88fe-cb2157985ebc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeaa5c8a-fbb2-4c0f-b126-a303ca4e506e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b632fb08-2895-46cb-9174-a3d57e321268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a531f099-f0dc-436d-8b90-26e8b0d133d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c272061f-abc7-4214-9251-2aefc8fb577a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26745180-2963-4b44-9fb2-9560931a0afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e32ab26-7d8c-49f4-a377-c57213622e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6c573f-8f2b-43a8-8b43-8e98b9700284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebbfd45-45ae-48f2-8a7f-c8c047cb97f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49653853-0d01-4b56-94ea-0ae0e15cf40f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25e81ef-5a4f-402b-8b14-a737e0a0fe04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a61f1d-f2c0-420e-bfa3-1a559a616ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fa29f1-eec9-4a9f-bd91-64f631c4e3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c049ae6e-39fd-4b65-a9e5-33bfca1c3e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6f3e8f-9d31-467f-a61c-69b8cf241188",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a89256-2e3a-412e-826e-f808c8eb0d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56c7328b-d77d-429f-90ff-9b1ae7a58225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dc5ef8-21e7-49a2-92ec-ad6b3d059f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5a820d-f9a4-467d-bedd-63c22766b5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755e35bf-e90b-40ea-a75b-c9515f68bf67",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395afb1b-899c-4730-9c07-51657d572e95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ffec4c-fc02-489c-836d-ef48c23336d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06dd8f53-cba2-4405-8f7e-ddbc91ae5a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656cf3a1-6995-458a-831d-56935fab3803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0f5b0a-f448-4121-97cd-aa643413a34c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30a9dd6-c6ad-4327-9fe6-73af46b0efa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46975b95-335b-4d71-befd-25a46a357c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc04913-e0e2-4cf1-863d-3efd28113d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9004647a-974f-4f28-a3cb-75ad6234c3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d85ccb1-5d51-4d9b-a48f-650383541f37",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53fab2f-0195-46d1-ad30-fd1598c6db27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "185c4f7f-5d15-4f87-9345-db7e422b6f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63a0a2b-71c7-4ff4-aa88-5b0ba8ee4f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb2392e-c84b-4150-b3c7-78209ed5803a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654bf881-fddd-4c10-9c93-438de0b38d8a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500085c2-d45b-4f1c-aae5-895549c93293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c03d9a30-f1c8-42ea-9b94-78caed9d5a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9af3b2-c9c2-45cb-9dfd-3035c44ab955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29988ff4-2cd2-4a32-a6eb-fedcde23b38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3d7502-5dc3-46e8-ac94-592199849c50",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5883404-5100-4acf-a7c8-3a7cbf0061dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b7c53e-2b07-442a-b193-48ac8ac58980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7ad8fb-787e-4480-8b16-1a67667e04b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc345216-b09e-4567-844f-8c6d434637a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08752136-a41d-4b8a-a200-9f72b06d77a8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b750840-d473-423a-8403-1936de4da84c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96f3c4ca-8c31-4158-8733-5bf12730177b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd917a6-c972-4561-89a0-3264e2b75b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce617a20-e177-49c3-aa4b-1fbaf7ce5b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76bfe28-4243-4ae4-840e-055e3a4574b8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd6bc84-7987-4d9c-90ae-5a33539fc038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a87ef53-abf4-45ed-a3b5-35015351d941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbcb141-9153-4ae0-8b38-a9feb5189143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7845a1-406f-4f89-8529-b8d333ebfa2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458409b5-7b6f-4e9e-b4f0-a9a0426e82ec",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cad755-901e-4965-88ad-ad000874bfb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe5a3f5-2425-4498-8ca0-9c539a74ec44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10494d2e-af50-4afe-a8f9-a6c8d7f545af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692c8ccf-731e-4493-9352-96cc7e148493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debcb0f0-73df-4300-a20f-6acd8fccbe2a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae709f7a-11f2-4218-93a3-6a18b1b54246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9561127d-530d-4ac7-b279-62d78906b6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc63f8a6-644b-4349-a4b3-91f87fb41950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b414e1b-3c91-467d-8f6d-409a24032e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11c1eb6-e520-48c4-afc3-688dad396b1e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c77cee4-af19-4d20-988f-3c60f704fca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0973e7d1-08e9-4465-87bc-5c0a160a2597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb12d5c-3d66-4bab-bae8-88d431eaea2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a479fd-f07b-46be-94b1-616c5f62be46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f0850c-6b0a-48c6-b6ca-e6b87df868a0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6296e38f-ceda-41b4-ae2b-525689796900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8934c61-2cb9-44e2-bd65-a7d04b6704dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f621e8-9b70-41a0-9db5-2a4d5c65530b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8019f63-3e82-4f5b-b621-7449a6f0b6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64e7858-3c5c-433a-ab63-37004346598c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d680e1-deea-4015-bcb6-074dabaac440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be7de939-1256-4f7f-ab0a-87f6be32649b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a66f35-7c92-4477-b962-5ab29d84cca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b19c75-f353-4111-b94d-d36c2f034398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8202c8e-a1b9-45b3-ab4a-4042968e5352",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fead90ab-45b0-46fc-b20b-bb47166a38c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a8245d1-19e0-4813-912d-494545b08103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7017d370-491c-49a4-9142-dccc8d0ba095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7c8551-57a8-4e63-8e44-6ae2d5a829d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36798d99-b381-42e8-b5c7-d9fdd7a838ad",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8e7ff8-36ac-4870-8d44-515fd0629e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4960a566-1ab4-4ea4-9f21-176d1bc94f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a851be-2f56-47f4-9c24-e4aa09e6ec5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69ceb60-41ac-4163-a51c-f300c0dad387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dfe75d-2eb0-4848-9bb4-606912d7c677",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9d2217-4160-44a4-8cc9-35a90cdedf3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "646dce95-cc01-410f-8f95-091abccaa810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd60c47-6f91-44e8-8d3e-e77abf9df134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0871e3-3644-48a5-ba18-b6e99c206656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f69571-6d36-410f-b3ff-d8d8bad310b9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addda21b-05d2-42b8-b8e8-3d1ffd7f8c2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9378e5a0-4990-442d-b03a-f8eaaad8630d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "574790a4-e9ed-4885-a0be-d380a2007f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ee02af-0745-466e-a552-156336ac3056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8404415f-a504-425c-8d13-438202b9a506",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7e1344-f4ec-409e-8363-f769676d353e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4306231e-71c4-4755-803f-ee93ac27fee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c881a051-c4b2-4d2c-a526-72d292d8435f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be0c97e-8fe8-47a6-8a66-aefca64c4014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac5c3a0-f4ad-4cb3-a682-47366807fad2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592b2efd-7587-449f-b348-5126ba623c1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13916527-9e11-44b3-b12c-701a087aeaf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e73f033-1a9d-45e6-8e43-f23f8de231a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc951e96-1d36-4433-806a-1e32372728a5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf509da5-15d2-4186-bf1c-f48656ab0401",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03dd3740-07f6-4ed9-ad8e-e809979bbad1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91d011a0-15a2-4623-a383-90fad353f703",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34a3cfbc-4dd7-4fcc-ba16-15d03492437f"
                    }
                  }
                ]
              },
              {
                "id": "31e30723-9b70-4136-9096-d7cc09e222a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9556bb54-24f5-4d57-bbe2-39fe53396c73",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121285c7-62a8-4e68-a0a3-09af9d2e670d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a909ae82-698e-421a-bca4-63967d46284f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60e10f0-d23b-4798-bdbc-535bc04f0a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e20b21a-7360-44e7-a524-97686e382629"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33bf834e-5d9c-44c5-9032-32cd5e150ea9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b325d84-a670-4e6b-80c7-1d8d90573b8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21e576e6-32c0-4e2a-8992-52447b8f35a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf950b88-0efe-4c35-9446-4676cb9758a4"
                    }
                  }
                ]
              },
              {
                "id": "b903a030-6c25-45a3-8b73-e01e881021c6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d48baf7e-f7a6-42b1-916e-2d1100efad02",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1e6625-0178-40de-9774-2ad7bf78bcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b1d8f8be-972f-4396-a991-1a03bc2e4e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb26a8de-07f1-499d-941a-d5d97414041d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83486fea-b730-4eb0-a985-a8543edea02a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "82a3cb1d-0e85-40c0-bef6-334bcb53659f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65b25cb2-b39d-4a71-b5c4-cbe39b5a3b20",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57f46a52-0235-4aa3-b0b3-b9781be014b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "05cf1440-db09-4078-b790-f37ac8f5fbb9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd849493-1cb6-4638-8c6b-e038e69f93a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5db26a7a-6621-4979-961a-d6cfd2c72e22"
                    }
                  }
                ]
              },
              {
                "id": "bf64e131-341b-404f-86aa-798f763d17b9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "760bb6f6-56b4-4978-a58d-dbefbd2803ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e4e93ed1-7f39-470b-908e-f3ba3847a0de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "647b13f4-38a2-4d01-87d3-f6cdee752f2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77e06cfa-d700-49e6-90de-8f1f95d1be54"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a64a09b5-910c-4d28-ad4a-0690dc34e5fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d3bc9d7f-757f-4167-83f1-f791fc43fd3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aefff789-cea0-4ee2-863f-71cf9a8d0427",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6639b879-d5f9-47c5-a210-0be8c3f64a4e"
            }
          }
        ]
      },
      {
        "id": "af10b0ee-2b57-497e-81e0-3ae50dac78dc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "254b6219-5752-4e0d-9291-bab3b6af89f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7507e5cd-b428-4fc0-bfb8-61dc979b6344",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c518d103-6a09-4116-969a-fe0ed2e18946",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f801b4-a0cc-4784-b276-3608e036dbce",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "90ddbc10-7c26-4260-9d60-c746e5a72b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb594831-2660-4c35-badf-9a10ed930b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e87e254-f2f6-448b-9db0-169a7c09ed38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e766cb9-fdd4-4bc5-8006-c55b8ce27a52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "214a1eba-5d19-4e6a-981b-069f97c34fa1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "322495ab-4958-4b5f-8fdc-862dd64526a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "790ca979-9dc6-4ce1-ac50-70293b956575"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6f50507-3e83-4721-ab94-873526c6abbc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1aa5e4e1-e54a-497c-8321-037edc667335"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90868ca1-722b-47b5-bf38-22e142324822",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd676d6c-be71-4039-b1a0-4efedfc86cd2"
            }
          }
        ]
      },
      {
        "id": "77113d92-e174-4f47-896a-9760752175b8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dc1a1628-ca53-4905-96ba-f6459ed32572",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f168278-f950-48d7-86c1-01ba436a2680",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5b96f21-0499-472a-8bd7-5785c91643fc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f2edf1-223a-4de6-b00b-7c642086f567",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b09a3f51-28f2-4758-88ab-768c2d3c42c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "439efb67-9c2e-4029-b131-233df324acde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a29d57ad-2b2a-4af1-b39d-f8d438fe7563"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b65e1ad1-881f-4114-8b0c-919bad032701",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c108712d-7f61-4821-a8e6-a94205e432e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43474bec-a1fe-4f26-93db-a20f2109479e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f00b8712-16b3-4958-9ab4-13cacdecf207"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "226b0392-5dd3-4fe6-8c19-9522954b600a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4c97a40c-0727-4b61-b8b9-0a9ba549f852"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aabad1e7-33f2-42d0-a6d2-476e3e543cd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d7370b7-9d9f-4f1c-9c14-1471e930393c"
            }
          }
        ]
      },
      {
        "id": "96724443-653a-4861-a3e6-7144d7e2ee7e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4a61dfc8-fb0c-40f8-897e-6f55f2b7e144",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d9693f9-ddaf-416f-9889-717b405465d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "338f98a6-ff29-42ef-8702-57bc79cd1a76",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff810040-8f08-4f6f-b196-4e5ba279663a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dde320d8-9ed6-4ae9-bcda-be880e1ec182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e8223b-81c4-4e71-ad8f-01da5f0a7fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34601e1e-0c38-4323-a22b-5ab420b616a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a01d6dae-d10b-4a57-9d74-51a5b26f039d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "500e7130-7a90-4bcf-b94c-fea2243ce777"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17e86474-dcb4-450f-97af-c9a068b42e10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a375e615-1160-4c42-913f-ee5e4d8a2249"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cc1a3d8-0f35-477f-a9a7-165f08f544cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dba38e51-41cd-4426-a504-0766b4002743"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fec4976-276a-4213-9180-58757d16fc2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06dcdcbf-17d7-42ca-9351-7b0051f56fca"
            }
          }
        ]
      },
      {
        "id": "dba419a8-42e5-4789-b7ef-d01942d8e45e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "691eb324-bc22-4a11-8eb5-190d6cc1e654",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60aea0d6-9e17-4bfe-8fc6-d3fa35ab1c47",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f10df993-14cb-4ad3-8d8c-6fe8de7ceee2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37e760bb-4749-48b4-b850-6728a0eb1c8d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "689fbd86-fe7d-4a9f-bdb7-376ac42f3308",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 804.7698412698406,
      "responseMin": 14,
      "responseMax": 28277,
      "responseSd": 4156.779150657919,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728348308460,
      "completed": 1728348519805
    },
    "executions": [
      {
        "id": "bbf1bf1f-273a-4193-9b57-ed798b7a0b61",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7ee8a7ae-b66b-4305-bbdc-344901c7cba1",
          "httpRequestId": "e8426066-6feb-451b-9142-6640a12d1031"
        },
        "item": {
          "id": "bbf1bf1f-273a-4193-9b57-ed798b7a0b61",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3484161d-242d-482c-9d49-fbfec3610b3e",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "bcd72aef-72a8-4947-859e-bc85c643cd8e",
        "cursor": {
          "ref": "e700fb3d-343a-48e9-9551-98b3c55f8f3b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8cb9f7c6-0a59-46f1-ba0f-29091f0a70b5"
        },
        "item": {
          "id": "bcd72aef-72a8-4947-859e-bc85c643cd8e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "656cc0f1-6b26-4b5f-a652-7b14ac100122",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "1c94000e-4509-4b1e-ac40-dd3cbed3e12d",
        "cursor": {
          "ref": "1f48995f-5cf6-4837-ba18-377855930c7d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d82ee0d2-ec44-4c2e-aa97-28757592a383"
        },
        "item": {
          "id": "1c94000e-4509-4b1e-ac40-dd3cbed3e12d",
          "name": "did_json"
        },
        "response": {
          "id": "c9a67af5-db37-48da-a3ef-0704071716c1",
          "status": "OK",
          "code": 200,
          "responseTime": 465,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75399549-5179-493b-9304-9cb619f2e412",
        "cursor": {
          "ref": "1a152248-4a17-4928-ba76-19afa0a28a8f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3ce415e3-8f64-4b45-9882-14a31a852e2e"
        },
        "item": {
          "id": "75399549-5179-493b-9304-9cb619f2e412",
          "name": "did:invalid"
        },
        "response": {
          "id": "beda8223-bcf6-4da2-9562-105b906c4991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2277,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75399549-5179-493b-9304-9cb619f2e412",
        "cursor": {
          "ref": "1a152248-4a17-4928-ba76-19afa0a28a8f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3ce415e3-8f64-4b45-9882-14a31a852e2e"
        },
        "item": {
          "id": "75399549-5179-493b-9304-9cb619f2e412",
          "name": "did:invalid"
        },
        "response": {
          "id": "beda8223-bcf6-4da2-9562-105b906c4991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2277,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379073ea-0e8b-48d9-a4c1-949ef2bdec84",
        "cursor": {
          "ref": "99ba5c50-310a-46ef-8cc3-2e6372fc92a9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2d20f3f8-195a-4570-b26a-ddeaf90aa80a"
        },
        "item": {
          "id": "379073ea-0e8b-48d9-a4c1-949ef2bdec84",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "af2093bf-02e6-431f-97c7-3b26a39ea9cf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2536,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88d2aa9-2f88-4c59-bf28-ad020347bffb",
        "cursor": {
          "ref": "72ffb6ed-f71c-416b-8bf4-2abada6400a8",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ce5d6b47-c479-45af-9af5-80bdd316930f"
        },
        "item": {
          "id": "d88d2aa9-2f88-4c59-bf28-ad020347bffb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b153c44b-68bd-4381-9059-6b5aa813784b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2297,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6746a645-007a-48ca-bae3-1577e018674f",
        "cursor": {
          "ref": "e0dcb2ef-ce21-4fbd-8e1d-e8ed96d03e62",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a32d5837-3f77-4265-8a85-0e8571b97257"
        },
        "item": {
          "id": "6746a645-007a-48ca-bae3-1577e018674f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "04f0e3be-353e-43e5-a4ed-b34576993551",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 249,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d5cfe3-2bc3-4553-bf82-29fd722a170a",
        "cursor": {
          "ref": "fca7af6e-967d-4c5f-acad-165403687554",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "52ac3648-1bc9-46d1-8842-2aa8c6074c3a"
        },
        "item": {
          "id": "e8d5cfe3-2bc3-4553-bf82-29fd722a170a",
          "name": "identifiers"
        },
        "response": {
          "id": "ab58de3d-b501-416a-9575-872e86722ad1",
          "status": "OK",
          "code": 200,
          "responseTime": 2638,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aea37b8-bc5e-41fb-9244-9bfd24e9ebd2",
        "cursor": {
          "ref": "64670a6e-34b1-4042-b3da-6e3d629ac647",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6d7609bd-ef6e-483a-94f2-0fdc67c00e1a"
        },
        "item": {
          "id": "5aea37b8-bc5e-41fb-9244-9bfd24e9ebd2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "31185b17-7219-4760-9297-3e4ba4701c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d71a444-40af-4df6-97c4-308271cb2c13",
        "cursor": {
          "ref": "7adc44ad-5a4e-4266-99a0-faeae4f64709",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7f0fa9eb-d3b2-4b39-8fa4-63c564ff80a1"
        },
        "item": {
          "id": "4d71a444-40af-4df6-97c4-308271cb2c13",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "de2aab2a-5bd9-42dd-8606-787f67f20039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41b1dfb-6f7d-4855-862a-444946a156c3",
        "cursor": {
          "ref": "355db96b-b0fa-431f-8421-f5e683cd0392",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e1909934-174c-48e9-8f7c-237c2267fce4"
        },
        "item": {
          "id": "c41b1dfb-6f7d-4855-862a-444946a156c3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5d30b699-74b6-48f7-8c8b-a7ad8871b285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bdc5b1-543f-4ffd-b729-c20380b94017",
        "cursor": {
          "ref": "fcbb20ca-25b1-47ab-b4ac-f2bd78507a05",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c4e5f7c9-1ca1-4958-8484-9c2433310640"
        },
        "item": {
          "id": "51bdc5b1-543f-4ffd-b729-c20380b94017",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "158d78a0-574a-49a2-82da-9206083eb45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45251592-b8cf-4c9a-a7f7-b993ba1ed6ad",
        "cursor": {
          "ref": "fab80354-be10-4f2e-aa55-64faa8918af0",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3dad299a-492d-4f35-ad29-a765474b3a9d"
        },
        "item": {
          "id": "45251592-b8cf-4c9a-a7f7-b993ba1ed6ad",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ae5010e6-a92a-4178-9056-e8c0485c69bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df2a42b-67ab-4930-8ab2-c58ed2d72d0c",
        "cursor": {
          "ref": "4848c738-2a26-4340-85a6-718561be628f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "13a8dfee-a6cc-4a12-9c86-743cd58837cd"
        },
        "item": {
          "id": "8df2a42b-67ab-4930-8ab2-c58ed2d72d0c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "17b4c58f-5361-4cc4-a614-5f741bee484f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af328dae-0cdb-4ff6-a532-2349b8010b57",
        "cursor": {
          "ref": "e9707a4f-3ee3-4ac9-8015-a1522da0bb60",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "85d52013-118a-4ae2-a1a9-b3d5f40159bf"
        },
        "item": {
          "id": "af328dae-0cdb-4ff6-a532-2349b8010b57",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9a7aedf4-fead-430e-beb0-a0262acaddcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f808529-0770-41c6-9843-4cb37ba9f3ad",
        "cursor": {
          "ref": "bbd86510-9951-450f-abc4-a52b48611402",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "32d3d91d-5153-4a67-8518-264b5480eeaa"
        },
        "item": {
          "id": "3f808529-0770-41c6-9843-4cb37ba9f3ad",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a96d3080-92b4-4d6e-a65c-d1d7c3b676bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc032c52-10ae-4a4b-991a-a944fc412a78",
        "cursor": {
          "ref": "58b20425-d293-4910-b0cf-bccb1841749b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6c06b39b-0c66-47ae-a312-ab37c2738b08"
        },
        "item": {
          "id": "dc032c52-10ae-4a4b-991a-a944fc412a78",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cc423ef1-becc-49c7-a826-4fbaf770f877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3552f0-9d46-4341-bb93-e0f520c97f26",
        "cursor": {
          "ref": "a621a6e2-2f1a-4732-a0ac-796c73e56ea6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b917a8b2-744e-4f2c-ba24-4fd251894708"
        },
        "item": {
          "id": "4c3552f0-9d46-4341-bb93-e0f520c97f26",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "15020bed-93e6-4aca-bfc4-23e59751b004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead41a8a-5290-4343-9b23-fabe974839ff",
        "cursor": {
          "ref": "dbf557d0-c152-4205-a840-fdc5b42b7f4a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "080556d6-33df-4449-a101-67cbc4b26bac"
        },
        "item": {
          "id": "ead41a8a-5290-4343-9b23-fabe974839ff",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "380ddcf9-a122-4fee-bc7b-ef23b777ee0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f381411c-9079-485f-8620-896256e1cd7e",
        "cursor": {
          "ref": "1b267a0e-8ebd-475d-b28f-4993572d25b4",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3877214d-8816-4eb4-ae59-ba4db7e054f2"
        },
        "item": {
          "id": "f381411c-9079-485f-8620-896256e1cd7e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "12f3835a-73f4-4cc3-8ae0-823f14f644fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777f3376-8278-4ba5-9dbb-d3ecfc42adba",
        "cursor": {
          "ref": "bc5b5c36-00d4-4543-ad0b-77115138e288",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bf478c02-90c6-4e54-91fa-508303cd1245"
        },
        "item": {
          "id": "777f3376-8278-4ba5-9dbb-d3ecfc42adba",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1f3654ed-71da-4e24-a87a-e1e52e3cd63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25acb87a-cd49-46d3-be2a-9d6a03b7d233",
        "cursor": {
          "ref": "624726df-6e0c-4a4b-be2e-9079fb4ec666",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "045dcc50-3ff8-4dc9-aea0-646f41871eeb"
        },
        "item": {
          "id": "25acb87a-cd49-46d3-be2a-9d6a03b7d233",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f6f9d44b-0792-425c-870e-18aea317934a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26d8052-ced9-4d04-b3d9-b484c1b2522a",
        "cursor": {
          "ref": "070aee3a-449c-4dd7-9313-fea1c6a1ea67",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "451e374e-45ef-424e-b14a-1b585922bb76"
        },
        "item": {
          "id": "d26d8052-ced9-4d04-b3d9-b484c1b2522a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d7c73400-8c66-4bc4-8470-0a3013cf9da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c320f7e-097b-4a23-bae9-fb802249f73a",
        "cursor": {
          "ref": "01bf6ff7-143e-4aea-b50b-8f75d4da1b1d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "10f80a85-27b3-40bc-b8ef-513b3d65b036"
        },
        "item": {
          "id": "9c320f7e-097b-4a23-bae9-fb802249f73a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e5908f23-84d8-444d-b368-fa1faa7acc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45b87ce-0696-4f8c-b7dd-52ba8ab1a2ac",
        "cursor": {
          "ref": "6e4c2314-8549-4f1e-9c1a-2747e05c0f67",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c70b49b3-0d53-4096-a241-a67055a65764"
        },
        "item": {
          "id": "f45b87ce-0696-4f8c-b7dd-52ba8ab1a2ac",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4b8241a2-1735-4e3c-9b1e-aab5ed3a1f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3ad9a5-f461-4354-bb3f-cf4ccf8cabd6",
        "cursor": {
          "ref": "afd812c5-9845-466e-a668-c49cda8f79d8",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "788aa5f8-4108-47ce-8fb5-08c17a4189cc"
        },
        "item": {
          "id": "3d3ad9a5-f461-4354-bb3f-cf4ccf8cabd6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7c052f1b-dfe4-4e2e-9190-63c104e1a39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448eca98-edf8-4ad5-9fd8-9c07dc32ba57",
        "cursor": {
          "ref": "25272afe-953e-4f6e-ae10-92b3151a4ff8",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c053f087-9464-4bc3-b09c-fc8bc153be9e"
        },
        "item": {
          "id": "448eca98-edf8-4ad5-9fd8-9c07dc32ba57",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "068b37ea-d52e-4475-bb19-a4cbd78c7924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2223af88-b11b-4cd2-9d4b-49ef1d8687f5",
        "cursor": {
          "ref": "330c1e7e-d8e8-441c-a178-d60119f82768",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f96679fa-f8fc-4618-bc9a-ce7c9b1859a3"
        },
        "item": {
          "id": "2223af88-b11b-4cd2-9d4b-49ef1d8687f5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6672440e-ff18-451d-b6eb-a803e3613982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f44f649-ace4-4486-9c10-e7f4a7fa492b",
        "cursor": {
          "ref": "fb9f6713-36a5-4f2d-8193-7177f3c0616b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a4394ac5-2324-447d-af19-349f8bd07115"
        },
        "item": {
          "id": "8f44f649-ace4-4486-9c10-e7f4a7fa492b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4f3611b6-0d88-4f76-913c-1ba93209351b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626c3fca-b29a-4606-ba61-04ef5acc9a3d",
        "cursor": {
          "ref": "420b34f3-b87c-429d-83a5-9804e775d6eb",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "27369014-1226-44eb-8ba1-21ed793003ad"
        },
        "item": {
          "id": "626c3fca-b29a-4606-ba61-04ef5acc9a3d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "530ee254-c0c1-4918-902e-31eb10c1490a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b3a691-28f0-490c-8c2e-b1fecb2a99d2",
        "cursor": {
          "ref": "a8d2a174-03c8-4fbb-8745-b583ce4be098",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e3f31a5f-f801-4922-a1a9-7973ecfed58d"
        },
        "item": {
          "id": "85b3a691-28f0-490c-8c2e-b1fecb2a99d2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dbcf0cda-f988-47d2-a431-a57e03f776ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953cd52b-452f-42c4-b7f3-a399b128b364",
        "cursor": {
          "ref": "a91e9d71-4fbf-45f8-8b4b-76cdaab034de",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "936541eb-468f-443d-ab42-e4f8990d4073"
        },
        "item": {
          "id": "953cd52b-452f-42c4-b7f3-a399b128b364",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "678c15a4-682d-46c1-a657-76d5bd3669cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52be555a-8ad0-4744-a7a2-5a25a83c3846",
        "cursor": {
          "ref": "8e4373fb-6b79-437b-aefc-2cfd231efc2e",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "14fb9c07-666d-4919-8226-206ae19f3dce"
        },
        "item": {
          "id": "52be555a-8ad0-4744-a7a2-5a25a83c3846",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1411aae0-9b2b-4236-bf2e-2111a366860a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40c62b4-ff1e-4846-8d57-8ce8a2db5af8",
        "cursor": {
          "ref": "f7f06d9f-b1c4-491f-ad33-0a57cf629a10",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b26c15fe-31fe-4e4e-9a92-f1ee9fd3627a"
        },
        "item": {
          "id": "d40c62b4-ff1e-4846-8d57-8ce8a2db5af8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "26aecf78-c294-43cb-a90b-f5e6f8c8a574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc932f81-36e6-4136-8c29-a46f8c1a1531",
        "cursor": {
          "ref": "16d8eb08-b3b1-43a1-ab6d-281cd16d9377",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0d4eff57-bf07-4a1e-900d-935be4ced3fe"
        },
        "item": {
          "id": "dc932f81-36e6-4136-8c29-a46f8c1a1531",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c3ca8ebd-ab68-4c6e-97bd-62317bded2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc43592-4230-48cd-b927-d2dfe813928b",
        "cursor": {
          "ref": "4ad2c41b-99c0-46e8-9ecc-751c5e87f8b4",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "84fb89ab-79b0-4fee-834f-f3cae9114dca"
        },
        "item": {
          "id": "8fc43592-4230-48cd-b927-d2dfe813928b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6b8d2f50-11b6-449d-8349-e76ec9d5bff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7720b9-8a9b-49b1-b6d7-6247e036349e",
        "cursor": {
          "ref": "10df2637-2836-489b-9dde-9443a1a37bd2",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c8952d87-675b-4ecb-a75a-9ef078311076"
        },
        "item": {
          "id": "8f7720b9-8a9b-49b1-b6d7-6247e036349e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f4138142-5c94-4ae7-94e0-a6a1c27d95e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3296996-2460-49f8-9ad8-7313fb65db4f",
        "cursor": {
          "ref": "848c30bb-e43d-46c1-a1ce-3c1c8e8ce937",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3d235efd-0d8a-4a57-8dc8-dca25a0c3b9b"
        },
        "item": {
          "id": "d3296996-2460-49f8-9ad8-7313fb65db4f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "751ec8c7-d632-4f30-92e5-f4021b0f89be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c015e3fb-e139-4351-a313-47b804d565e3",
        "cursor": {
          "ref": "b6660842-dad2-42da-9879-8cbd315666aa",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b0ec8880-48d9-4bb2-a059-eae8d187163a"
        },
        "item": {
          "id": "c015e3fb-e139-4351-a313-47b804d565e3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "07a735db-39d7-42ab-9ebc-526df0d282e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e61a96-84d7-4b3d-82de-292669090d18",
        "cursor": {
          "ref": "b37ca3ff-6b85-4967-be8e-482ba52bf9e4",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "388e005b-591d-4c6f-bbb7-75873384a18e"
        },
        "item": {
          "id": "e4e61a96-84d7-4b3d-82de-292669090d18",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "45456294-92d0-49d0-a1e6-8b4b9c32b457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db60c08-0c69-4518-a19e-9e1b2e717c38",
        "cursor": {
          "ref": "55169002-99fa-42e6-9b4d-4ce2fb4871ad",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0945c0b1-331a-498c-ad66-d11fea0ee054"
        },
        "item": {
          "id": "8db60c08-0c69-4518-a19e-9e1b2e717c38",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5cec61d1-6a99-4827-8591-e4e20a2c591a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee89968c-9220-4303-a002-9623903da416",
        "cursor": {
          "ref": "c30491c5-6f64-4983-a32f-31126a080d6f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bef0a16b-42d6-4873-b107-41346f55edc1"
        },
        "item": {
          "id": "ee89968c-9220-4303-a002-9623903da416",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b4e85115-50bf-4b9b-ab7b-d756947e739d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8127ab96-3ae3-4337-8274-c9782ac14514",
        "cursor": {
          "ref": "ff9dbe97-683b-43cc-a49b-4ef5df76d5ed",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "47d5e43e-9569-44df-bdd9-36bcdf66a124"
        },
        "item": {
          "id": "8127ab96-3ae3-4337-8274-c9782ac14514",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4f7e00c2-9ffd-4add-9564-d709ea5a6eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139a166e-6bf0-4815-9b40-1a9fb75a5ef6",
        "cursor": {
          "ref": "c1711fb6-76d2-4f73-8068-4431aa2ed452",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f4cc0003-2705-4e68-83c0-71605117aa22"
        },
        "item": {
          "id": "139a166e-6bf0-4815-9b40-1a9fb75a5ef6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bf65551e-e083-47c7-8eb7-8e53c7d83c38",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b98b3b4-6dfa-41a2-afc9-2957d92084a7",
        "cursor": {
          "ref": "1efbd828-de43-4202-b536-fb5d222a90ca",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a04ad5de-8b9a-4dc4-aaf1-ecdd4dcc68d7"
        },
        "item": {
          "id": "3b98b3b4-6dfa-41a2-afc9-2957d92084a7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f8d5b511-d022-4fba-8bbc-64dcdb366275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f957872-6505-401e-9fbb-26c216958c4d",
        "cursor": {
          "ref": "db79bb5b-4800-4f05-934f-ad8f141ea2a6",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c6a62f8a-69ff-4f6f-9867-846eebe8f284"
        },
        "item": {
          "id": "0f957872-6505-401e-9fbb-26c216958c4d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e23272b4-174b-4e8c-9c85-7a3c7f87921d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812c7602-5d67-4483-9eda-31e2bf13811e",
        "cursor": {
          "ref": "608492d8-9d27-49b4-9a9d-08ae19908c97",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "df11ba30-ed02-46ce-bdd6-1c0f5ba7c51e"
        },
        "item": {
          "id": "812c7602-5d67-4483-9eda-31e2bf13811e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d7806be9-f808-4b48-80f1-9b79e6214647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9639615d-acea-420d-9a45-cea15169d6b6",
        "cursor": {
          "ref": "3b74a5f0-e6cd-4d86-885f-27a62c0bb268",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "200d96f8-92ec-4a21-adb7-80f819f011ad"
        },
        "item": {
          "id": "9639615d-acea-420d-9a45-cea15169d6b6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "700e456a-3237-4d44-9f15-c1411e6ac6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb0c7c9-dd6f-4a6e-8f73-f417827914d1",
        "cursor": {
          "ref": "0a63f093-287a-466e-a5e2-95f16846d1aa",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "23d07507-2710-41d6-9a48-c67345b06ab5"
        },
        "item": {
          "id": "0bb0c7c9-dd6f-4a6e-8f73-f417827914d1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d29bc6d1-071f-4e02-a5a7-36686a3e23de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59ea6d7-bc5e-4ab2-9c97-54afaa90b3c0",
        "cursor": {
          "ref": "e0b39e72-2098-4925-a623-f021191000df",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "02372c99-2820-4407-8dfa-23da9c48cad9"
        },
        "item": {
          "id": "c59ea6d7-bc5e-4ab2-9c97-54afaa90b3c0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cca3d088-3ac6-4143-8804-5a5c6af64ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b951171-c0d7-47a7-a105-cb56aa4136f2",
        "cursor": {
          "ref": "f0831962-b7b2-4f84-a4f5-6102e1ef2d6c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ac1e8adf-de0c-4c91-a9eb-55e7b4b75f58"
        },
        "item": {
          "id": "2b951171-c0d7-47a7-a105-cb56aa4136f2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "425287e9-07c7-4fef-9d59-199174cf400f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a875bc8f-77ab-4ed1-9d37-7e6e533b9c7f",
        "cursor": {
          "ref": "5ddfcc2f-6ad7-45c1-b046-124c8879e4b3",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "49b40dfe-fc47-40d0-a640-bb4e312887e1"
        },
        "item": {
          "id": "a875bc8f-77ab-4ed1-9d37-7e6e533b9c7f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "032b242d-4bc5-4b26-8b46-cb8c413760b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3ecb6b-7901-4762-b159-6abcd398e967",
        "cursor": {
          "ref": "b5403d27-f923-4976-8884-1ff79cf6fa3d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b738c599-f0ea-4353-9103-904bb0e094c8"
        },
        "item": {
          "id": "ca3ecb6b-7901-4762-b159-6abcd398e967",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "17fa0964-d463-41d0-a448-a8626898847c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1eb8e9-b407-4eb6-813c-16a7ff07e1bb",
        "cursor": {
          "ref": "2c49dae0-3782-49fa-a6ab-1866e0aebbdf",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "95dc7548-94e6-4a42-ba38-b3269e5fe905"
        },
        "item": {
          "id": "3c1eb8e9-b407-4eb6-813c-16a7ff07e1bb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f748ef8e-f1d1-4225-b319-cf202691d23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd757bb-8fe2-48be-a06d-eac8b15ba90f",
        "cursor": {
          "ref": "a0972d8e-1597-4659-9575-8fc870dfb7b9",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "24e00fb4-f104-4bc3-85ed-be0a2670c80b"
        },
        "item": {
          "id": "fdd757bb-8fe2-48be-a06d-eac8b15ba90f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "596eee46-1ac4-4806-91c6-78d0a45244b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0662cdd0-81e9-4648-85ae-5dce6382e061",
        "cursor": {
          "ref": "562187d6-6057-44f1-ba88-1bd642bc4ca3",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e4f2b097-9299-4a3a-8c6a-acbadcbc6038"
        },
        "item": {
          "id": "0662cdd0-81e9-4648-85ae-5dce6382e061",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ad41f1ac-bbc5-4e42-ac07-ac59a815ca13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baac501-95f3-406d-956f-46aa47f78e81",
        "cursor": {
          "ref": "5fc92a9c-9fcf-4c07-bdbf-aab12049845d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6d08171b-f97f-42bd-9398-87cd15b2b326"
        },
        "item": {
          "id": "5baac501-95f3-406d-956f-46aa47f78e81",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9e83e9e0-7808-4a11-bf5d-cc923354997f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0438e43-47ae-470f-b7d2-3321907a9ed9",
        "cursor": {
          "ref": "aa94a8aa-e4fd-427f-938a-649f96ed7c01",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4564217c-22b8-4b9f-b16d-52eb190fbfc0"
        },
        "item": {
          "id": "b0438e43-47ae-470f-b7d2-3321907a9ed9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8c7bf604-124a-4f7c-8780-716d55aa9121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fcd37f-1273-4dad-bfcf-25a6596d0a5b",
        "cursor": {
          "ref": "f2a679f4-52b9-4c5d-a099-8cba39e807e0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d23c9337-0af9-4869-9853-2dd00ec2700f"
        },
        "item": {
          "id": "70fcd37f-1273-4dad-bfcf-25a6596d0a5b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2647ea62-0be5-42d9-8aeb-eae4e85ca269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2815a67-8d59-487e-8512-89f7ca7cc837",
        "cursor": {
          "ref": "49d8f9fc-32f5-4480-8651-5f43eaf83c03",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0bbcc08d-2f7d-4ea2-bb1e-a6f31493215c"
        },
        "item": {
          "id": "c2815a67-8d59-487e-8512-89f7ca7cc837",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1f3240dd-1ddf-4d5b-a9ad-8b256af26503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1270a774-5f54-458b-8b66-e8f6a978413f",
        "cursor": {
          "ref": "3c7e560d-9b80-46ae-88a6-169c3f144fb4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "054bc736-cf9c-480e-9ebc-a1f3600746e1"
        },
        "item": {
          "id": "1270a774-5f54-458b-8b66-e8f6a978413f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c0b34ca6-bfcb-487e-8645-b81de1a13389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5710c404-8581-4b5e-a5a8-452921e76325",
        "cursor": {
          "ref": "06c3a76b-0689-4fe1-8647-d627160abad0",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "775530e1-862d-474c-b45e-320248333b6e"
        },
        "item": {
          "id": "5710c404-8581-4b5e-a5a8-452921e76325",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b44cd5da-51c9-4c7d-afd7-862282b6791e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511ba6d2-c711-499e-b295-904820d1087c",
        "cursor": {
          "ref": "20314bf9-00c9-46aa-a113-948ad1e9cf1a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "413d9a06-5957-43ac-84fb-65bdad056cc5"
        },
        "item": {
          "id": "511ba6d2-c711-499e-b295-904820d1087c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9716905f-3bde-4252-9ec8-ed0ddf2b0284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b530d6-cb8f-4ff8-beef-e4e7e0f9be8d",
        "cursor": {
          "ref": "7f2def97-d2c5-4943-9522-34f48af2e3df",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9d9e9ac2-0730-4a8f-9260-608ef9b04419"
        },
        "item": {
          "id": "97b530d6-cb8f-4ff8-beef-e4e7e0f9be8d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "886d7158-7699-432d-893e-8bb7c983c0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d6567d-f238-464e-ac9d-d0932e05da45",
        "cursor": {
          "ref": "35e37aae-81b2-4238-876b-9c161f3a8820",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "56d5f38d-8949-47d2-8361-fa2f6420e491"
        },
        "item": {
          "id": "35d6567d-f238-464e-ac9d-d0932e05da45",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "884d3b3f-4f7c-4cfd-bc13-b7efcbbdf0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39146d91-c169-4e92-903c-e8e1f35ccc54",
        "cursor": {
          "ref": "e0a01fb2-619a-4ce6-9be2-3a0542414a4c",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4cd87a36-3946-4821-9c95-dd7c9266711a"
        },
        "item": {
          "id": "39146d91-c169-4e92-903c-e8e1f35ccc54",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "189165bd-df54-4cd9-b782-53887cff6eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de66737a-55bb-4991-a302-b8ce2f8590fe",
        "cursor": {
          "ref": "a551e740-ce79-4f18-8238-ed13932ba93b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1c78a9a2-5405-41ce-90cd-a766e3e978cc"
        },
        "item": {
          "id": "de66737a-55bb-4991-a302-b8ce2f8590fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d818b913-2b11-4403-9ad2-7f4ce6ae83d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecd92a2-5fba-4876-8113-13d42c836e7e",
        "cursor": {
          "ref": "117db4d6-e657-4e10-945c-3c547935c453",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "87aa3a29-a0d7-491d-b9f4-3f1dc9a49f55"
        },
        "item": {
          "id": "8ecd92a2-5fba-4876-8113-13d42c836e7e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aa96279c-de66-4619-8b60-3934ca85ea3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ff4a60-c4b5-4136-9826-725cb077ad83",
        "cursor": {
          "ref": "8f0cbff5-9716-4a01-baa4-748a9325583f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e3ce6361-657a-49b5-b8b9-e8e61682d10d"
        },
        "item": {
          "id": "b7ff4a60-c4b5-4136-9826-725cb077ad83",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f8ef6e7a-e0fd-4fd4-8430-0ae7bc0dd925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5085dc48-565c-410e-9048-fe99fd3a1279",
        "cursor": {
          "ref": "5c732752-7089-4178-a7a1-22d71e8be74a",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "61e07a82-efbc-4da0-a7bf-afff618a7b02"
        },
        "item": {
          "id": "5085dc48-565c-410e-9048-fe99fd3a1279",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "73cf5b19-e64e-4b56-81ab-41bff9f93195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e84d6f-10ed-4c5d-97a7-f29c7e62ff32",
        "cursor": {
          "ref": "37a6d35b-b4e8-47f4-b653-d432fb0777a1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f84b4415-9be9-40df-8e0b-843bdbb7f3ff"
        },
        "item": {
          "id": "b5e84d6f-10ed-4c5d-97a7-f29c7e62ff32",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "638b3fa5-7ea0-4cdf-b8b1-1c7457349b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3de97fc-2009-465c-b4a0-4eb507fa3805",
        "cursor": {
          "ref": "8893c225-42c6-4376-ade9-13513682e0f4",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1ac7a11b-33fb-4d87-885b-442227ff36d7"
        },
        "item": {
          "id": "e3de97fc-2009-465c-b4a0-4eb507fa3805",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a17a2eb9-74ea-4173-930b-0826080400d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9957fc8a-16ee-40e7-8fe4-3209fb8ca059",
        "cursor": {
          "ref": "72ed9510-caa2-4227-aa08-74c56122d87f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2fa6d6e5-ac2d-429d-b22e-ce535c1dd6fc"
        },
        "item": {
          "id": "9957fc8a-16ee-40e7-8fe4-3209fb8ca059",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cf180a0a-91ba-40cd-b509-8f5c5f6e45c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1100c8ae-0919-4413-a495-dd42f7688cc4",
        "cursor": {
          "ref": "6b3cd553-d700-41f3-bef4-c59b553514a9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8bd0bf9b-094c-4f37-966c-a720269cf573"
        },
        "item": {
          "id": "1100c8ae-0919-4413-a495-dd42f7688cc4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1bc6541f-9040-4ab8-8306-afad24a7a22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801272e4-8704-4bdb-aac5-797304259115",
        "cursor": {
          "ref": "2e77ec61-ddd5-49b7-b158-54e05ec0419a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dd9f469c-2f74-47e2-9caa-8db38093f293"
        },
        "item": {
          "id": "801272e4-8704-4bdb-aac5-797304259115",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1c5306a4-9ec3-450e-b801-1d1631cc83ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46ec265-f64b-4586-8dd0-23c8563fc424",
        "cursor": {
          "ref": "5e7a042d-32f1-4af8-b740-c17b9670a963",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9c442a62-bb4b-4b80-837e-f1adb1f5e5f9"
        },
        "item": {
          "id": "a46ec265-f64b-4586-8dd0-23c8563fc424",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1d5d3fad-dfa8-4618-b684-d9e92d155812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e44db8a-4f6e-4538-a848-1279f0a407f9",
        "cursor": {
          "ref": "476512f2-eb58-4f88-957b-aaf44ff20642",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d82041e3-cac0-452e-8bc7-0da74f4ac212"
        },
        "item": {
          "id": "8e44db8a-4f6e-4538-a848-1279f0a407f9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a0e8c1f4-7977-4546-a7c7-c49a212171bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f4c183-0224-4148-a7d4-449a490493bf",
        "cursor": {
          "ref": "8c066744-4d92-4d38-8217-8936a2a387e8",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "66368206-c2f7-43e8-9c64-febb41d95e58"
        },
        "item": {
          "id": "d8f4c183-0224-4148-a7d4-449a490493bf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a4c47fe1-9034-459a-8fd6-c5e62c2ae371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1dd968f-d7a2-4587-893f-f7e3f0fb2b53",
        "cursor": {
          "ref": "fde84104-bea2-4aec-ab3d-d991dc0e42e6",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "febc68bf-fb77-44a5-8c68-59f63cccfdc0"
        },
        "item": {
          "id": "a1dd968f-d7a2-4587-893f-f7e3f0fb2b53",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6418a916-cdeb-4eba-813e-293dc39fd086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a75344-31ed-407c-881c-62f5da337b82",
        "cursor": {
          "ref": "138e42e0-5d1d-4165-a210-a608d4ecfa7a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "09effea3-5224-4d0a-bc3a-dfff8902b38b"
        },
        "item": {
          "id": "12a75344-31ed-407c-881c-62f5da337b82",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "39c536bd-7a6b-4167-ac95-bc8c56f528ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c41877e-6da7-44c9-9a7c-ba23583efbf2",
        "cursor": {
          "ref": "e29f29e1-e728-49dd-adf9-07ee9d506ff7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bdd357c9-a3f5-469a-a778-3879a860fba9"
        },
        "item": {
          "id": "7c41877e-6da7-44c9-9a7c-ba23583efbf2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9393a194-1310-47da-9bff-87e11390ee79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1244d78c-c8f9-4180-8e4f-050617124a82",
        "cursor": {
          "ref": "2c77a8b9-3633-4256-a94d-e0267ad33ac9",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f9f6cecd-5bff-455f-bcbf-dc1d87ef60bb"
        },
        "item": {
          "id": "1244d78c-c8f9-4180-8e4f-050617124a82",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1168cce7-2832-4013-a28c-266f007cc5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a29d8c-a9fb-4524-b61f-8e43c0875fe4",
        "cursor": {
          "ref": "b510b8eb-04b2-44e4-ace7-e3fb73261d9b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6c2db7f0-44e5-4f28-91e7-65237e45d27f"
        },
        "item": {
          "id": "70a29d8c-a9fb-4524-b61f-8e43c0875fe4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5a04f343-5231-47a7-b032-e9dd3f4c64bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c48fe0-d815-4d9a-bc7d-833f38bc717d",
        "cursor": {
          "ref": "3039df13-7cbb-4457-be21-8fcddb452629",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "94280067-7c69-4cae-b41d-cfcd23882393"
        },
        "item": {
          "id": "e7c48fe0-d815-4d9a-bc7d-833f38bc717d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5607fb6f-9a02-44ec-8b36-b5957dfd7952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f82b4f-9ff4-46e3-8788-0cec8a11249d",
        "cursor": {
          "ref": "87347acf-e25c-4edf-a44f-c2fcbbd44c6a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c54c857f-db2c-462a-8702-36f33dacfd5f"
        },
        "item": {
          "id": "34f82b4f-9ff4-46e3-8788-0cec8a11249d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6d6f77ab-c1f7-4ff4-a485-18d700da297c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b130bd-4563-4868-8b19-385fe1d018e2",
        "cursor": {
          "ref": "c848ebc7-bce1-43db-970d-c3fb104c5dbe",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2da1bd19-044d-424f-b7ad-fed7c0f664e0"
        },
        "item": {
          "id": "15b130bd-4563-4868-8b19-385fe1d018e2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f802fcbb-3236-4a88-88f0-026dce689f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6671c52-4d37-47c2-81b8-c196aefa4014",
        "cursor": {
          "ref": "37b05d8b-fe5e-44f2-8799-4340ff5f9e8a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8139e1a0-8eaf-448a-88d1-9fc503fb2e66"
        },
        "item": {
          "id": "f6671c52-4d37-47c2-81b8-c196aefa4014",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "47eb159a-a1b9-4a1a-ac65-e13fd2446c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794a4b64-33f3-4a95-b4e1-a5243529aca4",
        "cursor": {
          "ref": "1d1f68d0-cfa7-4058-8af7-f0704bce2b2a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "395ad0b0-7a01-471c-a86c-07967b45947d"
        },
        "item": {
          "id": "794a4b64-33f3-4a95-b4e1-a5243529aca4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ce178ed9-9d75-4030-8faa-18eea3007942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de367a06-bbeb-4012-a912-d4c2a85b87d7",
        "cursor": {
          "ref": "1c652ad0-e8f7-4bd5-a9e1-9b0b0a46efbd",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b6fc4b9e-a7bc-49bc-ac33-ece56b1b705f"
        },
        "item": {
          "id": "de367a06-bbeb-4012-a912-d4c2a85b87d7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0b43bd14-f61d-43f6-abda-7794963bfd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a8f7d9-0930-4698-b82c-45ea5fc5f8fa",
        "cursor": {
          "ref": "7f0e2a2f-d758-4531-b38e-0fa6398d1f3d",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ae1bca5d-ec06-4aeb-a1e2-c12977213aa1"
        },
        "item": {
          "id": "a8a8f7d9-0930-4698-b82c-45ea5fc5f8fa",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2720fe72-e291-499b-a980-76fd67306de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055a6cd1-2135-4a22-a50c-854a24369ab7",
        "cursor": {
          "ref": "e074cc7d-6158-45b0-988a-29325d543366",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d7e21ff1-e2fa-4707-b58d-2b6c5cb974a3"
        },
        "item": {
          "id": "055a6cd1-2135-4a22-a50c-854a24369ab7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "98b24f65-4870-410b-9840-6389ed9bd517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d014be4-3cb3-40ba-9689-b34946399e51",
        "cursor": {
          "ref": "7b96e6f8-69ca-49df-b4c5-61c57d4c3f97",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "04244878-888b-4b7e-a72f-21d318bc751e"
        },
        "item": {
          "id": "3d014be4-3cb3-40ba-9689-b34946399e51",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c8804ff6-18c2-48ee-957d-6965550ff192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec0bf2f-b4fb-42d7-a999-7b3e13c9af5c",
        "cursor": {
          "ref": "e0f6b087-9e7a-426d-931f-f84c467176cb",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1752eff7-0116-4226-b515-436fac1d455a"
        },
        "item": {
          "id": "2ec0bf2f-b4fb-42d7-a999-7b3e13c9af5c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a92debbc-8b15-40b5-b57e-667d41199aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c638303-becd-4d59-ab76-2f1d0f3fd220",
        "cursor": {
          "ref": "c3e41f7a-2594-4c75-b271-733be2c7eb42",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5dc290fa-01c4-47df-bca4-631902839ad5"
        },
        "item": {
          "id": "1c638303-becd-4d59-ab76-2f1d0f3fd220",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ab9d0ccb-351e-4da3-9e9d-88966a0ea619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5195ab09-7374-447c-9221-dd5f406da798",
        "cursor": {
          "ref": "503921c8-e9a1-487d-b774-b2efae26bcac",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "05e575bf-93d7-421b-9b61-d9ed1a9a06b9"
        },
        "item": {
          "id": "5195ab09-7374-447c-9221-dd5f406da798",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1b5bb44c-010b-4962-b079-a95ad13e25ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b529ec-45ba-4e26-ad9e-5fe9364cfc6b",
        "cursor": {
          "ref": "b84485c3-aae6-4d9d-90c4-154669b9e3b1",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "db7575df-4016-4509-927c-8ca921dc1d98"
        },
        "item": {
          "id": "b2b529ec-45ba-4e26-ad9e-5fe9364cfc6b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "94cc1136-8bb1-4cf2-a598-a728bf0a5ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d039e8e7-d237-488b-a9e0-2241547135d0",
        "cursor": {
          "ref": "1d795f13-a38d-4dc7-bca0-72c09d72bb2d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c1726ab4-7e2c-451b-880d-b2f66c8b2e20"
        },
        "item": {
          "id": "d039e8e7-d237-488b-a9e0-2241547135d0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "969854ca-c549-46e3-bca0-40e0b399d040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898c3a46-ed92-4e65-b659-73bca48312e5",
        "cursor": {
          "ref": "f385b7eb-435b-4383-a676-4ad0aa19291f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8af13230-828e-4bf5-a6d4-27450f7f876d"
        },
        "item": {
          "id": "898c3a46-ed92-4e65-b659-73bca48312e5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5a845280-f391-4c4d-9d44-2aceddca1fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c695e135-eafa-4609-9382-b0d3ed9c57b9",
        "cursor": {
          "ref": "d6f03a97-c2ba-48b0-b06d-e2445c096abb",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "831ecd92-be58-4a8d-8362-289860239c23"
        },
        "item": {
          "id": "c695e135-eafa-4609-9382-b0d3ed9c57b9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4693535b-eab4-4968-9c2b-be9c060b879f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75a49ee-4ca7-438a-b584-80cb40b4cf8a",
        "cursor": {
          "ref": "df8289ef-d785-4214-b232-9b2efc0f63c3",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b0f5412f-4770-4bfd-9236-8d607fdefc79"
        },
        "item": {
          "id": "b75a49ee-4ca7-438a-b584-80cb40b4cf8a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e24938b8-61bf-4679-a8f1-33428660bc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad60908-148e-44d5-916b-6b26e8d6c47d",
        "cursor": {
          "ref": "95a9c06a-e7d1-4482-89b9-92a532bb5318",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bb25f099-3149-4821-aff4-17a79bee327a"
        },
        "item": {
          "id": "3ad60908-148e-44d5-916b-6b26e8d6c47d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f406c992-6be2-41da-95ae-1d99e9a3c32c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a33abc9-deee-4bb5-ad78-c33f0e6e2539",
        "cursor": {
          "ref": "8e2f2ea2-27e3-48a2-9a37-1ff5d27d456d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bc11a1c2-3c53-4340-b3ce-a395d119deef"
        },
        "item": {
          "id": "3a33abc9-deee-4bb5-ad78-c33f0e6e2539",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "83f6b53f-969f-4384-9270-3ae6b9b6bd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6e9119f0-a187-4aad-b97d-b125d7367313",
        "cursor": {
          "ref": "467c5fd3-177b-4079-b4ab-350fdf2b2c85",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5cbdeda9-4119-47bd-b12f-1fc01e805368"
        },
        "item": {
          "id": "6e9119f0-a187-4aad-b97d-b125d7367313",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0016c6dc-544c-4b2c-b126-7fbbf61e0896",
          "status": "Created",
          "code": 201,
          "responseTime": 28277,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed24500-b80d-4acd-bbc8-697c5ecb857b",
        "cursor": {
          "ref": "6a9e3436-7ee4-47c7-b15e-6b2a597e8c7a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "229757c0-43c7-4a0d-989a-002a4a96cd85"
        },
        "item": {
          "id": "2ed24500-b80d-4acd-bbc8-697c5ecb857b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "361a9ea6-1a69-44d0-bea7-7dd5a30ac50f",
          "status": "Created",
          "code": 201,
          "responseTime": 26610,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e225ec2a-c004-4d98-b3c8-c9d841c3ced9",
        "cursor": {
          "ref": "f2703317-6eb9-4b5d-9c78-4dc452174664",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "96659d30-062c-4685-9d87-85ad7ccca45e"
        },
        "item": {
          "id": "e225ec2a-c004-4d98-b3c8-c9d841c3ced9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6bde8fbc-0951-45bd-91fd-23ee695710d5",
          "status": "Created",
          "code": 201,
          "responseTime": 27567,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8993e58-3898-4d39-8a9c-d4f5ec3cb8ad",
        "cursor": {
          "ref": "a92fd187-1bbb-47b5-9761-787fee39163e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7a5ea1af-cf0e-4ae1-af54-0920f2bcc481"
        },
        "item": {
          "id": "e8993e58-3898-4d39-8a9c-d4f5ec3cb8ad",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a55c0884-f407-476b-926d-86536a063191",
          "status": "Created",
          "code": 201,
          "responseTime": 26799,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9817a612-9ca2-4dc0-9894-fd8f34fe874f",
        "cursor": {
          "ref": "5ccb8e30-30c9-468b-8af8-f2d64e63e62a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4f6684cd-cda6-4d05-a35f-247b5e552815"
        },
        "item": {
          "id": "9817a612-9ca2-4dc0-9894-fd8f34fe874f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5577dfff-e926-4023-bdc8-5aab154a8c59",
          "status": "Created",
          "code": 201,
          "responseTime": 26808,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-10-08T00:47:46Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-10-08T00:47:46Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "41721747-08f3-4d58-acbc-a5dc8d33f0eb",
        "cursor": {
          "ref": "4ada40c8-0d08-4398-a060-e3e3ad0babfa",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8a9b4514-d8da-4e87-87b8-8e7edd2eea36"
        },
        "item": {
          "id": "41721747-08f3-4d58-acbc-a5dc8d33f0eb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "45a99da1-4760-4362-95be-e96e74096957",
          "status": "Created",
          "code": 201,
          "responseTime": 27429,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c7e289-38a3-496f-a7b8-860951c7d615",
        "cursor": {
          "ref": "de8422d7-59df-4d20-8c18-cbdf3c68736d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "01722b86-0714-4685-910b-8d5c601c9461"
        },
        "item": {
          "id": "d1c7e289-38a3-496f-a7b8-860951c7d615",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "069acf8a-7870-46eb-9a4b-1d887aea3186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76523d19-8028-4eea-a6f6-ea6f8678619e",
        "cursor": {
          "ref": "3ccf9555-f23b-4b92-a22b-b2b9128f9fa1",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fe6e7f0d-457e-4cc7-bd34-b06e46870ee4"
        },
        "item": {
          "id": "76523d19-8028-4eea-a6f6-ea6f8678619e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4a07bf5c-fc8f-4b81-ad92-0c33159ceec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99decced-3ee5-4e01-8698-17d0651d496f",
        "cursor": {
          "ref": "3816cda6-2308-439f-9dee-bfc266260ab9",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a2e43192-06fa-4b1d-88ef-2a87da0022c2"
        },
        "item": {
          "id": "99decced-3ee5-4e01-8698-17d0651d496f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f8327bb9-f0bc-4700-a035-d712daa57495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68019183-601e-4bc8-823a-b176db2ccd59",
        "cursor": {
          "ref": "5d6c6ba4-d170-412c-8013-71673c1ba240",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1b1d3619-f827-42cb-8867-2a47c6aaabdf"
        },
        "item": {
          "id": "68019183-601e-4bc8-823a-b176db2ccd59",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5bcd649d-663c-478e-ad03-357850966d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30413173-4b32-4e4f-b3be-7ae5d851ea25",
        "cursor": {
          "ref": "d8f3ec20-0983-4977-a4c3-08d491b18b9c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5c2ae251-f387-4852-bf4a-85e228de8663"
        },
        "item": {
          "id": "30413173-4b32-4e4f-b3be-7ae5d851ea25",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c0b89bc6-c900-413b-b60c-08d921f59f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e63708-ff5b-462e-8144-42a7a359c999",
        "cursor": {
          "ref": "059c805c-4c92-4166-b3eb-9dc53d5bb5ae",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cf240501-8f2c-4dd3-b91b-23009c347c8f"
        },
        "item": {
          "id": "a5e63708-ff5b-462e-8144-42a7a359c999",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "21ed6049-4a23-4da6-b17b-2a085c7b80ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6966379b-f6d6-4b12-8aae-dba1877d1c92",
        "cursor": {
          "ref": "a076633d-5d42-4e8c-9522-8c8b71f3600e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "32a5026f-df3a-4bd0-bca0-5853e65e74e2"
        },
        "item": {
          "id": "6966379b-f6d6-4b12-8aae-dba1877d1c92",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "89b91590-9263-486a-acf2-e734f3ff8b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd62cef9-d85d-470f-883b-b3df199848f4",
        "cursor": {
          "ref": "683edfbe-00dc-4361-860b-524cae03a004",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5defd681-c64e-4235-aa13-91f0fba7bb8c"
        },
        "item": {
          "id": "fd62cef9-d85d-470f-883b-b3df199848f4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4abe4610-3cff-48b6-b59e-c401801ded14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae0d6a4-e9cd-4e8f-9e2e-7d46fa7f6a5b",
        "cursor": {
          "ref": "007f1809-bdc3-4e70-82f3-9d7fc7cef7f0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b468ae0c-35df-41ad-9b71-f0a3d9b4f6fe"
        },
        "item": {
          "id": "fae0d6a4-e9cd-4e8f-9e2e-7d46fa7f6a5b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c1ac7d10-4f23-4622-9602-7413d4cda649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6be00df-0ed1-4dc4-bf7f-51569aa45435",
        "cursor": {
          "ref": "fca59f37-b766-4a60-8315-47aaa79cf3d3",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "22bae1c1-a2cd-4ca6-8746-ad3958588ed2"
        },
        "item": {
          "id": "c6be00df-0ed1-4dc4-bf7f-51569aa45435",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a6a0ea19-8d8a-47d9-b4a0-309061365473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ac97d9-7818-413b-9e34-770efdbc6d44",
        "cursor": {
          "ref": "8f352851-ed38-4864-9e1d-5f5a472278ce",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0d9011e8-823d-4572-810e-b4035ff1865e"
        },
        "item": {
          "id": "76ac97d9-7818-413b-9e34-770efdbc6d44",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "353d1140-504a-47bd-bf3e-d16c269af08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e119e1-6867-4b59-b4cb-24473e8f29b0",
        "cursor": {
          "ref": "2b86dc89-6b65-4ccd-bc83-e2a24283e574",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b0c7bf43-23e7-401b-9b0e-71bd1a414113"
        },
        "item": {
          "id": "a8e119e1-6867-4b59-b4cb-24473e8f29b0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "32ace90d-cc35-4823-a5a3-4ef2265f73fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31057e72-28c0-4670-9441-e4e92121d900",
        "cursor": {
          "ref": "19029b9c-63bc-47b1-af84-e25ba87d458a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "92c2735d-9a3c-4415-a657-862a7a09d2ae"
        },
        "item": {
          "id": "31057e72-28c0-4670-9441-e4e92121d900",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3e03b415-ad87-41de-ab39-3be07afedc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a44100-e118-4ad5-ba34-63c479ea3b62",
        "cursor": {
          "ref": "e689e1e3-f098-447c-9f22-a1cfab160182",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9871e464-b793-42f1-8962-23b6a424b7fa"
        },
        "item": {
          "id": "e8a44100-e118-4ad5-ba34-63c479ea3b62",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a229d79f-d1fd-47ad-8198-9408368b8e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b9e0ac-ad9d-41f2-b173-0c035d41d3e3",
        "cursor": {
          "ref": "7fec1878-eb35-4953-a264-1075359dd5de",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6f38b67b-7bf8-4905-a5f0-bdcbcb033a85"
        },
        "item": {
          "id": "a8b9e0ac-ad9d-41f2-b173-0c035d41d3e3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9d5bcc70-b235-4233-b28a-2a6a552c36d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cf6bb0-3fbc-4b52-aeeb-6beff0b161df",
        "cursor": {
          "ref": "b7a3ea07-5463-4dfd-ab17-8233715b00e7",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8e907651-5240-4ef1-9e59-b116f89c7df0"
        },
        "item": {
          "id": "24cf6bb0-3fbc-4b52-aeeb-6beff0b161df",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bbe4552e-4b85-4f4b-8a12-cd08f4588ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b294312f-154b-4424-90e4-73b8b8182be8",
        "cursor": {
          "ref": "d3d73365-a5bd-4572-b96c-b74a4a2595c7",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c0a59590-c828-4b6d-b0ac-b18a305934fa"
        },
        "item": {
          "id": "b294312f-154b-4424-90e4-73b8b8182be8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7e590076-4c5c-494f-9932-593f8a29db9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e995cf66-a055-4d2c-b5aa-3e0e54776a38",
        "cursor": {
          "ref": "757a0dd7-4606-4ab5-a9d2-dfed5f91f605",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "370e7e38-67bf-41b9-9250-c672255536be"
        },
        "item": {
          "id": "e995cf66-a055-4d2c-b5aa-3e0e54776a38",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "82eacc2c-02f7-4572-b7cf-f85135dd6617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7ad31b-e781-43b7-b7ec-82874f15ab81",
        "cursor": {
          "ref": "78b042f6-0c66-469b-b7b7-d833a279ba1f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "25a21110-5375-4d83-b2ce-fe04f4b0e90b"
        },
        "item": {
          "id": "6f7ad31b-e781-43b7-b7ec-82874f15ab81",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e93a1883-721e-444e-881a-4533b9076e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b91c51-20d9-43d2-838d-2ba57e738e9b",
        "cursor": {
          "ref": "9fe56cd1-2339-46f4-8af3-6be318bd20f3",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d68b9327-9c1b-4144-9ce8-dc860eedd56f"
        },
        "item": {
          "id": "01b91c51-20d9-43d2-838d-2ba57e738e9b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9900b771-bc15-42e4-863f-ab24c6197ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8dc7be-2051-4944-9795-797dc44410db",
        "cursor": {
          "ref": "921ac118-7aa9-4630-ad70-676d4afad04b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "725093ac-efd5-4232-badb-aaeb7022be2f"
        },
        "item": {
          "id": "1c8dc7be-2051-4944-9795-797dc44410db",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ccf241fa-5373-4388-953a-dc6500039531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c978f3f5-3f43-4494-b1a7-39d2e92766a3",
        "cursor": {
          "ref": "f04d1228-79fa-4297-8c61-2479a790a557",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a7c85a3f-63f7-48e5-82f4-a0ed381109c4"
        },
        "item": {
          "id": "c978f3f5-3f43-4494-b1a7-39d2e92766a3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e5be80d7-68cb-4713-8a49-dccd8808d6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b136400-724b-4360-ac56-d62e25d09f1d",
        "cursor": {
          "ref": "270788eb-26d2-4d5b-9860-42e06533d8fc",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "581404a9-776a-48e3-9471-a45e3724e360"
        },
        "item": {
          "id": "9b136400-724b-4360-ac56-d62e25d09f1d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e8b52abe-008a-4c1b-a0a5-f292db3125e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203a726c-fcdc-4a49-b638-173954b54cc4",
        "cursor": {
          "ref": "a023113a-6e00-47dc-8715-dd53f140b9ae",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c17102b6-3c8a-4574-9892-aebe0cbf0424"
        },
        "item": {
          "id": "203a726c-fcdc-4a49-b638-173954b54cc4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "abdd1c76-e0e9-4fe2-9717-f60ba0506f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bbf810-faab-4a20-bbd3-a0f1d7e37b1e",
        "cursor": {
          "ref": "13bcdb2d-a67c-48ae-9b12-9e510404b969",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bdc00c45-9cc4-4b37-b2fb-d14050c4337b"
        },
        "item": {
          "id": "71bbf810-faab-4a20-bbd3-a0f1d7e37b1e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ee14d60a-b64c-40b8-a648-d3dfa0cfdc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c870ace8-da31-4eca-9c6f-ff388b6aac53",
        "cursor": {
          "ref": "674d6425-1b59-4b93-994e-0d1488077386",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5d3cf4d9-3474-483a-8126-3bb1b8258923"
        },
        "item": {
          "id": "c870ace8-da31-4eca-9c6f-ff388b6aac53",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6f7630c1-f3fd-4935-828f-0324939ff5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7671af-a409-431b-882c-17bc5b2f6b6c",
        "cursor": {
          "ref": "24ae94ba-8f15-474c-a950-c0db9c223a6c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dcb7ef60-e90a-4636-a8f6-63b6a2e4ef32"
        },
        "item": {
          "id": "0e7671af-a409-431b-882c-17bc5b2f6b6c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1fd93e8f-c6e7-4524-8160-10aa36ed4483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022d6fcf-b8fb-4b12-a522-dca172fa0ce4",
        "cursor": {
          "ref": "5241d72b-b6c1-4925-a086-6db24cc0d910",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7cb472df-ce07-41df-9139-ca10e5269c6c"
        },
        "item": {
          "id": "022d6fcf-b8fb-4b12-a522-dca172fa0ce4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8014eb5f-fb3f-4da4-817f-0b022385f175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a869ea-73fc-4206-ac9c-6cd4fce825cb",
        "cursor": {
          "ref": "81e893d9-7e64-46b5-9a56-e7966aa238b3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "55e2f03c-6003-429b-ac80-a8a10e0faca3"
        },
        "item": {
          "id": "10a869ea-73fc-4206-ac9c-6cd4fce825cb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d766e048-a914-453e-8fa5-393903eca472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c36e86-52e7-4bdb-b4e7-770f3bfa32a3",
        "cursor": {
          "ref": "bb353e1e-d1dd-4d3a-9a98-ee4cd0b0cc44",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fe6fea4f-f36b-4ec4-a26b-6062a7d6a0ab"
        },
        "item": {
          "id": "d2c36e86-52e7-4bdb-b4e7-770f3bfa32a3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "586b8d2e-4ad3-41ff-88a0-413cee178252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c020ab2-161b-44c7-a3a3-e23f5cdab5e8",
        "cursor": {
          "ref": "49f72f91-05bc-4f29-a592-cc4686c2446c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2ef469d9-4527-43b6-985d-6e20b29c3619"
        },
        "item": {
          "id": "2c020ab2-161b-44c7-a3a3-e23f5cdab5e8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e3754bd0-9d69-4f09-9b08-3319a2fca4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d870ea2-97ee-48d6-a4ac-b2374091572d",
        "cursor": {
          "ref": "e487b529-3fd9-4ac6-b825-53bfe7bbedd2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5930a787-82ad-4927-863a-ec853b3adbaf"
        },
        "item": {
          "id": "9d870ea2-97ee-48d6-a4ac-b2374091572d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "07dbff04-16f8-4b30-83d8-d4d1c414ae95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439c7d08-c2d2-4c48-b5d4-b174e03b3e85",
        "cursor": {
          "ref": "71ee0027-c5dd-412d-8584-98cccf02ba94",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e58c5b60-098c-4ec3-8db9-9e45efc3ee0f"
        },
        "item": {
          "id": "439c7d08-c2d2-4c48-b5d4-b174e03b3e85",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b6c02e15-9318-4961-8afb-f96def8934d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57ff8ff-6950-4888-aea4-ea91e4f6d10c",
        "cursor": {
          "ref": "7be1e289-03c7-4015-8e19-2c5242545802",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "56a9a17f-ae10-44b5-b8b6-7b93e8ecb8a4"
        },
        "item": {
          "id": "b57ff8ff-6950-4888-aea4-ea91e4f6d10c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "32f6db08-0514-4c44-a7c1-a6413a136bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4b7d39-d4e9-4215-b162-f6ed2a4166e1",
        "cursor": {
          "ref": "127112eb-3ec1-4b47-a0e6-b33945167b59",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f0bf8c10-e3d0-4ba0-8fb1-a0eb3b642670"
        },
        "item": {
          "id": "ae4b7d39-d4e9-4215-b162-f6ed2a4166e1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3fe732b7-8d70-4744-9f5c-8b87d8f4a5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542becb9-7ad9-4468-b698-da07d56ec6bf",
        "cursor": {
          "ref": "20311343-eadc-42a4-9a8e-780e06225645",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "303bfa89-48fa-4089-804f-e1d311d04219"
        },
        "item": {
          "id": "542becb9-7ad9-4468-b698-da07d56ec6bf",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1ea91cb4-c847-44ad-a77a-6ced7d94eeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a11739-75cd-4d20-b10f-e63026b7840d",
        "cursor": {
          "ref": "18ab883b-1081-43d8-ba24-c1f4e9c1ce89",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "529621ed-b66c-4c6d-a741-541856f8e390"
        },
        "item": {
          "id": "15a11739-75cd-4d20-b10f-e63026b7840d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7483b32b-4eab-4b5e-b6f2-bb7db31e46cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1394f6a-0650-43b6-be54-4d5bbf43516b",
        "cursor": {
          "ref": "3c08ee1d-7208-4ec8-b02d-c806b0fc1632",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0e326bb0-bde0-4c3b-b142-841645989be3"
        },
        "item": {
          "id": "a1394f6a-0650-43b6-be54-4d5bbf43516b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cd09e71d-1740-4f39-8170-83621c4c93b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe55b13-c6de-412d-94a3-be3efa8e2fa1",
        "cursor": {
          "ref": "0ddb50f6-6e6f-443c-a928-205233e20b63",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7bb1af48-1817-4d90-9f11-482cee05be40"
        },
        "item": {
          "id": "dbe55b13-c6de-412d-94a3-be3efa8e2fa1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "09c5461b-5df1-4205-a93d-7d46435905d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e5ab91-5b65-4118-9b09-f29e14adf720",
        "cursor": {
          "ref": "e4ba9c3f-f267-4138-a3d5-759f4bf19a0e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "be5fb694-f8d2-49e1-a3e4-bb18dd25cf4a"
        },
        "item": {
          "id": "27e5ab91-5b65-4118-9b09-f29e14adf720",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5d95d4e5-472e-4b6a-af7e-fa4fe16db10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9629d514-70ff-420b-a43e-b2f165c081b4",
        "cursor": {
          "ref": "e8ba3367-b670-45a2-ad43-31b71ab87b32",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b363ddde-a04e-4423-b50c-63a221c372ea"
        },
        "item": {
          "id": "9629d514-70ff-420b-a43e-b2f165c081b4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2f2d17c6-92c2-4374-a0e6-501a9c915e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f9a097-539c-42d9-bb57-c6e586b519d7",
        "cursor": {
          "ref": "c2604986-3b3f-4b85-a680-bd023ec91910",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "07e7ef70-86a7-4189-8315-09a9501f0e66"
        },
        "item": {
          "id": "a3f9a097-539c-42d9-bb57-c6e586b519d7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fac00990-45fe-4363-8ab3-31dab1674345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e10786d-9126-4468-83cd-3fb0da23a056",
        "cursor": {
          "ref": "0811c591-760f-4f06-ba44-8127bcab6943",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7fd15fd5-7416-4eb4-b16d-71ed43330acc"
        },
        "item": {
          "id": "3e10786d-9126-4468-83cd-3fb0da23a056",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "732f84b0-614f-4bbd-9ee5-cf8c9d7f2ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bed5cd6-bfd9-47e6-a007-5eec4f131abb",
        "cursor": {
          "ref": "40d2d0e0-bc73-4cd8-9cb9-349eaac41b8b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3956d805-bf36-4fc2-a7c8-531c58075d72"
        },
        "item": {
          "id": "2bed5cd6-bfd9-47e6-a007-5eec4f131abb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "bfb3f31d-f2c2-4bc9-a0b8-fd1dba32c3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20de517-8717-4bc1-8b18-d83ffb910359",
        "cursor": {
          "ref": "e0549724-080c-459c-bfaf-b08c7c4d9214",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e8cf4df5-2be8-4bbe-b7b9-7965da116cac"
        },
        "item": {
          "id": "e20de517-8717-4bc1-8b18-d83ffb910359",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "36562f86-f2e7-4f5f-b412-c42d5fc09d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf69b82-7a86-4b9a-a5a2-a699f3e61bda",
        "cursor": {
          "ref": "aa73e6de-c1ab-403a-b54d-3094b0337475",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "eed1f53f-63e8-4339-8af3-6d907c58f17e"
        },
        "item": {
          "id": "bbf69b82-7a86-4b9a-a5a2-a699f3e61bda",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f20c4494-eaf7-4907-95ba-c58ec96f2549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b5c469-3fc6-48e2-869d-9e506d8f4895",
        "cursor": {
          "ref": "4a06935b-b840-4cdb-bad5-b5febeaea5b1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fc6ddf91-7b11-4b4c-9fc2-89ab882211c3"
        },
        "item": {
          "id": "32b5c469-3fc6-48e2-869d-9e506d8f4895",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "08c24aa0-c843-45ec-aad8-f41053a0ed43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0833d41-e340-4941-b161-5290da873790",
        "cursor": {
          "ref": "0d137315-ed59-4db8-b5a8-1e6cd02e17ba",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "070ba4b0-1683-47bf-9c92-7ed982f5eae9"
        },
        "item": {
          "id": "f0833d41-e340-4941-b161-5290da873790",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f1f3a84c-0fc2-4e14-ad78-c5425e1bfe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eee673f-9dd0-4dde-8529-c4e7f9dac794",
        "cursor": {
          "ref": "257a0be6-6c09-4b82-8a3e-7314b6e5b953",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "82f5c714-8e69-4635-9ba9-c246fb06e8e9"
        },
        "item": {
          "id": "2eee673f-9dd0-4dde-8529-c4e7f9dac794",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7313be9a-2914-43ba-af0b-cdb545e23ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b82d604-e484-4f6f-adff-f6f77008e438",
        "cursor": {
          "ref": "34a26888-28cc-4459-be07-d44dd0d43cfe",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "691b3cec-8eb9-4786-92f0-0ce11dab845a"
        },
        "item": {
          "id": "7b82d604-e484-4f6f-adff-f6f77008e438",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b534e761-6c69-49cc-a3a1-ebd7e37791e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dee97d-5a91-4268-a174-9f625c41ca9a",
        "cursor": {
          "ref": "2707127a-2c28-4b6e-a182-ebc5adeb366d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "02746010-b021-457f-974d-f9ba369abf05"
        },
        "item": {
          "id": "a7dee97d-5a91-4268-a174-9f625c41ca9a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "30e8d674-238f-49b6-818a-913c337785da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1223228c-c6b1-48a6-bef8-a561c3b094a4",
        "cursor": {
          "ref": "12a11e23-2aae-4982-b824-29b2a32fee16",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6a1c851d-8a49-45da-9444-d609e1f02562"
        },
        "item": {
          "id": "1223228c-c6b1-48a6-bef8-a561c3b094a4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "22b9b3e5-d5d1-4816-94f4-d26051cc208b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce19cb3e-efc6-4858-816c-57712939ef04",
        "cursor": {
          "ref": "dc2494aa-874b-4514-ab8c-7d1023353d81",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ead30b88-6436-4d5d-80a5-b1759988e25c"
        },
        "item": {
          "id": "ce19cb3e-efc6-4858-816c-57712939ef04",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "224b95d3-34e0-4788-a494-d4f2cf1d9086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b1e38b-7dc1-4e82-adda-85a842000e2b",
        "cursor": {
          "ref": "dd71a388-73bf-4d77-8395-b37ddb777444",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cbd36647-5fd4-4418-80a2-e642c6ead9c9"
        },
        "item": {
          "id": "46b1e38b-7dc1-4e82-adda-85a842000e2b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "477ad848-02ee-453f-9d54-cb29045964ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8eb8f96-71ab-4451-bebc-9a195977d37d",
        "cursor": {
          "ref": "92c9c401-8928-4fb2-b4a9-31d3cd45f25a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3ee608bc-0ee7-413d-b3db-2621ebc108f0"
        },
        "item": {
          "id": "c8eb8f96-71ab-4451-bebc-9a195977d37d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "abd4a35a-b57f-4a9b-964a-a820ac691248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce1d427-0e47-4b2d-99de-47df17b21dad",
        "cursor": {
          "ref": "d389907e-380f-4287-8f1c-6b48b7206f59",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bb028e9b-dcbc-4389-8c07-b9a2626214fb"
        },
        "item": {
          "id": "cce1d427-0e47-4b2d-99de-47df17b21dad",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bc7d561b-3c0f-436d-ba09-382827ba715d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38735db2-c9d3-474b-b095-4c92ed87a5d3",
        "cursor": {
          "ref": "b8fdbf8a-6c63-4dbf-888b-8baba6844742",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "30f62f95-ba1e-458e-a76f-3ed738af6933"
        },
        "item": {
          "id": "38735db2-c9d3-474b-b095-4c92ed87a5d3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b9338c51-aaa6-4d55-8e16-f188f6a1d6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72a25d0-2200-4690-935f-8d367fef9ee1",
        "cursor": {
          "ref": "36397d36-6252-4064-b4da-8d2054b1a89e",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "647ef845-0f8e-49c8-8f04-8e243453b871"
        },
        "item": {
          "id": "f72a25d0-2200-4690-935f-8d367fef9ee1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "51623a9c-7aa8-4412-b13e-cb804d9e717e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b1d7b0-3959-4394-a499-b1ab64381eb6",
        "cursor": {
          "ref": "149218d2-fb56-45a6-ad84-14a47e09aeed",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "aebe05a6-9801-4e70-b5ab-df5a122589ac"
        },
        "item": {
          "id": "e5b1d7b0-3959-4394-a499-b1ab64381eb6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "74637c2f-f551-4ca9-ae86-3e02d17c46e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761140a5-b74f-40cd-9ddf-9c08c6c3a392",
        "cursor": {
          "ref": "d2b6738d-47bf-4ad4-a3ec-8ec118ac8d8f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6d0d54a7-f7f3-4468-8703-90a4b8f4cac6"
        },
        "item": {
          "id": "761140a5-b74f-40cd-9ddf-9c08c6c3a392",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4e279099-3741-4d5f-9a08-e765ebdf6dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2df1689-2f02-4b4d-a20c-e0b4b95548e8",
        "cursor": {
          "ref": "f99260a0-7153-45cc-a134-f7f037367a77",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e3652a1f-328f-4225-abb9-ace7f8734b08"
        },
        "item": {
          "id": "d2df1689-2f02-4b4d-a20c-e0b4b95548e8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4617d5a7-9bee-4ebf-8d1e-c5ad02b82144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3e1516-6c5a-4c90-a5df-a9fb8110bec3",
        "cursor": {
          "ref": "51bc097e-e1e9-42ad-94de-7b7b6315e8e3",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f04d4398-8b76-4b1b-8123-014f207e33c9"
        },
        "item": {
          "id": "cc3e1516-6c5a-4c90-a5df-a9fb8110bec3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "17899dce-937f-490e-a3e6-f6b5530c094d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58cfec1-60b4-4116-8f07-57cdc0dccd53",
        "cursor": {
          "ref": "f2d6c172-0020-4246-89c4-0f88af7bf2ea",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ab5ebbf3-4313-4a6d-8937-b471f8027414"
        },
        "item": {
          "id": "b58cfec1-60b4-4116-8f07-57cdc0dccd53",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "aa5f4bfd-08f0-45a9-992f-dcf8ada0e850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41386bbd-5f64-4fdd-b07f-e6ba8803629e",
        "cursor": {
          "ref": "32753fd5-879f-498d-b671-150ac93caede",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "42a7515d-a992-4a69-8bc0-52565a9b89e9"
        },
        "item": {
          "id": "41386bbd-5f64-4fdd-b07f-e6ba8803629e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1655fdc7-f389-4521-95b8-dd7ea73d4b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e7724d-5287-4925-9b5f-2a5eee3ccceb",
        "cursor": {
          "ref": "350b52c2-816e-42f6-ae2d-ec418795593f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fcc9bbe4-757f-4b16-b19b-aa816bc9c9f8"
        },
        "item": {
          "id": "08e7724d-5287-4925-9b5f-2a5eee3ccceb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "efd9d2e6-4d94-4ccc-9909-82d44c6f876d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269ebdd4-29fc-4836-94e8-39b63056c121",
        "cursor": {
          "ref": "b3e3e31c-4020-4f02-82a6-ffe4884aa104",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0a28af30-516f-4941-82e0-4698e8090e85"
        },
        "item": {
          "id": "269ebdd4-29fc-4836-94e8-39b63056c121",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "547ae148-56cf-4213-85fd-473b588707b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e954e9-6ba9-46e4-8815-e92946dc8310",
        "cursor": {
          "ref": "06466476-1c29-437f-86e2-972994b2703d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9931744f-4e39-4bb9-b4a8-0e3b5620d205"
        },
        "item": {
          "id": "73e954e9-6ba9-46e4-8815-e92946dc8310",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "310eff02-e038-4439-aac0-9397c260eb24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0f61c3-35d9-4600-97ec-594a67e73e33",
        "cursor": {
          "ref": "01f8404a-1300-427e-bd07-8cddbd49930c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "95b0a6a0-0fb4-4578-9d4d-46ed48aa0620"
        },
        "item": {
          "id": "ac0f61c3-35d9-4600-97ec-594a67e73e33",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4cfeac61-d05d-45e5-9a83-7954bd42b36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f24ebde-af07-4ee7-ae75-e3879a3d51a6",
        "cursor": {
          "ref": "43d6d378-5f36-4afb-94d6-2e2316099fb9",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2e8b6616-6045-4909-8f51-776f651a94bf"
        },
        "item": {
          "id": "4f24ebde-af07-4ee7-ae75-e3879a3d51a6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0c2adf61-43f5-48d8-aade-51417c34bb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7efd041-593e-4511-99ba-66cdefd1a87c",
        "cursor": {
          "ref": "250d27e1-2a1d-4952-b24f-b964d792a0c9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c38d4fd5-1185-4554-a099-83994f4ddb5f"
        },
        "item": {
          "id": "d7efd041-593e-4511-99ba-66cdefd1a87c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "558690fb-bfda-42dd-ac65-867b19d3c3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329b19a4-1b20-4f04-adfb-808547c3b8bb",
        "cursor": {
          "ref": "b76c3962-8669-4161-b7f3-6cc37dd2c379",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1364e5b1-b141-459b-91b3-f26f690ba6ac"
        },
        "item": {
          "id": "329b19a4-1b20-4f04-adfb-808547c3b8bb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6870bd91-fb41-47c4-b954-5790af15cd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f84dc9-f9f6-4bdc-9168-faa44d939125",
        "cursor": {
          "ref": "20dbcedc-7c34-485b-b4fb-17e58d67b7f0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "26e512e2-3cc0-4e4a-bfd5-82957d7ab33f"
        },
        "item": {
          "id": "f5f84dc9-f9f6-4bdc-9168-faa44d939125",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4b4849fb-b2ac-4157-ba2d-ba309572a9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08409dc5-1f16-40d4-8d7e-0ae127200937",
        "cursor": {
          "ref": "069fc731-bdeb-4116-863e-b4b80de4bee0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "753f79f2-29ce-438e-84b2-2d2d9b196e5a"
        },
        "item": {
          "id": "08409dc5-1f16-40d4-8d7e-0ae127200937",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a96783c3-d566-4ee5-aaa4-a01f53c56a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc51cdbe-dee5-4920-9430-3c8117b73b6d",
        "cursor": {
          "ref": "63b72868-4384-4bbe-99e8-871fff814825",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d1d5313d-6ff1-4a70-acfa-60890470521d"
        },
        "item": {
          "id": "cc51cdbe-dee5-4920-9430-3c8117b73b6d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7d5ea7b4-170f-4898-8a76-35e14564b3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eaaf1b-5053-4a0d-9bd1-f284a5c76897",
        "cursor": {
          "ref": "d4cb659b-f260-4337-8585-bf1e5e21de72",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "15d92cd1-cb09-40e6-a6db-984fc6bb0872"
        },
        "item": {
          "id": "69eaaf1b-5053-4a0d-9bd1-f284a5c76897",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "64d0da19-d7b3-4632-a237-cefd561e31f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc72cf0-7b64-4c3f-92e5-d01e84bf60d0",
        "cursor": {
          "ref": "5083de08-bc60-4dea-adcb-472757fc530e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2dcf1340-0ab8-4585-9b3d-fcf6ce58c854"
        },
        "item": {
          "id": "2cc72cf0-7b64-4c3f-92e5-d01e84bf60d0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "886c7e8b-26ed-41db-bbfa-c00d48f697f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdca16d4-b912-4161-9119-372b28dcfbeb",
        "cursor": {
          "ref": "ffae7732-42cf-4820-895f-7184ec3db6d3",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "29246d09-e349-41fd-94de-99ac1c92408b"
        },
        "item": {
          "id": "bdca16d4-b912-4161-9119-372b28dcfbeb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "67faa992-7e7e-47d0-a953-23d0ef167feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a804943c-d60a-4d8c-9d74-33ff78235e75",
        "cursor": {
          "ref": "28e77393-4707-4cfd-9e78-ecb5cc070670",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d24f69fe-12a8-4d3d-8fe5-1c0f18db59e3"
        },
        "item": {
          "id": "a804943c-d60a-4d8c-9d74-33ff78235e75",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1e693544-a75f-4b5a-b7f9-5fac92715ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac66c445-1a24-425a-9dc4-5358262985db",
        "cursor": {
          "ref": "072eb6e5-4bb3-44e5-a84a-dac4f7032601",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "69381332-98f5-41fc-a6ac-d517c8243d7c"
        },
        "item": {
          "id": "ac66c445-1a24-425a-9dc4-5358262985db",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fb0f2571-b721-4471-bab5-af55f07904ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124c16e5-4b59-46e8-a893-00a5b70c3a5d",
        "cursor": {
          "ref": "241f7f1d-d858-4ed6-a49b-669b5af40b90",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fa767de9-3d5d-461d-bf62-f13e386be3fc"
        },
        "item": {
          "id": "124c16e5-4b59-46e8-a893-00a5b70c3a5d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a44531ba-88f4-492e-87b2-96da57e17ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f63df6a-1422-4de3-9f40-2a2fb71ce1a4",
        "cursor": {
          "ref": "f4caaf1a-fe9c-412e-9566-cb1f41d61801",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6e6b37dc-1526-4184-bcb2-cc32f3d47a7b"
        },
        "item": {
          "id": "3f63df6a-1422-4de3-9f40-2a2fb71ce1a4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d2210ea2-ff57-4537-91a9-f5cff1b2c794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb06cab-5610-43bb-818c-ed63a0cac367",
        "cursor": {
          "ref": "726d87f7-50d1-4ddd-87c6-4a7c176c0420",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c473d9f9-8b4d-4d6d-af4f-2668ee13f284"
        },
        "item": {
          "id": "7cb06cab-5610-43bb-818c-ed63a0cac367",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "49f5b81b-226c-432b-99a4-e8f225dfd1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666cb7ec-1d85-468e-8f9f-41cef98d9931",
        "cursor": {
          "ref": "51ba28d9-9c8a-40cc-be4e-9801fcee47a2",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "460f182d-4f21-4724-8a96-3b642831039f"
        },
        "item": {
          "id": "666cb7ec-1d85-468e-8f9f-41cef98d9931",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0309707f-29f5-46ac-a9b8-4c3f44131b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c33c91b-4a0a-421e-8e56-3a40abbdd337",
        "cursor": {
          "ref": "5954e928-c706-4e3d-97f8-a555dc5fc654",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7a05cebf-dcc9-4ca8-bcc6-e3e5f7465e59"
        },
        "item": {
          "id": "0c33c91b-4a0a-421e-8e56-3a40abbdd337",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cf51e01b-01e8-42dc-9ff0-ce67f89fffea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a7cc7a-2578-4cf5-8b69-8ed9f11fcff3",
        "cursor": {
          "ref": "006916b7-62bd-4f53-9368-115da725a888",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d4c58b33-55c1-41c0-aa12-e66acc20bdbe"
        },
        "item": {
          "id": "99a7cc7a-2578-4cf5-8b69-8ed9f11fcff3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9fce05c3-dd88-486f-8bdf-79cafb344a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9518aa7d-1f27-4ff0-8d70-012609ec1461",
        "cursor": {
          "ref": "62d20354-3f28-45f4-a3b0-792bc61ec463",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "42121fb2-a614-48ad-8e6f-2b4add2e1f4d"
        },
        "item": {
          "id": "9518aa7d-1f27-4ff0-8d70-012609ec1461",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3537b334-87fe-4162-b596-43c7faafa046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883fce32-01a1-4b88-ad82-d2c0521cb450",
        "cursor": {
          "ref": "d198e58b-ed7c-4ea6-9631-387de3cc0cb6",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c4bccfae-f983-4754-8d00-9c2a7dee2fa7"
        },
        "item": {
          "id": "883fce32-01a1-4b88-ad82-d2c0521cb450",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "607f2116-bcb1-4b0a-9dfe-6ef83161d21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c841e3-55a6-40d5-95a3-20348441cfda",
        "cursor": {
          "ref": "6641e680-a0d5-421c-af42-85fe7fd842d3",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c6cef02a-5407-49d6-8f72-f603bea9f453"
        },
        "item": {
          "id": "89c841e3-55a6-40d5-95a3-20348441cfda",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a5e87c45-edf8-459f-b437-cd97108b2e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6d5cb4-dfa6-4845-94f2-7af6c886b855",
        "cursor": {
          "ref": "02305c72-7f49-462e-bc86-c708ee403ccc",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "364bf107-65d3-4139-a2ba-95f260f88a85"
        },
        "item": {
          "id": "0f6d5cb4-dfa6-4845-94f2-7af6c886b855",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ff3865c8-3e46-4a5f-9bca-d31535566af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a252f4e-e7bb-4b61-bb04-b4b8a9d63c82",
        "cursor": {
          "ref": "e0322818-ac26-4cd2-b027-a9c52229348f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "03fa28b3-cba8-4bce-abab-35d770ad8a09"
        },
        "item": {
          "id": "3a252f4e-e7bb-4b61-bb04-b4b8a9d63c82",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "87c9477e-e87b-4cf8-945b-6d35b7a6a288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3064c34d-1fa4-4b17-9946-329d9e25f6d1",
        "cursor": {
          "ref": "ec13ad85-3914-4d01-bfa4-b7a0183ed0e8",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "60245286-2c43-466a-8333-ead62e0940aa"
        },
        "item": {
          "id": "3064c34d-1fa4-4b17-9946-329d9e25f6d1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0d7fb5c3-3163-46d9-b214-1353c404ad04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ea6f9f-92b0-49bf-86bf-2b7dd4be5ea7",
        "cursor": {
          "ref": "e4fb2ef6-5352-4356-9bb7-5d7adacbe55e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3f31801d-128b-4caa-8ca1-037e2f5237c6"
        },
        "item": {
          "id": "d7ea6f9f-92b0-49bf-86bf-2b7dd4be5ea7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ce254537-c82f-4945-856d-b17fe2cd20e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66677a8f-b053-4c8a-9269-181feab6deaa",
        "cursor": {
          "ref": "5855c0d0-16e7-4ef9-af6f-ffa9fdf2f79e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8aad4e72-1a81-47a0-90c1-011fff34ccae"
        },
        "item": {
          "id": "66677a8f-b053-4c8a-9269-181feab6deaa",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0640c755-bef3-4e00-83df-aa54fee55f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7e6568-5b33-4c86-9d5a-8509e2b6060d",
        "cursor": {
          "ref": "e66be146-7e12-4838-abf0-70c3f0570f9c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9b424d73-313f-4a74-9ef1-eb097207d62a"
        },
        "item": {
          "id": "af7e6568-5b33-4c86-9d5a-8509e2b6060d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "aee29110-6f7f-4190-a17f-57ae6659e2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9bd1c4-4654-4e21-9da4-586f9a329ccd",
        "cursor": {
          "ref": "c5524c37-dbd6-4e01-afdd-d3bd1f743f32",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7fd20932-3348-407b-8297-ac0414b7605c"
        },
        "item": {
          "id": "eb9bd1c4-4654-4e21-9da4-586f9a329ccd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1d2423b8-0b00-4236-a514-af08e8216c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728ab9f1-96ed-4ad0-9fd1-e3885c8b82bb",
        "cursor": {
          "ref": "b2f92d2a-8809-4a12-aac7-8954a8b56f89",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "58d3f881-eff5-4a2f-994a-85441546f2fd"
        },
        "item": {
          "id": "728ab9f1-96ed-4ad0-9fd1-e3885c8b82bb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2c005ed3-47ce-43f3-a3f2-59fa1fc71f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbe3fe0-dad4-4ff5-be6b-5fff253e1bd8",
        "cursor": {
          "ref": "6ee93619-40cc-4521-a468-dcaaa5da6760",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f26329be-1b75-48a1-b787-6f57a06fb9bc"
        },
        "item": {
          "id": "fbbe3fe0-dad4-4ff5-be6b-5fff253e1bd8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1794f617-4e8b-4519-a901-cbbb9e76f24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af4ab52-cd3b-4b8b-88ad-9fee7d628db1",
        "cursor": {
          "ref": "7db30290-da37-4d0f-a302-6767c235e76b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "de272404-2062-4a10-8ade-95bfcbd853f6"
        },
        "item": {
          "id": "5af4ab52-cd3b-4b8b-88ad-9fee7d628db1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "061cc958-a0aa-497e-b615-165fcd2cd66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772315d9-aa60-4f55-ac4a-f5e9e4107632",
        "cursor": {
          "ref": "b1ceba6b-0041-4487-b379-b4a020e5a885",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "79d384ff-3568-4d19-9890-6d58ea94df86"
        },
        "item": {
          "id": "772315d9-aa60-4f55-ac4a-f5e9e4107632",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0164792f-321d-488a-af31-006baa552ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9882ffda-f57d-4e18-a47d-ca9715ed7a01",
        "cursor": {
          "ref": "9463c7e4-7cbc-4b84-ae66-d36f91b2b060",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4174b35c-dee6-4469-bef2-35fdcbfc54fd"
        },
        "item": {
          "id": "9882ffda-f57d-4e18-a47d-ca9715ed7a01",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0fe73967-de63-42e8-8f54-0b0945985ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fa9c08-20dc-4198-82cd-cf1cd4eac154",
        "cursor": {
          "ref": "9172642f-ab81-4f63-ac81-b050ff2d6b50",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2ec9f805-2f23-4703-8f07-37f54a9c3b43"
        },
        "item": {
          "id": "14fa9c08-20dc-4198-82cd-cf1cd4eac154",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "aee3d6c4-5194-4092-87d7-26a9951e9ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556f2638-4985-4d67-bd2c-c15c0e09ad18",
        "cursor": {
          "ref": "497557d7-6d41-480f-ab32-9bacee702d3a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a849335a-2738-4efa-b8cb-c99163d3936b"
        },
        "item": {
          "id": "556f2638-4985-4d67-bd2c-c15c0e09ad18",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "206b0ef5-a409-430d-8f93-3d27016eff4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b33a3fb-1550-4908-82cc-603cafffc69d",
        "cursor": {
          "ref": "40291397-1e80-420a-b0af-6c694b80728f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "62401122-a7d6-4770-b0b9-4eaca46c784c"
        },
        "item": {
          "id": "7b33a3fb-1550-4908-82cc-603cafffc69d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "10b891ad-f77d-4522-ba31-ff55bca6f49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc20267-552f-44c7-a710-f5a61e99eb81",
        "cursor": {
          "ref": "aaa9fd1f-c703-44c7-a27d-3f820432d67c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b52d5d74-f81f-4b69-8cc1-49970e0168ce"
        },
        "item": {
          "id": "2dc20267-552f-44c7-a710-f5a61e99eb81",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "31a9c186-a42a-46f6-a9bd-cce89988db50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191c9c20-76a9-4cfe-bf75-d2027f10de9c",
        "cursor": {
          "ref": "3b787d51-2eff-4688-9b86-171a0fffb66a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f4b9c417-867d-4795-a442-35bb18838845"
        },
        "item": {
          "id": "191c9c20-76a9-4cfe-bf75-d2027f10de9c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9e8198fe-ca44-43e4-a12a-b069b739805a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e917424-b8f1-419e-a495-2f0f0632e865",
        "cursor": {
          "ref": "535a79a6-2970-41a1-9e44-afc7d7785bbf",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "051aedb8-8a48-4ff8-806c-f7eee8347fa1"
        },
        "item": {
          "id": "3e917424-b8f1-419e-a495-2f0f0632e865",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e99152be-596a-4e74-b198-743b86ec3931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97e1247-d5d7-4e8a-8b80-877e6f897ab4",
        "cursor": {
          "ref": "e41f887b-81b2-452d-a40e-095e01b46a61",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8532207e-0406-4f8b-b8eb-bec9af6d8cb0"
        },
        "item": {
          "id": "b97e1247-d5d7-4e8a-8b80-877e6f897ab4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "af109701-0774-4715-8cea-8a5d76aaa4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69aaba07-100d-4e2a-9f87-3d79c64e3fa3",
        "cursor": {
          "ref": "964fd969-a8d0-4321-8953-eb7a742e04f7",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5a38bdef-0a04-453f-ba28-50e838e989cf"
        },
        "item": {
          "id": "69aaba07-100d-4e2a-9f87-3d79c64e3fa3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bc034edc-2ecf-4a36-a059-83457f6e6791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7b60bd-1861-4bfb-8b22-7b3ff6875ee6",
        "cursor": {
          "ref": "08dfbc56-ece8-48ef-ac34-f4f631782236",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4cb6252e-dfee-4851-9fbe-f048b046e3ee"
        },
        "item": {
          "id": "3a7b60bd-1861-4bfb-8b22-7b3ff6875ee6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d24d3583-3d79-45b0-a15a-b6198f95218b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac1fb97-be26-4fae-ad94-466048d0cb64",
        "cursor": {
          "ref": "99ff5d51-c99d-4860-b71f-e0b2118a73d3",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "042bba12-1a05-419d-980c-c0f2e5447d66"
        },
        "item": {
          "id": "2ac1fb97-be26-4fae-ad94-466048d0cb64",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fc348c2e-0cc2-446b-92b3-e1e4608d2b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15378d5-1a0c-4ba1-8187-e433d75ea822",
        "cursor": {
          "ref": "2d6a0474-09a2-4179-8d15-fcd31c6772aa",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e38d9476-e885-44b2-b8bf-5c407feb0fe3"
        },
        "item": {
          "id": "b15378d5-1a0c-4ba1-8187-e433d75ea822",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1790dc7a-0761-4f0f-a140-ca92ceb7caf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaedf0a-0bd3-4700-b110-c354e4171ff2",
        "cursor": {
          "ref": "e07eb61f-da6d-49c4-a9a0-816d88e81587",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "12dd7458-bc33-45a1-bfdd-93b098a05ae3"
        },
        "item": {
          "id": "efaedf0a-0bd3-4700-b110-c354e4171ff2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3e7bd8a2-208a-4d6e-b1ef-54bd38e72d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f4865d-629d-4d84-8886-956401df4813",
        "cursor": {
          "ref": "d95f0080-c8b4-4eb0-99d3-411d5b1effa4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "583d796e-6be8-4c79-8b01-a283653bd501"
        },
        "item": {
          "id": "50f4865d-629d-4d84-8886-956401df4813",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0f3ac127-36f1-46a3-91ab-93779b477aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee8136f-83e3-4be8-b3c0-1d129cc10876",
        "cursor": {
          "ref": "6481b9e6-66db-4641-8d67-5d9e8373a7b8",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "de6ec582-2cf1-441f-953e-a86234752487"
        },
        "item": {
          "id": "3ee8136f-83e3-4be8-b3c0-1d129cc10876",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4b051caa-0fd2-4224-87f5-1dde665bab3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c272061f-abc7-4214-9251-2aefc8fb577a",
        "cursor": {
          "ref": "1827ee20-3c7d-4972-9937-f54415321bff",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1366aa7a-79a3-4ed9-a488-6c61fcbd2b1f"
        },
        "item": {
          "id": "c272061f-abc7-4214-9251-2aefc8fb577a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6f087e25-b6b3-4ce3-b0c7-8c87bd84bcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49653853-0d01-4b56-94ea-0ae0e15cf40f",
        "cursor": {
          "ref": "cd0f1628-cfbd-4683-871c-d01fefc7574c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "52c3c18c-2d85-4d67-be61-fbc64f5f5db1"
        },
        "item": {
          "id": "49653853-0d01-4b56-94ea-0ae0e15cf40f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5099d12e-7611-4d31-a6fe-ec03f4f08465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6f3e8f-9d31-467f-a61c-69b8cf241188",
        "cursor": {
          "ref": "73595518-d34f-40b5-87db-797cb4c825da",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f4877581-6619-430d-9c71-7307731c3a2e"
        },
        "item": {
          "id": "6d6f3e8f-9d31-467f-a61c-69b8cf241188",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0afa6ceb-44f2-4250-a3a5-5b34b0888e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755e35bf-e90b-40ea-a75b-c9515f68bf67",
        "cursor": {
          "ref": "d3a13a63-74f9-4e35-8a72-5672e110e3c0",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ad3c8e93-7f30-4e01-81f5-d86ded04ecd3"
        },
        "item": {
          "id": "755e35bf-e90b-40ea-a75b-c9515f68bf67",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ef3dd2e8-8c58-44e0-87a0-5d71db2f28fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0f5b0a-f448-4121-97cd-aa643413a34c",
        "cursor": {
          "ref": "411d5a87-6359-4963-a93e-53f8bde19b9f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0a1acc9d-366a-4aae-b7fd-4914935e3ef2"
        },
        "item": {
          "id": "2d0f5b0a-f448-4121-97cd-aa643413a34c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "142fc352-5361-4534-a56a-ffc1175ec9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d85ccb1-5d51-4d9b-a48f-650383541f37",
        "cursor": {
          "ref": "0671ebfd-b629-4b36-b30e-0e6a630983c0",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6cd94a60-8f79-47ae-85c4-0ddca6eeaab7"
        },
        "item": {
          "id": "5d85ccb1-5d51-4d9b-a48f-650383541f37",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b94f2b47-392f-42f7-88de-a3c8168f2f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654bf881-fddd-4c10-9c93-438de0b38d8a",
        "cursor": {
          "ref": "7f63c4d7-20eb-4e2f-8f3d-740f4f6917ef",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f7a4ce44-61f4-445f-aaad-f1b58966298b"
        },
        "item": {
          "id": "654bf881-fddd-4c10-9c93-438de0b38d8a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "13ec3ff0-a90a-456e-8386-849bb2a9dfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3d7502-5dc3-46e8-ac94-592199849c50",
        "cursor": {
          "ref": "ecf37264-8dea-445e-8113-94395150439b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2fecc5c3-1a39-4178-9cd5-049d7f68ce05"
        },
        "item": {
          "id": "6a3d7502-5dc3-46e8-ac94-592199849c50",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a32bde61-e12d-46b3-8f29-6f8310cbe53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08752136-a41d-4b8a-a200-9f72b06d77a8",
        "cursor": {
          "ref": "a9eea094-9f53-42c0-83fd-b77092f60808",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "673f4a9f-45bb-4d89-9df0-215ebfd3839a"
        },
        "item": {
          "id": "08752136-a41d-4b8a-a200-9f72b06d77a8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "55af22e4-4926-44c3-88e0-a9e9c138a951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76bfe28-4243-4ae4-840e-055e3a4574b8",
        "cursor": {
          "ref": "c8527357-6935-4af6-b83c-657311dfab0a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fc0c423f-da8d-4c37-88fd-15605d0626b7"
        },
        "item": {
          "id": "f76bfe28-4243-4ae4-840e-055e3a4574b8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f733e420-a8cd-47cb-956e-900f6cc473e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458409b5-7b6f-4e9e-b4f0-a9a0426e82ec",
        "cursor": {
          "ref": "b7d8ab35-ad6d-4e18-823e-0f619b6cb045",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "67f24659-1437-4bb6-870c-49e02ac327d9"
        },
        "item": {
          "id": "458409b5-7b6f-4e9e-b4f0-a9a0426e82ec",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "513d161b-8f54-4c21-bdf5-a3bc518b50ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debcb0f0-73df-4300-a20f-6acd8fccbe2a",
        "cursor": {
          "ref": "140c19b3-5715-48bc-aa61-8c41f955dc5e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cdd74c1f-e0b1-4e90-9e11-c4326eccab06"
        },
        "item": {
          "id": "debcb0f0-73df-4300-a20f-6acd8fccbe2a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9a9e0415-bbeb-4e6d-b1fe-ed758e20862a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11c1eb6-e520-48c4-afc3-688dad396b1e",
        "cursor": {
          "ref": "45f325de-0185-4fd5-8898-35b20bf80ba8",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bc79db36-af3b-4bd5-9d89-ae441e297362"
        },
        "item": {
          "id": "a11c1eb6-e520-48c4-afc3-688dad396b1e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "890c773d-f403-4a8f-acb1-50c857387b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f0850c-6b0a-48c6-b6ca-e6b87df868a0",
        "cursor": {
          "ref": "1e63a41c-1d5a-4335-85e4-9b5f436bc2de",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c534a507-54dc-4171-85f4-19e277a68b6b"
        },
        "item": {
          "id": "51f0850c-6b0a-48c6-b6ca-e6b87df868a0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "38a44257-a53f-40cc-9941-7035bd9f7c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64e7858-3c5c-433a-ab63-37004346598c",
        "cursor": {
          "ref": "2b637602-db42-4949-9576-8b96c2f48d84",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dc26efa5-4726-4606-a151-308119cd886d"
        },
        "item": {
          "id": "f64e7858-3c5c-433a-ab63-37004346598c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b6d58c54-b972-4d81-8759-4c082e960608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8202c8e-a1b9-45b3-ab4a-4042968e5352",
        "cursor": {
          "ref": "d0c12dd3-c9e5-4e96-afea-577a5ce44a13",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0a8c6e3e-880e-4796-9257-a01db89fa7e8"
        },
        "item": {
          "id": "a8202c8e-a1b9-45b3-ab4a-4042968e5352",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3b1529ea-da69-4608-8145-514b3242e627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36798d99-b381-42e8-b5c7-d9fdd7a838ad",
        "cursor": {
          "ref": "fe51577b-c48b-455c-95ca-37b2b9129e29",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f0081589-2bed-40cd-8d35-93903025e6aa"
        },
        "item": {
          "id": "36798d99-b381-42e8-b5c7-d9fdd7a838ad",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "72870579-3b24-4346-a01a-35aa1a65ccfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dfe75d-2eb0-4848-9bb4-606912d7c677",
        "cursor": {
          "ref": "2fbb7dd4-3a68-4d81-8359-d3cd9c8ef79b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "efda0900-2a49-4073-bcd5-c1471d74bf67"
        },
        "item": {
          "id": "c7dfe75d-2eb0-4848-9bb4-606912d7c677",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b5b0182a-f83d-49eb-b951-03848794b2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f69571-6d36-410f-b3ff-d8d8bad310b9",
        "cursor": {
          "ref": "e42dc9dc-754d-47e0-887d-9c3caee53fa7",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3e4a48d5-3099-4e8f-9198-96870d55c6a8"
        },
        "item": {
          "id": "89f69571-6d36-410f-b3ff-d8d8bad310b9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d234d4d0-eafc-4fba-9d0f-6963d6c93743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8404415f-a504-425c-8d13-438202b9a506",
        "cursor": {
          "ref": "122eb1e2-bb0d-49b7-ad31-585f229cc996",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "75f47bb9-3833-49a1-a4c6-5b7c9d4be7e1"
        },
        "item": {
          "id": "8404415f-a504-425c-8d13-438202b9a506",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7fe61115-f611-479d-9f81-fbac2d74c780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac5c3a0-f4ad-4cb3-a682-47366807fad2",
        "cursor": {
          "ref": "985d83d0-e8f3-4bfd-8a52-c69950db3ff1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e63a5110-bdad-496d-b82c-ba893784b22e"
        },
        "item": {
          "id": "dac5c3a0-f4ad-4cb3-a682-47366807fad2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ec017f5c-0063-4f92-add9-75ef44ff23d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9556bb54-24f5-4d57-bbe2-39fe53396c73",
        "cursor": {
          "ref": "1c66a8d4-151f-4157-ae8e-682a7af7d1a9",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "99a99049-771d-4477-917e-ecd25d25a05d"
        },
        "item": {
          "id": "9556bb54-24f5-4d57-bbe2-39fe53396c73",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7455e557-c07d-464d-8d68-b69198d5538d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48baf7e-f7a6-42b1-916e-2d1100efad02",
        "cursor": {
          "ref": "00519720-c27d-4cf0-a386-a41b9f73bb7a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "39c97f4a-9a68-45be-ad60-676ebf1a7424"
        },
        "item": {
          "id": "d48baf7e-f7a6-42b1-916e-2d1100efad02",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7d9f690b-e7a7-460a-90b0-32f7af620052",
          "status": "OK",
          "code": 200,
          "responseTime": 2544,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b25cb2-b39d-4a71-b5c4-cbe39b5a3b20",
        "cursor": {
          "ref": "c4eeaaa5-8b4f-472b-b567-2ed9a0151b44",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "23ea3b68-0027-4dce-9d6a-ea7dba0f131a"
        },
        "item": {
          "id": "65b25cb2-b39d-4a71-b5c4-cbe39b5a3b20",
          "name": "credentials_verify"
        },
        "response": {
          "id": "503033a0-0901-4c03-9dc3-96864a0163bf",
          "status": "OK",
          "code": 200,
          "responseTime": 3679,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf64e131-341b-404f-86aa-798f763d17b9",
        "cursor": {
          "ref": "c4eb4604-19da-45c2-a8d6-6836aa4ce8a4",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b2da6abe-cd15-4c7f-86c4-2640616bf998"
        },
        "item": {
          "id": "bf64e131-341b-404f-86aa-798f763d17b9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "32121d0d-ba7e-48bb-9ce1-e791267d212d",
          "status": "OK",
          "code": 200,
          "responseTime": 3860,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c518d103-6a09-4116-969a-fe0ed2e18946",
        "cursor": {
          "ref": "c7cd3764-c490-4b93-bd80-2f65a5a57e5d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c37a6d72-dd20-45c6-832a-443e44a8ae34"
        },
        "item": {
          "id": "c518d103-6a09-4116-969a-fe0ed2e18946",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a7fcb84-d6c9-4f48-bc57-841a31c87e56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c518d103-6a09-4116-969a-fe0ed2e18946",
        "cursor": {
          "ref": "c7cd3764-c490-4b93-bd80-2f65a5a57e5d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c37a6d72-dd20-45c6-832a-443e44a8ae34"
        },
        "item": {
          "id": "c518d103-6a09-4116-969a-fe0ed2e18946",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a7fcb84-d6c9-4f48-bc57-841a31c87e56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b96f21-0499-472a-8bd7-5785c91643fc",
        "cursor": {
          "ref": "80a6b9fd-56ba-4e6d-bdbc-bbbf5cf8a0d0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c1e5cea9-c877-4107-ae39-16bd9fa41df9"
        },
        "item": {
          "id": "e5b96f21-0499-472a-8bd7-5785c91643fc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "53651a17-9903-4310-a7ec-bc7d3a56115a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338f98a6-ff29-42ef-8702-57bc79cd1a76",
        "cursor": {
          "ref": "27451388-ed57-4c0c-bb08-644106cdb987",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "aa2e2a5f-60d6-40a8-b0e5-ccf8d5a8e0a1"
        },
        "item": {
          "id": "338f98a6-ff29-42ef-8702-57bc79cd1a76",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a59c495e-4f58-41f7-bdd7-2bf77e9bc351",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}